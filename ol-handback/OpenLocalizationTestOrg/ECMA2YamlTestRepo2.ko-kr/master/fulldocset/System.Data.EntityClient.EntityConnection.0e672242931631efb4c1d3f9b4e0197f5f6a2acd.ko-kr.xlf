<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fd8fd462c823f173ace7483ff635b5a7c47a812</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.EntityClient.EntityConnection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">522e2d7ca6effa6e2ca976e4415bfb7881534cc2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dac945213e60718cf5abca3880d430f09b82607e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains a reference to a conceptual model and a data source connection.</source>
          <target state="translated">개념적 모델 및 데이터 원본 연결에 대 한 참조를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, EntityConnection must lock its metadata.</source>
          <target state="translated">실수로 개체와 같은 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화 EntityConnection 해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The EntityConnection instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:-The EntityConnection 인스턴스 또는 기본 생성자를 통해 생성 된 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;연결 문자열을 허용 하는 생성자입니다.&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">호출 &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The EntityConnection instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">-EntityConnection 인스턴스 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; 허용 하는 생성자&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; 를 통해 생성</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the EntityConnection verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 EntityConnection 개념적 모델, 저장소 모델 및 매핑 파일은 모두 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.</source>
          <target state="translated">실수로 개체와 같은 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화 &lt;xref:System.Data.EntityClient.EntityConnection&gt;해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 기본 생성자를 통해 또는 통해 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;연결 문자열을 허용 하는 생성자입니다.&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; &lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">호출 &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; 허용 하는 생성자&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; 를 통해 생성&lt;/xref:System.Data.EntityClient.EntityConnection&gt; -</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on the connection string.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결 문자열에 기반 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The  generate a named connection string that is stored in the application's configuration file.</source>
          <target state="translated">응용 프로그램의 구성 파일에 저장 되어 있는 명명 된 연결 문자열에 생성 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This named connection string can be supplied in place of the <ph id="ph1">`connectionString`</ph> parameter when you instantiate the &lt;xref:System.Data.EntityClient.EntityConnection&gt; class.</source>
          <target state="translated">이 명명 된 연결 문자열을 대신 제공 될 수 있습니다는 <ph id="ph1">`connectionString`</ph> &lt;xref:System.Data.EntityClient.EntityConnection&gt;클래스&lt;/xref:System.Data.EntityClient.EntityConnection&gt; 를 인스턴스화할 때 매개 변수</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.</source>
          <target state="translated">실수로 개체를 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화 &lt;xref:System.Data.EntityClient.EntityConnection&gt;해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through this constructor (EntityConnection), which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 기본 생성자를 통해 또는 연결 문자열을 허용 하는이 생성자 (EntityConnection)를 통해 생성 됩니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">호출 &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; 허용 하는 생성자&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; 를 통해 생성&lt;/xref:System.Data.EntityClient.EntityConnection&gt; -</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The provider-specific connection string.</source>
          <target state="translated">공급자별 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</source>
          <target state="translated">잘못 된 연결 문자열 키워드를 제공 하거나 필요한 연결 문자열 키워드를 지정 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified <bpt id="p2">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Data.Common.DbConnection"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스를 지정 된 <bpt id="p2">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref href="System.Data.Common.DbConnection"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor enables you to create an &lt;xref:System.Data.EntityClient.EntityConnection&gt; from metadata that is not from a file on a disk or from an embedded resource in an assembly.</source>
          <target state="translated">이 생성자를 만들 수는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;에서 아니라 디스크에 파일 또는 어셈블리에 포함된 된 리소스에서 메타 데이터에서.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.</source>
          <target state="translated">실수로 개체와 같은 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 기본 생성자를 통해 또는 통해 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;연결 문자열을 허용 하는 생성자입니다.&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; &lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">호출 &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through this constructor (EntityConnection), which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스는 &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; 허용 하는이 생성자 (EntityConnection)를 통해 생성&lt;/xref:System.Data.EntityClient.EntityConnection&gt; -</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be associated with this <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 연관 될 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The underlying data source connection for this <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">기본 데이터 원본에 대 한 연결 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">workspace</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">connection</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">workspace</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">connection</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The conceptual model is missing from the workspace.</source>
          <target state="translated">개념적 모델 작업 영역에서 누락 되었습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-       The mapping file is missing from the workspace.</source>
          <target state="translated">-또는-작업 영역에서 매핑 파일은 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       The storage model is missing from the workspace.</source>
          <target state="translated">-또는-작업 영역에서 저장소 모델은 없습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">connection</ph><ept id="p1">&lt;/code&gt;</ept> is not in a closed state.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">connection</ph> <ept id="p1">&lt;/code&gt;</ept> 닫힌된 상태에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">connection</ph><ept id="p1">&lt;/code&gt;</ept> is not from an ADO.NET Entity Framework-compatible provider.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">connection</ph> <ept id="p1">&lt;/code&gt;</ept> ADO.NET Entity Framework 호환 공급자에서 가져오지 않았습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Begins a transaction by using the underlying provider.</source>
          <target state="translated">기본 공급자를 사용 하 여 트랜잭션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginTransaction method uses the &lt;xref:System.Data.IsolationLevel&gt; transaction isolation level.</source>
          <target state="translated">BeginTransaction 메서드에서 사용 된 &lt;xref:System.Data.IsolationLevel&gt;트랜잭션 격리 수준을.&lt;/xref:System.Data.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a different isolation level, call &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.</source>
          <target state="translated">다른 격리 수준을 지정 하려면 &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.&lt;/xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; 를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value might be interpreted differently by different underlying providers.</source>
          <target state="translated">이 값은 기본 공급자에 따라 다르게 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.</source>
          <target state="translated">트랜잭션 격리 수준을 &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.&lt;/xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; 를 호출 하 여 명시적으로 지정 해야 여러 공급자 들 간에 이동 가능 하도록 응용 프로그램을 사용 하도록 하려는 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>At any particular moment there can be no more than one active transaction that was created through BeginTransaction.</source>
          <target state="translated">특정 순간에 BeginTransaction 통해 만들어진 활성 트랜잭션이 둘 이상 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attempt to call any of the BeginTransaction overloads on an &lt;xref:System.Data.EntityClient.EntityConnection&gt; that already has a current transaction results in an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection&gt;이미 있는 &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; 현재 트랜잭션 결과&lt;/xref:System.Data.EntityClient.EntityConnection&gt; 에 BeginTransaction 오버 로드를 호출 하려는 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The returned <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance can later be associated with the <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to execute the command under that transaction.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스와 나중에 연결 될 수는 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 해당 트랜잭션에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The underlying provider is not known.</source>
          <target state="translated">기본 공급자에서 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-or-       The call to BeginTransaction was made on an <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that already has a current transaction.</source>
          <target state="translated">-또는-BeginTransaction에 대 한 호출에서 만들어진는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 트랜잭션이 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-or-       The state of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-의 상태는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 않습니다 <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Begins a transaction with the specified isolation level by using the underlying provider.</source>
          <target state="translated">기본 공급자를 사용 하 여 지정 된 격리 수준의 트랜잭션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>At any particular moment there can be no more than one active transaction that was created through &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.</source>
          <target state="translated">특정 순간에 둘 이상의 활성 트랜잭션이 수 &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.&lt;/xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; 통해 만들어진</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attempt to call any of the &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; overloads on an &lt;xref:System.Data.EntityClient.EntityConnection&gt; that already has a current transaction results in an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; &lt;xref:System.Data.EntityClient.EntityConnection&gt;이미 있는 &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; 현재 트랜잭션 결과&lt;/xref:System.Data.EntityClient.EntityConnection&gt; 에 대 한 오버 로드&lt;/xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; 중 하나를 호출 하려고</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The isolation level of the transaction.</source>
          <target state="translated">트랜잭션 격리 수준입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The returned <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance can later be associated with the <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to execute the command under that transaction.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스와 나중에 연결 될 수는 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 해당 트랜잭션에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The underlying provider is not known.</source>
          <target state="translated">기본 공급자에서 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-or-       The call to &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction*&gt; was made on an <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that already has a current transaction.</source>
          <target state="translated">-또는-에 대 한 호출 &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction*&gt;에서 수행 된는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 트랜잭션이 이미.&lt;/xref:System.Data.EntityClient.EntityConnection.BeginTransaction*&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-or-       The state of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-의 상태는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 않습니다 <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
          <target state="translated">지원 안 됨</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ChangeDatabase method is required when deriving from &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">ChangeDatabase 메서드는 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; 에서 파생 된 경우에 필요</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not supported and will raise a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">이 메서드는 지원 되지 않으며 &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; 발생 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
          <target state="translated">지원 안 됨</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When the method is called.</source>
          <target state="translated">메서드가 호출 될 때를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Closes the connection to the database.</source>
          <target state="translated">데이터베이스에 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data provider is not known, the call to Close does nothing.</source>
          <target state="translated">기본 데이터 공급자가 알 수 없는 경우 Close 호출은 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An error occurred when closing the connection.</source>
          <target state="translated">연결을 닫는 중 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> connection string.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The connection string required to establish the initial connection to a data source.</source>
          <target state="translated">데이터 원본에 초기 연결을 설정 하는 데 필요한 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>On a closed connection, the currently set value is returned.</source>
          <target state="translated">닫힌된 연결, 현재 설정된에 값이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If no value has been set, an empty string is returned.</source>
          <target state="translated">설정 값이 없는 경우 빈 문자열이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the ConnectionString property after the <bpt id="p1">[</bpt>EntityConnection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>’s <bpt id="p2">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> was initialized.</source>
          <target state="translated">다음 연결 문자열 속성을 설정 하려고 했습니다는 <bpt id="p1">[</bpt>EntityConnection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>의 <bpt id="p2">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 초기화 되었습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>MetadataWorkspace<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> is initialized either when the <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcError"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is constructed through the overload that takes a <bpt id="p3">&lt;xref href="System.Data.Odbc.OdbcError"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> as a parameter, or when the <bpt id="p4">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> instance has been opened.</source>
          <target state="translated"><bpt id="p1">[</bpt>MetadataWorkspace<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 은 때 초기화는 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcError"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스가 사용 하는 오버 로드를 통해 생성 되는 <bpt id="p3">&lt;xref href="System.Data.Odbc.OdbcError"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 매개 변수로 되거나는 <bpt id="p4">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 인스턴스가 열렸을 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</source>
          <target state="translated">잘못 된 연결 문자열 키워드를 제공 하거나 필요한 연결 문자열 키워드를 지정 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</source>
          <target state="translated">시도 끝내 고 하 고 오류를 생성 하기 전에 연결을 설정 하려고 할 때 대기 시간 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns zero if the underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없는 경우&amp;0;을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">시간 (초) 연결이 열리기 전까지 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default value is the underlying data provider's default time-out.</source>
          <target state="translated">기본값은 기본 데이터 공급자의 기본 제한 시간입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value set is less than 0.</source>
          <target state="translated">설정 값이 0 보다 작은 경우</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, with the &lt;xref:System.Data.EntityClient.EntityCommand.Connection*&gt; set to this <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>와 &lt;xref:System.Data.EntityClient.EntityCommand.Connection*&gt;이 설정 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.EntityClient.EntityCommand.Connection*&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name of the underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자의 이름을 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets the name of the current database, or the database that will be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스 이름이 나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the specific keyword value, such as <ph id="ph1">`Database`</ph>, that maps to the Database property, see the documentation for the underlying data provider.</source>
          <target state="translated">특정 키워드 값에 대 한 같은 <ph id="ph1">`Database`</ph>, 데이터베이스 속성에 매핑되는 기본 데이터 공급자에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> equivalent keywords, see the documentation for the &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt; property.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> 해당 키워드에 대 한 설명서를 참조 하십시오.는 &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;속성.&lt;/xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_Database" name="Database" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property of the underlying data provider.</source>
          <target state="translated">값은 <bpt id="p1">&lt;xref uid="langword_csharp_Database" name="Database" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the name or network address of the data source to connect to.</source>
          <target state="translated">연결할 데이터 원본의 이름이 나 네트워크 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the specific keyword value, such as <ph id="ph1">`DataSource`</ph>, that maps to the DataSource property, see the documentation for the underlying data provider.</source>
          <target state="translated">특정 키워드 값에 대 한 같은 <ph id="ph1">`DataSource`</ph>, DataSource 속성에 매핑되는 기본 데이터 공급자에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> equivalent keywords, see the documentation for the &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt; property.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> 해당 키워드에 대 한 설명서를 참조 하십시오.는 &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;속성.&lt;/xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the data source.</source>
          <target state="translated">데이터 원본의 이름입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Enlists this <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the specified transaction.</source>
          <target state="translated">이 인 리스트 먼 트 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 트랜잭션에 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method forwards the call to the data source connection to explicitly enlist in the passed &lt;xref:System.Transactions.Transaction&gt;.</source>
          <target state="translated">이 메서드는 전달 된 &lt;xref:System.Transactions.Transaction&gt;.&lt;/xref:System.Transactions.Transaction&gt; 명시적으로 참여 하는 데이터 원본 연결에 대 한 호출 전달</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The transaction object to enlist into.</source>
          <target state="translated">트랜잭션 개체를에 참여 하는입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The state of the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">상태는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 않습니다 <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 연관 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; is automatically created when the &lt;xref:System.Data.EntityClient.EntityConnection&gt; class is created.</source>
          <target state="translated">A &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;자동으로 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;클래스가 만들어집니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The creation process might throw metadata-specific exceptions.</source>
          <target state="translated">만들기 프로세스에는 메타 데이터 관련 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source.</source>
          <target state="translated">메타 데이터는 메모리에 로드 하 고 엔터티 데이터 모델 (EDM) 응용 프로그램 데이터 원본에 대 한 해당 메타 데이터 정보에 액세스할 수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ADO.NET Metadata<ept id="p1">](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ADO.NET 메타 데이터<ept id="p1">](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.</source>
          <target state="translated">실수로 개체와 같은 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화 &lt;xref:System.Data.EntityClient.EntityConnection&gt;해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 기본 생성자를 통해 또는 통해 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;연결 문자열을 허용 하는 생성자입니다.&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; &lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string may be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;&lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">&lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; 허용 하는 생성자&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; 를 통해 생성&lt;/xref:System.Data.EntityClient.EntityConnection&gt; -</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.MetadataWorkspace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 연관 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The inline connection string contains an invalid <bpt id="p1">&lt;xref uid="langword_csharp_Metadata" name="Metadata" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> keyword value.</source>
          <target state="translated">인라인 연결 문자열에 잘못 된 <bpt id="p1">&lt;xref uid="langword_csharp_Metadata" name="Metadata" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 키워드 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Establishes a connection to the data source by calling the underlying data provider's<bpt id="p1">&lt;xref uid="langword_csharp_ Open" name=" Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
          <target state="translated">기본 데이터 공급자를 호출 하 여 데이터 원본에 대 한 연결을 설정<bpt id="p1">&lt;xref uid="langword_csharp_ Open" name=" Open" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.</source>
          <target state="translated">실수로 개체와 같은 설정 되지 않도록 &lt;xref:System.Data.Common.CommandTrees&gt;및 &lt;xref:System.Data.Objects.ObjectContext&gt;해당 메타 데이터와 비동기화 &lt;xref:System.Data.EntityClient.EntityConnection&gt;해당 메타 데이터를 잠가야 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; &lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Common.CommandTrees&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">연결 문자열을 변경할 수 없습니다 메타 데이터가 잠긴 후 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.</source>
          <target state="translated">다음은 메타 데이터가 잠기는 두 가지 시나리오:- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 기본 생성자를 통해 또는 통해 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;연결 문자열을 허용 하는 생성자입니다.&lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; &lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.</source>
          <target state="translated">호출 &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;또는 &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;하면 메타 데이터가 잠깁니다.&lt;/xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which that accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.EntityClient.EntityConnection&gt;인스턴스가 통해 생성 되는 &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;허용 하는 생성자는 &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;및에 &lt;xref:System.Data.Common.DbConnection&gt;.&lt;/xref:System.Data.Common.DbConnection&gt; &lt;/xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; &lt;/xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; &lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타 데이터 생성 시에 잠겨 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열에도 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타 데이터가 로드 되는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인 합니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An error occurs when you open the connection, or the name of the underlying data provider is not known.</source>
          <target state="translated">연결을 열 또는 기본 데이터 공급자의 이름을 알 수 없는 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The inline connection string contains an invalid <bpt id="p1">&lt;xref uid="langword_csharp_Metadata" name="Metadata" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> keyword value.</source>
          <target state="translated">인라인 연결 문자열에 잘못 된 <bpt id="p1">&lt;xref uid="langword_csharp_Metadata" name="Metadata" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 키워드 값입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets a string that contains the version of the data source to which the client is connected.</source>
          <target state="translated">클라이언트가 연결 된 데이터 원본의 버전을 포함 하는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The version of the data source that is contained in the provider connection string.</source>
          <target state="translated">공급자 연결 문자열에 포함 된 데이터 원본의 버전입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property of the underlying provider if the <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is open.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성 기본 공급자의 경우는 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 열려 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Otherwise, returns <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">그렇지 않으면 반환 <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if and only if both the <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>’s internal state and the underlying provider's <bpt id="p3">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> are open.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>두 경우에는 <bpt id="p2">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>의 내부 상태와 기본 공급자의 <bpt id="p3">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 열려 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>’s state is open but the provider's <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is closed, this property returns <bpt id="p3">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">경우는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>의 상태는 open 이지만 공급자의 <bpt id="p2">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 닫힌 경우이 속성은 반환 <bpt id="p3">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">그렇지 않으면 반환 <bpt id="p1">&lt;xref href="System.Data.ConnectionState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Provides access to the underlying data source connection that is used by the <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 되는 기본 데이터 원본 연결에 대 한 액세스를 제공는 <bpt id="p1">&lt;xref href="System.Data.EntityClient.EntityConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.EntityClient.EntityConnection&gt; object is closed, the returned data source connection will be closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;개체가 닫혀, 반환 된 데이터 원본 연결을 닫습니다.&lt;/xref:System.Data.EntityClient.EntityConnection&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is open, an open data source connection will be returned.</source>
          <target state="translated">열려 있으면 열린 데이터 원본 연결이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source connection information was set, the returned value is always non-null.</source>
          <target state="translated">데이터 원본 연결 정보를 설정한 경우, 반환 된 값은 항상 null입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.</source>
          <target state="translated">(예: 기본 생성자가 사용 하 고 연결 문자열이 없는 나중에 설정 된 경우) 데이터 원본 연결 정보가 없는 경우 null 참조가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same data source connection used by the Entity Framework can be shared with other parts of an application.</source>
          <target state="translated">Entity Framework에서 사용 되는 데이터 원본 연결 응용 프로그램의 다른 부분과 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source connection is returned as a &lt;xref:System.Data.Common.DbConnection&gt; object from the &lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt; property of &lt;xref:System.Data.Objects.ObjectContext&gt;, or from the StoreConnection property of &lt;xref:System.Data.EntityClient.EntityConnection&gt;.</source>
          <target state="translated">데이터 원본 연결으로 반환 됩니다는 &lt;xref:System.Data.Common.DbConnection&gt;에서 개체는 &lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt;속성 &lt;xref:System.Data.Objects.ObjectContext&gt;, 또는 &lt;xref:System.Data.EntityClient.EntityConnection&gt;안내 하십시오.&lt;/xref:System.Data.EntityClient.EntityConnection&gt; StoreConnection 속성에서&lt;/xref:System.Data.Objects.ObjectContext&gt; &lt;/xref:System.Data.Objects.ObjectContext.Connection%2A&gt; &lt;/xref:System.Data.Common.DbConnection&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Common.DbConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the data source connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Common.DbConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 원본 연결에 대 한 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>