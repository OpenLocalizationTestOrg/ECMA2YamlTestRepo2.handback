<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dc1f36798159a6e997fd9ebb83de5f55c4dde0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.PropertyDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb1cad472007b9dcc2e0d76c136b32685484ae4d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d82f4665462cf134a7e5db6b4e44871dd6cd797</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">클래스에는 속성의 추상화를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">속성 설명은 이름, 특성, 속성, 연관 된 구성 요소 클래스 및 속성의 형식으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>PropertyDescriptor provides the following properties and methods:      -   &lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt; contains the &lt;xref:System.ComponentModel.TypeConverter&gt; for this property.</source>
          <target state="translated">다음과 같은 속성 및 메서드를 제공 하는 PropertyDescriptor:- &lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;포함는 &lt;xref:System.ComponentModel.TypeConverter&gt;이 속성에 대 한.&lt;/xref:System.ComponentModel.TypeConverter&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt; indicates whether this property should be localized.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;이 속성을 지역화 해야 하는지 여부를 나타냅니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt; returns an editor of the specified type.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;지정 된 형식의 편집기를 반환 합니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>PropertyDescriptor also provides the following <ph id="ph1">`abstract`</ph> properties and methods:      -   &lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt; contains the type of component this property is bound to.</source>
          <target state="translated">PropertyDescriptor 다음 제공 <ph id="ph1">`abstract`</ph> 속성 및 메서드:- &lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;이 속성이 바인딩되는 구성 요소의 유형을 포함 합니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt; indicates whether this property is read-only.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;이 속성이 읽기 전용인 지 여부를 나타냅니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt; gets the type of the property.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;속성의 형식을 가져옵니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt; indicates whether resetting the component changes the value of the component.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;구성 요소를 다시 설정 구성 요소 값이 변경 되는지 여부를 나타냅니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt; returns the current value of the property on a component.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;는 구성 요소에서 속성의 현재 값을 반환 합니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt; resets the value for this property of the component.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;이 속성의 구성 요소에 대 한 값은&amp;0;입니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; sets the value of the component to a different value.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;다른 값으로 구성 요소의 값을 설정 합니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt; indicates whether the value of this property needs to be persisted.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;이 속성의 값을 유지 하는지 여부를 나타냅니다.&lt;/xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">일반적으로 <ph id="ph1">`abstract`</ph> 멤버 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">리플렉션에 대 한 자세한 내용은 항목을 참조 <bpt id="p1">[</bpt>리플렉션<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the name and attributes in the specified <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이름 및 지정 된 특성을 사용 하 여 클래스 <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the name of the property and its attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성 및 해당 특성의 이름이 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the name in the specified <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the attributes in both the <bpt id="p3">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the &lt;xref:System.Attribute&gt; array.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스에 지정 된 이름의 <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 특성 둘 다에 <bpt id="p3">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 및 &lt;xref:System.Attribute&gt;배열.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor appends the attributes in the &lt;xref:System.Attribute&gt; array to the attributes in the &lt;xref:System.ComponentModel.MemberDescriptor&gt;.</source>
          <target state="translated">이 생성자는 &lt;xref:System.Attribute&gt;배열의 &lt;xref:System.ComponentModel.MemberDescriptor&gt;.&lt;/xref:System.ComponentModel.MemberDescriptor&gt; 특성에&lt;/xref:System.Attribute&gt; 에서 특성 추가</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the name of the member and its attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 멤버와 해당 특성의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array containing the attributes you want to associate with the property.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;속성와 연결할 특성을 포함 하는 배열입니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name and attributes.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 이름 및 특성 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that contains the property attributes.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Attribute&gt;속성 특성이 들어 있는.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">다른 개체를를이 속성이 변경 될 때 알림을 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The component to add the handler for.</source>
          <target state="translated">에 대 한 처리기를 추가 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The delegate to add as a listener.</source>
          <target state="translated">수신기로 추가 하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 다시 설정 하는 개체의 값이 변경 여부를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The component to test for reset capability.</source>
          <target state="translated">재설정 기능에 대 한 테스트 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if resetting the component changes its value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>구성 요소를 다시 설정 하는 경우 해당 값이 변경 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 속성이 바인딩되는 구성 요소의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of component this property is bound to.</source>
          <target state="translated">A &lt;xref:System.Type&gt;이 속성이 바인딩되는 구성 요소의 형식을 나타내는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.ComponentModel.PropertyDescriptor.GetValue<bpt id="p1">*</bpt>&gt; or &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue<ept id="p1">*</ept>&gt; methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">경우는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 또는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드는 호출을 지정 된 개체에는이 형식의 인스턴스 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the type converter for this property.</source>
          <target state="translated">이 속성에 대 한 형식 변환기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to convert the &lt;xref:System.Type&gt; of this property.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변환 하기 위해 사용 되는 &lt;xref:System.Type&gt;이 속성의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">지정 된 형식의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>CreateInstance looks for a constructor that takes the specified type.</source>
          <target state="translated">CreateInstance 지정 된 형식을 사용 하는 생성자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">생성자를 찾으면 속성의 형식에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">변환기와 편집기는 구성 요소의 버전을 만드는이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">이 메서드를 사용 하면 단일 구성 요소를 둘 이상의 형식에 대 한 다시 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type to create.</source>
          <target state="translated">A &lt;xref:System.Type&gt;만들 유형을 나타내는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A new instance of the type.</source>
          <target state="translated">유형의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">동일한 지 확인 하려면 다른 개체에이 비교 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object to compare to this <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이를 비교할 개체를 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the values are equivalent; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>값이 동일 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds the attributes of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified list of attributes in the parent class.</source>
          <target state="translated">특성을 추가 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 부모 클래스에 특성의 지정 된 목록입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">중복 된 특성에 대 한 목록에 추가 하는 마지막 트랜잭션이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that lists the attributes in the parent class.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;부모 클래스의 특성을 나열 하는&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initially, this is empty.</source>
          <target state="translated">처음에이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the default <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 모두에 대 한는 <ph id="ph2">`instance`</ph> 매개 변수 및 <ph id="ph3">`filter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 컨테이너 추가 또는 제거 하는 경우 수 있으므로 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 &lt;xref:System.Type&gt;및 &lt;xref:System.Attribute&gt;개체.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">다음 규칙에 의해 정의 된 필터링:- &lt;xref:System.Type&gt;개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 &lt;xref:System.Type&gt;해당 특성 집합에.&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-속성이 없는 경우는 &lt;xref:System.Attribute&gt;동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">-특성의 인스턴스가 있는 경우 &lt;xref:System.Attribute&gt;, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; and it is the default property, it will be included in the returned array, even if there is no instance of &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-지정 하는 경우는 &lt;xref:System.Attribute&gt;및은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 될 &lt;xref:System.Attribute&gt;속성에.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A collection of property descriptor.</source>
          <target state="translated">속성 설명자의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a specified array of attributes as a filter.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 특성 배열을 필터로 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 에 대 한는 <ph id="ph2">`instance`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 &lt;xref:System.Type&gt;및 &lt;xref:System.Attribute&gt;개체.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">다음 규칙에 의해 정의 된 필터링:- &lt;xref:System.Type&gt;개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 &lt;xref:System.Type&gt;해당 특성 집합에.&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-속성이 없는 경우는 &lt;xref:System.Attribute&gt;동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">-특성의 인스턴스가 있는 경우 &lt;xref:System.Attribute&gt;, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-지정 하는 경우는 &lt;xref:System.Attribute&gt;인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 &lt;xref:System.Attribute&gt;속성에.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Attribute&gt;필터로 사용할.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 특성과 일치 하는 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a given object.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 에 대 한는 <ph id="ph2">`filter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 &lt;xref:System.Type&gt;및 &lt;xref:System.Attribute&gt;개체.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">다음 규칙에 의해 정의 된 필터링:- &lt;xref:System.Type&gt;개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 &lt;xref:System.Type&gt;해당 특성 집합에.&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-속성이 없는 경우는 &lt;xref:System.Attribute&gt;동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">-특성의 인스턴스가 있는 경우 &lt;xref:System.Attribute&gt;, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-지정 하는 경우는 &lt;xref:System.Attribute&gt;인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 &lt;xref:System.Attribute&gt;속성에.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 구성 요소에 대 한 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 특성 배열을 필터로 사용 하 여 지정된 된 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 &lt;xref:System.Type&gt;및 &lt;xref:System.Attribute&gt;개체.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">다음 규칙에 의해 정의 된 필터링:- &lt;xref:System.Type&gt;개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 &lt;xref:System.Type&gt;해당 특성 집합에.&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-속성이 없는 경우는 &lt;xref:System.Attribute&gt;동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">-특성의 인스턴스가 있는 경우 &lt;xref:System.Attribute&gt;, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-지정 하는 경우는 &lt;xref:System.Attribute&gt;인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 &lt;xref:System.Attribute&gt;속성에.&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, child properties should be returned by implementing the &lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt; member of the &lt;xref:System.ComponentModel.TypeConverter&gt; returned from this property.</source>
          <target state="translated">자식 속성을 구현 하 여 반환 하도록 일반적으로 &lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;의 멤버는 &lt;xref:System.ComponentModel.TypeConverter&gt;이 속성에서 반환 됩니다.&lt;/xref:System.ComponentModel.TypeConverter&gt; &lt;/xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Attribute&gt;필터로 사용할.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 구성 요소에 대 한 지정된 된 특성과 일치 하는 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">지정 된 형식의 편집기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">속성이 지 원하는 여러 명의 편집기 사이 구분 하는 데 사용 되는 편집기의 기본 형식입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An instance of the requested editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an editor cannot be found.</source>
          <target state="translated">요청 된 편집기 형식의 인스턴스 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 편집기를 찾을 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">이 개체에 대 한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The hash code for this object.</source>
          <target state="translated">이 개체에 대 한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">이 메서드는 멤버를 호출 하는 동안 사용 해야 하는 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">일반적으로 반환 값은 같을 <ph id="ph1">`instance`</ph> 전달 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the GetInvocationTarget method may return a different value.</source>
          <target state="translated">이 인스턴스와 다른 개체가 연결 또는 인스턴스가 있는 경우 사용자 지정 형식 설명자 GetInvocationTarget 메서드는 다른 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the invocation target.</source>
          <target state="translated">&lt;xref:System.Type&gt;호출 대상의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The potential invocation target.</source>
          <target state="translated">잠재적인 호출 대상입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that should be used during invocation of members.</source>
          <target state="translated">&lt;xref:System.Object&gt;멤버 호출 하는 동안 사용 되는.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns a type using its name.</source>
          <target state="translated">이름을 사용 하는 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>To find the appropriate type, this method first checks the assembly of the type that this &lt;xref:System.ComponentModel.PropertyDescriptor&gt; references.</source>
          <target state="translated">적절 한 유형을 찾으려면,이 메서드 먼저 확인 된 형식의 어셈블리가 &lt;xref:System.ComponentModel.PropertyDescriptor&gt;참조.&lt;/xref:System.ComponentModel.PropertyDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it does not find the type in the assembly, it calls &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">어셈블리에서 형식을 찾지 못하면, &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;.&lt;/xref:System.Type.GetType%2A?displayProperty=fullName&gt; 호출</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">검색할 형식의 어셈블리 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that matches the given type name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a match cannot be found.</source>
          <target state="translated">A &lt;xref:System.Type&gt;지정 된 형식 이름과 일치 하는 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 일치 하는 항목을 찾을 수 없는 경우.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 구성 요소에서 속성의 현재 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method automatically calls the pre-change method, &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;, and post-change method, &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;, of the &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;.</source>
          <target state="translated">이 메서드는 자동으로 사전 변경 메서드를 호출 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;, 사후 변경 및 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;, &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;.&lt;/xref:System.ComponentModel.Design.IComponentChangeService&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">값을 검색 하려는 속성으로 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of a property for a given component.</source>
          <target state="translated">지정 된 구성 요소에 대 한 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Retrieves the current set of <ph id="ph1">`ValueChanged`</ph> event handlers for a specific component</source>
          <target state="translated">현재 집합을 검색 <ph id="ph1">`ValueChanged`</ph> 특정 구성 요소에 대 한 이벤트 처리기</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">이벤트 처리기를 검색 하려는 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A combined multicast event handler, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no event handlers are currently assigned to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">component</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">결합 된 멀티 캐스트 이벤트 처리기 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트 처리기가 없는에 현재 할당 된 경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">component</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this property should be localized, as specified in the <bpt id="p1">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성 지역화 해야 하는지 여부를 나타내는 값을 가져옵니다에 지정 된 대로 <bpt id="p1">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a property is marked with the &lt;xref:System.ComponentModel.LocalizableAttribute&gt; set to <ph id="ph1">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">속성으로 표시 된 경우는 &lt;xref:System.ComponentModel.LocalizableAttribute&gt;로 설정 <ph id="ph1">`true`</ph> 비주얼 디자이너에서 사용 되는, 해당 값은 리소스 파일에 저장 됩니다.&lt;/xref:System.ComponentModel.LocalizableAttribute&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">특성을 사용 하 여 속성을 표시 하 고 다음 코드에서 속성을 설정 하는 경우에 리소스 파일 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is marked with the <bpt id="p2">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>멤버가 표시 되는 <bpt id="p2">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 로 설정 <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 속성이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성이 읽기 전용 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">`ValueChanged`</ph> event that you implemented.</source>
          <target state="translated">발생 된 <ph id="ph1">`ValueChanged`</ph> 구현 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">속성 값이 변경 하는 경우 속성 설명자 구현에 따라이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The object that raises the event.</source>
          <target state="translated">이벤트를 발생 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 속성의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of the property.</source>
          <target state="translated">A &lt;xref:System.Type&gt;속성의 형식을 나타내는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">다른 개체를를이 속성이 변경 될 때 알림을 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The component to remove the handler for.</source>
          <target state="translated">에 대 한 처리기를 제거 하는 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">수신기로 제거 하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 속성의 구성 요소에 대 한 값을 기본값으로 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines the value to reset the property to in the following order of precedence:      1.</source>
          <target state="translated">이 메서드는 우선 순위는 다음 순서에 따라 속성을 다시 설정 하려면 값을 결정: 1입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">이 속성에 대 한 숨겨진 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a &lt;xref:System.ComponentModel.DefaultValueAttribute&gt; for this property.</source>
          <target state="translated">한 &lt;xref:System.ComponentModel.DefaultValueAttribute&gt;이 속성에 대 한.&lt;/xref:System.ComponentModel.DefaultValueAttribute&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">"MyProperty"가 전달한 속성의 이름, 구현 된 "ResetMyProperty" 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; automatically in the following order:      1.</source>
          <target state="translated">이 메서드가 만드는 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;는 다음 순서 대로 자동으로: 1.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt; method to create a new &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; to represent the changes.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;만드는 새 메서드를 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;에 변경 내용을 나타내는.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt; method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;메서드를 트랜잭션이 시작 된 수행 되어 변경 내용을 나타냅니다.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt; method to indicate that the changes have occurred.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;메서드를 나타내는 변경 내용이 발생 했습니다.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt; to indicate that the transaction is completed.</source>
          <target state="translated">메서드 호출 &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;트랜잭션이 완료 되었음을 나타냅니다.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">트랜잭션이의 목적은 지원 하기 위해 <ph id="ph1">`Undo`</ph> 및 <ph id="ph2">`Redo`</ph> 기능입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">기본값으로 다시 설정할 속성 값과 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibilityAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성 serialize 하는지 여부를 나타내는 값을 가져옵니다에 지정 된 대로 <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibilityAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 속성을 serialize 해야 하는지 여부를 지정 하는 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 구성 요소 값을 다른 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; automatically in the following order:      1.</source>
          <target state="translated">이 메서드가 만드는 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;는 다음 순서 대로 자동으로: 1.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt; method to create a new &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; to represent the changes.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;만드는 새 메서드를 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;에 변경 내용을 나타내는.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt; method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;메서드를 트랜잭션이 시작 된 수행 되어 변경 내용을 나타냅니다.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt; method to indicate that the changes have occurred.</source>
          <target state="translated">메서드 호출의 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;메서드를 나타내는 변경 내용이 발생 했습니다.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method calls &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt; to indicate that the transaction is complete.</source>
          <target state="translated">메서드 호출 &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;트랜잭션이 완료 되었음을 나타내기 위해.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">트랜잭션이의 목적은 지원 하기 위해 <ph id="ph1">`Undo`</ph> 및 <ph id="ph2">`Redo`</ph> 기능입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">설정할 속성 값과 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The new value.</source>
          <target state="translated">새 값입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 속성의 값을 유지 해야 하는지 여부를 나타내는 값을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">검사 하 여 지 속성에 대 한 속성으로 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property should be persisted; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성을 유지 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">속성 설명자 외부에서이 속성에 대 한 값 변경 알림이 발생 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SupportsChangeEvents property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; method.</source>
          <target state="translated">이 속성에 대 한 값 변경 알림이 외부에서 발생 된 속성 설명자와 같은 구성 요소 자체, 또는에 여부를 여부 에서만 발생 직접 호출에서 SupportsChangeEvents 속성 나타냅니다는 &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;메서드.&lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the component may implement the &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt; interface, or may have an explicit <ph id="ph1">`name``Changed`</ph> event for this property.</source>
          <target state="translated">예를 들어 구성 요소가 구현할 수 있습니다는 &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;인터페이스, 또는 명시적 있을 <ph id="ph1">`name``Changed`</ph> 이 속성에 대 한 이벤트.&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if value change notifications may originate from outside the property descriptor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>값 변경 알림이 속성 설명자; 외부에서 발생 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>