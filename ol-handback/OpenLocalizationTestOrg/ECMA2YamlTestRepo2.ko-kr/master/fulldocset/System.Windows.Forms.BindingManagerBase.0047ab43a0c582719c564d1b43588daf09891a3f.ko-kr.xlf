<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92f96cb8b1a4729cd8414a74d63a31ea58dc4cb9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.BindingManagerBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebb30acaaeb92feb5b02ad5b10b40802ba4141be</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff6c7ce01328eadc12e4bc4b1a93ea57f9e16fa7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages all <bpt id="p1">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are bound to the same data source and data member.</source>
          <target state="translated">모든 관리 <bpt id="p1">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 동일한 데이터 원본 및 데이터 멤버에 연결 되어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is abstract.</source>
          <target state="translated">이 클래스는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindingManagerBase enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</source>
          <target state="translated">동일한 데이터 소스에 바인딩된 Windows Form에 데이터 바인딩된 컨트롤의 동기화를 설정 하는 BindingManagerBase 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information about simple binding a control to a data source, see the &lt;xref:System.Windows.Forms.Binding&gt; class.) For example, suppose that a form contains two &lt;xref:System.Windows.Forms.TextBox&gt; controls that are bound to the same data source but to different columns.</source>
          <target state="translated">(단순 컨트롤에 데이터 소스에 바인딩하는 방법에 대 한 자세한 내용은 참조는 &lt;xref:System.Windows.Forms.Binding&gt;클래스)&lt;/xref:System.Windows.Forms.Binding&gt; 예를 들어 폼 두 개가 포함 &lt;xref:System.Windows.Forms.TextBox&gt;동일한 데이터 소스에 있지만 서로 다른 열에 바인딩되는 컨트롤입니다.&lt;/xref:System.Windows.Forms.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source might be a &lt;xref:System.Data.DataTable&gt; that contains customer names, while the columns might contain the first and last names.</source>
          <target state="translated">데이터 원본 수는 &lt;xref:System.Data.DataTable&gt;고객 이름 포함 하는 열 이름과 성을 포함 될 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two controls must be synchronized in order to display the correct first and last names together for the same customer.</source>
          <target state="translated">두 개의 동일한 고객에 대 한 올바른 성과 이름을 표시 하기 위해 동기화 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.CurrencyManager&gt;, which inherits from the BindingManagerBase class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CurrencyManager&gt;, BindingManagerBase 클래스에서 상속 되는 데이터 소스에서 현재 항목에 대 한 포인터를 유지 관리 하 여 이러한 동기화를 수행 합니다.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextBox&gt; controls are bound to the current item so they display the information for the same row.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.TextBox&gt;같은 행에 대 한 정보를 표시 하도록 컨트롤은 현재 항목에 바인딩됩니다.&lt;/xref:System.Windows.Forms.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the current item changes, the &lt;xref:System.Windows.Forms.CurrencyManager&gt; notifies all the bound controls so that they can refresh their data.</source>
          <target state="translated">현재 항목이 변경 될 때는 &lt;xref:System.Windows.Forms.CurrencyManager&gt;는 바인딩된 컨트롤의 데이터를 새로 고칠 수 있도록 모든를 알립니다.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, you can set the &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt; property to specify the row in the &lt;xref:System.Data.DataTable&gt; that the controls point to.</source>
          <target state="translated">또한 설정할 수 있습니다는 &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;속성에 있는 행을 지정 하는 &lt;xref:System.Data.DataTable&gt;컨트롤 가리키는.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine how many rows exist in the data source, use the &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt; property.</source>
          <target state="translated">데이터 원본에 있는 행의 수를 확인 하려면 사용 하 여는 &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;속성.&lt;/xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.CurrencyManager&gt; is necessary because data sources do not necessarily maintain a current-item pointer.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CurrencyManager&gt;는 데이터 소스에서 현재 항목 포인터를 반드시 유지 하지 않는 때문에 필요 합니다.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, arrays and &lt;xref:System.Collections.ArrayList&gt; objects can be data sources, but they do not have a property that returns the current item.</source>
          <target state="translated">예를 들어, 배열 및 &lt;xref:System.Collections.ArrayList&gt;개체를 데이터 원본 수 있지만 현재 항목을 반환 하는 속성을 갖지 않습니다.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the current item, use the &lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt; property.</source>
          <target state="translated">현재 항목을 사용는 &lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;속성.&lt;/xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.PropertyManager&gt; also inherits from the BindingManagerBase, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.PropertyManager&gt;BindingManagerBase에서 상속 되는 데이터 원본에 있는 현재 개체의 속성이 아니라 개체의 현재 속성을 유지 하는 데 사용 됩니다.&lt;/xref:System.Windows.Forms.PropertyManager&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, trying to set the &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt; or &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt; property for a &lt;xref:System.Windows.Forms.PropertyManager&gt; has no effect.</source>
          <target state="translated">이러한 이유로 설정 하는 &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;또는 &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;속성에 대 한는 &lt;xref:System.Windows.Forms.PropertyManager&gt;영향을 주지 않습니다.&lt;/xref:System.Windows.Forms.PropertyManager&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a BindingManagerBase, use the &lt;xref:System.Windows.Forms.BindingContext&gt; class, which returns either a &lt;xref:System.Windows.Forms.CurrencyManager&gt; or a &lt;xref:System.Windows.Forms.PropertyManager&gt;, depending on the data source being managed.</source>
          <target state="translated">BindingManagerBase를 만들려면 사용은 &lt;xref:System.Windows.Forms.BindingContext&gt;클래스 중 하나를 반환 하는 &lt;xref:System.Windows.Forms.CurrencyManager&gt;또는 &lt;xref:System.Windows.Forms.PropertyManager&gt;관리 되는 데이터 원본에 따라.&lt;/xref:System.Windows.Forms.PropertyManager&gt; &lt;/xref:System.Windows.Forms.CurrencyManager&gt; &lt;/xref:System.Windows.Forms.BindingContext&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Solutions programmers are encouraged to bind controls directly to a &lt;xref:System.Windows.Forms.BindingSource&gt; component, which acts as both a data source and data connector to the actual target data source.</source>
          <target state="translated">솔루션 프로그래머는 컨트롤에 직접 바인딩하는 것이 좋습니다는 &lt;xref:System.Windows.Forms.BindingSource&gt;구성 요소는 데이터 원본 및 대상 실제 데이터 원본에 데이터 커넥터 역할을 합니다.&lt;/xref:System.Windows.Forms.BindingSource&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Forms.BindingSource&gt; greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingSource&gt;컨트롤과 해당 대상 사이의 현재 위치 관리를 포함 하 여 모두 간단 하 고 복잡 한 데이터 바인딩 크게 단순화 합니다.&lt;/xref:System.Windows.Forms.BindingSource&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor sets the &lt;xref:System.Windows.Forms.BindingManagerBase.Bindings%2A&gt; property to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 생성자 집합은 &lt;xref:System.Windows.Forms.BindingManagerBase.Bindings%2A&gt;속성을 <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.Forms.BindingManagerBase.Bindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, adds a new item to the underlying list.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 내부 목록에 새 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddNew method adds a new item to the underlying list by using the default constructor for that item's type.</source>
          <target state="translated">AddNew 메서드는 해당 항목의 형식에 대 한 기본 생성자를 사용 하 여 내부 목록에 새 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddNew is intended primarily to be used by programmers adding complex data-binding support to their custom component.</source>
          <target state="translated">AddNew는 프로그래머가 사용자 지정 구성 요소에 복잡 한 데이터 바인딩 지원 추가 사용 하는 데 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddNew is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:      1.</source>
          <target state="translated">AddNew는 일반적으로 응용 프로그램 프로그래머를 사용자 지정 된 항목을 만들기 위한 고유 코드를 삽입할 수 있는 다음과 같은 패턴을 사용 하 여 구현: 1입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddNew raises the &lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt; event.</source>
          <target state="translated">AddNew 발생는 &lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;이벤트.&lt;/xref:System.Windows.Forms.BindingSource.AddingNew&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The programmer can supply a custom item by handling the &lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt; event and setting the &lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt; property of the &lt;xref:System.ComponentModel.AddingNewEventArgs&gt; parameter to the new item.</source>
          <target state="translated">프로그래머는 처리 하 여 사용자 지정 항목을 제공할 수는 &lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;이벤트와 설정은 &lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt;속성은 &lt;xref:System.ComponentModel.AddingNewEventArgs&gt;새 항목에 대 한 매개 변수.&lt;/xref:System.ComponentModel.AddingNewEventArgs&gt; &lt;/xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt; &lt;/xref:System.Windows.Forms.BindingSource.AddingNew&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the component should create an item using the default constructor.</source>
          <target state="translated">그렇지 않은 경우 구성 요소가 기본 생성자를 사용 하 여 항목을 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source does not implement the &lt;xref:System.ComponentModel.IEditableObject&gt; interface, the item is immediately added to the data source and underlying list.</source>
          <target state="translated">데이터 소스를 구현 하지 않는 경우는 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스, 데이터 원본 및 기본 목록에 항목이 즉시 추가 됩니다.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this interface is supported, then the addition is transacted by the &lt;xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A&gt; and &lt;xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A&gt; methods.</source>
          <target state="translated">이 인터페이스를 사용할 수 있으면 추가 작업이 하 여 처리 됩니다는 &lt;xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A&gt;및 &lt;xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A&gt;메서드.&lt;/xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Occurs at the completion of a data-binding operation.</source>
          <target state="translated">데이터 바인딩 작업이 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindingComplete event occurs after the completion of a data-binding operation, which may include the following:      -   Pushing information from the data source into the property of its bound control.</source>
          <target state="translated">다음을 포함할 수 있는 한 데이터 바인딩 작업이 완료 된 후 BindingComplete 이벤트 발생:-바인딩된 컨트롤의 속성에 데이터 소스에서 정보를 푸시 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Pulling information from a bound control into its associated data source.</source>
          <target state="translated">-연결 된 데이터 소스에 바인딩된 컨트롤에서 정보 가져오기.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the &lt;xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt; property of the &lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt; parameter associated with the event.</source>
          <target state="translated">바인딩 작업의 완료 상태에 관계 없이이 이벤트는 발생 참고를 검사 하 여이 상태를 확인할 수 있습니다 하지만 &lt;xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt;의 속성은 &lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt;이벤트와 관련 된 매개 변수.&lt;/xref:System.Windows.Forms.BindingCompleteEventArgs&gt; &lt;/xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt; may also contain error and exception information.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt;오류 및 예외 정보가 포함 되어 있습니다.&lt;/xref:System.Windows.Forms.BindingCompleteEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a binding operation that attempts to push a null value from a data source into a &lt;xref:System.Windows.Forms.DateTimePicker&gt; control will generate an exception, since a &lt;xref:System.DateTime&gt; cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">바인딩 작업 예를 들어, null 값에 데이터 원본에서 푸시 하려고 하는 &lt;xref:System.Windows.Forms.DateTimePicker&gt;컨트롤은 예외를 이후 생성 한 &lt;xref:System.DateTime&gt;수 없습니다 <ph id="ph1">`null`</ph>.&lt;/xref:System.DateTime&gt; &lt;/xref:System.Windows.Forms.DateTimePicker&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, although the binding operation does not successfully complete, the BindingComplete event will be raised, and the event will contain information on the failed binding attempt.</source>
          <target state="translated">이 경우 바인딩 작업을 성공적으로 완료 되지 않으면 있지만 BindingComplete 이벤트 발생 하 고 시도가 실패 한 바인딩에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the collection of bindings being managed.</source>
          <target state="translated">관리 되는 바인딩의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingsCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the <bpt id="p2">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects managed by this <bpt id="p3">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingsCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이 관리 되는 개체 <bpt id="p3">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, cancels the current edit.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 현재 편집을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the data source implements the &lt;xref:System.ComponentModel.IEditableObject&gt; interface.</source>
          <target state="translated">데이터 원본 구현 하는 경우에이 메서드는 지원의 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object does not implement the &lt;xref:System.ComponentModel.IEditableObject&gt; interface, changes made to the data will not be discarded.</source>
          <target state="translated">개체를 구현 하지 않는 경우는 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스에는 데이터 변경 내용이 삭제 되지 것입니다.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the CancelCurrentEdit method causes the &lt;xref:System.Windows.Forms.Binding.Format&gt; event to occur.</source>
          <target state="translated">CancelCurrentEdit 메서드를 호출 하면는 &lt;xref:System.Windows.Forms.Binding.Format&gt;이벤트를 발생 합니다.&lt;/xref:System.Windows.Forms.Binding.Format&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the number of rows managed by the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 관리 하는 행 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Count property to determine the last item in the list of rows maintained by the &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.</source>
          <target state="translated">Count 속성을 사용 하 여 목록에서에 &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.&lt;/xref:System.Windows.Forms.BindingManagerBase&gt; 관리 하는 행의 마지막 항목을 확인 하려면</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To go to the last item, set the &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt; property to the Count property value minus 1.</source>
          <target state="translated">마지막 항목으로 이동 하려면 설정는 &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;속성에서 1 뺀 수 속성 값을.&lt;/xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The number of rows managed by the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">관리 하는 행 수는 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the current object.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 현재 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Current object contains the value of the current item in the data source.</source>
          <target state="translated">현재 개체 데이터 소스에서 현재 항목의 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the value of the current item, you must cast the item to the &lt;xref:System.Type&gt; of the object contained by the &lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;.</source>
          <target state="translated">현재 항목의 값을 사용 하려면는 &lt;xref:System.Type&gt; &lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;.&lt;/xref:System.Windows.Forms.Binding.DataSource%2A&gt; 포함 된 개체의&lt;/xref:System.Type&gt; 항목을 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Data.DataTable&gt; contains &lt;xref:System.Data.DataRowView&gt; objects.</source>
          <target state="translated">예를 들어 한 &lt;xref:System.Data.DataTable&gt;포함 &lt;xref:System.Data.DataRowView&gt;개체.&lt;/xref:System.Data.DataRowView&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the type of the current object, use the &lt;xref:System.Object.GetType%2A&gt; and &lt;xref:System.Type.ToString%2A&gt; methods.</source>
          <target state="translated">를 현재 개체의 형식을 확인 하려면 사용 된 &lt;xref:System.Object.GetType%2A&gt;및 &lt;xref:System.Type.ToString%2A&gt;메서드.&lt;/xref:System.Type.ToString%2A&gt; &lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When the &lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt; is a &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.DataViewManager&gt;, or &lt;xref:System.Data.DataTable&gt;, you are actually binding to a &lt;xref:System.Data.DataView&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 때는 &lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;은 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.DataViewManager&gt; &lt;xref:System.Data.DataTable&gt;에 &lt;xref:System.Data.DataView&gt;.&lt;/xref:System.Data.DataView&gt; 바인딩할 때 실제로,&lt;/xref:System.Data.DataTable&gt; 또는&lt;/xref:System.Data.DataViewManager&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Windows.Forms.Binding.DataSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, each Current object is a &lt;xref:System.Data.DataRowView&gt; object.</source>
          <target state="translated">결과적으로 현재 각 개체는 &lt;xref:System.Data.DataRowView&gt;개체입니다.&lt;/xref:System.Data.DataRowView&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the current object.</source>
          <target state="translated">&lt;xref:System.Object&gt;현재 개체를 나타내는입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Occurs when the currently bound item changes.</source>
          <target state="translated">현재 바인딩된 항목이 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CurrentChanged event is raised whenever the &lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt; property changes or the &lt;xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged&gt; event occurs.</source>
          <target state="translated">CurrentChanged 이벤트가 발생할 때마다는 &lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;속성 변경 내용을 또는 &lt;xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged&gt;이벤트 발생.&lt;/xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Occurs when the state of the currently bound item changes.</source>
          <target state="translated">현재 바인딩된 항목의 상태가 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CurrentItemChanged event occurs whenever there is a change in the state in the currently bound item.</source>
          <target state="translated">CurrentItemChanged 이벤트에서 현재 바인딩된 항목이 변경 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</source>
          <target state="translated">이 항목의 속성 중 하나가 변경 하거나 항목 자체를 대체 하거나 이동할 경우 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Occurs when an &lt;xref:System.Exception&gt; is silently handled by the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">발생 경우는 &lt;xref:System.Exception&gt;에서 자동으로 처리 되는 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</source>
          <target state="translated">이 이벤트는 정보를 제공 하 고 CLS 공용 언어 사양 ()를 보고-규격 예외만 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine what type of exception occurred, handle this event and check the &lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A&gt; property of the &lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs&gt;.</source>
          <target state="translated">발생 한 예외의 유형을 확인 합니다.이 이벤트를 처리 하 고 &lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A&gt; &lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs&gt;.&lt;/xref:System.Windows.Forms.BindingManagerDataErrorEventArgs&gt; 의 속성&lt;/xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A&gt; 을 확인 하려면</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends the current edit.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 현재 편집을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the data source implements the &lt;xref:System.ComponentModel.IEditableObject&gt; interface.</source>
          <target state="translated">데이터 원본 구현 하는 경우에이 메서드는 지원의 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, changes will be saved.</source>
          <target state="translated">이 경우 변경 내용이 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object does not implement the &lt;xref:System.ComponentModel.IEditableObject&gt; interface, changes made to the data will not be saved.</source>
          <target state="translated">개체를 구현 하지 않는 경우는 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스는 데이터 변경 내용이 저장 되지 것입니다.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the collection of property descriptors for the binding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 바인딩에 대 한 속성 설명자의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the property descriptors for the binding.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩에 대 한 속성 설명자를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the collection of property descriptors for the binding using the specified <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하 여 지정 된 바인딩에 대 한 속성 설명자의 컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used by developers creating data-bound controls.</source>
          <target state="translated">이 메서드는 데이터 바인딩된 컨트롤을 만드는 개발자가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data sources.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the table's bound properties.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블의 바인딩된 속성이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the property descriptors for the binding.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩에 대 한 속성 설명자를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the list of properties of the items managed by this <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 관리 되는 항목의 속성 목록을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is used by developers to create data-bound controls.</source>
          <target state="translated">이 오버 로드는 개발자가 데이터 바인딩된 컨트롤을 만들려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the bound list.</source>
          <target state="translated">&lt;xref:System.Type&gt;의 바인딩된 목록.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A counter used to recursively call the method.</source>
          <target state="translated">카운터를 재귀적으로 사용 되는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data sources.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the table's bound properties.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블의 바인딩된 속성이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the property descriptors for the binding.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩에 대 한 속성 설명자를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the name of the list supplying the data for the binding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 바인딩에 대 한 데이터를 제공 하는 목록 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the table's bound properties.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블의 바인딩된 속성이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The name of the list supplying the data for the binding.</source>
          <target state="translated">바인딩에 대 한 데이터를 제공 하는 목록 이름입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether binding is suspended.</source>
          <target state="translated">바인딩이 보류 되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if binding is suspended; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>바인딩; 일시 중지 됨 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.BindingComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.BindingComplete"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnBindingComplete method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnBindingComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingCompleteEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingCompleteEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnCurrentChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnCurrentChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the event handler for the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 처리기를 지정 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentItemChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentItemChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnCurrentItemChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnCurrentItemChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.DataError"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.DataError"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnDataError method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnDataError 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that caused the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.DataError"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to occur.</source>
          <target state="translated">&lt;xref:System.Exception&gt;시킨는 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.DataError"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트를 발생 합니다.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Specifies the event handler for the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.PositionChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 처리기를 지정 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.PositionChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 데이터 소스 요소에 바인딩된 컨트롤이 기본 목록에서 위치를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Position property to iterate through the underlying list maintained by the &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.</source>
          <target state="translated">에 &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.&lt;/xref:System.Windows.Forms.BindingManagerBase&gt; 관리 하는 기본 목록에서 반복 하는 위치 속성을 사용 하 여</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>To go to the first item, set the Position to 0.</source>
          <target state="translated">첫 번째 항목으로 이동 하려면 위치를 0으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>To go to the end of the list, set the Position to the value of the &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt; property minus 1.</source>
          <target state="translated">목록의 끝으로 이동 하려면 위치를 설정의 값에는 &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;속성 값-1.&lt;/xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt; event occurs when the Position property value changes.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;이벤트 위치 속성 값이 변경 될 때 발생 합니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A zero-based index that specifies a position in the underlying list.</source>
          <target state="translated">내부 목록에서 위치를 지정 하는&amp;0;부터 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Occurs after the value of the &lt;xref:System.Windows.Forms.BindingManagerBase.Position*&gt; property has changed.</source>
          <target state="translated">값 뒤에 오는 &lt;xref:System.Windows.Forms.BindingManagerBase.Position*&gt;속성이 변경 되었습니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.Position*&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Pulls data from the data-bound control into the data source, returning no information.</source>
          <target state="translated">정보가 반환 데이터 소스에 데이터 바인딩된 컨트롤에서 데이터를 끌어옵니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PullData method is a programmatic way to pull information from the data-bound control back into the data source.</source>
          <target state="translated">PullData 방법은 다시 데이터 원본에 데이터 바인딩된 컨트롤에서 정보를 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</source>
          <target state="translated">일반적으로 컨트롤을 자동으로 업데이트가 바인딩된 데이터 소스 포커스를 잃으면는 컨트롤의 표준 작업에 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>PullData raises the &lt;xref:System.Windows.Forms.BindingManagerBase.BindingComplete&gt; event and change events on the data source as appropriate.</source>
          <target state="translated">PullData 발생는 &lt;xref:System.Windows.Forms.BindingManagerBase.BindingComplete&gt;적절 하 게 원본 이벤트 및 데이터에 대해 변경 이벤트.&lt;/xref:System.Windows.Forms.BindingManagerBase.BindingComplete&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Pushes data from the data source into the data-bound control, returning no information.</source>
          <target state="translated">정보가 반환 데이터 바인딩된 컨트롤에 데이터 원본에서 데이터를 푸시합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PushData method is a programmatic way to push information from the data source into the data-bound control.</source>
          <target state="translated">PushData 방법은 데이터 바인딩된 컨트롤에 데이터 소스에서 정보를 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not required if the data source implements the &lt;xref:System.ComponentModel.IBindingList?displayProperty=fullName&gt; interface, because the &lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt; event should automatically cause the control to be updated through its currency manager.</source>
          <target state="translated">데이터 원본 구현 하는 경우이 메서드는 필요 하지는 &lt;xref:System.ComponentModel.IBindingList?displayProperty=fullName&gt;있기 때문는 &lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt;이벤트에 의해 자동으로 컨트롤의 현재 위치 관리자를 통해 업데이트할 수입니다.&lt;/xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.IBindingList?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is issued when a &lt;xref:System.Windows.Forms.BindingManagerBase.PullData%2A&gt; operation is being performed, the PushData method returns immediately with a value of <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 메서드가 때 발생 하는 경우는 &lt;xref:System.Windows.Forms.BindingManagerBase.PullData%2A&gt;수행 중인 작업, PushData 메서드와 함께 즉시 반환 값이 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.BindingManagerBase.PullData%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deletes the row at the specified index from the underlying list.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 내부 목록에서 지정된 된 인덱스에서 행을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAt method relies on the underlying data source to determine how the method behaves.</source>
          <target state="translated">RemoveAt 메서드 메서드 작동 방식을 결정할 수 데이터 원본에 의존 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>(See the &lt;xref:System.Windows.Forms.Binding&gt; class for a list of supported data sources.) For classes that implement &lt;xref:System.Collections.IList&gt;, &lt;xref:System.ComponentModel.IBindingList&gt;, or &lt;xref:System.ComponentModel.ITypedList&gt;, as well as strongly typed classes that implement &lt;xref:System.Collections.IList&gt;, the RemoveAt method actually deletes the row in the underlying list instead of removing its contents.</source>
          <target state="translated">(참조는 &lt;xref:System.Windows.Forms.Binding&gt;지원 되는 데이터 원본의 목록에 대 한 클래스입니다.)&lt;/xref:System.Windows.Forms.Binding&gt; 에 대 한 구현 하는 클래스 &lt;xref:System.Collections.IList&gt;, &lt;xref:System.ComponentModel.IBindingList&gt;, 또는 &lt;xref:System.ComponentModel.ITypedList&gt;도 강력 하 게 형식화 된 구현 하는 클래스 &lt;xref:System.Collections.IList&gt;, RemoveAt 메서드는 실제로 해당 내용을 제거 하는 대신 기본 목록에는 행을 삭제 합니다.&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.ComponentModel.ITypedList&gt; &lt;/xref:System.ComponentModel.IBindingList&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list implements the &lt;xref:System.ComponentModel.IBindingList&gt; interface, the &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt; property must return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">내부 목록에 구현 하는 경우는 &lt;xref:System.ComponentModel.IBindingList&gt;인터페이스는 &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt;속성을 반환 해야 <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt; &lt;/xref:System.ComponentModel.IBindingList&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list implements the &lt;xref:System.Collections.IList&gt; interface, the &lt;xref:System.Collections.IList.IsFixedSize%2A&gt; property must return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">내부 목록에 구현 하는 경우는 &lt;xref:System.Collections.IList&gt;인터페이스는 &lt;xref:System.Collections.IList.IsFixedSize%2A&gt;속성을 반환 해야 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IList.IsFixedSize%2A&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The index of the row to delete.</source>
          <target state="translated">삭제할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>There is no row at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">지정 된 행이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resumes data binding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 데이터 바인딩을 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt; and ResumeBinding are two methods that allow the temporary suspension and resumption of data binding.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;및 ResumeBinding은 데이터 바인딩 했다가 일시적 중단을 허용 하는 메서드입니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 유효성 검사를 수행 하기 전에 데이터 필드를 편집 하려면 사용자를 허용 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</source>
          <target state="translated">사용자는 두 번째 필드;에 맞는 것으로 필드를 변경 해야 할 수는 예를 들어 그렇지 않으면 첫 번째 필드의 유효성 검사 오류에 포함 되도록 두 번째 필드를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, suspends data binding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 데이터 바인딩을 일시 중단 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>SuspendBinding and &lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt; are two methods that allow the temporary suspension and resumption of data binding.</source>
          <target state="translated">SuspendBinding 및 &lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;은 데이터 바인딩 했다가 일시적 중단을 허용 하는 메서드입니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 유효성 검사를 수행 하기 전에 데이터 필드를 편집 하려면 사용자를 허용 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</source>
          <target state="translated">사용자는 두 번째 필드;에 맞는 것으로 필드를 변경 해야 할 수는 예를 들어 그렇지 않으면 첫 번째 필드의 유효성 검사 오류에 포함 되도록 두 번째 필드를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, updates the binding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 바인딩을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UpdateIsBinding method updates the data binding between the bound control and its data source.</source>
          <target state="translated">UpdateIsBinding 메서드는 바인딩된 컨트롤과 데이터 소스 간의 데이터 바인딩을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</source>
          <target state="translated">복잡 한 데이터 바인딩 시나리오에 대 한 다시 설정 현재 위치를 기본 목록 맨 앞으로 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>