<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5479a898a3ef78f367257619274f4f91aae2f515</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.ComponentSerializationService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89d5d9c8f821bb4b38db0470b37fee2750891054</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b919e207996abfd290dab896f40a80e7d7091bea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for serializing a set of components or serializable objects into a serialization store.</source>
          <target state="translated">구성 요소 또는 직렬화 가능 개체 집합을 serialization 저장소로 직렬화 하는 작업에 대 한 기본 클래스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService serializes a set of components or serializable objects into a serialization store.</source>
          <target state="translated">ComponentSerializationService serialization 저장소에 구성 요소 또는 직렬화 가능 개체 집합을 serialize합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can then be deserialized later.</source>
          <target state="translated">저장소 나중에 다음 역직렬화 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</source>
          <target state="translated">ComponentSerializationService 클래스 serialization 형식을 불투명 하며, 개체의 부분 serialization에 대 한 허용 한다는 점에서 다른 serialization 스키마에서 다릅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can choose to serialize only selected properties for an object.</source>
          <target state="translated">예를 들어 개체에 대해 선택한 속성만 직렬화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is <ph id="ph1">`abstract`</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">`abstract`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; will provide a concrete implementation of this class and add it as a service to its &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">일반적으로는 &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;이 클래스의 구체적 구현을 제공 되며 해당 &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.&lt;/xref:System.ComponentModel.Design.DesignSurface&gt; 서비스로 추가&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows objects to be serialized in the format best suited for them.</source>
          <target state="translated">이 개체를에 가장 적합 한 형식에서 serialize 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService class replaces the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt; interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</source>
          <target state="translated">ComponentSerializationService 클래스 대체는 &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;있지만 인터페이스가 유지 이전 버전과 호환성에 대 한.NET Framework 버전 1.0에서에서 인터페이스.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple objects can be serialized into the same serialization store.</source>
          <target state="translated">동일한 serialization 저장소에 여러 개체를 serialize 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are finished with the store, you can call its &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt; or &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; method.</source>
          <target state="translated">호출할 수 있습니다 때 저장소와 함께 완료 되 면 해당 &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;또는 &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;메서드.&lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</source>
          <target state="translated">Serialization 저장소를 닫은 후 deserialization에 사용할 수 있습니다 또는 스트림으로 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</source>
          <target state="translated">Serialization 저장소 개체의 그룹에 대 한 serialization 상태를 생성 하는 다양 한 직렬화 메서드 중 하나에 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new created serialization store.</source>
          <target state="translated">새로 생성된 된 serialization 저장소입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Deserializes the given store to produce a collection of objects.</source>
          <target state="translated">개체의 컬렉션을 생성 하기 위해 지정된 된 저장소를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">이 메서드를 역직렬화 <ph id="ph1">`store`</ph> 그 안에 포함 된 개체의 컬렉션을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">개체는 직렬화 된 동일한 순서로 deserialize 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">저장 된 상태에 따라 생성 된 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deserializes the given store and populates the given <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with deserialized <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">특정된 매장을 deserialize 하 고 채웁니다는 주어진 <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 역직렬화와 <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">이 메서드를 역직렬화 <ph id="ph1">`store`</ph> 그 안에 포함 된 개체의 컬렉션을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">개체는 직렬화 된 동일한 순서로 deserialize 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Created objects that implement &lt;xref:System.ComponentModel.IComponent&gt; are added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">구현 하는 개체를 만든 &lt;xref:System.ComponentModel.IComponent&gt;에 추가 <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">저장 된 상태에 따라 생성 된 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container.</source>
          <target state="translated">역직렬화는 주어진 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 컨테이너에 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeserializeTo method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">DeserializeTo 메서드 역직렬화 <ph id="ph1">`store`</ph>, 새 개체를 생성 하는 대신에 적용 됩니다 저장소에서 데이터는 기존 개체 집합을 제공된 된 컨테이너에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">해당 개체도 구현 하는 경우 &lt;xref:System.ComponentModel.IComponent&gt;에 추가 됩니다 <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">컨테이너를 <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally validating recycled types.</source>
          <target state="translated">역직렬화는 주어진 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 컨테이너에 형식 재활용 필요에 따라 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;메서드 역직렬화 <ph id="ph1">`store`</ph>, 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 가져온 개체의 기존 집합에 데이터를 저장소에 적용 되지만.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">해당 개체도 구현 하는 경우 &lt;xref:System.ComponentModel.IComponent&gt;에 추가 됩니다 <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">컨테이너를 <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>같은 형식의 개체에 적용 된 경우 deserialization만 적용 됩니다 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally applying default property values.</source>
          <target state="translated">역직렬화는 주어진 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 컨테이너를 필요에 따라 기본 속성 값 적용 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;메서드 역직렬화 <ph id="ph1">`store`</ph>, 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 가져온 개체의 기존 집합에 데이터를 저장소에 적용 되지만.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">해당 개체도 구현 하는 경우 &lt;xref:System.ComponentModel.IComponent&gt;에 추가 됩니다 <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">컨테이너를 <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>같은 형식의 개체에 적용 된 경우 deserialization만 적용 됩니다 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the default property values should be applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>기본 속성 값을 적용 해야 하는지 지정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Loads a <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a stream.</source>
          <target state="translated">로드 한 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림에서 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the returned store to deserialize objects by passing it to one of the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt; methods.</source>
          <target state="translated">반환 된 저장소를 사용 하 여 중 하나에 전달 하 여 개체를 deserialize 하는 &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;메서드.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which the store will be loaded.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;저장소 로드 됩니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> does not contain data saved by a previous call to <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>에 대 한 이전 호출에 의해 저장 되는 데이터가 포함 되지 않은 <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Serializes the given object to the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 개체를 serialize 된 지정 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can be used to serialize more than one object by calling this method more than once.</source>
          <target state="translated">이 메서드를 두 번 이상 호출 하 여 둘 이상의 개체를 serialize 하는 저장소를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be written.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는 상태의 <ph id="ph1">`value`</ph> 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">직렬화 할 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>가 닫힌 경우 또는 <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> serialization 저장소의 지원 되는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">반환 된 저장소를 사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Serializes the given object, accounting for default property values.</source>
          <target state="translated">기본 속성 값을 고려 하 여 지정된 된 개체를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard serialization, as implemented through the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt; method, only serializes values that differ from the component's default state.</source>
          <target state="translated">표준 serialization을 통해 구현 되는 &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;메서드, 구성 요소의 기본 상태에서 다른 값을 serialize 합니다.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</source>
          <target state="translated">이 가장 간단한 serialization 메커니즘을 제공 하지만 새로 만든된 개체를 역직렬화 하는 동안 사용할 수 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</source>
          <target state="translated">Deserialize 된 결과 개체는 직렬화 된 개체의 원래 상태를 복제 하는 불가능할 기존 개체를 사용 하는 경우 역직렬화 하는 동안 직렬화 하는 동안 기본값을 포함 하는 속성을 기본값으로 재설정 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeAbsolute method does not use this shortcut.</source>
          <target state="translated">SerializeAbsolute 메서드는이 바로 가기이 키를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</source>
          <target state="translated">Deserialization에는 기본 상태에 관계 없이 모든 개체의 속성을 복원할 수 있도록 원본 개체의 모든 속성을 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</source>
          <target state="translated">컬렉션 내에서 구성 항목의 순서를 변경할 수 있으므로이 메서드는 컬렉션을 직렬화 하는 데 특히 유용 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</source>
          <target state="translated">이 경우에는 전체 컬렉션의 원래 상태로 복원 하는 가장 안전한 프로세스에는 원래 모든 속성 값을 가진 모든 항목을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는 상태의 <ph id="ph1">`value`</ph> 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">직렬화 할 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>가 닫힌 경우 또는 <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> serialization 저장소의 지원 되는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">반환 된 저장소를 사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object.</source>
          <target state="translated">지정된 된 개체에 지정된 된 멤버를 serialize합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMember method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</source>
          <target state="translated">SerializeMember 메서드는 serialization 저장소 내에서 serialize 된 멤버의 목록을 작성 하는 동일한 개체에 대 한 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the member should be a property or an event.</source>
          <target state="translated">일반적으로 속성 또는 이벤트의 멤버 여야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는 상태의 <ph id="ph1">`member`</ph> 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">개체 <ph id="ph1">`member`</ph> 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the member to serialize.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> serialize 할 멤버를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>가 닫힌 경우 또는 <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> serialization 저장소의 지원 되는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">반환 된 저장소를 사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object, accounting for the default property value.</source>
          <target state="translated">기본 속성 값을 지정된 된 개체에 지정된 된 멤버를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMemberAbsolute method serializes the <ph id="ph1">`member`</ph> on <ph id="ph2">`owningObject`</ph>, even if <ph id="ph3">`member`</ph> contains the default property value.</source>
          <target state="translated">SerializeMemberAbsolute 메서드는 직렬화는 <ph id="ph1">`member`</ph> 에 <ph id="ph2">`owningObject`</ph>경우에 <ph id="ph3">`member`</ph> 기본 속성 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</source>
          <target state="translated">Note는 일부 구성원에 대해 기본값을 포함 하 고 멤버에 같은 값의 설정 복원은 서로 다른 개념입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</source>
          <target state="translated">예를 들어 지역 값이 설정 된 경우 부모 개체에서 해당 값을 상속 하는 속성을 경우 속성 값으로 다시 설정 아니어야 원하는 방식으로 동작 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMemberAbsolute method takes this into account and would clear the state of the property in this case.</source>
          <target state="translated">SerializeMemberAbsolute 메서드는이를 고려 하 고 속성의 상태가 경우 선택을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는 상태의 <ph id="ph1">`member`</ph> 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">개체 <ph id="ph1">`member`</ph> 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
          <target state="translated">Serialize 할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>가 닫힌 경우 또는 <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> serialization 저장소의 지원 되는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">반환 된 저장소를 사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>