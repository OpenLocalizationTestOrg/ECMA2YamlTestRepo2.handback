<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">031941743cb766c4f6c5db614e0e2ab9bd1d5961</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Permissions.ReflectionPermissionFlag.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7becb44f4ce10740d4ed936c42e666c40a63c41e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67418f4c29bdd46c6f8495de4a36c8ff7f87c8e0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the permitted use of the <bpt id="p1">&lt;xref href="System.Reflection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Reflection.Emit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> namespaces.</source>
          <target state="translated">허용 되는 용도 지정 된 <bpt id="p1">&lt;xref href="System.Reflection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref href="System.Reflection.Emit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enumeration is used by the &lt;xref:System.Security.Permissions.ReflectionPermission&gt; and &lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt; classes.</source>
          <target state="translated">이 열거형은에서 사용 된 &lt;xref:System.Security.Permissions.ReflectionPermission&gt;및 &lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;클래스.&lt;/xref:System.Security.Permissions.ReflectionPermissionAttribute&gt; &lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no &lt;xref:System.Security.Permissions.ReflectionPermission&gt; is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</source>
          <target state="translated">없는 경우 &lt;xref:System.Security.Permissions.ReflectionPermission&gt;권한이 부여 되 면 모든 형식 및 멤버에 리플렉션을 사용할 수 있지만 호출 작업이 표시 되는 형식 및 멤버에 대해서만 허용 됩니다.&lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>리플렉션의 보안 고려 사항<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Because &lt;xref:System.Security.Permissions.ReflectionPermission&gt; can provide access to private class members, we recommend that you grant &lt;xref:System.Security.Permissions.ReflectionPermission&gt; to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 때문에 &lt;xref:System.Security.Permissions.ReflectionPermission&gt;액세스 권한을 제공할 수 전용 클래스 멤버에 게 부여 하는 권장 &lt;xref:System.Security.Permissions.ReflectionPermission&gt;인터넷 코드 RestrictedMemberAccess 플래그로 하 고 다른 플래그와 되지 않습니다.&lt;/xref:System.Security.Permissions.ReflectionPermission&gt; &lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RestrictedMemberAccess flag is introduced in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">에 도입 된 RestrictedMemberAccess 플래그는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this flag, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph> or later.</source>
          <target state="translated">이 플래그를 사용 하려면 응용 프로그램이 대상 해야는 <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph> 이상.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  AllFlags does not include the RestrictedMemberAccess flag.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; AllFlags RestrictedMemberAccess 플래그를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</source>
          <target state="translated">이 열거형의 모든 플래그를 포함 하는 마스크를 가져오려면 RestrictedMemberAccess와 AllFlags 조합의 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>, the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>, ReflectionEmit 플래그는 더 이상 코드를 내보내는 않으면 필요가 디버그 기호를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this feature, your application should target the <ph id="ph1">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph> or later.</source>
          <target state="translated">이 기능을 사용 하려면 응용 프로그램이 대상 해야는 <ph id="ph1">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph> 이상.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>, the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>, 플래그 되지 않으면 TypeInformation 플래그가 public이 아닌 형식과 멤버에 대해 반영 하기 위해 더 이상 필요 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_TypeInformation" name="TypeInformation" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> , <bpt id="p2">&lt;xref uid="langword_csharp_MemberAccess" name="MemberAccess" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref uid="langword_csharp_ReflectionEmit" name="ReflectionEmit" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> are set.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TypeInformation" name="TypeInformation" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_MemberAccess" name="MemberAccess" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref uid="langword_csharp_ReflectionEmit" name="ReflectionEmit" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> are set.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>AllFlags does not include RestrictedMemberAccess.</source>
          <target state="translated">AllFlags RestrictedMemberAccess 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Invocation operations on all members are allowed, regardless of grant set.</source>
          <target state="translated">권한 부여 집합에 관계 없이 모든 멤버에 대해 호출 작업이 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If this flag is not set, invocation operations are allowed only on visible members.</source>
          <target state="translated">이 플래그를 설정 하지 않으면 호출 작업이 표시 멤버에 대해서만 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enumeration of types and members is allowed.</source>
          <target state="translated">열거형 형식 및 멤버의 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Invocation operations are allowed on visible types and members.</source>
          <target state="translated">호출 작업이 표시 되는 형식 및 멤버에서 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Emitting debug symbols is allowed.</source>
          <target state="translated">디버그 기호 내보내기 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph>, this flag is no longer required to emit code.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph>,이 플래그가 더 이상 코드를 내보내는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Restricted member access is provided for partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에 대 한 제한 된 멤버 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</source>
          <target state="translated">Public이 아닌 형식과 멤버를 부분적으로 신뢰할 수 있는 코드에 액세스할 수 있지만 권한 부여 집합의 경우에 public이 아닌 형식 및 멤버를 포함 하는 어셈블리의 권한 부여 집합에 부분적으로 신뢰할 수 있는 코드 모든 권한이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This flag is new in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">이 플래그는의 새로운는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This flag is obsolete.</source>
          <target state="translated">이 플래그는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>No flags are necessary to enumerate types and members and to examine their metadata.</source>
          <target state="translated">없음 플래그는 형식과 멤버를 열거 하 고 해당 메타 데이터를 검사 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use NoFlags instead.</source>
          <target state="translated">NoFlags를 대신 사용 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>