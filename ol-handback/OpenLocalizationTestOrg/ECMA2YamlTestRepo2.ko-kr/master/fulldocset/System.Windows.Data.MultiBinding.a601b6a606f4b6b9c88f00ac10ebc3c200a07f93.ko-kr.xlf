<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d6230c4c4bd3993630473972903ec36866d0ed6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.MultiBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">962412977320d8e40ff188e288c45d219633897d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffaad4f35a9becd850c33b058248a75bf8415add</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes a collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects attached to a single binding target property.</source>
          <target state="translated">컬렉션을 설명 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 단일 바인딩 대상 속성에 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify multiple bindings in a MultiBinding object.</source>
          <target state="translated">MultiBinding 개체에서 여러 개의 바인딩을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the MultiBinding object with a converter, it produces a final value for the binding target based on the values of those bindings.</source>
          <target state="translated">MultiBinding 개체를 사용 하 여 변환기가 있는 경우 해당 바인딩의 값을 기반으로 바인딩 대상에 대 한 최종 값을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, color might be computed from red, blue, and green values, which can be values from the same or different binding source objects.</source>
          <target state="translated">예를 들어 색이 동일한 또는 다른 바인딩 소스 개체의 값일 수 있는 빨간색, 파란색 및 녹색 값에서 계산 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a value moves from the target to the sources, the target property value is translated to a set of values that are fed back into the bindings.</source>
          <target state="translated">값이 원본에 대상에서 이동할 대상 속성 값 바인딩으로 공급 하는 값의 집합으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; and &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt; properties determine the functionality of the MultiBinding and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
          <target state="translated">값은 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;및 &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt;속성은 MultiBinding의 기능을 결정 하 고 개별 바인딩 이러한 속성을 재정의 하지 않는 한 컬렉션에 있는 모든 바인딩에 대 한 기본 값으로 사용 됩니다.&lt;/xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt; &lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; property on the MultiBinding object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; value on one of the bindings explicitly.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;MultiBinding 개체의 속성이로 설정 되어 &lt;xref:System.Windows.Data.BindingMode&gt;, 컬렉션의 모든 바인딩을 사용 하는 것으로 간주 &lt;xref:System.Windows.Data.BindingMode&gt;다른 설정 하지 않으면 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;바인딩 중 하나에 값 명시적으로.&lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>MultiBinding currently supports only objects of type &lt;xref:System.Windows.Data.Binding&gt; and not MultiBinding or &lt;xref:System.Windows.Data.PriorityBinding&gt;.</source>
          <target state="translated">MultiBinding 개체의 형식 &lt;xref:System.Windows.Data.Binding&gt;및 MultiBinding 말거나 &lt;xref:System.Windows.Data.PriorityBinding&gt;.&lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt; 를 현재 지원</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects within this <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 내의 개체 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the syntax that is shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;이 속성 설정할 수 있습니다 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> 만 표시 되는 구문을 사용 하거나 컬렉션 개체에 액세스 하 고와 같은 여러 메서드를 사용 하 여 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property used to access the collection object is read-only, whereas the collection itself is read/write.</source>
          <target state="translated">컬렉션 개체를 액세스 하는 데 속성이 읽기 전용 이지만 컬렉션 자체는 읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Bindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     oneOrMoreBindings   &lt;/object&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Bindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Data.Binding&gt; objects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Bindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 속성 요소 사용 <ph id="ph1">```   &lt;object&gt;     oneOrMoreBindings   &lt;/object&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_Bindings"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>oneOrMoreBindings<ept id="p3">*</ept> 하나 이상의 &lt;xref:System.Windows.Data.Binding&gt;개체입니다.&lt;/xref:System.Windows.Data.Binding&gt;      </target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">컬렉션 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> currently supports only objects of type <bpt id="p2">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and not <bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 형식의 개체만 지원 <bpt id="p2">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 아닌 <bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adding a <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> child to a <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object implicitly adds the child to the <bpt id="p3">&lt;xref href="System.Windows.Data.BindingBase"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> collection for the <bpt id="p4">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 자식은 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에 자식이 암시적으로 추가 하는 개체는 <bpt id="p3">&lt;xref href="System.Windows.Data.BindingBase"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 에 대 한 컬렉션의 <bpt id="p4">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the converter to use to convert the source values to or from the target value.</source>
          <target state="translated">소스 값을 대상 값으로 변환 하는 데 변환기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Individual bindings in the collection can have their own value &lt;xref:System.Windows.Data.Binding.Converter%2A&gt;.</source>
          <target state="translated">컬렉션의 개별 바인딩 &lt;xref:System.Windows.Data.Binding.Converter%2A&gt;.&lt;/xref:System.Windows.Data.Binding.Converter%2A&gt; 고유 값을 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Data.IValueConverter&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Windows.Data.IValueConverter&gt;.&lt;/xref:System.Windows.Data.IValueConverter&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>    A resource reference to a class that implements the &lt;xref:System.Windows.Data.IMultiValueConverter&gt; interface, which includes implementations of the &lt;xref:System.Windows.Data.IMultiValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept> 구현 하는 클래스에 대 한 리소스 참조는 &lt;xref:System.Windows.Data.IMultiValueConverter&gt;구현이 포함 된 인터페이스는 &lt;xref:System.Windows.Data.IMultiValueConverter.Convert%2A&gt;및 &lt;xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A&gt;메서드.&lt;/xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IMultiValueConverter.Convert%2A&gt; &lt;/xref:System.Windows.Data.IMultiValueConverter&gt;      </target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">값 변환기를 참조 하려면 사용 된 <bpt id="p1">[</bpt>태그 확장명 및 WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Data.IMultiValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the converter to use.</source>
          <target state="translated">형식의 값 <bpt id="p1">&lt;xref href="System.Windows.Data.IMultiValueConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용할 변환기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Globalization.CultureInfo&gt; object that applies to any converter assigned to bindings wrapped by the <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or on the <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> itself.</source>
          <target state="translated">가져오거나는 &lt;xref:System.Globalization.CultureInfo&gt;의해 래핑된 바인딩에 할당 된 변환기에 적용 되는 개체는 <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 자체.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ConverterCulture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object ConverterCulture="ietfLanguageTag"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ConverterCulture"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>ietfLanguageTag<ept id="p3">*</ept>    A string used to set the &lt;xref:System.Globalization.CultureInfo&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ConverterCulture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object ConverterCulture="ietfLanguageTag"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_ConverterCulture"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>ietfLanguageTag<ept id="p3">*</ept> &lt;xref:System.Globalization.CultureInfo&gt;.&lt;/xref:System.Globalization.CultureInfo&gt; 를 설정 하는 데 사용 하는 문자열      </target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This string is used to internally call.</source>
          <target state="translated">이 문자열은 내부 호출에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A&gt;.&lt;/xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on the string format, see &lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">문자열 형식에 대 한 자세한 내용은 &lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName&gt;.&lt;/xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A valid &lt;xref:System.Globalization.CultureInfo&gt;.</source>
          <target state="translated">에 유효한 &lt;xref:System.Globalization.CultureInfo&gt;.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets an optional parameter to pass to a converter as additional information.</source>
          <target state="translated">추가 정보로 변환기에 전달할 선택적 매개 변수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ConverterParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ConverterParameter&gt;       converterParameter     &lt;/object.ConverterParameter&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlAttributeUsage_ConverterParameter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph2">```   &lt;object property="converterParameter" /&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_ConverterParameter"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>converterParameter<ept id="p4">*</ept>    A value of the type expected by the converter, which might be an object element or a string depending on the definition and XAML capabilities both of the property type being used and of the implementation of the converter.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ConverterParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 속성 요소 사용 <ph id="ph1">```   &lt;object&gt;     &lt;object.ConverterParameter&gt;       converterParameter     &lt;/object.ConverterParameter&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlAttributeUsage_ConverterParameter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 특성 사용 <ph id="ph2">```   &lt;object property="converterParameter" /&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_ConverterParameter"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p4">*</bpt>converterParameter<ept id="p4">*</ept> 정 및 사용 하 고 있는 속성을 입력 하는 XAML 기능에 따라 문자열 또는 개체 요소가 될 수 있는 변환기에서 예상 된 유형 값 변환기의 구현입니다.            </target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The converter takes in that type through the <ph id="ph1">`parameter`</ph> parameter as defined by its &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; implementations.</source>
          <target state="translated">변환기를 통해 해당 형식을 사용는 <ph id="ph1">`parameter`</ph> 에 정의 된 대로 매개 변수는 &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;및 &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;구현.&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A parameter to pass to a converter.</source>
          <target state="translated">변환기에 전달 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the direction of the data flow of this binding.</source>
          <target state="translated">이 바인딩의 데이터 흐름의 방향을 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the Mode and &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt; properties determine the functionality of the &lt;xref:System.Windows.Data.MultiBinding&gt; and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
          <target state="translated">모드의 값 및 &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt;속성의 기능에 따라 결정 된 &lt;xref:System.Windows.Data.MultiBinding&gt;되며 개별 바인딩 이러한 속성을 재정의 하지 않는 한 컬렉션에 있는 모든 바인딩에 대 한 기본 값으로 사용 됩니다.&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the Mode property on the &lt;xref:System.Windows.Data.MultiBinding&gt; object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different Mode value on one of the bindings explicitly.</source>
          <target state="translated">예를 들어 경우 모드 속성에는 &lt;xref:System.Windows.Data.MultiBinding&gt;개체가으로 설정 되 &lt;xref:System.Windows.Data.BindingMode&gt;, 컬렉션의 모든 바인딩을 사용 하는 것으로 간주 &lt;xref:System.Windows.Data.BindingMode&gt;바인딩 중 하나에서 서로 다른 모드 값을 설정 하지 않으면 명시적으로.&lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 대상 종속성 속성의 기본 바인딩 모드 값을 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">그러나 각 종속성 속성에 대 한 기본값이 다릅니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In general, user-editable control properties, such as <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">일반적으로 사용자가 편집 가능한 컨트롤 속성의 같은 <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>의 기본값은 양방향 바인딩으로 설정 되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p1">*</bpt>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault<ept id="p1">*</ept>&gt; property.</source>
          <target state="translated">종속성 속성이 단방향 또는 양방향 기본적으로 바인드 되는지를 결정 하는 프로그래밍 방법을 사용 하 여 속성의 속성 메타 데이터를 가져오려는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 다음의 부울 값을 확인 하 고는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 속성.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값은 바인딩 대상에서에서 바인딩 소스로 전송 될 때 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event will be raised when the binding source value is updated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 바인딩 소스 값이 고, 그렇지 않으면 업데이트 된 때 이벤트가 발생 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값이 바인딩 소스에서 바인딩 대상으로 전송 될 때 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event will be raised when the binding target value is updated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 바인딩 대상 값이 고, 그렇지 않으면 업데이트 된 때 이벤트가 발생 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event on the bound element.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Controls.Validation.Error&gt;바인딩된 요소에서 연결 된 이벤트입니다.&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event will be raised on the bound element when there is a validation error during source updates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Windows.Controls.Validation.Error&gt;연결 된 이벤트는 고, 그렇지 않으면 원본 업데이트 중에 유효성 검사 오류가 있을 때 바인딩된 요소에서 발생 됩니다 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.MultiBinding.Bindings*&gt; property should be persisted.</source>
          <target state="translated">표시 여부는 &lt;xref:System.Windows.Data.MultiBinding.Bindings*&gt;속성을 유지 해야 합니다.&lt;/xref:System.Windows.Data.MultiBinding.Bindings*&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.MultiBinding.Bindings%2A&gt; property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 &lt;xref:System.Windows.Data.MultiBinding.Bindings%2A&gt;속성 간단한 기본 값이 없는.&lt;/xref:System.Windows.Data.MultiBinding.Bindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.MultiBinding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.MultiBinding&gt;또는 &lt;xref:System.Windows.Data.MultiBinding&gt;.&lt;/xref:System.Windows.Data.MultiBinding&gt; 통합 제어 자체 개발&lt;/xref:System.Windows.Data.MultiBinding&gt; 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성 값이 기본값에서 변경 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules*&gt; property should be persisted.</source>
          <target state="translated">표시 여부는 &lt;xref:System.Windows.Data.MultiBinding.ValidationRules*&gt;속성을 유지 해야 합니다.&lt;/xref:System.Windows.Data.MultiBinding.ValidationRules*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt;속성 간단한 기본 값이 없는.&lt;/xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.MultiBinding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.MultiBinding&gt;또는 &lt;xref:System.Windows.Data.MultiBinding&gt;.&lt;/xref:System.Windows.Data.MultiBinding&gt; 통합 제어 자체 개발&lt;/xref:System.Windows.Data.MultiBinding&gt; 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성 값이 기본값에서 변경 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds a child object.</source>
          <target state="translated">자식 개체를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The child object to add.</source>
          <target state="translated">추가할 자식 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Adds the text content of a node to the object.</source>
          <target state="translated">개체에 있는 노드의 텍스트 콘텐츠를 추가합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The text to add to the object.</source>
          <target state="translated">개체에 추가할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트 하는 동안 바인딩 엔진에서 발생 하는 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 데 사용할 수 있는 처리기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is only applicable if you have associated the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with your <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">만 연결한 경우에 적용 됩니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 프로그램 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class represents a built-in validation rule that checks for exceptions that are thrown during the update of the binding source properties.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;클래스 바인딩 소스 속성을 업데이트 하는 동안 throw 되는 예외를 확인 하는 기본 제공 유효성 검사 규칙을 나타냅니다.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have associated the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; object with your &lt;xref:System.Windows.Data.MultiBinding&gt; object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">연결한 경우는 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;개체 프로그램 &lt;xref:System.Windows.Data.MultiBinding&gt;개체를 이러한 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 처리기를 설정 하려면이 속성을 사용할 수 있습니다.&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
          <target state="translated">에 대 한 유효성 검사 프로세스에 대 한 자세한 내용은 &lt;xref:System.Windows.Data.MultiBinding&gt;개체 참조는 &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt;속성.&lt;/xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트 하는 동안 바인딩 엔진에서 발생 하는 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 메서드.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">바인딩 소스 업데이트의 타이밍을 결정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; and UpdateSourceTrigger properties determine the functionality of the &lt;xref:System.Windows.Data.MultiBinding&gt; and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
          <target state="translated">값은 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;UpdateSourceTrigger 속성의 기능을 결정 하 고는 &lt;xref:System.Windows.Data.MultiBinding&gt;되며 개별 바인딩 이러한 속성을 재정의 하지 않는 한 컬렉션에 있는 모든 바인딩에 대 한 기본 값으로 사용 됩니다.&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; property on the &lt;xref:System.Windows.Data.MultiBinding&gt; object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; value on one of the bindings explicitly.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;속성에는 &lt;xref:System.Windows.Data.MultiBinding&gt;개체로 설정 되어 &lt;xref:System.Windows.Data.BindingMode&gt;, 컬렉션의 모든 바인딩을 사용 하는 것으로 간주 &lt;xref:System.Windows.Data.BindingMode&gt;다른 설정 하지 않으면 &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt;바인딩 중 하나에 값 명시적으로.&lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value of the target dependency property.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 기본값을 반환 하는 <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 대상 종속성 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>However, the default value for most dependency properties is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, while the &lt;xref:System.Windows.Controls.TextBox.Text<bpt id="p2">*</bpt>&gt; property has a default value of <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.       A programmatic way to determine the default &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger<ept id="p2">*</ept>&gt; value of a dependency property is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p4">*</bpt>&gt; and then check the value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger<ept id="p4">*</ept>&gt; property.</source>
          <target state="translated">그러나 대부분의 종속성 속성에 대 한 기본 값은 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 동안는 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 속성의 기본값은 <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.       기본값을 결정 하는 프로그래밍 방법을 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; 종속성 속성의 값을 사용 하 여 속성의 속성 메타 데이터를 얻는 것 &lt;&gt; &lt;/&gt; <bpt id="p4">*</bpt>&gt;의 값을 확인 한 다음는 &lt;&gt; &lt;/&gt; <ept id="p4">*</ept>&gt; 속성.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;요소 명시적으로.&lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; is a built-in validation rule that checks for errors that are raised by the &lt;xref:System.ComponentModel.IDataErrorInfo&gt; implementation of the source object.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;에 의해 발생 하는 오류를 검사 하는 기본 제공 유효성 검사 규칙의 &lt;xref:System.ComponentModel.IDataErrorInfo&gt;소스 개체의 구현.&lt;/xref:System.ComponentModel.IDataErrorInfo&gt; &lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error is raised, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">오류가 발생 하는 경우 바인딩 엔진 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;오류로 추가 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;바인딩된 요소의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
          <target state="translated">에 대 한 유효성 검사 프로세스에 대 한 자세한 내용은 &lt;xref:System.Windows.Data.MultiBinding&gt;개체 참조는 &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt;속성.&lt;/xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnDataErrors는.NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;요소 명시적으로.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;source 속성을 업데이트 하는 동안 throw 되는 예외를 확인 하는 기본 제공 유효성 검사 규칙은.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">예외가 발생 하는 경우 바인딩 엔진 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;예외와에 추가 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;바인딩된 요소의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
          <target state="translated">에 대 한 유효성 검사 프로세스에 대 한 자세한 내용은 &lt;xref:System.Windows.Data.MultiBinding&gt;개체 참조는 &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt;속성.&lt;/xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnExceptions is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnExceptions는.NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>When ValidatesOnNotifyDataErrors is <ph id="ph1">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.</source>
          <target state="translated">ValidatesOnNotifyDataErrors 다음과 같은 경우 <ph id="ph1">`true`</ph>, 바인딩을 확인 하 고 &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.&lt;/xref:System.ComponentModel.INotifyDataErrorInfo&gt; 를 구현 하는 데이터 원본에 의해 발생 하는 오류를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets the collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects for this instance of <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의이 인스턴스에 대 한 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set validation rules on both the &lt;xref:System.Windows.Data.MultiBinding&gt; object and the individual &lt;xref:System.Windows.Data.Binding&gt; objects in the &lt;xref:System.Windows.Data.MultiBinding&gt; object.</source>
          <target state="translated">둘 다에서 유효성 검사 규칙을 설정할 수는 &lt;xref:System.Windows.Data.MultiBinding&gt;개체와 개별 &lt;xref:System.Windows.Data.Binding&gt;개체에 &lt;xref:System.Windows.Data.MultiBinding&gt;개체입니다.&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding engine evaluates the ValidationRules on the &lt;xref:System.Windows.Data.MultiBinding&gt; object when a value moves from the binding target property to the &lt;xref:System.Windows.Data.IMultiValueConverter&gt; object.</source>
          <target state="translated">바인딩 엔진에는 Validationrule 평가 &lt;xref:System.Windows.Data.MultiBinding&gt;값이 바인딩 대상 속성을 이동할 때 개체는 &lt;xref:System.Windows.Data.IMultiValueConverter&gt;개체입니다.&lt;/xref:System.Windows.Data.IMultiValueConverter&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>After that, when a value moves from the converter to the binding source property of an individual binding, the binding engine evaluates the &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; on that &lt;xref:System.Windows.Data.Binding&gt; object.</source>
          <target state="translated">그런 다음 개별 바인딩의 바인딩 소스 속성에 값이 변환기에서 이동할 때 바인딩 엔진 평가 &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;그에 &lt;xref:System.Windows.Data.Binding&gt;개체입니다.&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process and how to provide visual feedback upon invalidation, see "Data Validation" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">유효성 검사 프로세스 및 무효화 될 시각적 피드백을 제공 하는 방법에 대 한 자세한 내용은 "데이터 유효성 검사"를 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서이 속성을 설정할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> 표시 된 구문을 사용 하거나 컬렉션 개체에 액세스 하 고와 같은 여러 메서드를 사용 하 여 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property used to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">컬렉션 개체를 액세스 하는 데 속성이 읽기 전용 이지만 컬렉션 자체는 읽기 / 쓰기입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Controls.ValidationRule&gt; objects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 속성 요소 사용 <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept> 하나 이상의 &lt;xref:System.Windows.Controls.ValidationRule&gt;개체입니다.&lt;/xref:System.Windows.Controls.ValidationRule&gt;      </target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class or create your custom rules by subclassing the &lt;xref:System.Windows.Controls.ValidationRule&gt; class.</source>
          <target state="translated">사용할 수 있습니다는 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;클래스 또는 &lt;xref:System.Windows.Controls.ValidationRule&gt;클래스&lt;/xref:System.Windows.Controls.ValidationRule&gt; 서브클래싱 하 여 사용자 지정 규칙을 만들려면&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects for this instance of <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">컬렉션 <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의이 인스턴스에 대 한 <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>