<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">666b55ba1c9474b2276b718dba411dc9d06952bb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.HttpRequestValidationException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">635d24cb2d01cd2c1cc1649ff02db5f48e417060</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10d0178f4e32597b8b436182be3e281ca26ddefc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The exception that is thrown when a potentially malicious input string is received from the client as part of the request data.</source>
          <target state="translated">요청 데이터의 일부로 클라이언트에서 잠재적으로 악의적인 입력된 문자열을 받을 때 throw 되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings.</source>
          <target state="translated">제한 하 고 사용자 입력 유효성 검사에 악의적인 입력된 문자열을 사용 하는 해커가 공격을 방지 하는 웹 응용 프로그램에 필수적입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cross-site scripting attacks are one example of such hacks.</source>
          <target state="translated">사이트 간 스크립팅 공격이 문자열을 통한 해킹에의 한 예입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other types of malicious or undesired data can be passed in a request through various forms of input.</source>
          <target state="translated">다른 유형의 악의적 이거나 원치 않는 데이터는 다양 한 형태의 입력을 통해 요청에 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.</source>
          <target state="translated">응용 프로그램에서 낮은 수준에서 전달 되는 데이터의 종류를 제한 하 여 프로그래머에 게 코드를 사용 하는 위치에 적절 한 확인 기능을 배치 하지 않는 경우에 예기치 않은 이벤트를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request validation detects potentially malicious client input and throws this exception to abort processing of the request.</source>
          <target state="translated">요청 유효성 검사는 클라이언트를 잠재적으로 악의적인 입력을 검색 하 고 중단 요청을 처리 하려면이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.</source>
          <target state="translated">요청 중단은 사이트 간 스크립팅 공격과 같이 응용 프로그램의 보안을 손상 시킬 시도 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is strongly recommended that your application explicitly check all input regarding request aborts.</source>
          <target state="translated">응용 프로그램에 명시적으로 요청 중단과 관련 된 모든 입력 검사 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can disable request validation by setting the <ph id="ph1">`validateRequest`</ph> attribute in the  directive to <ph id="ph2">`false`</ph>, as shown in the following example:       <ph id="ph3">`&lt;%@ Page validateRequest="false" %&gt;`</ph>       To disable request validation for your application, you must modify or create a Web.config file for your application and set the <ph id="ph4">`validateRequest`</ph> attribute of the <ph id="ph5">`pages`</ph> section to <ph id="ph6">`false`</ph>, as shown in the following example:      <ph id="ph7">```   &lt;configuration&gt;      &lt;system.web&gt;        &lt;pages validateRequest="false" /&gt;      &lt;/system.web&gt;    &lt;/configuration&gt;    ```</ph>       To disable request validation for all applications on your server, you can make this modification to the Machine.config file.</source>
          <target state="translated">그러나 설정 하 여 요청 유효성 검사를 해제할 수 있습니다는 <ph id="ph1">`validateRequest`</ph> 지시문으로의 특성 <ph id="ph2">`false`</ph>다음 예제에 나온 것 처럼: <ph id="ph3">`&lt;%@ Page validateRequest="false" %&gt;`</ph> 응용 프로그램에 대 한 요청 유효성 검사를 해제 하려면 수정 하거나 설정 하 여 응용 프로그램에 대 한 Web.config 파일을 만들 해야는 <ph id="ph4">`validateRequest`</ph> 특성의는 <ph id="ph5">`pages`</ph> 섹션을 <ph id="ph6">`false`</ph>다음 예제에 나온 것 처럼: <ph id="ph7">```   &lt;configuration&gt;      &lt;system.web&gt;        &lt;pages validateRequest="false" /&gt;      &lt;/system.web&gt;    &lt;/configuration&gt;    ```</ph> 서버의 모든 응용 프로그램에 대 한 요청 유효성 검사를 사용 하지 않도록 설정 하려면 를 Machine.config 파일에이 수정 작업을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 응용 프로그램에 명시적으로 사용 하 여 ASP.NET에서 수행 된 요청 유효성 검사 외에도 모든 입력 확인이 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.</source>
          <target state="translated">요청 유효성 검사 기능을 확인 하기 어려우므로 모든 공격 특히 응용 프로그램 논리에 대해 조작 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exception with the specified error message.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 오류 메시지와 함께 예외입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be human readable.</source>
          <target state="translated">콘텐츠는 <ph id="ph1">`message`</ph> 매개 변수는 휴먼 되도록 만들어졌습니다 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller of the HttpRequestValidationException constructor is required to ensure that the <ph id="ph1">`message`</ph> string has been localized.</source>
          <target state="translated">HttpRequestValidationException 생성자의 호출자에 게 확인 해야 합니다.는 <ph id="ph1">`message`</ph> 문자열에 지역화 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A string that describes the error.</source>
          <target state="translated">오류를 설명 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of the exception.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.HttpRequestValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정된 된 오류 메시지 및 예외의 원인인 내부 예외에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the &lt;xref:System.Exception.InnerException%2A&gt; property.</source>
          <target state="translated">이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 &lt;xref:System.Exception.InnerException%2A&gt;속성.&lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Exception.InnerException%2A&gt; property returns the same value that is passed into the HttpRequestValidationException constructor, or <ph id="ph1">`null`</ph> if the &lt;xref:System.Exception.InnerException%2A&gt; property does not supply the inner exception value to the HttpRequestValidationException constructor.</source>
          <target state="translated">&lt;xref:System.Exception.InnerException%2A&gt;HttpRequestValidationException 생성자에 전달 되는 동일한 값을 반환 하는 속성 또는 <ph id="ph1">`null`</ph> 경우는 &lt;xref:System.Exception.InnerException%2A&gt;HttpRequestValidationException 생성자에 내부 예외 값을 제공 하지 않는.&lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">예외에 대 한 이유를 설명 하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If this parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> block that handles the inner exception.</source>
          <target state="translated">이 매개 변수가 없으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>에서 현재 예외가 발생 한 <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 내부 예외를 처리 하는 블록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>