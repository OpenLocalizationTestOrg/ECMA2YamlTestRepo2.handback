<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb626756910ae5ef9d2b6adbe38c927d1aa1ff55</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.Trace.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2fba139ef7e0926e4ccbc1b42ee200124e554a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80b65375594fe3fd6e1bfbba1b7db16fcb4620a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a set of methods and properties that help you trace the execution of your code.</source>
          <target state="translated">메서드의 집합을 제공 및 사용자 코드 실행을 추적 하는 데 도움이 되는 속성입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the properties and methods in the Trace class to instrument release builds.</source>
          <target state="translated">속성을 사용할 수 있습니다 및 릴리스 빌드를 계측할 Trace 클래스의 메서드.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instrumentation allows you to monitor the health of your application running in real-life settings.</source>
          <target state="translated">계측을 사용 하면 실제 설정에서 실행 중인 응용 프로그램의 상태를 모니터링할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tracing helps you isolate problems and fix them without disturbing a running system.</source>
          <target state="translated">추적 기능을 이용 문제를 격리 하 고 실행 중인 시스템을 방해 하지 않고 수정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides methods to display an &lt;xref:System.Diagnostics.Trace.Assert%2A&gt; dialog box, and to emit an assertion that will always &lt;xref:System.Diagnostics.Trace.Fail%2A&gt;.</source>
          <target state="translated">이 클래스는 표시 하는 메서드를 제공는 &lt;xref:System.Diagnostics.Trace.Assert%2A&gt;대화 상자를 생성 하 고는 항상는 어설션을 내보내는 &lt;xref:System.Diagnostics.Trace.Fail%2A&gt;.&lt;/xref:System.Diagnostics.Trace.Fail%2A&gt; &lt;/xref:System.Diagnostics.Trace.Assert%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides write methods in the following variations: &lt;xref:System.Diagnostics.Trace.Write%2A&gt;, &lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;, &lt;xref:System.Diagnostics.Trace.WriteIf%2A&gt;, and &lt;xref:System.Diagnostics.Trace.WriteLineIf%2A&gt;.</source>
          <target state="translated">이 클래스는 다음과 같은 형태로 쓰기 메서드를 제공: &lt;xref:System.Diagnostics.Trace.Write%2A&gt;, &lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;, &lt;xref:System.Diagnostics.Trace.WriteIf%2A&gt;, 및 &lt;xref:System.Diagnostics.Trace.WriteLineIf%2A&gt;.&lt;/xref:System.Diagnostics.Trace.WriteLineIf%2A&gt; &lt;/xref:System.Diagnostics.Trace.WriteIf%2A&gt; &lt;/xref:System.Diagnostics.Trace.WriteLine%2A&gt; &lt;/xref:System.Diagnostics.Trace.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.BooleanSwitch&gt; and &lt;xref:System.Diagnostics.TraceSwitch&gt; classes provide means to dynamically control the tracing output.</source>
          <target state="translated">&lt;xref:System.Diagnostics.BooleanSwitch&gt;및 &lt;xref:System.Diagnostics.TraceSwitch&gt;클래스 동적으로 추적 출력을 제어 하는 수단을 제공 합니다.&lt;/xref:System.Diagnostics.TraceSwitch&gt; &lt;/xref:System.Diagnostics.BooleanSwitch&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">응용 프로그램을 다시 컴파일하지 않고도 이러한 스위치의 값을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on using the configuration file to set a switch, see the &lt;xref:System.Diagnostics.Switch&gt; class and the <bpt id="p1">[</bpt>How to: Create, Initialize and Configure Trace Switches<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">스위치를 설정 하는 구성 파일을 사용 하는 방법은 참조 하십시오.는 &lt;xref:System.Diagnostics.Switch&gt;클래스 및 <bpt id="p1">[</bpt>하는 방법: 만들기, 초기화 및 추적 스위치 구성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 항목.&lt;/xref:System.Diagnostics.Switch&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize the tracing output's target by adding &lt;xref:System.Diagnostics.TraceListener&gt; instances to or removing instances from the &lt;xref:System.Diagnostics.Trace.Listeners%2A&gt; collection.</source>
          <target state="translated">추적 출력 대상을 추가 하 여 사용자 지정할 수 있습니다 &lt;xref:System.Diagnostics.TraceListener&gt;인스턴스 또는 인스턴스를 제거 하는 &lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners%2A&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.Trace.Listeners%2A&gt; collection is shared by both the &lt;xref:System.Diagnostics.Debug&gt; and the Trace classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;컬렉션 모두에 의해 공유 되는 &lt;xref:System.Diagnostics.Debug&gt;및 Trace 클래스; 둘 다에 수신기를 추가 하거나 클래스에 추적 수신기를 추가 합니다.&lt;/xref:System.Diagnostics.Debug&gt; &lt;/xref:System.Diagnostics.Trace.Listeners%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, trace output is emitted using the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; class.</source>
          <target state="translated">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;클래스&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 를 사용 하 여 추적 출력을 내보냅니다 하는 기본적으로</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Adding a trace listener to the &lt;xref:System.Diagnostics.Trace.Listeners%2A&gt; collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 추적 수신기를 추가 &lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;컬렉션 추적 수신기에서 사용 되는 리소스를 사용할 수 없는 경우 추적을 동안 throw 된 예외가 발생할 수 있습니다.&lt;/xref:System.Diagnostics.Trace.Listeners%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">조건 및 throw 된 예외 추적 수신기에 좌우 되며이 항목의 열거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>It may be useful to place calls to the Trace methods in <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">추적 방법에 대 한 호출을 추가 하는 데 유용 것 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> 블록 감지 하 고 추적 수신기에서 발생 한 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you add trace listeners to partially trusted code, you will get a &lt;xref:System.Security.SecurityException&gt; exception, because adding trace listeners requires &lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt; permission.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 부분 신뢰 코드에 추적 수신기를 추가 하는 경우 얻을 수 있습니다는 &lt;xref:System.Security.SecurityException&gt;예외를 추적 수신기를 추가 하기 때문에 필요 &lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;권한.&lt;/xref:System.Security.Permissions.SecurityPermissionFlag&gt; &lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</source>
          <target state="translated">Visual Studio에서 샌드박스에서 실행 되 고 부분적으로 신뢰할 수 있는 코드를 추적 하려면 추적 수신기를 추가 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, view the Trace and &lt;xref:System.Diagnostics.Debug&gt; messages in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window.</source>
          <target state="translated">대신 추적을 볼 및 &lt;xref:System.Diagnostics.Debug&gt;의 메시지는 <bpt id="p1">**</bpt>출력<ept id="p1">**</ept> 창.&lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Trace class provides properties to get or set the level of &lt;xref:System.Diagnostics.Trace.Indent%2A&gt;, the &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;, and whether to &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt; after each write.</source>
          <target state="translated">Trace 클래스의 수준을 가져오거나 설정 하는 속성을 제공 &lt;xref:System.Diagnostics.Trace.Indent%2A&gt;, &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;, 것인지 &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;쓴 후.&lt;/xref:System.Diagnostics.Trace.AutoFlush%2A&gt; &lt;/xref:System.Diagnostics.Trace.IndentSize%2A&gt; &lt;/xref:System.Diagnostics.Trace.Indent%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt; and &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt; for Trace, you can edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">설정 하는 &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;및 &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;추적에 대 한 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수 있습니다.&lt;/xref:System.Diagnostics.Trace.IndentSize%2A&gt; &lt;/xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:      <ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph>       The &lt;xref:System.Diagnostics.ConditionalAttribute&gt; attribute is applied to the methods of Trace.</source>
          <target state="translated">구성 파일 형식을 지정 하는 다음 예제와 같은: <ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph> 는 &lt;xref:System.Diagnostics.ConditionalAttribute&gt;특성 추적의 메서드에 적용 됩니다.&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compilers that support &lt;xref:System.Diagnostics.ConditionalAttribute&gt; ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</source>
          <target state="translated">지 원하는 컴파일러 &lt;xref:System.Diagnostics.ConditionalAttribute&gt;"TRACE"으로 조건부 컴파일 기호가 정의 되어 있지 않으면 이러한 메서드 호출을 무시 합니다.&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refer to a compiler's documentation to determine whether &lt;xref:System.Diagnostics.ConditionalAttribute&gt; is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">확인 하려면 컴파일러의 설명서를 참조 하는지 여부를 &lt;xref:System.Diagnostics.ConditionalAttribute&gt;사용할 수 및 조건부 컴파일 기호를 정의 하기 위한 구문을.&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 기본적으로 Visual Studio에서 프로젝트 디버그 빌드에 대해 "디버그" 조건부 컴파일 기호가 정의 되어 및 모두 디버그 및 릴리스 빌드에 대해 "TRACE" 기호가 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">이 동작을 사용 하지 않도록 설정 하는 방법에 대 한 정보를 Visual Studio 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To define the "TRACE" conditional compilation symbol in C#, add the <ph id="ph1">`/d:TRACE`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">C#에서 "TRACE" 조건부 컴파일 기호를 정의 하려면 추가 <ph id="ph1">`/d:TRACE`</ph> 명령줄을 사용 하 여 코드를 컴파일할 때 컴파일러 명령줄 옵션 또는 추가 <ph id="ph2">`#define TRACE`</ph> 파일의 맨 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const TRACE=True`</ph> to the file.</source>
          <target state="translated">Visual Basic의 추가 <ph id="ph1">`/d:TRACE=True`</ph> 하려면 컴파일러 명령줄 옵션을 선택 하거나 추가 <ph id="ph2">`#Const TRACE=True`</ph> 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Diagnostics.ConditionalAttribute&gt; is not supported by the C++ compiler.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;c + + 컴파일러에서 지원 되지 않습니다.&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide equivalent functionality, you must enclose calls to the methods of Trace in an <ph id="ph1">`#if defined(TRACE) ... #endif`</ph> block, and add the <ph id="ph2">`/DTRACE`</ph> option to the compiler command line or add <ph id="ph3">`#define TRACE`</ph> to the file.</source>
          <target state="translated">동일한 기능을 제공 하려면 추적에서의 메서드를 호출 묶어야는 <ph id="ph1">`#if defined(TRACE) ... #endif`</ph> 을 차단 하 고 추가 <ph id="ph2">`/DTRACE`</ph> 하려면 컴파일러 명령줄 옵션을 선택 하거나 추가 <ph id="ph3">`#define TRACE`</ph> 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, displays a message box that shows the call stack.</source>
          <target state="translated">조건;를 확인. 조건이 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 호출 스택을 보여주는 메시지 상자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 오류 메시지를 보내지 및 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">조건;를 확인. 조건이 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 지정 된 메시지를 출력 하 고 호출 스택을 보여주는 메시지 상자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 지정 된 메시지를 보내지 및 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The message to send to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">으로 보낼 메시지는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">조건;를 확인. 조건이 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 두 개의 지정 된 메시지를 출력 하 고 호출 스택을 보여주는 메시지 상자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 지정 된 메시지가 전송 되지 않습니다 및 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The message to send to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">으로 보낼 메시지는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The detailed message to send to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">으로 보낼 자세한 메시지는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets whether &lt;xref:System.Diagnostics.Trace.Flush<bpt id="p1">*</bpt>&gt; should be called on the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; after every write.</source>
          <target state="translated">가져오거나 여부 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에서 호출 되어야 합니다는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 매번 쓴 후 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call &lt;xref:System.Diagnostics.Trace.Flush%2A&gt; or &lt;xref:System.Diagnostics.Trace.Close%2A&gt;.</source>
          <target state="translated">스트림을 내부 인코더가 플러시됩니다 &lt;xref:System.Diagnostics.Trace.Flush%2A&gt;나 &lt;xref:System.Diagnostics.Trace.Close%2A&gt;.&lt;/xref:System.Diagnostics.Trace.Close%2A&gt; &lt;/xref:System.Diagnostics.Trace.Flush%2A&gt; 명시적으로 호출 하지 않으면</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting AutoFlush to <ph id="ph1">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">AutoFlush 설정 <ph id="ph1">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f&amp;8;와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the AutoFlush and &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt; for &lt;xref:System.Diagnostics.Trace&gt;, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">AutoFlush를 설정 하 고 &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;에 대 한 &lt;xref:System.Diagnostics.Trace&gt;, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.&lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Trace.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:      <ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></source>
          <target state="translated">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.<ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.Diagnostics.Trace.Flush<bpt id="p2">*</bpt>&gt; is called on the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p2">*</ept>&gt; after every write; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 라고 하는 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; 매번 쓴 후 그렇지 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer, and then closes the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">출력 버퍼를 플러시하고 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 닫습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the output is going to a file, such as to the &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.</source>
          <target state="translated">이 메서드를 사용 하 여 출력 하는 경우 파일에 같은 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call &lt;xref:System.Diagnostics.Trace.Flush%2A&gt; or Close.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 &lt;xref:System.Diagnostics.Trace.Flush%2A&gt;또는 닫기.&lt;/xref:System.Diagnostics.Trace.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt; to <ph id="ph1">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;를 <ph id="ph1">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.&lt;/xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f&amp;8;와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets the correlation manager for the thread for this trace.</source>
          <target state="translated">이 추적에 대 한 스레드에 대 한 상관 관계 관리자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This is an advanced property that most applications should not have occasion to use.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;이 고급 속성을 사용 하는 경우 대부분의 응용 프로그램에 없어야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.CorrelationManager&gt; class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</source>
          <target state="translated">&lt;xref:System.Diagnostics.CorrelationManager&gt;클래스 스레드 바인딩 컨텍스트에서 논리 작업 id를 저장 하 고 자동으로 저장된 된 id 가진 스레드에 의해 생성 된 각 추적 이벤트 태그를 지정 하는 데 사용 되는 메서드를 제공 합니다.&lt;/xref:System.Diagnostics.CorrelationManager&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Diagnostics.CorrelationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the thread for this trace.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Diagnostics.CorrelationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 추적에 대 한 스레드에 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Emits the specified error message.</source>
          <target state="translated">지정 된 오류 메시지를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Emits an error message, and a detailed error message.</source>
          <target state="translated">오류 메시지와 자세한 오류 메시지를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A detailed message to emit.</source>
          <target state="translated">내보낼 자세한 메시지입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer, and causes buffered data to be written to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">출력 버퍼를 플러시하고 버퍼링 된 데이터가 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 에 쓸 수</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call Flush or &lt;xref:System.Diagnostics.Trace.Close%2A&gt;.</source>
          <target state="translated">플러시 나 &lt;xref:System.Diagnostics.Trace.Close%2A&gt;.&lt;/xref:System.Diagnostics.Trace.Close%2A&gt; 명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt; to <ph id="ph1">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;를 <ph id="ph1">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.&lt;/xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f&amp;8;와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Increases the current &lt;xref:System.Diagnostics.Trace.IndentLevel*&gt; by one.</source>
          <target state="translated">현재 증가 &lt;xref:System.Diagnostics.Trace.IndentLevel*&gt;씩.&lt;/xref:System.Diagnostics.Trace.IndentLevel*&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the indent level.</source>
          <target state="translated">들여쓰기 수준을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IndentLevel property represents the number of times the indent of size &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt; is applied.</source>
          <target state="translated">IndentLevel 속성 횟수 크기의 들여쓰기를 나타내는 &lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;적용 됩니다.&lt;/xref:System.Diagnostics.Trace.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">이 속성은 스레드/요청 별로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The indent level.</source>
          <target state="translated">들여쓰기 수준입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
          <target state="translated">기본값은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; interprets this number as spaces.</source>
          <target state="translated">A &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;이 숫자를 공백으로 해석.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.Diagnostics.EventLogTraceListener&gt; ignores this value.</source>
          <target state="translated">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;이 값을 무시 합니다.&lt;/xref:System.Diagnostics.EventLogTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">이 속성은 스레드/요청 별로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt; and IndentSize for &lt;xref:System.Diagnostics.Trace&gt;, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">설정 하는 &lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;및에 대 한 IndentSize &lt;xref:System.Diagnostics.Trace&gt;, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.&lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:      <ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></source>
          <target state="translated">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.<ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="3" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default is four.</source>
          <target state="translated">기본값은&amp;4;입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets the collection of listeners that is monitoring the trace output.</source>
          <target state="translated">추적 출력을 모니터링 하는 수신기의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The listeners produce formatted output from the trace output.</source>
          <target state="translated">수신기는 추적 출력에서 형식이 지정 된 출력을 만듭니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the collection contains an instance of the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; class.</source>
          <target state="translated">기본적으로 컬렉션 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;클래스&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 의 인스턴스를 포함</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to remove the default listener, call the &lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt; method, and pass it the instance of the &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본 수신기를 제거 하려는 경우 호출 된 &lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;메서드를 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 의 인스턴스를 전달 하 고&lt;/xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>To redirect output to the console window, add an instance of the &lt;xref:System.Diagnostics.ConsoleTraceListener&gt; class.</source>
          <target state="translated">콘솔 창에 출력을 리디렉션할 &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;클래스&lt;/xref:System.Diagnostics.ConsoleTraceListener&gt; 의 인스턴스를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Listeners collection is shared by both the &lt;xref:System.Diagnostics.Debug&gt; and the &lt;xref:System.Diagnostics.Trace&gt; classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The Listeners 컬렉션 모두에 의해 공유 되는 &lt;xref:System.Diagnostics.Debug&gt;및 &lt;xref:System.Diagnostics.Trace&gt;클래스; 둘 다에 수신기를 추가 하는 클래스를 추적 수신기를 추가 합니다.&lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListenerCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents a collection of type <bpt id="p2">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> monitoring the trace output.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListenerCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식의 컬렉션을 나타내는 <bpt id="p2">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 추적 출력을 모니터링 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Refreshes the trace configuration data.</source>
          <target state="translated">추적 구성 데이터를 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace configuration data is captured when the application is started.</source>
          <target state="translated">추적 데이터가 캡처되는 응용 프로그램이 시작 될 때 구성 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the configuration data is changed after the application is started, call the Refresh method to update the trace configuration data.</source>
          <target state="translated">응용 프로그램이 시작 된 후에 구성 데이터가 변경 되 면 추적 구성 데이터를 업데이트 하려면 새로 고침 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Writes an error message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified message.</source>
          <target state="translated">추적 수신기에 오류 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 메시지를 사용 하 여 컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceError calls the <ph id="ph1">`TraceEvent`</ph> method for each trace listener, with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the informative message as the message string.</source>
          <target state="translated">TraceError 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 &lt;xref:System.Diagnostics.TraceEventType&gt;, 메시지 문자열로 알림 메시지를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
          <target state="translated">쓸 알림 메시지입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Writes an error message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified array of objects and formatting information.</source>
          <target state="translated">추적 수신기에 오류 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 개체 배열을 사용 하 고 서식 정보 컬렉션입니다.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceError calls the <ph id="ph1">`TraceEvent`</ph> methods in the trace listeners with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the message content as an object array with formatting information.</source>
          <target state="translated">TraceError 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로의 추적 수신기의 메서드에 &lt;xref:System.Diagnostics.TraceEventType&gt;, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.String.Format%2A&gt; method for more information about the <ph id="ph1">`format`</ph> and <ph id="ph2">`args`</ph> parameters.</source>
          <target state="translated">참조는 &lt;xref:System.String.Format%2A&gt;에 대 한 자세한 내용은 메서드는 <ph id="ph1">`format`</ph> 및 <ph id="ph2">`args`</ph> 매개 변수.&lt;/xref:System.String.Format%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">개체에 해당 하는&amp;0; 개 이상의 서식 항목이 포함 된 형식 문자열은 <ph id="ph1">`args`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 지정할 개체가&amp;0; 개 이상 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified message.</source>
          <target state="translated">추적 수신기에 정보 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 메시지를 사용 하 여 컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceInformation calls the <ph id="ph1">`TraceEvent`</ph> method for each trace listener, with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the informative message as the message string.</source>
          <target state="translated">TraceInformation 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 &lt;xref:System.Diagnostics.TraceEventType&gt;, 메시지 문자열로 알림 메시지를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
          <target state="translated">쓸 알림 메시지입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified array of objects and formatting information.</source>
          <target state="translated">추적 수신기에 정보 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 개체 배열을 사용 하 고 서식 정보 컬렉션입니다.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceInformation calls the <ph id="ph1">`TraceEvent`</ph> methods in the trace listeners with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the message content as an object array with formatting information.</source>
          <target state="translated">TraceInformation 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로의 추적 수신기의 메서드에 &lt;xref:System.Diagnostics.TraceEventType&gt;, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.String.Format%2A&gt; method for more information about the <ph id="ph1">`format`</ph> and <ph id="ph2">`args`</ph> parameters.</source>
          <target state="translated">참조는 &lt;xref:System.String.Format%2A&gt;에 대 한 자세한 내용은 메서드는 <ph id="ph1">`format`</ph> 및 <ph id="ph2">`args`</ph> 매개 변수.&lt;/xref:System.String.Format%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">개체에 해당 하는&amp;0; 개 이상의 서식 항목이 포함 된 형식 문자열은 <ph id="ph1">`args`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 지정할 개체가&amp;0; 개 이상 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Writes a warning message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified message.</source>
          <target state="translated">추적 수신기에 경고 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 메시지를 사용 하 여 컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceWarning calls the <ph id="ph1">`TraceEvent`</ph> method for each trace listener with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the informative message as the message string.</source>
          <target state="translated">TraceWarning 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 &lt;xref:System.Diagnostics.TraceEventType&gt;, 메시지 문자열로 알림 메시지를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
          <target state="translated">쓸 알림 메시지입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Writes a warning message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection using the specified array of objects and formatting information.</source>
          <target state="translated">추적 수신기에 경고 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;지정된 된 개체 배열을 사용 하 고 서식 정보 컬렉션입니다.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceWarning calls the <ph id="ph1">`TraceEvent`</ph> methods in the trace listeners with the trace event type &lt;xref:System.Diagnostics.TraceEventType&gt;, passing the message content as an object array with formatting information.</source>
          <target state="translated">TraceWarning 호출은 <ph id="ph1">`TraceEvent`</ph> 추적 이벤트 유형으로의 추적 수신기의 메서드에 &lt;xref:System.Diagnostics.TraceEventType&gt;, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.&lt;/xref:System.Diagnostics.TraceEventType&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.String.Format%2A&gt; method for more information about the <ph id="ph1">`format`</ph> and <ph id="ph2">`args`</ph> parameters.</source>
          <target state="translated">참조는 &lt;xref:System.String.Format%2A&gt;에 대 한 자세한 내용은 메서드는 <ph id="ph1">`format`</ph> 및 <ph id="ph2">`args`</ph> 매개 변수.&lt;/xref:System.String.Format%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">개체에 해당 하는&amp;0; 개 이상의 서식 항목이 포함 된 형식 문자열은 <ph id="ph1">`args`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 지정할 개체가&amp;0; 개 이상 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Decreases the current &lt;xref:System.Diagnostics.Trace.IndentLevel*&gt; by one.</source>
          <target state="translated">현재 감소 &lt;xref:System.Diagnostics.Trace.IndentLevel*&gt;씩.&lt;/xref:System.Diagnostics.Trace.IndentLevel*&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the global lock should be used.</source>
          <target state="translated">전역 잠금을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The global lock is always used if the trace listener is not thread safe, regardless of the value of UseGlobalLock.</source>
          <target state="translated">전역 잠금 추적 수신기가 스레드로부터 안전 하지, UseGlobalLock 값에 관계 없이 하는 경우에 항상 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt; property is used to determine if the listener is thread safe.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;속성을 사용 하는 수신기가 스레드로부터 안전 하 게 보호 하는 경우를 결정 합니다.&lt;/xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The global lock is not used only if the value of UseGlobalLock is <ph id="ph1">`false`</ph> and the value of &lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt; is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">전역 잠금을 UseGlobalLock의 값은 경우에 사용 하지 <ph id="ph1">`false`</ph> 의 값과 &lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;은 <ph id="ph2">`true`</ph>.&lt;/xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to use the global lock.</source>
          <target state="translated">기본 동작은 전역 잠금을 사용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the UseGlobalLock for &lt;xref:System.Diagnostics.Trace&gt;, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">에 대 한 UseGlobalLock 설정 하려면 &lt;xref:System.Diagnostics.Trace&gt;, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.&lt;/xref:System.Diagnostics.Trace&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:      <ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace useGlobalLock="false" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></source>
          <target state="translated">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.<ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace useGlobalLock="false" /&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the global lock is to be used; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>전역 잠금을 사용 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection.</source>
          <target state="translated">개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the &lt;xref:System.Web.TraceContext.Write%2A&gt; method of the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 <ph id="ph1">`Trace.Write("...")`</ph> 에 대 한 호출에서 &lt;xref:System.Web.TraceContext.Write%2A&gt;의 메서드는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; &lt;/xref:System.Web.TraceContext.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt; class in Web pages, you must include the namespace, for example, <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.&lt;/xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">추적 수신기에 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the &lt;xref:System.Web.TraceContext.Write%2A&gt; method of the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 <ph id="ph1">`Trace.Write("...")`</ph> 에 대 한 호출에서 &lt;xref:System.Web.TraceContext.Write%2A&gt;의 메서드는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; &lt;/xref:System.Web.TraceContext.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt; class in Web pages, you must include the namespace, for example, <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.&lt;/xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the &lt;xref:System.Web.TraceContext.Write%2A&gt; method of the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 <ph id="ph1">`Trace.Write("...")`</ph> 에 대 한 호출에서 &lt;xref:System.Web.TraceContext.Write%2A&gt;의 메서드는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; &lt;/xref:System.Web.TraceContext.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt; class in Web pages, you must include the namespace, for example, <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.&lt;/xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">추적 수신기에 범주 이름 및 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the &lt;xref:System.Web.TraceContext.Write%2A&gt; method of the &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 <ph id="ph1">`Trace.Write("...")`</ph> 에 대 한 호출에서 &lt;xref:System.Web.TraceContext.Write%2A&gt;의 메서드는 &lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt; &lt;/xref:System.Web.TraceContext.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt; class in Web pages, you must include the namespace, for example, <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 <ph id="ph1">`System.Diagnostics.Trace.Write("...")`</ph>.&lt;/xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection if a condition is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션 조건이 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection if a condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추적 수신기에 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;조건이 컬렉션 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection if a condition is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션 조건이 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection if a condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추적 수신기에 범주 이름 및 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;조건이 컬렉션 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection.</source>
          <target state="translated">개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">추적 수신기에 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection.</source>
          <target state="translated">추적 수신기에 범주 이름 및 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;컬렉션.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection if a condition is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션 조건이 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection if a condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추적 수신기에 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;조건이 컬렉션 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString<bpt id="p1">*</bpt>&gt; method to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners<ept id="p1">*</ept>&gt; collection if a condition is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 추적 수신기에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 컬렉션 조건이 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose name is sent to the &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름이 있는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt; 로 보내집니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the &lt;xref:System.Diagnostics.Trace.Listeners*&gt; collection if a condition is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추적 수신기에 범주 이름 및 메시지를 씁니다는 &lt;xref:System.Diagnostics.Trace.Listeners*&gt;조건이 컬렉션 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Diagnostics.Trace.Listeners*&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 출력 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 인스턴스에 기록</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; method of the trace listener.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;추적 수신기의 메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cause a message to be written; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메시지를 작성 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>