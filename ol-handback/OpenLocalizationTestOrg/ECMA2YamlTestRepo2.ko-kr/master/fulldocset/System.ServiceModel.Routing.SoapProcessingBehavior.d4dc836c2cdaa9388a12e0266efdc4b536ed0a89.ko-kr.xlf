<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">355e9c21d2e3d3a74eda6a5806f15cf95eb6562d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Routing.SoapProcessingBehavior.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f97f171d6356681318b90f2687f16aef3130816e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cb52af1216ea865d9219251e6e885f01d466532</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the client endpoint behavior used to marshal messages between different binding types and message versions.</source>
          <target state="translated">서로 다른 바인딩 형식과 메시지 버전 간에 메시지 마샬링을 위해 사용 되는 클라이언트 끝점 동작을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>SOAP processing is the process where messages are converted between message versions.</source>
          <target state="translated">SOAP 처리는 메시지 버전 간에 메시지를 변환 하는 프로세스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Processing messages from one &lt;xref:System.ServiceModel.Channels.MessageVersion&gt; to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message.</source>
          <target state="translated">메시지 하나를 처리 &lt;xref:System.ServiceModel.Channels.MessageVersion&gt;다른 본문 부분과 관련 헤더는 들어오는 WCF 메시지를 포함 하는 새 WCF 메시지를 생성 하 여 수행 됩니다.&lt;/xref:System.ServiceModel.Channels.MessageVersion&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.</source>
          <target state="translated">이러한 헤더는 서로 다른 버전 (주소 지정 헤더인 경우) 중 하나 이거나 클라이언트와 라우터 간의 통신의 일부로 처리 되었기 때문에 헤더 나 라우터 수준에서 인식 되는 주소 지정 않는 새 WCF 메시지 생성 중 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer.</source>
          <target state="translated">헤더를 아웃 바운드 메시지에 배치 되는지 여부는 이해 하는 들어오는 채널 계층을 통해 전달 되는 것으로 표시 되었는지 여부 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.</source>
          <target state="translated">(예: 사용자 지정 헤더) 인식 되지 않는 헤더는 제거 되지 않으며 하므로 라우팅 서비스를 통해 전달 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Routing.SoapProcessingBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.ServiceModel.Routing.SoapProcessingBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Adds new binding elements to an endpoint.</source>
          <target state="translated">끝점에 새 바인딩 요소를 추가합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The service endpoint to apply the binding elements to.</source>
          <target state="translated">바인딩 요소를 적용할 서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The binding parameter collection to apply to the endpoint.</source>
          <target state="translated">끝점에 적용할 바인딩 매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Applies the specified endpoint behavior to the client.</source>
          <target state="translated">클라이언트에 지정된 된 끝점 동작을 적용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The service endpoint to apply to the client.</source>
          <target state="translated">클라이언트에 적용할 서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The runtime on the client.</source>
          <target state="translated">클라이언트 런타임입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Applies the specified endpoint behavior to the endpoint dispatcher.</source>
          <target state="translated">지정된 된 끝점 동작을 끝점 디스패처에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The service endpoint to apply to the client.</source>
          <target state="translated">클라이언트에 적용할 서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The endpoint dispatcher.</source>
          <target state="translated">끝점 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether messages should be processed.</source>
          <target state="translated">메시지를 처리할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; creates and attaches a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with ProcessMessages set to <ph id="ph1">`true`</ph> for each client endpoint.</source>
          <target state="translated">기본적으로는 &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt;만들고 새 연결 &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;ProcessMessages로 설정 된 <ph id="ph1">`true`</ph> 각 클라이언트 끝점에 대 한.&lt;/xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; &lt;/xref:System.ServiceModel.Routing.RoutingBehavior&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want to use the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on a specific endpoint, create a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with this value set to <ph id="ph1">`false`</ph>, and then attach it to the endpoint on which you do not want processing to occur.</source>
          <target state="translated">사용 하지 않을 경우는 &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;특정 끝점에서 새 만듭니다 &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;이 값으로 설정 된 <ph id="ph1">`false`</ph>, 다음에 원하지 않는 처리를 끝점에 연결 합니다.&lt;/xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; &lt;/xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; observes that a client already has a &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;, it does not attempt to attach another.</source>
          <target state="translated">경우는 &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt;클라이언트 이미에 관찰 한 &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;, 다른 연결을 시도 하지 않습니다.&lt;/xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; &lt;/xref:System.ServiceModel.Routing.RoutingBehavior&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable the application of &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on any endpoint, disable SOAP processing on the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; and the &lt;xref:System.ServiceModel.Routing.RoutingConfiguration&gt;.</source>
          <target state="translated">응용 프로그램의 &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;모든 끝점에서 사용 하지 않도록 설정 &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt;하 고 있는 &lt;xref:System.ServiceModel.Routing.RoutingConfiguration&gt;.&lt;/xref:System.ServiceModel.Routing.RoutingConfiguration&gt; &lt;/xref:System.ServiceModel.Routing.RoutingBehavior&gt; SOAP 처리를&lt;/xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; 사용 하지 않도록 설정 하려면</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if messages should be marshaled; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true 이면<ept id="p1">**</ept> 마샬링된 고, 그렇지 않으면 메시지 해야 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Validates the service endpoint.</source>
          <target state="translated">서비스 끝점의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The service endpoint to validate.</source>
          <target state="translated">유효성을 검사할 서비스 끝점입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>