<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c309fb9b1735df07a60b804b97f4502a67997f7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Activities.Presentation.Debug.IDesignerDebugView.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28e2b80ad3bade6db604f23a2575b73dc948ec60</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97899cb499bf804a762aecf03db328b1ece97269</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality for an activity designer debugger view.</source>
          <target state="translated">활동 디자이너 디버거 보기에 대 한 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets or sets the scope of execution within the source file.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 소스 파일 내의 실행 범위를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The starting point location for execution within the source file.</source>
          <target state="translated">소스 파일 내에서 실행을 위한 시작 지점 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets or sets the current location of execution in a file being processed by the debugger.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 디버거를 통해 처리 되는 파일에 실행의 현재 위치를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The current location of execution in a file being processed by the debugger.</source>
          <target state="translated">디버거를 통해 처리 되는 파일에는 실행의 현재 위치입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, removes a breakpoint at the specified location in the source file.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 소스 파일에 지정된 된 위치에 중단점을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A specific location in a target source code file.</source>
          <target state="translated">대상 소스 코드 파일의 특정 위치입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Ensures that the <bpt id="p1">&lt;xref href="System.Activities.Presentation.Debug.IDesignerDebugView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is visible.</source>
          <target state="translated">되도록는 <bpt id="p1">&lt;xref href="System.Activities.Presentation.Debug.IDesignerDebugView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A specific location in a target source code file.</source>
          <target state="translated">대상 소스 코드 파일의 특정 위치입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, returns a list of currently set breakpoint location-and-type pairs.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 위치 및 형식 쌍 현재 설정 된 중단점의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A list of currently set breakpoint location-and-type pairs.</source>
          <target state="translated">현재 집합의 중단점 위치 형식 쌍의 목록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, returns an exact location in a source file based upon an approximate location.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 대략적인 위치를 바탕으로 소스 파일의 정확한 위치를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A position within a source file that is known to be inexact.</source>
          <target state="translated">정확 하지 않은 것으로 알려진 소스 파일 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An exact location within the source file.</source>
          <target state="translated">소스 파일 내의 정확한 위치입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the Xaml source file name should be hidden.</source>
          <target state="translated">Xaml 소스 파일 이름을 숨길지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the Xaml source file name should be hidden; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Xaml 소스 파일 이름의 숨김을; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, places a breakpoint at the specified location in a file.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 파일에 지정된 된 위치에 중단점을 배치 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A specific location in a target source code file.</source>
          <target state="translated">대상 소스 코드 파일의 특정 위치입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The member of an enumeration of breakpoint types which may include Bounded, Conditional, Enabled, and None.</source>
          <target state="translated">Bounded, 조건부, Enabled 및 None를 포함할 수 있는 중단점 형식의 열거형의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets or sets a value that indicates whether debugging is enabled.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 디버깅을 사용할지 여부를 나타내는 값을 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if debugging is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>디버깅을 사용 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, resets the position of the breakpoint in a file.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 파일에서 중단점의 위치를 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the selected <bpt id="p1">&lt;xref href="System.Activities.Debugger.SourceLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 선택한 가져옵니다 <bpt id="p1">&lt;xref href="System.Activities.Debugger.SourceLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The selected source location.</source>
          <target state="translated">선택한 원본 위치입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, updates the type of the breakpoint at a specified location in a file.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우에 파일에 지정된 된 위치에 있는 중단점의 형식을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A specific location in a target source code file.</source>
          <target state="translated">대상 소스 코드 파일의 특정 위치입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A specified type of breakpoint; for example, line, method, or exception breakpoints.</source>
          <target state="translated">지정된 된 유형의 중단점; 예를 들어 줄, 메서드 또는 예외 중단점입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>