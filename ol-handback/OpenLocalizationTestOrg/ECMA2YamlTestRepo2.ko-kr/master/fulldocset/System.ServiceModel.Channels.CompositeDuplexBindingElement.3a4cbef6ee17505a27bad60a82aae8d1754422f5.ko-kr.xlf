<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d30812ea8bf042234bc134a24995437e81ed2085</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.CompositeDuplexBindingElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cefbb8c5ac04b23aff3729e3547b14c161879bc2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e41fd9c7fc9137d70bf1f687ad61ab913ee36ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</source>
          <target state="translated">클라이언트 서비스를 다시 클라이언트에 메시지를 보낼에 대 한 끝점을 공개 해야 할 때 사용 되는 바인딩 요소를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</source>
          <target state="translated">와 같은 전송에 HTTP 이중 통신을 기본적으로 허용 하지 않는 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</source>
          <target state="translated">반면, TCP,으로 이중 통신을 허용 하 고 하므로이 바인딩 요소에서 클라이언트로 회신 메시지를 보낼 서비스에 대 한 사용을 요구 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client must expose an address at which the service can contact it to establish a connection from the service to the client.</source>
          <target state="translated">클라이언트는 서비스 연결할 수는 서비스에서 클라이언트 연결을 설정 하는 주소를 노출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This client address is provided by the &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; property.</source>
          <target state="translated">이 클라이언트 주소에서 제공 되는 &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> auto-generates a &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; if one is not explicitly set by the user.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> 자동으로 생성 한 &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;사용자가 명시적으로 설정 하지 않으면 하나.&lt;/xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.CompositeDuplexBindingElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.CompositeDuplexBindingElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the base address for the client.</source>
          <target state="translated">클라이언트에 대 한 기본 주소를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides an address at which the service can contact the client.</source>
          <target state="translated">이 속성을 서비스 클라이언트를 연결할 수 주소를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`null`</ph> value causes the system to automatically generate a client base address.</source>
          <target state="translated">A <ph id="ph1">`null`</ph> 값을 사용 하면 클라이언트 기본 주소를 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a base address, not an absolute address.</source>
          <target state="translated">이 기본 주소를 절대 주소가 아닙니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A GUID is appended to the base address when generating client endpoints from this binding.</source>
          <target state="translated">이 바인딩에서 클라이언트 끝점을 생성할 때 GUID는 기본 주소에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that contains the base address for the client.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;클라이언트에 대 한 기본 주소를 포함 하는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a deep clone of the current binding element.</source>
          <target state="translated">현재 바인딩 요소의 전체 복제본을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">복제를 반환 하면 런타임에서를 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">복제가 반환 되지 않으면 런타임 동작이 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">개체의 전체 복제는 개체의 복사본 및 해당 개체에서 직접 또는 간접적으로 참조 하는 모든 대상을 복사를 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">이 (전체 개체 그래프 복사 합니다.) 개체의 단순 복제는 달리,만 개체의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">단순 복사는 참조 된 개체의 복사본은 만들지는 개체가 다른 개체에 대 한 참조를 포함 하는 경우 대신 원본 개체에 대 한 참조만 복사합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, a deep copy of &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt; copies over the &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; value.</source>
          <target state="translated">전체 복사본 특히 &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;를 통해 복사는 &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;값.&lt;/xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; &lt;/xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.CompositeDuplexBindingElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a deep clone of the current binding element.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.CompositeDuplexBindingElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 바인딩 요소의 전체 복제본입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</source>
          <target state="translated">바인딩에 복합 이중이 있음을 나타내는 바인딩에 대 한 사용자 지정 정책 어설션을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;.&lt;/xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that you can use to modify the exporting process.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내보내기 프로세스를 수정 하는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that you can use to insert your custom policy assertion.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 사용자 지정 정책 어설션을 삽입에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>