<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e440e17acc6c8baf80e975b6008120bcb7e096d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.DictionaryBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">399d5c73f9ef916ec2afb53528fe05ec306e6b3c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5534571df7902af8a55265f846392218eacc26f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for a strongly typed collection of key/value pairs.</source>
          <target state="translated">제공 된 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 키/값 쌍의 강력한 형식의 컬렉션에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">C# 언어 (각각에 대해 Visual basic에서)의 컬렉션에 있는 요소 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since each element of the DictionaryBase is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">DictionaryBase의 각 요소는 키/값 쌍에 요소 유형 키의 형식 또는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">대신, 요소 형식이 &lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> 문에 열거자를 컬렉션에 쓰는 것부터 읽기 가능 주변 래퍼입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the &lt;xref:System.Type.Equals%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 키를 상속할 수의 동작을 변경할의 절대 변경할 수 비교를 사용 하 여 하기 때문에 &lt;xref:System.Type.Equals%2A&gt;메서드.&lt;/xref:System.Type.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Clears the contents of the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">내용을 지웁니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.DictionaryBase.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;가&amp;0;으로 설정 하 고 컬렉션의 요소에 다른 개체에 대 한 참조도 해제 됩니다.&lt;/xref:System.Collections.DictionaryBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.&lt;/xref:System.Collections.DictionaryBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; at the specified index.</source>
          <target state="translated">복사본의 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소를 사용 하는&amp;1; 차원 &lt;xref:System.Array&gt;지정된 된 인덱스에.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.DictionaryBase&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;열거자 &lt;xref:System.Collections.DictionaryBase&gt;.&lt;/xref:System.Collections.DictionaryBase&gt; 을 반복 하는 같은 순서로&lt;/xref:System.Array&gt; 요소가 복사 되</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.&lt;/xref:System.Collections.DictionaryBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;의 대상인은 &lt;xref:System.Collections.DictionaryEntry&gt;에서 복사 된 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 가능한 공간 보다 큰 <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 수는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the list of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 목록을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환한 인스턴스 아니라 사전 속성에서 반환 되는 인스턴스에서 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; representing the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance itself.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;나타내는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 자체.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;반복 하는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">이 위치에서 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;에 대 한는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the list of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 목록을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the InnerHashtable property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성 InnerHashtable 속성에서 반환 되는 인스턴스에는 나타나지 않습니다.&lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance itself.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타내는 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스 자체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before clearing the contents of the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">내용을 지우는 하기 전에 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</source>
          <target state="translated">이 메서드의 기본 구현 컬렉션을 지울 전에 동작을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after clearing the contents of the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">내용을 지운 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</source>
          <target state="translated">이 메서드의 기본 구현 컬렉션의 선택을 취소 한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the element with the specified key and value in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정 된 키와 값의 요소를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method returns <ph id="ph1">`currentValue`</ph>.</source>
          <target state="translated">이 메서드의 기본 구현에서는 반환 <ph id="ph1">`currentValue`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</source>
          <target state="translated">것은 지정된 된 요소를 검색할 때 추가 동작을 수행 하려면 파생된 클래스에서 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The key of the element to get.</source>
          <target state="translated">가져올 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The current value of the element associated with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">요소와 연관 된 현재 값 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; containing the element with the specified key and value.</source>
          <target state="translated">&lt;xref:System.Object&gt;지정 된 키와 값을 가진 요소가 포함 된.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before inserting a new element into the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 요소를 삽입 하기 전에 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 삽입 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The key of the element to insert.</source>
          <target state="translated">키를 삽입할 요소입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The value of the element to insert.</source>
          <target state="translated">삽입할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after inserting a new element into the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 요소를 삽입 한 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 삽입 한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The key of the element to insert.</source>
          <target state="translated">키를 삽입할 요소입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The value of the element to insert.</source>
          <target state="translated">삽입할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before removing an element from the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">요소를 제거 하기 전에 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 제거 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The value of the element to remove.</source>
          <target state="translated">제거할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after removing an element from the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">요소를 제거한 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 제거한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The value of the element to remove.</source>
          <target state="translated">제거할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before setting a value in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">값을 설정 하기 전에 사용자 지정 프로세스를 추가로 수행는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 설정 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The key of the element to locate.</source>
          <target state="translated">찾을 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The old value of the element associated with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">요소와 연결 된 이전 값 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The new value of the element associated with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">와 연결 된 요소의 새 값 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after setting a value in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">값을 설정한 후 사용자 지정 프로세스를 추가로 수행는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</source>
          <target state="translated">이 메서드의 기본 구현 지정한 요소를 설정한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The key of the element to locate.</source>
          <target state="translated">찾을 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The old value of the element associated with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">요소와 연결 된 이전 값 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The new value of the element associated with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">와 연결 된 요소의 새 값 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes when validating the element with the specified key and value.</source>
          <target state="translated">지정 된 키와 값을 가진 요소 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소의 유효성을 검사할 때 특별 한 조치를 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;속성.&lt;/xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; &lt;/xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The key of the element to validate.</source>
          <target state="translated">유효성을 검사할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value of the element to validate.</source>
          <target state="translated">유효성을 검사할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to a <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 동기화 되었는지 (스레드로부터 안전함).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Collections.DictionaryBase&gt; object is not synchronized.</source>
          <target state="translated">A &lt;xref:System.Collections.DictionaryBase&gt;개체 동기화 되지 않았습니다.&lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide a synchronized version of the &lt;xref:System.Collections.DictionaryBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.DictionaryBase&gt;클래스 사용의 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 액세스는 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 동기화 되었는지 (스레드로부터 안전함), 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to a <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.DictionaryBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.DictionaryBase&gt;클래스 사용의 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property of the &lt;xref:System.Collections.DictionaryBase&gt; object, not directly on the &lt;xref:System.Collections.DictionaryBase&gt; object.</source>
          <target state="translated">동기화 하는 코드에서 작업을 수행 해야는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;의 속성은 &lt;xref:System.Collections.DictionaryBase&gt;개체에 대해 직접는 &lt;xref:System.Collections.DictionaryBase&gt;개체.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.DictionaryBase&gt; object.</source>
          <target state="translated">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 &lt;xref:System.Collections.DictionaryBase&gt;개체입니다.&lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정한 키와 값을 가진 요소에 추가 된 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">개체의 상태와 해시 코드 값 간에 상관 관계가 있는 일반적으로 쓰일 수 없습니다 키로 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.String&gt; objects are better than &lt;xref:System.Text.StringBuilder&gt; objects for use as keys.</source>
          <target state="translated">예를 들어 &lt;xref:System.String&gt;개체는 보다 나은 &lt;xref:System.Text.StringBuilder&gt;키로 사용할 개체입니다.&lt;/xref:System.Text.StringBuilder&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.DictionaryBase&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">사용할 수도 있습니다는 &lt;xref:System.Collections.IDictionary.Item%2A&gt;에 속성 키의 값을 설정 하 여 새 요소를 추가할 수 없습니다.는 &lt;xref:System.Collections.DictionaryBase&gt;; 예를 들어 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.IDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.DictionaryBase&gt;, setting the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">그러나 지정된 된 키에 이미 있는 경우는 &lt;xref:System.Collections.DictionaryBase&gt;설정는 &lt;xref:System.Collections.IDictionary.Item%2A&gt;속성 이전 값을 덮어씁니다.&lt;/xref:System.Collections.IDictionary.Item%2A&gt; &lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the &lt;xref:System.Collections.IDictionary.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">반면,는 &lt;xref:System.Collections.IDictionary.Add%2A&gt;메서드는 기존 요소를 수정 하지 않습니다.&lt;/xref:System.Collections.IDictionary.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">추가할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">추가할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An element with the same key already exists in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">같은 키를 가진 요소가 이미는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특정 키가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`key`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;에 대 한 메서드 <ph id="ph1">`key`</ph> 확인 하려면 여부 <ph id="ph2">`item`</ph> 존재 합니다.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`key`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;의 메서드는 <ph id="ph1">`key`</ph> 컬렉션의 개체에 대 한 매개 변수.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">찾을 수 있는 키의 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 지정 된 요소가 포함 되어 고, 그렇지 않으면 키 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">컬렉션 크기가 고정된 된 컬렉션 만들어지기는 하지만 기존 요소를 수정할 수는 다음에 추가 하거나 제거할 요소의 수 없습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">크기가 고정된 된 컬렉션은 지정 된 추가 및 요소를 제거 하지 못하도록 하는 래퍼 컬렉션 따라서를 추가 하거나 제거할 요소를 포함 하 여 내부 컬렉션을 변경 하는 경우 고정 크기 컬렉션에 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 고정 되어 고, 그렇지 않으면 크기가 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체 읽기 전용, 되지 않았으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">지정된 된 키와 연결 된 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: <ph id="ph1">`myCollection[key]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.DictionaryBase&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">사용할 수도 있습니다는 &lt;xref:System.Collections.IDictionary.Item%2A&gt;에 속성 키의 값을 설정 하 여 새 요소를 추가할 수 없습니다.는 &lt;xref:System.Collections.DictionaryBase&gt;; 예를 들어 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.IDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.DictionaryBase&gt;, setting the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">그러나 지정된 된 키에 이미 있는 경우는 &lt;xref:System.Collections.DictionaryBase&gt;설정는 &lt;xref:System.Collections.IDictionary.Item%2A&gt;속성 이전 값을 덮어씁니다.&lt;/xref:System.Collections.IDictionary.Item%2A&gt; &lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the &lt;xref:System.Collections.IDictionary.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">반면,는 &lt;xref:System.Collections.IDictionary.Add%2A&gt;메서드는 기존 요소를 수정 하지 않습니다.&lt;/xref:System.Collections.IDictionary.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The key whose value to get or set.</source>
          <target state="translated">키 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정된 된 키와 연결 된 값입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, attempting to get it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.</source>
          <target state="translated">지정된 된 키가 없으면 get 반환 하려고 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>가 지정된 된 키를 사용 하 여 새 요소를 만들어 설정 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">속성을 설정 및 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는-속성이 설정 되어, <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept> 컬렉션에 존재 하지 않는 및 <bpt id="p2">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;키를 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the keys in the &lt;xref:System.Collections.ICollection&gt; object is unspecified, but is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; object returned by the &lt;xref:System.Collections.IDictionary.Values%2A&gt; property.</source>
          <target state="translated">에 있는 키의 순서는 &lt;xref:System.Collections.ICollection&gt;개체가 지정 되어 있지만에 연결 된 값과 순서가 동일는 &lt;xref:System.Collections.ICollection&gt;에서 반환 된 개체는 &lt;xref:System.Collections.IDictionary.Values%2A&gt;속성.&lt;/xref:System.Collections.IDictionary.Values%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.DictionaryBase&gt; object.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;정적 복사 하지 않습니다; 대신는 &lt;xref:System.Collections.ICollection&gt;원래에서 키를 다시 참조할 &lt;xref:System.Collections.DictionaryBase&gt;개체입니다.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.DictionaryBase&gt; continue to be reflected in the returned &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.DictionaryBase&gt;반환 된 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영 되도록 하려면 계속&lt;/xref:System.Collections.DictionaryBase&gt; 변경</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;키를 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 키를 가진 요소를 제거는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.DictionaryBase&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.DictionaryBase&gt; remains unchanged.</source>
          <target state="translated">경우는 &lt;xref:System.Collections.DictionaryBase&gt;지정된 키를 가진 요소가 포함 되지 않습니다는 &lt;xref:System.Collections.DictionaryBase&gt;변경 되지 않습니다.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.DictionaryBase&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
          <target state="translated">예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;값을 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the &lt;xref:System.Collections.ICollection&gt; object is unspecified, but is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; object returned by the &lt;xref:System.Collections.IDictionary.Keys%2A&gt; property.</source>
          <target state="translated">에 있는 값의 순서는 &lt;xref:System.Collections.ICollection&gt;개체가 지정 되어 있지만에 연결 된 키와 순서가 동일는 &lt;xref:System.Collections.ICollection&gt;에서 반환 된 개체는 &lt;xref:System.Collections.IDictionary.Keys%2A&gt;속성.&lt;/xref:System.Collections.IDictionary.Keys%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.DictionaryBase&gt; object.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;정적 복사 하지 않습니다; 대신는 &lt;xref:System.Collections.ICollection&gt;원래에서 값을 다시 참조 &lt;xref:System.Collections.DictionaryBase&gt;개체입니다.&lt;/xref:System.Collections.DictionaryBase&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.DictionaryBase&gt; continue to be reflected in the returned &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.DictionaryBase&gt;반환 된 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영 되도록 하려면 계속&lt;/xref:System.Collections.DictionaryBase&gt; 변경</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;값을 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IEnumerator&gt;반복 하는 <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">이 위치에서, 호출 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>호출, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; 또는&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 을 다음에 호출할 컬렉션 변경 될 경우</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">사이 컬렉션이 수정 되는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;및 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.DictionaryBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>