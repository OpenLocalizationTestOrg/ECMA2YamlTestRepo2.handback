<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c87c52d225e2d4c73dcae7cd16c89247314103fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.IDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5744f01926bb645d013db3489f4f9b11393e2e6f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">428812566c77c872da46336cf574756971109e19</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update a data source.</source>
          <target state="translated">일련의 메서드와 채우고 업데이트 하는 데 사용 되는 매핑 작업 관련 속성을 나타내고 개체가 DataAdapter를 구현할 수 있도록는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances are for data sources that are (or resemble) relational databases with textual commands (like <ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph>), while IDataAdapter instances could can use any type of data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터 소스는 (또는 유사한) 텍스트 명령 사용 하 여 관계형 데이터베이스에는 인스턴스는 (같은 <ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph>), IDataAdapter 인스턴스에서 모든 유형의 데이터 소스를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDataAdapter interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">IDataAdapter 인터페이스 데이터 원본과 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 간의 브리지를 나타내는 DataAdapter 클래스를 구현 하려면 상속 하는 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about DataAdapter classes, see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">DataAdapter 클래스에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DataAdapter에서 DataSet 채우기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application does not create an instance of the IDataAdapter interface directly, but implements an instance of a class that inherits IDataAdapter.</source>
          <target state="translated">응용 프로그램을 직접 IDataAdapter 인터페이스의 인스턴스를 만들지 않습니다 되지만 IDataAdapter 상속 하는 클래스의 인스턴스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit IDataAdapter must implement the inherited members, and they typically define additional members to add provider-specific functionality.</source>
          <target state="translated">IDataAdapter 상속 된 클래스는 상속 된 멤버를 구현 해야 하 고 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the IDataAdapter interface defines a &lt;xref:System.Data.IDataAdapter.Fill%2A&gt; method that takes a &lt;xref:System.Data.DataSet&gt; as a parameter.</source>
          <target state="translated">예를 들어 IDataAdapter 인터페이스 정의 &lt;xref:System.Data.IDataAdapter.Fill%2A&gt;를 받는 메서드에 &lt;xref:System.Data.DataSet&gt;매개 변수로.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.IDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn, the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; class inherits the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method and also defines two additional overloads of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method that take an ADO Recordset object as a parameter.</source>
          <target state="translated">차례로 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;클래스 상속는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 정의의 두 추가 오버 로드는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;ADO 레코드 집합 개체를 매개 변수로 메서드.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Adds or updates rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> name, and creates a <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> named "Table".</source>
          <target state="translated">행을 업데이트 하거나 추가 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이름을 지정 하 고 만듭니다는 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> "Table" 이라는 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fill retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 채우기 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before Fill is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">채우기가 호출 되기 전에 연결이 닫혀 있는 경우 데이터를 검색에 대 한 열은 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before Fill is called, it remains open.</source>
          <target state="translated">채우기가 호출 되기 전에 연결이 열려 있으면 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fill operation then adds the rows to destination &lt;xref:System.Data.DataTable&gt; objects in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; objects if they do not already exist.</source>
          <target state="translated">그런 다음이 채우기 작업 대상에 행을 추가 &lt;xref:System.Data.DataTable&gt;개체에 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating &lt;xref:System.Data.DataTable&gt; objects, the Fill operation usually creates only column name metadata.</source>
          <target state="translated">만들 때 &lt;xref:System.Data.DataTable&gt;개체 채우기 작업은 일반적으로 열만 이름 메타 데이터를 만듭니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 연속 열에 대 한 이름을 생성 합니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are put in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">배치 되는 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt;, each result set is put in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;, 각 결과 집합은 별도 테이블에 저장 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">응용 프로그램은 열 및 테이블 이름을 사용 하 여 이러한 명명 패턴과 충돌이 발생 하지 않도록 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement that is used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">때 채우는 데 사용 되는 SELECT 문에 &lt;xref:System.Data.DataSet&gt;여러 결과 반환 일괄 SQL 문과 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 건너뛰고 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 추가 되지&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the Fill method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">동일한 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 여러 번 Fill 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of Fill and &lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt; for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 채우기의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리 하는 경우 및 &lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;.NET Framework 데이터에 대 한 공급자만 첫 번째 결과 대 한 스키마 정보를 검색 합니다.&lt;/xref:System.Data.IDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> named "Table" to the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and configures the schema to match that in the data source based on the specified <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 "Table" 이라는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 데이터 원본의 기반으로 지정 하는 스키마와 일치 하도록 구성 하 고 <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FillSchema method retrieves the schema from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">FillSchema 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;유효 해야 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before FillSchema is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">FillSchema가 호출 되기 전에 연결이 닫혀 있는 경우 데이터를 검색에 대 한 열은 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before FillSchema is called, it remains open.</source>
          <target state="translated">FillSchema가 호출 되기 전에 연결이 열려 있으면 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>A FillSchema operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">FillSchema 작업 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt; and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;하 고 다음 구성 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       FillSchema also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;FillSchema 또한 구성 된 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 사용 하&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 여 하나 이상의 기본 키 열이 반환 하는 경우&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 않지만 고유 열, 경우에 모든 고유 열이 nullable이 아닌 경우 고유한 열 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 하지만 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성이 설정 되지 않았습니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 기본 키 열은 사용 기본 키 열과 고유 열이 모두 반환 하는 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the previous rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;이전 규칙 하지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to specify query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 연속 열에 대 한 이름을 생성 합니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are put in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">배치 되는 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt;, each result set is put in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;, 각 결과 집합은 별도 테이블에 저장 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">응용 프로그램은 열 및 테이블 이름을 사용 하 여 이러한 명명 패턴과 충돌이 발생 하지 않도록 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>FillSchema returns no rows.</source>
          <target state="translated">FillSchema 행을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.IDataAdapter.Fill%2A&gt; method to add rows to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 행을 추가 하는 메서드&lt;/xref:System.Data.IDataAdapter.Fill%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be filled with the schema from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 데이터 원본에서 스키마로 채워집니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contain schema information returned from the data source.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마 정보를 포함 하는 개체 데이터 소스에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT 문을 실행할 때 사용자가 설정 된 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contains the parameters set by the user.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자가 매개 변수를 포함 하는 개체를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</source>
          <target state="translated">매핑되지 않은 원본 테이블 또는 열 전달 되는지를 소스 이름과 함께 필터링 하기 위해 또는 오류가 발생 하도록 지정 하거나 나타냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt; property provides the master mapping between the returned records and the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;속성은 반환 되는 레코드 및 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 사이 마스터 매핑을 제공합니다&lt;/xref:System.Data.IDataAdapter.TableMappings%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Passthrough" name="Passthrough" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Passthrough" name="Passthrough" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">설정 된 값 중 하나이 고 <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</source>
          <target state="translated">누락 된 소스 테이블, 열 및 관계를 무시 되는 데이터 집합 스키마에 추가 또는 오류를 발생을 지정 하거나 나타냅니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">설정 된 값 중 하나이 고 <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Indicates how a source table is mapped to a dataset table.</source>
          <target state="translated">원본 테이블 데이터 집합 테이블에 매핑되는 방식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDataAdapter&gt; uses only the mappings for the source table named "Table".</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter&gt;"Table" 이라는 원본 테이블에 대 한 매핑을 사용 합니다.&lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</source>
          <target state="translated">모든 SELECT, INSERT, DELETE 및 UPDATE 문의 데이터를 반환 연결 해야를 사용 하 여 일관 된 열 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</source>
          <target state="translated">레코드에 반환 된 열 이름은 고유 해야, 그렇지 않은 경우 열 이름이 중복 된 이전 데이터를 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>On &lt;xref:System.Data.IDataAdapter.Update%2A&gt;, only the table mapped to the source table named "Table" will have its changes reconciled.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;"Table" 이라는 원본 테이블에 매핑되는 테이블이 포함할 조정 하는 변경 내용을 필요 합니다.&lt;/xref:System.Data.IDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A collection that provides the master mapping between the returned records and the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 되는 레코드 사이 마스터 매핑을 제공 하는 컬렉션 및 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default value is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> named "Table".</source>
          <target state="translated">삽입, 업데이트 또는 지정 된 행을 삭제할 각에 대해 INSERT, UPDATE 또는 DELETE 문을 각각 호출 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> "Table" 이라는 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the Update method, the &lt;xref:System.Data.IDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램에서 Update 메서드를 호출 하는 경우는 &lt;xref:System.Data.IDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 반복적으로 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대 한 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Update might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">업데이트는 INSERT 문과 다른 DELETE 문이 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 의 행 순서 때문에 다음을 DELETE 문을 실행 예를 들어</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be aware that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 수 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;메서드 (예를 들어 업데이트 하기 전에 삽입) 명령문의 시퀀스를 제어 해야 하는 경우.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;메서드 예외를 생성 합니다.&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않는 추가적인 모든 SQL 문은 CommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; then updates the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;의 값을 사용 하 여 행을 업데이트 한 다음는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using Update, the order of execution is as follows:      1.</source>
          <target state="translated">업데이트를 사용할 경우의 실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is put in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 저장</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are put in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치 되 출력 매개 변수가 있는 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.IDataAdapter&gt; usually has a parameter collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.IDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.IDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.IDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.IDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration Value|Action Taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 일반적으로 입력된 매개 변수는 오류로 인해 발생에 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, or <ph id="ph5">`Proposed`</ph> version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 사용 여부를 결정은 <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, 또는 <ph id="ph5">`Proposed`</ph> 열 값의 버전입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">이 기능은 낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면 자주 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 를 호출 하기 전에&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>