<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbafba2088bb6f750d763e65b05dbce59ed8e2a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca02e51d20b51458e24b18b215f8d41708b0a30b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d33daa43180d1d5ec7b9a27733f51bea3d4dd781</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a database connection that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update a SQL Server database.</source>
          <target state="translated">채우는 데 사용 되는 데이터베이스 연결 및 데이터 명령 집합을 나타냅니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SQL Server 데이터베이스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlDataAdapter, serves as a bridge between a &lt;xref:System.Data.DataSet&gt; and SQL Server for retrieving and saving data.</source>
          <target state="translated">SqlDataAdapter를 사이의 브리지 역할을 &lt;xref:System.Data.DataSet&gt;및 SQL Server를 검색 하 고 데이터를 저장 합니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlDataAdapter provides this bridge by mapping &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;, which changes the data in the &lt;xref:System.Data.DataSet&gt; to match the data in the data source, and &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, which changes the data in the data source to match the data in the &lt;xref:System.Data.DataSet&gt;, using the appropriate Transact-SQL statements against the data source.</source>
          <target state="translated">SqlDataAdapter 매핑하는 방법으로이 연결을 제공 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;의 데이터 변경 내용을 &lt;xref:System.Data.DataSet&gt;데이터 원본의 데이터와 일치 하도록 및 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;의 데이터와 일치 하도록 데이터 원본에서 데이터를 변경는 &lt;xref:System.Data.DataSet&gt;, 데이터 원본에 대해 적절 한 TRANSACT-SQL 문을 사용 하 여.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The update is performed on a by-row basis.</source>
          <target state="translated">이 업데이트는 행 단위로에서 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every inserted, modified, and deleted row, the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method determines the type of change that has been performed on it (<ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, or <ph id="ph3">`Delete`</ph>).</source>
          <target state="translated">모든 삽입, 수정 및 삭제 된 행에 대해는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드에 수행 된 변경의 유형을 결정 (<ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, 또는 <ph id="ph3">`Delete`</ph>).&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the type of change, the <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, or <ph id="ph3">`Delete`</ph> command template executes to propagate the modified row to the data source.</source>
          <target state="translated">변경 유형에 따라는 <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, 또는 <ph id="ph3">`Delete`</ph> 명령 템플릿이 실행 데이터 원본에 수정된 된 행을 전파 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SqlDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it creates the necessary tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">SqlDataAdapter를 채웁니다는 &lt;xref:System.Data.DataSet&gt;, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;xref:System.Data.MissingSchemaAction&gt;.&lt;/xref:System.Data.MissingSchemaAction&gt; 속성&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also have the SqlDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using <ph id="ph1">`FillSchema`</ph>.</source>
          <target state="translated">SqlDataAdapter의 스키마를 만들도록 할 수도 있습니다는 &lt;xref:System.Data.DataSet&gt;를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <ph id="ph1">`FillSchema`</ph>.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기존 제약 조건 데이터 집합에 추가<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>SqlDataAdapter is used in conjunction with &lt;xref:System.Data.SqlClient.SqlConnection&gt; and &lt;xref:System.Data.SqlClient.SqlCommand&gt; to increase performance when connecting to a SQL Server database.</source>
          <target state="translated">SqlDataAdapter와 함께 사용 되어 &lt;xref:System.Data.SqlClient.SqlConnection&gt;및 &lt;xref:System.Data.SqlClient.SqlCommand&gt;SQL Server 데이터베이스에 연결할 때 성능을 향상 시키려면.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlConnection&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you are using SQL Server stored procedures to edit or delete data using a <ph id="ph2">`DataAdapter`</ph>, make sure that you do not use SET NOCOUNT ON in the stored procedure definition.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 편집 하거나 사용 하 여 데이터를 삭제 하려면 SQL Server 저장 프로시저를 사용 하는 경우는 <ph id="ph2">`DataAdapter`</ph>, 저장된 프로시저 정의에 SET NOCOUNT ON을 사용 하지 않는 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes the rows affected count returned to be zero, which the <ph id="ph1">`DataAdapter`</ph> interprets as a concurrency conflict.</source>
          <target state="translated">이렇게 하면 영향을 받는 행 수가&amp;0;을 반환 하는 <ph id="ph1">`DataAdapter`</ph> 동시성 충돌로 해석 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this event, a &lt;xref:System.Data.DBConcurrencyException&gt; will be thrown.</source>
          <target state="translated">이 경우에는 &lt;xref:System.Data.DBConcurrencyException&gt;throw 됩니다.&lt;/xref:System.Data.DBConcurrencyException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlDataAdapter also includes the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; properties to facilitate the loading and updating of data.</source>
          <target state="translated">SqlDataAdapter도 포함 되어는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, 및 &lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;속성을 쉽게 로드 하 고 데이터의 업데이트.&lt;/xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of SqlDataAdapter is created, the read/write properties are set to initial values.</source>
          <target state="translated">SqlDataAdapter의 인스턴스를 만들 때 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the SqlDataAdapter constructor.</source>
          <target state="translated">이러한 값의 목록이 SqlDataAdapter 생성자를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt; are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;, 및 &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;는 매개 변수 메커니즘을 통해 자동으로 수정 된 모든 행의 개별 값으로 채워진 제네릭 템플릿입니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, a parameter should be added to the <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, or <ph id="ph3">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에 추가 되어야 하는 매개 변수는 <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, 또는 <ph id="ph3">`DeleteCommand`</ph>.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbParameter.SourceColumn%2A&gt; property of the &lt;xref:System.Data.Common.DbParameter&gt; object should be set to the name of the column.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbParameter.SourceColumn%2A&gt;의 속성은 &lt;xref:System.Data.Common.DbParameter&gt;개체의 열 이름으로 설정 해야 합니다.&lt;/xref:System.Data.Common.DbParameter&gt; &lt;/xref:System.Data.Common.DbParameter.SourceColumn%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 설정은 매개 변수의 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will occur if the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method is called and the table contains a user-defined type that is not available on the client computer.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우 발생 합니다는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드가 호출 되 고 테이블에는 클라이언트 컴퓨터에서 사용할 수 없는 사용자 정의 형식이 포함 되어 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Creating and Using User-Defined Types<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=139492)</ept> in SQL Server Books Online.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>만들기 및 사용자 형식<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=139492)</ept> SQL Server 온라인 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; property.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 로 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;속성.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; constructor sets the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;생성자는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성에 지정 된 값을는 <ph id="ph1">`selectCommand`</ph> 매개 변수.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; (or any of the other command properties) is assigned to a previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt;, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; is not cloned.</source>
          <target state="translated">때 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;(또는 다른 명령 속성 중 하나) 할당 되는 이전에 만든 &lt;xref:System.Data.SqlClient.SqlCommand&gt;, &lt;xref:System.Data.SqlClient.SqlCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; maintains a reference to the previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;이전에 만든에 대 한 참조를 유지 관리 &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a Transact-SQL SELECT statement or stored procedure and is set as the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> TRANSACT-SQL SELECT 문 또는 저장된 프로시저를이 고로 설정 하는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; and a <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스와 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;및 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; opens and closes a &lt;xref:System.Data.SqlClient.SqlConnection&gt; if it is not already open.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;열고 닫습니다는 &lt;xref:System.Data.SqlClient.SqlConnection&gt;열려 있지 않으면.&lt;/xref:System.Data.SqlClient.SqlConnection&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful in an application that must call the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method for two or more &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; objects.</source>
          <target state="translated">이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;둘 이상에 대 한 메서드 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;개체.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.SqlClient.SqlConnection&gt; is already open, you must explicitly call <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Dispose<ept id="p2">**</ept> to close it.</source>
          <target state="translated">경우는 &lt;xref:System.Data.SqlClient.SqlConnection&gt;가 이미 열려 명시적으로 호출 해야 <bpt id="p1">**</bpt>닫습니다<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>Dispose<ept id="p2">**</ept> 합니다. 닫으려면&lt;/xref:System.Data.SqlClient.SqlConnection&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is a Transact-SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.String&gt;TRANSACT-SQL SELECT 문 또는 저장된 프로시저에서 사용할 즉는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If your connection string does not use <bpt id="p1">&lt;xref uid="langword_csharp_Integrated Security = true" name="Integrated Security = true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you can use <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">연결 문자열을 사용 하지 않는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_Integrated Security = true" name="Integrated Security = true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>를 사용할 수 있습니다 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 것 보다 더 안전 하 게 사용자 ID와 암호를 전달 하려면 연결 문자열에 텍스트로 사용자 ID와 암호를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; and a connection string.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스와 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;및 연결 문자열.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; constructor uses the <ph id="ph1">`selectCommandText`</ph> parameter to set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">이 오버 로드는 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;생성자 사용 하 여는 <ph id="ph1">`selectCommandText`</ph> 매개 변수를 설정 된 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; will create and maintain the connection created with the <ph id="ph1">`selectConnectionString`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;만들고 사용 하 여 만든 연결을 유지 하는 <ph id="ph1">`selectConnectionString`</ph> 매개 변수.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is a Transact-SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.String&gt;TRANSACT-SQL SELECT 문 또는 저장된 프로시저에서 사용할 즉는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If your connection string does not use <bpt id="p1">&lt;xref uid="langword_csharp_Integrated Security = true" name="Integrated Security = true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you can use <ph id="ph1">&amp;lt;</ph>xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">연결 문자열을 사용 하지 않는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_Integrated Security = true" name="Integrated Security = true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>를 사용할 수 있습니다 <ph id="ph1">&amp;lt;</ph>xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A<ph id="ph2">&amp;gt;</ph> 및 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 것 보다 더 안전 하 게 사용자 ID와 암호를 전달 하려면 연결 문자열에 텍스트로 사용자 ID와 암호를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</source>
          <target state="translated">Transact SQL 문 또는 저장된 프로시저는 데이터 집합에서 레코드 삭제를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the DeleteCommand can be generated automatically if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;DeleteCommand의 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; 사용을&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When DeleteCommand is assigned to a previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt;, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; is not cloned.</source>
          <target state="translated">DeleteCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.SqlClient.SqlCommand&gt;, &lt;xref:System.Data.SqlClient.SqlCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 DeleteCommand &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, a parameter should be added to the <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, or <ph id="ph3">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에 추가 되어야 하는 매개 변수는 <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, 또는 <ph id="ph3">`DeleteCommand`</ph>.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to delete records in the database that correspond to deleted rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;삭제 된 행에 해당 하는 데이터베이스에서 레코드를 삭제 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</source>
          <target state="translated">Transact SQL 문 또는 데이터 원본에 새 레코드를 삽입 하는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the InsertCommand can be generated automatically if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;InsertCommand의 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; 사용을&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>When InsertCommand is assigned to a previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt;, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; is not cloned.</source>
          <target state="translated">InsertCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.SqlClient.SqlCommand&gt;, &lt;xref:System.Data.SqlClient.SqlCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertCommand maintains a reference to the previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 InsertCommand &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of this command returns rows, these rows can be added to the &lt;xref:System.Data.DataSet&gt; depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 &lt;xref:System.Data.DataSet&gt;어떻게 설정 하느냐에 따라는 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 의 속성은 &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, a parameter should be added to <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, or <ph id="ph3">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에 매개 변수를 추가 해야 <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, 또는 <ph id="ph3">`DeleteCommand`</ph>.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to insert records into the database that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;에 새 행에 해당 하는 데이터베이스에 레코드를 삽입 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; after a command is executed against the data source.</source>
          <target state="translated">중에 발생 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 원본에 대해 명령이 실행 된 후.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The attempt to update is made, so the event fires.</source>
          <target state="translated">이 이벤트가 발생 하므로 업데이트 시도가 이루어집니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">중에 발생 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 원본에 대해 명령을 실행 하기 전에.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The attempt to update is made, so the event fires.</source>
          <target state="translated">이 이벤트가 발생 하므로 업데이트 시도가 이루어집니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">Transact SQL 문 또는 데이터 원본에서 레코드를 선택 하는 데 사용 하는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt;, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; is not cloned.</source>
          <target state="translated">SelectCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.SqlClient.SqlCommand&gt;, &lt;xref:System.Data.SqlClient.SqlCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectCommand maintains a reference to the previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리 SelectCommand &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SelectCommand does not return any rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">에 테이블이 추가 된 SelectCommand 모든 행을 반환 하지 않는 경우는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않습니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt; to select records from the database for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt;에 배치 하기 위해 데이터베이스에서 레코드를 선택는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Fill*&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합의 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to select records from data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Data.IdbCommand&gt; that is used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to update records in the data source for modified rows in the data set.</source>
          <target state="translated">&lt;xref:System.Data.IdbCommand&gt;중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt; &lt;/xref:System.Data.IdbCommand&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.ICloneable.Clone*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.ICloneable.Clone*&gt;.&lt;/xref:System.ICloneable.Clone*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ICloneable&gt;인터페이스.&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본 인 새 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of rows that are processed in each round-trip to the server.</source>
          <target state="translated">각 왕복에서 서버에 처리 된 행의 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">가져옵니다 또는 일괄 처리 지원을 사용 하지 않도록 설정 하거나 사용 하는 값을 설정 하 고 일괄 처리에서 실행 될 수 있는 명령 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the UpdateBatchSize property to update a data source with changes from a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">UpdateBatchSize 속성을 사용 하 여 데이터 소스에 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 변경 내용으로 업데이트 하려면</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">서버에 왕복 횟수를 줄여 응용 프로그램 성능을 향상 시킬 수이 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">너무 큰 배치를 실행 하면 성능이 저하 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
          <target state="translated">따라서 응용 프로그램을 구현 하기 전에 최적의 배치 크기 설정을 테스트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown if the value is set to a number less than zero.</source>
          <target state="translated">&lt;xref:System.ArgumentOutOfRangeException&gt;값 수로 설정 된 경우 throw 되&amp;0; 보다 작은.&lt;/xref:System.ArgumentOutOfRangeException&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The number of rows to process per-batch.</source>
          <target state="translated">-일괄 처리할 행 수입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Value is</source>
          <target state="translated">값은</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">효과</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>There is no limit on the batch size..</source>
          <target state="translated">일괄 처리 크기에는 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Disables batch updating.</source>
          <target state="translated">일괄 처리 업데이트를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;gt;</ph>1</source>
          <target state="translated"><ph id="ph1">&amp;gt;</ph>1</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Changes are sent using batches of UpdateBatchSize operations at a time.</source>
          <target state="translated">UpdateBatchSize 작업의 일괄 처리를 사용 하 여 한 번에 변경 내용이 보내집니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>When setting this to a value other than 1, all the commands associated with the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have to have their <bpt id="p2">**</bpt>UpdatedRowSource<ept id="p2">**</ept> property set to <bpt id="p3">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">연결 된 모든 명령을이 값 1이 아닌 값을 설정 하는 경우는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있어야 해당 <bpt id="p2">**</bpt>UpdatedRowSource<ept id="p2">**</ept> 속성이로 설정 <bpt id="p3">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An exception is thrown otherwise.</source>
          <target state="translated">그렇지 않은 경우에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">Transact SQL 문 또는 데이터 원본에서 레코드를 업데이트 하는 데 사용 하는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the UpdateCommand can be generated automatically if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;UpdateCommand의 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; 사용을&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt;, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; is not cloned.</source>
          <target state="translated">UpdateCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.SqlClient.SqlCommand&gt;, &lt;xref:System.Data.SqlClient.SqlCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 UpdateCommand &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, the updated rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 반환 하는이 명령 실행 하는 경우 업데이트 된 행으로 병합 될 수 있습니다는 &lt;xref:System.Data.DataSet&gt;어떻게 설정 하느냐에 따라는 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 의 속성은 &lt;xref:System.Data.SqlClient.SqlCommand&gt;개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, a parameter should be added to <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, or <ph id="ph3">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에 매개 변수를 추가 해야 <ph id="ph1">`InsertCommand`</ph>, <ph id="ph2">`UpdateCommand`</ph>, 또는 <ph id="ph3">`DeleteCommand`</ph>.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값은 수동으로 설정 되지 않고 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to update records in the database that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;수정 된 행에 해당 하는 데이터베이스에서 레코드를 업데이트 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>