<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be22eef7e7fc15c75378bbe0d9564c658e72091c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.Drawing2D.CustomLineCap.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acbae7d5788ac2e30ddb53bee7a7f33b6c3711ee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8d0f0262fdc650eb2fc33e696a496eacdc7cad2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a custom user-defined line cap.</source>
          <target state="translated">사용자 정의 사용자 지정 선 단면을 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ &lt;xref:System.Drawing.Pen&gt; objects.</source>
          <target state="translated">선 끝 시작과 끝의 선 또는 GDI +으로 그린 곡선 아래에서 사용 됩니다 &lt;xref:System.Drawing.Pen&gt;개체입니다.&lt;/xref:System.Drawing.Pen&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</source>
          <target state="translated">GDI + 몇 가지 미리 정의 된 단면 스타일을 지원 하며 또한 자신의 단면 스타일을 정의 하는 사용자 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used to create custom cap styles.</source>
          <target state="translated">이 클래스는 사용자 지정 단면 스타일을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified outline and fill.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정한 개요 및 채우기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt; uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;작업에 대해 지정 된 채우기 모드에 관계 없이 "굴곡"의 채우기 모드를 사용 합니다.&lt;/xref:System.Drawing.Drawing2D.CustomLineCap&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph> 및 <ph id="ph2">`strokePath`</ph> 매개 변수를 동시에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">매개 변수 하나에 null 값을 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">두 매개 변수는 null 값이 전달 되 면 <ph id="ph1">`fillPath`</ph> 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">경우 <ph id="ph1">`strokePath`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> 음수 y를 차단 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the fill for the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the outline of the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified existing <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration with the specified outline and fill.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스에서 지정 된 기존 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 열거형 지정한 개요 및 채우기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt; uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;작업에 대해 지정 된 채우기 모드에 관계 없이 "굴곡"의 채우기 모드를 사용 합니다.&lt;/xref:System.Drawing.Drawing2D.CustomLineCap&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph> 및 <ph id="ph2">`strokePath`</ph> 매개 변수를 동시에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">매개 변수 하나에 null 값을 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">두 매개 변수는 null 값이 전달 되 면 <ph id="ph1">`fillPath`</ph> 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">경우 <ph id="ph1">`strokePath`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> 음수 y를 차단 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the fill for the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the outline of the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">사용자 지정 단면을 만드는 데 사용할 선 단면입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified existing <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration with the specified outline, fill, and inset.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 지정 된 기존 클래스 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 지정한 개요, 채우기 및 삽입으로 열거 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt; uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;작업에 대해 지정 된 채우기 모드에 관계 없이 "굴곡"의 채우기 모드를 사용 합니다.&lt;/xref:System.Drawing.Drawing2D.CustomLineCap&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph> 및 <ph id="ph2">`strokePath`</ph> 매개 변수를 동시에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">매개 변수 하나에 null 값을 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">두 매개 변수는 null 값이 전달 되 면 <ph id="ph1">`fillPath`</ph> 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">경우 <ph id="ph1">`strokePath`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> 음수 y를 차단 해야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the fill for the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that defines the outline of the custom cap.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">사용자 지정 단면을 만드는 데 사용할 선 단면입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The distance between the cap and the line.</source>
          <target state="translated">Cap과 줄 사이의 거리입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration on which this <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is based.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형이 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 기반 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration on which this <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is based.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형이 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 기반 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the distance between the cap and the line.</source>
          <target state="translated">Cap와 줄 사이의 거리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The distance between the beginning of the cap and the end of the line.</source>
          <target state="translated">Cap 시작과 줄의 끝 사이의 거리입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 항목의 정확한 복사본을 만듭니다 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates, cast as an object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체로 캐스팅,이 메서드를 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Releases all resources used by this <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 하는 모든 리소스를 해제 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.IDisposable.Dispose%2A&gt; allows the resources used by this &lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt; object to be reallocated for other purposes.</source>
          <target state="translated">호출 &lt;xref:System.IDisposable.Dispose%2A&gt;이 사용 하는 리소스 &lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;개체 다른 용도에 다시 할당 됩니다.&lt;/xref:System.Drawing.Drawing2D.CustomLineCap&gt; &lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Allows an <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to attempt to free resources and perform other cleanup operations before the <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is reclaimed by garbage collection.</source>
          <target state="translated">허용 된 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 리소스를 해제 하 고 다른 정리 작업 하기 전에 수행할 하려고 하는 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">대문자로 시작 하는 데 및이 사용자 지정 단면을 구성 하는 끝 줄을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 cap 내에서 한 줄의 시작 부분에 사용 되는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration used at the end of a line within this cap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 cap 내에서 한 줄의 끝에 사용 되는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Sets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">대문자로 시작 하는 데 사용 하 고이 사용자 지정 단면을 구성 하는 끝 줄을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 cap 내에서 한 줄의 시작 부분에 사용 되는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration used at the end of a line within this cap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 cap 내에서 한 줄의 끝에 사용 되는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that determines how lines that compose this <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object are joined.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 결정 하는 열거형 어떻게이 구성 하는 줄 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체를 조인 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies a &lt;xref:System.Drawing.Drawing2D.LineJoin&gt; enumeration that is used to join lines and curves that make up the stroked path of this &lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt; object.</source>
          <target state="translated">이 속성은 지정 된 &lt;xref:System.Drawing.Drawing2D.LineJoin&gt;조인 선 및 곡선이 그리면된 경로 구성 하는 데 사용 되는 열거형 &lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;개체입니다.&lt;/xref:System.Drawing.Drawing2D.CustomLineCap&gt; &lt;/xref:System.Drawing.Drawing2D.LineJoin&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration this <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object uses to join lines.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형이 <bpt id="p2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 조인 선으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount by which to scale this <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> Class object with respect to the width of the <bpt id="p2">&lt;xref href="System.Drawing.Pen"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 크기를 조정 하는 기준인 크기를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 개체의 너비와 관련 하 여는 <bpt id="p2">&lt;xref href="System.Drawing.Pen"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</source>
          <target state="translated">이 속성에는 사용자 지정 단면의 크기를 곱하는 펜 굵기의 배수 중에서 지정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</source>
          <target state="translated">예를 들어이 속성은 1, 사용자 지정 단면 너비는 10, 사용자 지정 단면 높이 5, 및 3의 너비가 펜으로 선이 그려집니다, 하는 경우 cap은 그려지는 30 단위 너비와 15 높이 각각.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</source>
          <target state="translated">이 속성을 3로 설정가 그려지는 90 단위 너비 및 높이 각각 45 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The amount by which to scale the cap.</source>
          <target state="translated">Cap의 크기를 조정 하는 기준인 양입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>