<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0e1caaa0dc89aa1f76ae5159557d531e52f15a0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">301814205d9fc19dc4de2e1005cc35b0e6d677e9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee10a7f1704f5daf93b1482b7d45c48a3d52dee9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">사용자가 정의한 간격 이벤트를 발생 시키는 타이머를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">이 타이머는 Windows Forms 응용 프로그램에서 사용 하기 위해 최적화 되 고 창에 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Timer is used to raise an event at user-defined intervals.</source>
          <target state="translated">타이머는 사용자가 정의한 간격 이벤트를 발생 시키는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">이 Windows 타이머는 처리를 수행 하 여 UI 스레드를 사용 하는 단일 스레드 환경을 위해 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">사용자 코드는 UI 메시지 펌프 하 고 항상 동일한 스레드에서 작동 했거나 다른 스레드로 호출을 마샬링하 필요 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this timer, use the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">이 타이머를 사용 하 여 사용 된 &lt;xref:System.Windows.Forms.Timer.Tick&gt;폴링 작업을 수행 하거나 지정 된 기간에 대 한 시작 화면을 표시 하려는 이벤트.&lt;/xref:System.Windows.Forms.Timer.Tick&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property is greater than zero, the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event is raised at intervals based on the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property setting.</source>
          <target state="translated">때마다는 &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;속성이로 설정 되어 <ph id="ph1">`true`</ph> 및 &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;속성이&amp;0; 보다 크면는 &lt;xref:System.Windows.Forms.Timer.Tick&gt;기반으로 하는 간격 이벤트는 &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;속성을 설정 합니다.&lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt; &lt;/xref:System.Windows.Forms.Timer.Tick&gt; &lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt; &lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">이 클래스는 간격을 설정 하 고 시작 하 고 타이머를 중지 하는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Windows Forms Timer 구성 요소는 단일 스레드 고 55 밀리초 정확도 개로 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require a multithreaded timer with greater accuracy, use the &lt;xref:System.Timers.Timer&gt; class in the &lt;xref:System.Timers&gt; namespace.</source>
          <target state="translated">더욱 정확해 다중 스레드 타이머를 필요한 경우 사용 된 &lt;xref:System.Timers.Timer&gt;클래스에 &lt;xref:System.Timers&gt;네임 스페이스.&lt;/xref:System.Timers&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new timer is created, it is disabled; that is, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">새 타이머를 만들면 비활성화 됩니다. 즉, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;로 설정 된 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the timer, call the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method or set &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">타이머를 사용 하도록 설정 하려면 호출는 &lt;xref:System.Windows.Forms.Timer.Start%2A&gt;메서드나 집합 &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;를 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt; &lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">타이머를 사용 하지 않도록 설정 하는 경우 사용 되는 타이머의 범위를 벗어납니다 가비지 수집이 발생할 때 사용 되는 타이머 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">범위에 속하지 않은 경우에 타이머가 활성화 되는지, 하는 경우 가비지 수집의 대상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class together with the specified container.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 컨테이너와 함께 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.Timer&gt; constructor enables you to associate a &lt;xref:System.Windows.Forms.Timer&gt; with any &lt;xref:System.ComponentModel.Container&gt; object.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer&gt;생성자를 사용 하면 연결할 수는 &lt;xref:System.Windows.Forms.Timer&gt;함께 &lt;xref:System.ComponentModel.Container&gt;개체입니다.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>By associating the &lt;xref:System.Windows.Forms.Timer&gt; like this, you hand over control of the lifetime of the &lt;xref:System.Windows.Forms.Timer&gt; to the &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer&gt; &lt;xref:System.Windows.Forms.Timer&gt; &lt;xref:System.ComponentModel.Container&gt;.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.Windows.Forms.Timer&gt; 수명 제어 전달이&lt;/xref:System.Windows.Forms.Timer&gt; 연결 하 여</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">응용 프로그램에서 다양 한 구성 요소를 사용 하 고 동시에 모두 삭제 하려고 할 경우에 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you associate a &lt;xref:System.Windows.Forms.ToolTip&gt;, an &lt;xref:System.Windows.Forms.ImageList&gt;, and a &lt;xref:System.Windows.Forms.Timer&gt; with a &lt;xref:System.ComponentModel.Container&gt;, calling &lt;xref:System.ComponentModel.Container.Dispose%2A&gt; on the &lt;xref:System.ComponentModel.Container&gt; will force disposal of all of these components as well.</source>
          <target state="translated">예를 들어, 연결 하는 경우는 &lt;xref:System.Windows.Forms.ToolTip&gt;, &lt;xref:System.Windows.Forms.ImageList&gt;, 및 &lt;xref:System.Windows.Forms.Timer&gt;와 &lt;xref:System.ComponentModel.Container&gt;호출, &lt;xref:System.ComponentModel.Container.Dispose%2A&gt;에 &lt;xref:System.ComponentModel.Container&gt;이러한 구성 요소를 모두 삭제 새로 고쳐집니다.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Container.Dispose%2A&gt; &lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.ImageList&gt; &lt;/xref:System.Windows.Forms.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new timer is created, it is disabled; that is, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">새 타이머를 만들면 비활성화 됩니다. 즉, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;로 설정 된 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the timer, call the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method or set &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">타이머를 사용 하도록 설정 하려면 호출는 &lt;xref:System.Windows.Forms.Timer.Start%2A&gt;메서드나 집합 &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;를 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt; &lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">이 인스턴스는 해당 컨테이너 가비지 수집을 해제할 때까지 존재 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the container for the timer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 타이머에 대 한 컨테이너를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">타이머에서 사용 되는 메모리 리소스를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the timer.</source>
          <target state="translated">타이머를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the timer in an unusable state.</source>
          <target state="translated">Dispose 메서드는 사용할 수 없는 상태로 타이머를 유지합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you call Dispose, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Dispose를 호출한 후에 가비지 수집에 의해 차지 했던 메모리를 회수 될 수 있도록 타이머에 대 한 모든 참조를 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the timer.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 타이머에 대 한 마지막 참조를 해제 하기 전에 Dispose 호출 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">그렇지 않은 경우 가비지 수집 타이머 개체의 소멸자를 호출할 때까지 타이머에서 사용 중인 리소스가 해제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 및 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release only the unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되지 않는 리소스만 해제 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">타이머가 실행 중인지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">값은 가비지 수집의 대상이 타이머 하지는 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method is the same as setting Enabled to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">호출 된 &lt;xref:System.Windows.Forms.Timer.Start%2A&gt;메서드 사용을 설정 하는 것과 같습니다 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, calling the &lt;xref:System.Windows.Forms.Timer.Stop%2A&gt; method is the same as setting Enabled to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">마찬가지로, 호출 된 &lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;메서드 사용을 설정 하는 것과 같습니다 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the timer is currently enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>타이머 현재 사용 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the time, in milliseconds, before the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised relative to the last occurrence of the <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">전에 시간을 밀리초 단위로 설정 하거나 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트는 마지막으로 나타나는 항목을 기준으로 <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">간격 (초)을 가져오려면이 수를 1000으로 나눕니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; specifying the number of milliseconds before the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised relative to the last occurrence of the <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">&lt;xref:System.Int32&gt;하기 전의 밀리초 수를 지정 하는 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 마지막으로 나타나는 항목을 기준으로 이벤트는 발생 된 <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value cannot be less than one.</source>
          <target state="translated">값&amp;1; 보다 작을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called for each timer tick.</source>
          <target state="translated">이 메서드는 각 타이머 틱에 대해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>It calls any methods that are added through &lt;xref:System.Windows.Forms.Timer.Tick&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer.Tick&gt;.&lt;/xref:System.Windows.Forms.Timer.Tick&gt; 를 통해 추가 된 모든 메서드 호출</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are inheriting from &lt;xref:System.Windows.Forms.Timer&gt;, you can override this method.</source>
          <target state="translated">상속 하는 경우 &lt;xref:System.Windows.Forms.Timer&gt;,이 메서드를 재정의할 수 있습니다.&lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is always &lt;xref:System.EventArgs&gt;.</source>
          <target state="translated">이 값은 항상 &lt;xref:System.EventArgs&gt;.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Starts the timer.</source>
          <target state="translated">타이머를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also start the timer by setting the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">설정 하 여 타이머를 시작할 수도 있습니다는 &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;속성을 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Stops the timer.</source>
          <target state="translated">타이머를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also stop the timer by setting the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">설정 하 여 타이머를 중지할 수도 있습니다는 &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Forms.Timer&gt; object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A &lt;xref:System.Windows.Forms.Timer&gt;개체를 활성화 하 고 동일한 응용 프로그램 세션 내에서 여러 번 사용 하지 않도록 설정 수 있습니다.&lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; after you have disabled a &lt;xref:System.Windows.Forms.Timer&gt; by calling Stop will cause the &lt;xref:System.Windows.Forms.Timer&gt; to restart the interrupted interval.</source>
          <target state="translated">호출 &lt;xref:System.Windows.Forms.Timer.Start%2A&gt;비활성화 한 후 한 &lt;xref:System.Windows.Forms.Timer&gt;중지 하면 호출 하 여는 &lt;xref:System.Windows.Forms.Timer&gt;중단된 된 시간을 다시 시작 합니다.&lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your &lt;xref:System.Windows.Forms.Timer&gt; is set for a 5000-millisecond interval, and you call Stop at around 3000 milliseconds, calling &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; will cause the &lt;xref:System.Windows.Forms.Timer&gt; to wait 5000 milliseconds before raising the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event.</source>
          <target state="translated">경우에 &lt;xref:System.Windows.Forms.Timer&gt;5000 밀리초 간격에 대 한 설정 호출 하면 중지 약 3000 밀리초에서 호출 &lt;xref:System.Windows.Forms.Timer.Start%2A&gt;하면는 &lt;xref:System.Windows.Forms.Timer&gt;5000 밀리초 발생 하기 전에 대기 하는 &lt;xref:System.Windows.Forms.Timer.Tick&gt;이벤트.&lt;/xref:System.Windows.Forms.Timer.Tick&gt; &lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer.Start%2A&gt; &lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Calling Stop on any &lt;xref:System.Windows.Forms.Timer&gt; within a Windows Forms application can cause messages from other &lt;xref:System.Windows.Forms.Timer&gt; components in the application to be processed immediately, because all &lt;xref:System.Windows.Forms.Timer&gt; components operate on the main application thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서 중지를 호출 &lt;xref:System.Windows.Forms.Timer&gt;내 Windows Forms 응용 프로그램 수에서 생성 된 메시지가 다른 &lt;xref:System.Windows.Forms.Timer&gt;때문에 즉시 처리 하면 응용 프로그램의 모든 &lt;xref:System.Windows.Forms.Timer&gt;구성 요소가 주 응용 프로그램 스레드에서 작동 합니다.&lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have two &lt;xref:System.Windows.Forms.Timer&gt; components, one set to 700 milliseconds and one set to 500 milliseconds, and you call Stop on the first &lt;xref:System.Windows.Forms.Timer&gt;, your application may receive an event callback for the second component first.</source>
          <target state="translated">두 개 있는 경우 &lt;xref:System.Windows.Forms.Timer&gt;구성 요소, 700 밀리초와 500 밀리초로 하나의 집합 하나를 설정 하 고 첫 번째에서 중지를 호출 하면 &lt;xref:System.Windows.Forms.Timer&gt;, 응용 프로그램은 두 번째 구성 요소는 이벤트 콜백을 먼저 표시 될 수 있습니다.&lt;/xref:System.Windows.Forms.Timer&gt; &lt;/xref:System.Windows.Forms.Timer&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this proves problematic, consider using the &lt;xref:System.Threading.Timer&gt; class in the &lt;xref:System.Threading&gt; namespace instead.</source>
          <target state="translated">문제가 있는 입증 하는 경우를 사용해는 &lt;xref:System.Threading.Timer&gt;클래스에 &lt;xref:System.Threading&gt;네임 스페이스 대신.&lt;/xref:System.Threading&gt; &lt;/xref:System.Threading.Timer&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">사용자 상태의 일부 형식을 나타내는 임의의 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">사용자 상태의 일부 형식을 나타내는 임의의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">지정된 된 타이머 간격이 경과 되 고 타이머가 설정 되어 있는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the &lt;xref:System.Diagnostics.Debug.Assert%2A&gt; method on the &lt;xref:System.Diagnostics.Debug&gt; class from within the Tick event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the Tick event repeatedly.</source>
          <target state="translated">호출 된 &lt;xref:System.Diagnostics.Debug.Assert%2A&gt;에서 메서드는 &lt;xref:System.Diagnostics.Debug&gt;Tick 이벤트 내에서 클래스에는 예상 대로 동작 하지 않을 수, 어설션 대화 상자를 표시와 상자를 반복 해 서 Tick 이벤트를 발생 시키는 Windows를 일으킬 수 있습니다.&lt;/xref:System.Diagnostics.Debug&gt; &lt;/xref:System.Diagnostics.Debug.Assert%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you refrain from testing assertions within this event, and use the &lt;xref:System.Diagnostics.Debug.Write%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;, or &lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt; methods instead.</source>
          <target state="translated">이 이벤트에서 어설션을 테스트 하지 않는 사용 하는 것이 좋습니다는 &lt;xref:System.Diagnostics.Debug.Write%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;, 또는 &lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;메서드 대신.&lt;/xref:System.Diagnostics.Debug.WriteLineIf%2A&gt; &lt;/xref:System.Diagnostics.Debug.WriteLine%2A&gt; &lt;/xref:System.Diagnostics.Debug.WriteIf%2A&gt; &lt;/xref:System.Diagnostics.Debug.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">나타내는 문자열을 반환 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ToString method returns a string that includes the value of the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property.</source>
          <target state="translated">ToString 메서드 반환 값을 포함 하는 문자열은 &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;속성.&lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A string that represents the current <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재 나타내는 string <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>