<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9eb3e60588a142d244ab804f070fb8000dce8077</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.Primitives.MarkupProperty.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc8e860f52c6ef165c1b9dc9a455a799cf7e253e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33e96547b13ad50974d75fd82a4ba2b666668ec2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</source>
          <target state="translated">속성 및 해당 값에 대 한 액세스를 캡슐화 하는 태그를 쓰는 동안 사용할 속성 설명을 제공 하는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A property is either represented as a string or a list of items.</source>
          <target state="translated">속성은 string 또는 항목의 목록으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property can be represented as a string, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt; is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">속성을 문자열로 나타낼 수 있는 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;은 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt; is <ph id="ph1">`true`</ph>, the property is a list of items.</source>
          <target state="translated">경우 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;은 <ph id="ph1">`true`</ph>, 속성은 항목의 목록.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the attributes associated with this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 연관 된 특성을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The collection of attributes.</source>
          <target state="translated">특성의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier for the markup property if the property is implemented as a dependency property</source>
          <target state="translated">파생된 클래스에서 재정의 되 면는 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성은 종속성 속성으로 구현 하는 경우에 태그 속성에 대 한 식별자</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 동작을 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The dependency property identifier.</source>
          <target state="translated">종속성 속성 식별자입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is an attached <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가 연결 된 <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환할 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When IsAttached is <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; is not <ph id="ph2">`null`</ph> and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; can be <ph id="ph3">`null`</ph>, but is not required to be.</source>
          <target state="translated">IsAttached 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;않습니다 <ph id="ph2">`null`</ph> 및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;수 <ph id="ph3">`null`</ph>, 하지만 적일 필요가 없습니다.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property is an attached <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성이 연결 된 경우 <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a composite property.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 복합 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환할 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IsComposite is <ph id="ph1">`false`</ph>, the property can be represented as a string and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt; and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt; are valid to use.</source>
          <target state="translated">IsComposite 이면 <ph id="ph1">`false`</ph>, 속성을 문자열로 나타낼 수 및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt;및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt;사용할 수 있습니다.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IsComposite is <ph id="ph1">`true`</ph>, the property is one or more items and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt; is valid to use.</source>
          <target state="translated">IsComposite 이면 <ph id="ph1">`true`</ph>, 속성은 하나 이상의 항목 및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt;를 사용할 수 있습니다.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is this property is a composite property; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성은 복합 속성은 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a constructor argument.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성자 인수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When IsConstructorArgument is <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; are both <ph id="ph2">`null`</ph>.</source>
          <target state="translated">IsConstructorArgument 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;모두 <ph id="ph2">`null`</ph>.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML only uses IsConstructorArgument for representing the constructor arguments of instances of &lt;xref:System.Windows.Markup.MarkupExtension&gt;.</source>
          <target state="translated">XAML &lt;xref:System.Windows.Markup.MarkupExtension&gt;.&lt;/xref:System.Windows.Markup.MarkupExtension&gt; 인스턴스의 생성자 인수를 나타내는 하기 위해 IsConstructorArgument 사용</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>태그 확장명 및 WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property represents a constructor argument; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성은 생성자 인수; 나타냅니다 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents direct content of a collection.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직접 컬렉션의 콘텐츠를 나타내는지 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환할 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When IsContent is <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; are both <ph id="ph2">`null`</ph>.</source>
          <target state="translated">IsContent 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;모두 <ph id="ph2">`null`</ph>.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dictionaries are included when determining whether this &lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt; represents direct content.</source>
          <target state="translated">결정할 때 사전 포함 되어 있는지 여부를이 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;직접 콘텐츠를 나타내는지.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property represents direct content; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성이 나타내는 직접 콘텐츠; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents the key used by the <bpt id="p2">&lt;xref href="System.Windows.Markup.Primitives.MarkupObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to store the item in a dictionary.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 하는 키를 나타내는 <bpt id="p2">&lt;xref href="System.Windows.Markup.Primitives.MarkupObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 사전에 항목을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환할 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When IsKey is <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; are <ph id="ph2">`null`</ph>.</source>
          <target state="translated">IsKey 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;는 <ph id="ph2">`null`</ph>.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML will use the identified property as an <ph id="ph1">`x:Key`</ph> attribute.</source>
          <target state="translated">XAML로 식별된 된 속성을 사용 합니다는 <ph id="ph1">`x:Key`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property represents a key; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성은 키; 나타냅니다 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 확인 여부를이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성의 인스턴스를 만들려고 하는 형식 변환기에 전달 되는 텍스트를 나타내는 또는 생성자를 사용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false.`</ph>       When IsValueAsString is <ph id="ph2">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; and &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; are both <ph id="ph3">`null`</ph>.</source>
          <target state="translated">반환 하는 기본 동작입니다 <ph id="ph1">`false.`</ph> 때 IsValueAsString은 <ph id="ph2">`true`</ph>, &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;및 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;모두 <ph id="ph3">`null`</ph>.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is provided through &lt;xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt; and IsValueAsString is <ph id="ph1">`true`</ph>, it will be the only property the type will provide.</source>
          <target state="translated">통해이 속성은 제공 하는 경우 &lt;xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt;IsValueAsString 이며 <ph id="ph1">`true`</ph>, 유일한 속성의 형식에서 제공 되는 것입니다.&lt;/xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if this <bpt id="p2">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a string; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 경우 <bpt id="p2">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 문자열을 나타내는, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the items that make up the value of this property.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우이 속성의 값을 구성 하는 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is not an enumeration, only one item will be returned.</source>
          <target state="translated">속성이 열거형 항목을 하나만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is an enumeration, or enumerable, all the items will be returned.</source>
          <target state="translated">열거 또는 열거 가능한 속성이 이면 모든 항목이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>At least one item is always returned, because &lt;xref:System.Windows.Markup.Primitives.MarkupObject&gt; will not create a &lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt; for properties with no items.</source>
          <target state="translated">때문에 하나 이상의 항목을 항상 반환 &lt;xref:System.Windows.Markup.Primitives.MarkupObject&gt;생성 되지 것입니다는 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;항목이 없는 속성에 대 한.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupObject&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The items that make up the value of this property.</source>
          <target state="translated">이 속성의 값을 구성 하는 항목입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 진단 및 오류 보고에 사용 되는 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A serializer should not use this value.</source>
          <target state="translated">Serializer에서이 값을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should use the &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt; and/or &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; instead.</source>
          <target state="translated">사용 해야는 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;및/또는 &lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;대신.&lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt; &lt;/xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The identifier property name.</source>
          <target state="translated">식별자 속성 이름입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the markup property.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면는 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 태그 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 동작을 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property descriptor.</source>
          <target state="translated">속성 설명자입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the CLR type of the property.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 속성의 CLR 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The CLR type.</source>
          <target state="translated">CLR 형식입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the string value of this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 문자열 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The string value.</source>
          <target state="translated">문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the set of types that this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will reference when it serializes its value as a string.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 가져옵니다 형식 집합이 있는이 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 해당 값을 문자열로 serialize 할 때 참조 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>TypeReferences enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</source>
          <target state="translated">TypeReferences serializer를 디 serializer가 문자열 표현에서 이러한 형식에 대 한 참조를 변환 하려면 충분 한 정보를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The set of types.</source>
          <target state="translated">집합 형식입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the current value of this <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 현재 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The current value.</source>
          <target state="translated">현재 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>