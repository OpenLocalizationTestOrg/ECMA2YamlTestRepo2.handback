<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53500fa0905a822960a5d323370b23d5eda77216</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.NetDataContractSerializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8df1589ce8717cf8fa13e868da3ecdcb32d45883</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f02ce8744ba65e695153b90463929eddf7003a4b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes an instance of a type into XML stream or document using the supplied <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> types.</source>
          <target state="translated">직렬화 및 역직렬화 XML 스트림 또는 문서로 사용 하 여 제공 된 형식의 인스턴스 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The NetDataContractSerializer differs from the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; in one important way: the NetDataContractSerializer includes CLR type information in the serialized XML, whereas the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; does not.</source>
          <target state="translated">와 다른 안전한 NetDataContractSerializer는 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;중요 한 차이점 하나에: 안전한 NetDataContractSerializer 반면 serialize 된 xml로 CLR 형식 정보를 포함는 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;는 그렇지 않습니다.&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt; &lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the NetDataContractSerializer can be used only if both the serializing and deserializing ends share the same CLR types.</source>
          <target state="translated">따라서 안전한 NetDataContractSerializer 직렬화 및 역직렬화 끝에는 동일한 CLR 형식을 공유 하는 경우에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer can serialize types to which either the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; or &lt;xref:System.SerializableAttribute&gt; attribute has been applied.</source>
          <target state="translated">Serializer가 있는 형식을 serialize 할 수는 &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;또는 &lt;xref:System.SerializableAttribute&gt;특성이 적용 되었습니다.&lt;/xref:System.SerializableAttribute&gt; &lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also serializes types that implement &lt;xref:System.Runtime.Serialization.ISerializable&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ISerializable&gt;.&lt;/xref:System.Runtime.Serialization.ISerializable&gt; 를 구현 하는 형식을 serialize합니다</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about serialization, see <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Serialization에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Serialization 및 Deserialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Incompatibility with XElement    The &lt;xref:System.Xml.Linq.XElement&gt; class is used to write XML.</source>
          <target state="translated">XElement와의 비 호환성은 &lt;xref:System.Xml.Linq.XElement&gt;클래스는 XML을 작성 하는 데 사용 됩니다.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">`NetDataContractSerializer`</ph> cannot serialize an instance of the type.</source>
          <target state="translated">그러나는 <ph id="ph1">`NetDataContractSerializer`</ph> 형식의 인스턴스를 serialize 할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code, therefore, fails with the exception: "Root type 'System.Xml.Linq.XElement' is not supported at the top level by NetDataContractSerializer since it is IXmlSerializable with <ph id="ph1">`IsAny`</ph><ph id="ph2">=</ph><ph id="ph3">`true`</ph> and must write all its contents including the root element."</source>
          <target state="translated">다음 코드는 따라서 예외와 함께 실패: "루트 형식 'System.Xml.Linq.XElement'는 지원 되지 않습니다 최상위 수준에서 NetDataContractSerializer에 의해 인 ixmlserializable <ph id="ph1">`IsAny`</ph> <ph id="ph2">=</ph> <ph id="ph3">`true`</ph> 이며 루트 요소를 포함 한 모든 내용을 기록해 야 합니다."</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>NetDataContractSerializer#15<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.seriali_19_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>NetDataContractSerializer#15<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.seriali_19_1.vb)</ept><ept id="p3">]</ept>       However, if an <ph id="ph1">`XElement`</ph> is used as the type of a field or property of a class, the data contained by the field or property is serialized.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>그러나 NetDataContractSerializer&amp;#15;<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.seriali_19_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>NetDataContractSerializer&amp;#15;<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.seriali_19_1.vb)</ept> <ept id="p3">]</ept> 하는 경우는 <ph id="ph1">`XElement`</ph> serialize 될 형식의 필드 또는 필드 또는 속성에 포함 된 데이터 클래스의 속성으로 사용 됩니다.  </target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because as a member of a class, the data is not the top level of the class.</source>
          <target state="translated">클래스의 멤버로 데이터가 않습니다 클래스의 최상위 수준 때문입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied streaming context data.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 제공 된 스트리밍 컨텍스트 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; class allows you to pass in user-specific context data to use while reading and writing objects.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;클래스 읽고 개체를 쓰는 동안 사용할 사용자별 컨텍스트 데이터를 전달할 수 있습니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains context data.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;컨텍스트 데이터를 포함 하는.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied XML root element and namespace.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제공 된 XML 루트 요소와 네임 스페이스를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with two parameters of type &lt;xref:System.Xml.XmlDictionaryString&gt; that contain the root element and namespace used to specify the content.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식의 두 매개 변수가 있는 클래스 &lt;xref:System.Xml.XmlDictionaryString&gt;루트 요소와 내용을 지정 하는 데 사용 되는 네임 스페이스를 포함 하는.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XmlDictionaryString&gt; can be used to optimize performance when the same set of strings is used across object instances.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 성능을 최적화 하는 데 사용 됩니다.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlDictionaryString&gt; that contains the name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 이름을 포함 하는.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlDictionaryString&gt; that contains the namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 네임 스페이스를 포함 하는.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제공 된 컨텍스트 데이터와 함께 클래스, 또한 매개 변수 추가 데이터의 무시 여부, 어셈블리 로딩 메서드, 서로게이트 선택기 지정 하 고 serialize 할 개체에서 최대 항목 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt; interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 사용 때는 &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;인터페이스는 되는 클래스에서 구현 serialize 되거나 deserialize.&lt;/xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains context data.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;컨텍스트 데이터를 포함 하는.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize 하거나 deserialize 할 항목의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore the data supplied by an extension of the type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>유형의 확장에서 제공 하는 데이터를 무시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리를 찾고 로딩에 대 한 메서드를 지정 하는 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An implementation of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">구현에서 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph>값이 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제공 된 컨텍스트 데이터와 루트 이름 및 네임 스페이스와 클래스, 또한 매개 변수 추가 데이터의 무시 여부, 어셈블리 로딩 메서드, 서로게이트 선택기 지정 하 고 serialize 할 개체에서 최대 항목 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt; interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 사용 때는 &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;인터페이스는 되는 클래스에서 구현 serialize 되거나 deserialize.&lt;/xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Serialize 하거나 deserialize 할 콘텐츠를 둘러싸는 XML 요소의 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains context data.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;컨텍스트 데이터를 포함 하는.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize 하거나 deserialize 할 항목의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore the data supplied by an extension of the type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>유형의 확장에서 제공 하는 데이터를 무시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리를 찾고 로딩에 대 한 메서드를 지정 하는 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An implementation of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDataContractSurrogate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to handle the legacy type.</source>
          <target state="translated">구현에서 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDataContractSurrogate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레거시 형식을 처리 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph>값이 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied context data, and root name and namespace (as &lt;xref:System.Xml.XmlDictionaryString&gt; parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.NetDataContractSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제공 된 컨텍스트 데이터와 루트 이름 및 네임 스페이스를 사용 하 여 클래스 (으로 &lt;xref:System.Xml.XmlDictionaryString&gt;매개 변수)의 매개 변수 이름, 어셈블리 로딩 메서드, 및 서로게이트 선택기 발견 된 추가 데이터의 무시 여부를 지정 하 고 serialize 할 개체에서 항목의 최대 수를 지정 합니다.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XmlDictionaryString&gt; can be used to optimize performance when the same set of strings is used across object instances.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 성능을 최적화 하는 데 사용 됩니다.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt; interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 사용 때는 &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;인터페이스는 되는 클래스에서 구현 serialize 되거나 deserialize.&lt;/xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlDictionaryString&gt; that contains the root element of the content.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;콘텐츠의 루트 요소를 포함 하는.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlDictionaryString&gt; that contains the namespace of the root element.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryString&gt;루트 요소의 네임 스페이스를 포함 하는.&lt;/xref:System.Xml.XmlDictionaryString&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains context data.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;컨텍스트 데이터를 포함 하는.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize 하거나 deserialize 할 항목의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore the data supplied by an extension of the type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>유형의 확장에서 제공 하는 데이터를 무시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리를 찾고 로딩에 대 한 메서드를 지정 하는 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An implementation of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDataContractSurrogate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to handle the legacy type.</source>
          <target state="translated">구현에서 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDataContractSurrogate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레거시 형식을 처리 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;maxItemsInObjectGraph&lt;/code&gt;</ph>값이 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩에 대 한 메서드를 지정 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">`AssemblyFormat`</ph> instance can have two styles: &lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt; or &lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt;.</source>
          <target state="translated"><ph id="ph1">`AssemblyFormat`</ph> 인스턴스는 두 가지 스타일을 가질 수 있습니다: &lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt;또는 &lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt;.&lt;/xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt; &lt;/xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying <ph id="ph1">`Simple`</ph> allows types in one version to be loaded and deserialized from an instance serialized from a different version.</source>
          <target state="translated">지정 <ph id="ph1">`Simple`</ph> 로드 되 고 다른 버전에서 serialize 된 인스턴스에서 역직렬화 한 버전의 형식을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리를 찾고 로딩에 대 한 메서드를 지정 하는 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value being set does not correspond to any of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">설정 되는 값 중 하나에 해당 하지 않습니다는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that controls class loading.</source>
          <target state="translated">클래스 로딩을 제어 하는 개체를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</source>
          <target state="translated">Serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체의 인스턴스를 만드는 데 필요한 정보를 전송 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information generally includes the full type name and assembly name of the object.</source>
          <target state="translated">이 정보에는 일반적으로 전체 형식 이름 및 개체의 어셈블리 이름을 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The assembly name includes the name, version, and strong name hash of the assembly.</source>
          <target state="translated">어셈블리 이름에는 이름, 버전 및 어셈블리의 강력한 이름 해시가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</source>
          <target state="translated">기본적으로 deserialization이이 정보를 사용 하 여 (보안 정책에 의해 제한 되는 어셈블리 로딩의 예외)와 동일한 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</source>
          <target state="translated">일부 사용자가 제어 해야 할 클래스를 로드 하거나 클래스가 서로 다른 버전의 클래스가 어셈블리 간에 이동 하기 때문에 필요한 서버와 클라이언트에 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</source>
          <target state="translated">된 직렬화 또는 역직렬화 하는 동안 유용한 컨텍스트 데이터를 전달할 수 있는 개체를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the context data.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;컨텍스트 데이터를 포함 하는.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Deserializes an XML document or stream into an object.</source>
          <target state="translated">XML 문서 또는 스트림을 개체로 역직렬화합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method assumes the default format is text XML.</source>
          <target state="translated">이 메서드는 기본 형식이 텍스트 XML 이라고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>신뢰할 수 없는 데이터 보안 위험<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that contains the XML to deserialize.</source>
          <target state="translated">A &lt;xref:System.IO.Stream&gt;역직렬화 할 XML을 포함 하는.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The deserialized object.</source>
          <target state="translated">Deserialize 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether data supplied by an extension of the object is ignored.</source>
          <target state="translated">개체의 확장에서 제공 하는 데이터가 무시 되는지 여부를 지정 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implementing the &lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;, data from a future version of a type can be stored by the &lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;에 &lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;.&lt;/xref:System.Runtime.Serialization.ExtensionDataObject&gt; 형식의 이후 버전에서 데이터를 저장할 수 있습니다,&lt;/xref:System.Runtime.Serialization.IExtensibleDataObject&gt; 구현 하는 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a round trip (where an object is deserialized, altered, and serialized again), the extra data is stored and serialized again.</source>
          <target state="translated">(여기서는 개체가 deserialize 되 고 변경 하 고 serialize 된 다시) 왕복 하는 동안 추가 데이터가 저장 되 고 다시 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Serialization 및 Deserialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore the data supplied by an extension of the type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>유형의 확장에서 제공 하는 데이터를 무시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Determines whether the &lt;xref:System.Xml.XmlDictionaryReader&gt; is positioned on an object that can be deserialized using the specified reader.</source>
          <target state="translated">결정 여부는 &lt;xref:System.Xml.XmlDictionaryReader&gt;지정된 된 판독기를 사용 하 여 deserialize 할 수 있는 개체에 배치 합니다.&lt;/xref:System.Xml.XmlDictionaryReader&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt; determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;이름과 판독기가에, XML 요소의 네임 스페이스를 검사 하 고 예상된 이름 및 네임 스페이스에 대 한 값을 비교 하 여 개체를 읽을 수 있는지 여부를 결정 합니다.&lt;/xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> values passed into the constructor (if present).</source>
          <target state="translated">다음으로 예상된 이름 및 네임 스페이스를 설정할 수 있습니다: 데이터 계약 이름과 네임 스페이스는 생성자에 전달 된 형식의 또는 <ph id="ph1">`rootName`</ph> 및 <ph id="ph2">`rootNamespace`</ph> 값 (있는 경우)은 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> in the following constructors: &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=fullName&gt;, &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=fullName&gt;, and &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=fullName&gt;.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">`rootName`</ph> 및 <ph id="ph2">`rootNamespace`</ph> 생성자에서: &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=fullName&gt;, &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=fullName&gt;, 및 &lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=fullName&gt;.&lt;/xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlDictionaryReader&gt; that contains the XML to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryReader&gt;읽을 XML을 포함 하는.&lt;/xref:System.Xml.XmlDictionaryReader&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the reader is at the start element of the stream to read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>판독기가 읽을 스트림의 시작 요소에 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Determines whether the &lt;xref:System.Xml.XmlReader&gt; is positioned on an object that can be deserialized using the specified reader.</source>
          <target state="translated">결정 여부는 &lt;xref:System.Xml.XmlReader&gt;지정된 된 판독기를 사용 하 여 deserialize 할 수 있는 개체에 배치 합니다.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; that contains the XML to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;읽을 XML을 포함 하는.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the reader is at the start element of the stream to read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>판독기가 읽을 스트림의 시작 요소에 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets the maximum number of items allowed in the object to be serialized.</source>
          <target state="translated">Serialize 할 개체에 허용 되는 항목의 최대 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about setting quotas, see <bpt id="p1">[</bpt>Security Considerations for Data<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">할당량 설정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터에 대 한 보안 고려 사항<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The maximum number of items allowed in the object.</source>
          <target state="translated">개체에 허용 되는 항목의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.Int32&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Int32&gt;.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Reads the XML stream or document with an &lt;xref:System.Xml.XmlDictionaryReader&gt; and returns the deserialized object.</source>
          <target state="translated">XML 스트림 또는 문서를 읽고는 &lt;xref:System.Xml.XmlDictionaryReader&gt;역직렬화 된 개체를 반환 합니다.&lt;/xref:System.Xml.XmlDictionaryReader&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>신뢰할 수 없는 데이터 보안 위험<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; used to read the XML stream or document.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;를 XML 스트림 또는 문서를 읽는 데 사용 합니다.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The deserialized object.</source>
          <target state="translated">Deserialize 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>