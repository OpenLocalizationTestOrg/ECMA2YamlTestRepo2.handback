<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18f68997f85f9fa094c80c6a432c6627a06ab9f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Reflection.MethodBody.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cc6ba24408f6515319043fee25cceddaa1b3b2c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84f1cfe6f04500254a9ec7bfd466e08947129930</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to the metadata and MSIL for the body of a method.</source>
          <target state="translated">메서드의 본문에 대 한 메타 데이터와 MSIL에 대 한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MethodBody class provides access to information about the local variables and exception-handling clauses in a method body, and to the Microsoft intermediate language (MSIL) that makes up the method body.</source>
          <target state="translated">MethodBody 클래스 Microsoft intermediate language (MSIL) 메서드 본문을 구성 하는 지역 변수 및 메서드 본문에서 예외 처리 절에 대 한 정보에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the token-resolution methods of the module class, such as &lt;xref:System.Reflection.Module.ResolveType%2A&gt;, &lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;, and &lt;xref:System.Reflection.Module.ResolveType%2A&gt;, to resolve the tokens in the method body to &lt;xref:System.Type&gt; objects, &lt;xref:System.Reflection.MethodInfo&gt; objects, and &lt;xref:System.Reflection.FieldInfo&gt; objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">와 같은 모듈 클래스의 토큰 확인 메서드를 사용할 수 &lt;xref:System.Reflection.Module.ResolveType%2A&gt;, &lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;, 및 &lt;xref:System.Reflection.Module.ResolveType%2A&gt;에 메서드 본문에서 토큰을 확인 하려면 &lt;xref:System.Type&gt;개체를 &lt;xref:System.Reflection.MethodInfo&gt;개체 및 &lt;xref:System.Reflection.FieldInfo&gt;형식, 메서드 및 필드 메서드 본문에서 MSIL에서 액세스 하는 방법에 대 한 자세한 정보를 제공 하는 개체.&lt;/xref:System.Reflection.FieldInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.Module.ResolveType%2A&gt; &lt;/xref:System.Reflection.Module.ResolveMethod%2A&gt; &lt;/xref:System.Reflection.Module.ResolveType%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 메타 데이터 및 MSIL 명령 형식 완전히 이해 해야 메서드 본문을 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">공용 언어 인프라 (CLI) 설명서의 "II: 메타 데이터 정의 및 의미" 및 "III 파티션: CIL 명령 집합"에 정보를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인입니다. 참조 <bpt id="p1">[</bpt>ECMA C# 및 Common Language Infrastructure 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> msdn 및 <bpt id="p2">[</bpt>Standard ecma-335-인프라 CLI (공용 언어)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> Ecma International 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain a MethodBody object for a given method, first obtain a &lt;xref:System.Reflection.MethodInfo&gt; object for the method, then call the &lt;xref:System.Reflection.MethodInfo&gt; object's &lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt; method.</source>
          <target state="translated">지정 된 메서드의 MethodBody 개체를 가져오려면 먼저 가져옵니다는 &lt;xref:System.Reflection.MethodInfo&gt;개체는 메서드에 대 한 호출에서 &lt;xref:System.Reflection.MethodInfo&gt;개체의 &lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;메서드.&lt;/xref:System.Reflection.MethodBase.GetMethodBody%2A&gt; &lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Reflection.MethodBody"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Reflection.MethodBody"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is invoked by derived classes during the construction of &lt;xref:System.Reflection.MethodBody&gt; objects.</source>
          <target state="translated">생성 하는 동안이 생성자는 파생된 클래스에서 호출 &lt;xref:System.Reflection.MethodBody&gt;개체입니다.&lt;/xref:System.Reflection.MethodBody&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a list that includes all the exception-handling clauses in the method body.</source>
          <target state="translated">메서드 본문에서 예외 처리 절을 모두 포함 하는 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list includes all clauses from all try blocks in the method body.</source>
          <target state="translated">메서드 본문에서 모든 try 블록에서 모든 절을 포함 하는 목록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Reflection.ExceptionHandlingClause&gt; object contains information that identifies the try block with which it is associated.</source>
          <target state="translated">각 &lt;xref:System.Reflection.ExceptionHandlingClause&gt;개체와 관련 된 try 블록을 식별 하는 정보가 포함 되어 있습니다.&lt;/xref:System.Reflection.ExceptionHandlingClause&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 작업 예외 처리 절에는 메타 데이터와 MSIL 명령 형식 완전히 이해 해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">공용 언어 인프라 (CLI) 설명서의 "II: 메타 데이터 정의 및 의미" 및 "III 파티션: CIL 명령 집합"에 정보를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인입니다. 참조 <bpt id="p1">[</bpt>ECMA C# 및 Common Language Infrastructure 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> msdn 및 <bpt id="p2">[</bpt>Standard ecma-335-인프라 CLI (공용 언어)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> Ecma International 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> of <bpt id="p1">&lt;xref href="System.Reflection.ExceptionHandlingClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects representing the exception-handling clauses in the body of the method.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> 의 <bpt id="p1">&lt;xref href="System.Reflection.ExceptionHandlingClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드 본문에서 예외 처리 절을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the MSIL for the method body, as an array of bytes.</source>
          <target state="translated">메서드 본문에 대 한 MSIL 바이트의 배열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the token-resolution methods of the module class, such as &lt;xref:System.Reflection.Module.ResolveType%2A&gt;, &lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;, and &lt;xref:System.Reflection.Module.ResolveMember%2A&gt;, to resolve the tokens in the method body to &lt;xref:System.Type&gt; objects, &lt;xref:System.Reflection.MethodInfo&gt; objects, and &lt;xref:System.Reflection.FieldInfo&gt; objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">와 같은 모듈 클래스의 토큰 확인 메서드를 사용할 수 &lt;xref:System.Reflection.Module.ResolveType%2A&gt;, &lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;, 및 &lt;xref:System.Reflection.Module.ResolveMember%2A&gt;메서드 본문에서 토큰을 확인 하 &lt;xref:System.Type&gt;개체 &lt;xref:System.Reflection.MethodInfo&gt;개체 및 &lt;xref:System.Reflection.FieldInfo&gt;형식, 메서드 및 필드 메서드 본문에서 MSIL에서 액세스 하는 방법에 대 한 자세한 정보를 제공 하는 개체입니다.&lt;/xref:System.Reflection.FieldInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.Module.ResolveMember%2A&gt; &lt;/xref:System.Reflection.Module.ResolveMethod%2A&gt; &lt;/xref:System.Reflection.Module.ResolveType%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 메타 데이터 및 MSIL 명령 형식 완전히 이해 해야 메서드 본문을 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">공용 언어 인프라 (CLI) 설명서의 "II: 메타 데이터 정의 및 의미" 및 "III 파티션: CIL 명령 집합"에 정보를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인입니다. 참조 <bpt id="p1">[</bpt>ECMA C# 및 Common Language Infrastructure 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> msdn 및 <bpt id="p2">[</bpt>Standard ecma-335-인프라 CLI (공용 언어)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> Ecma International 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Byte&gt; that contains the MSIL for the method body.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Byte&gt;메서드 본문에 대 한 MSIL을 포함 하는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether local variables in the method body are initialized to the default values for their types.</source>
          <target state="translated">메서드 본문에서 지역 변수를 해당 형식에 대 한 기본값으로 초기화 되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitLocals property refers to variables that are not explicitly initialized; that is, variables that are declared with syntax such as <ph id="ph1">`int x;`</ph> in C# or <ph id="ph2">`Dim x As Integer`</ph> in Visual Basic.</source>
          <target state="translated">InitLocals 속성은 초기화 되지 않은 명시적으로; 변수 참조 와 같은 구문을 사용 하 여 선언 된 변수, 즉 <ph id="ph1">`int x;`</ph> C# 또는 <ph id="ph2">`Dim x As Integer`</ph> Visual Basic의 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference variables are initialized to <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">참조 변수가 초기화 됩니다 <ph id="ph1">`null`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Numeric variables are initialized to zero.</source>
          <target state="translated">숫자 변수를&amp;0;으로 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method body contains code to initialize local variables to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> for reference types, or to the zero-initialized value for value types; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메서드 본문에 지역 변수를 초기화 하는 코드를 포함 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값 형식에 대 한&amp;0; 초기화 값 또는 참조 형식에 대해, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a metadata token for the signature that describes the local variables for the method in metadata.</source>
          <target state="translated">메타 데이터에서 메서드에 대 한 지역 변수를 설명 하는 서명에 대 한 메타 데이터 토큰을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt; property to obtain information about the method's local variables.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;속성 메서드의 로컬 변수에 대 한 정보를 얻을 수 있습니다.&lt;/xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Information about local variable signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 공용 언어 인프라 (CLI) 설명서의 "II: 메타 데이터 정의 및 의미"에 로컬 변수 서명에 대 한 정보를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인입니다. 참조 <bpt id="p1">[</bpt>ECMA C# 및 Common Language Infrastructure 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> msdn 및 <bpt id="p2">[</bpt>Standard ecma-335-인프라 CLI (공용 언어)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> Ecma International 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An integer that represents the metadata token.</source>
          <target state="translated">메타 데이터 토큰을 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the list of local variables declared in the method body.</source>
          <target state="translated">메서드 본문에 선언 된 지역 변수의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need the metadata token for the local variable signature provided by the &lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt; property.</source>
          <target state="translated">제공 하는 로컬 변수 서명에 대 한 메타 데이터 토큰 않아도 &lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;속성.&lt;/xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Reflection.LocalVariableInfo&gt; objects that describe the local variables declared in the method body.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> 의 &lt;xref:System.Reflection.LocalVariableInfo&gt;메서드 본문에 선언 된 지역 변수를 설명 하는 개체입니다.&lt;/xref:System.Reflection.LocalVariableInfo&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">메서드를 실행 하는 경우에 피연산자 스택에 최대 항목 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">자세한 내용은 "II: 메타 데이터 정의 및 의미" 및 "III 파티션: CIL 명령 집합" 인프라 CLI (공용 언어) 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인입니다. 참조 <bpt id="p1">[</bpt>ECMA C# 및 Common Language Infrastructure 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> msdn 및 <bpt id="p2">[</bpt>Standard ecma-335-인프라 CLI (공용 언어)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> Ecma International 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">메서드를 실행 하는 경우 피연산자 스택에 항목의 최대 수입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>