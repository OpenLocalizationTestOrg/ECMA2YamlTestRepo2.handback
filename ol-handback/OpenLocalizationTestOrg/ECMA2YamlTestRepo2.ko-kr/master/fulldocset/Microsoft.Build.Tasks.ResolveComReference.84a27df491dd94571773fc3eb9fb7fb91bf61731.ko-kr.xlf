<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">826f24b58be1df844eff3ab2ae2110b4e34e31de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Tasks.ResolveComReference.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0d29e4af4bae2fe6a2b9eb661f20e64064ff3f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6e32dee2dce71f289556e791a80fa7c401bdd06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">`ResolveComReference`</ph> task.</source>
          <target state="translated">구현 된 <ph id="ph1">`ResolveComReference`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ResolveComReference`</ph> element in your project file to create and execute this task.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`ResolveComReference`</ph> 생성 하 고이 작업을 실행 하기 위해 프로젝트 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>ResolveComReference Task<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 및 매개 변수 정보를 참조 하십시오. <bpt id="p1">[</bpt>ResolveComReference 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>On a 64-bit machine, Framework64/<ph id="ph1">\&lt;</ph>version&gt;/msbuild cannot resolve COM objects registered as 32-bit components.</source>
          <target state="translated">64 비트 컴퓨터에서 Framework64 /<ph id="ph1">\&lt;</ph>버전 &gt; / msbuild 32 비트 구성 요소로 등록 하는 COM 개체를 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you register a COM object with regsvr32 and then try to build a project targeting the x86 platform with Framework64/<ph id="ph1">\&lt;</ph>version&gt;/msbuild, the build is unable to resolve the COM object.</source>
          <target state="translated">예를 들어 regsvr32 COM 개체에 등록 하 고 프로젝트를 빌드하는 x86 대상으로 지정 하려고 Framework64 갖춘 플랫폼 /<ph id="ph1">\&lt;</ph>버전 &gt; / msbuild, 빌드는 COM 개체를 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If instead you build with Framework/<ph id="ph1">\&lt;</ph>version&gt;/msbuild, the build is able to resolve the COM object.</source>
          <target state="translated">Framework로 작성 하는 대신 /<ph id="ph1">\&lt;</ph>버전 &gt; / msbuild, 빌드는 COM 개체를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.ResolveComReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.ResolveComReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the <ph id="ph1">`ResolveComReference`</ph> task places the public key in the assembly (<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) or fully signs the assembly (<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</source>
          <target state="translated">지정 하는 부울 값을 가져오거나 설정 합니다. 여부는 <ph id="ph1">`ResolveComReference`</ph> 작업에서 어셈블리에 공개 키를 배치 (<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 또는 어셈블리에 완전히 서명 (<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`ResolveComReference`</ph> task places the public key in the assembly; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <ph id="ph2">`ResolveComReference`</ph> task fully signs the assembly.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`ResolveComReference`</ph> 어셈블리에 공개 키를 배치 하는 작업 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우는 <ph id="ph2">`ResolveComReference`</ph> 작업 어셈블리에 완전히 서명 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets an array of name-value pairs of environment variables that should be passed to the spawned tlbimp.exe and aximp.exe in addition to (or selectively overriding) the regular environment block.</source>
          <target state="translated">해야 하는 생성 된 tlbimp.exe와 aximp.exe에에 전달 된 (또는 선택적으로 재정의) 일반 환경 블록 환경 변수의 이름-값 쌍의 배열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an array of name-value pairs of environment variables.</source>
          <target state="translated">환경 변수의 이름-값 쌍의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Executes the <ph id="ph1">`ResolveComReference`</ph> task.</source>
          <target state="translated">실행 된 <ph id="ph1">`ResolveComReference`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if task execution succeeded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업 실행 성공 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Property to allow multitargeting of ResolveComReferences: If true, tlbimp.exe and aximp.exe from the appropriate target framework will be run out-of-proc to generate the necessary wrapper assemblies.</source>
          <target state="translated">ResolveComReferences의 멀티 타기 팅을 허용 하는 속성: true 이면 tlbimp.exe 및 적절 한 대상 프레임 워크에서 aximp.exe 실행 됩니다 필요한 래퍼 어셈블리를 생성할 proc 부족 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When set to true, the typelib version will be included in the wrapper name.</source>
          <target state="translated">때 형식 라이브러리 버전을 true로 설정 래퍼 이름에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Default is false.</source>
          <target state="translated">기본값은 false입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a container that holds a key pair.</source>
          <target state="translated">키 쌍을 보관 하는 컨테이너를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A container that holds a key pair.</source>
          <target state="translated">키 쌍을 보관 하는 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets an item that contains a key pair.</source>
          <target state="translated">키 쌍을 포함 하는 항목을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An item that contains a key pair.</source>
          <target state="translated">키 쌍을 포함 하는 항목입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to pass the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.TypeLibImporterFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag to .tlb wrapper generation.</source>
          <target state="translated">전달할지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.TypeLibImporterFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .tlb 래퍼 생성을 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task should pass the <bpt id="p2">&lt;xref href="System.Runtime.InteropServices.TypeLibImporterFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> flag to .tlb wrapper generation; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업을 전달 해야 하는 경우는 <bpt id="p2">&lt;xref href="System.Runtime.InteropServices.TypeLibImporterFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> .tlb 래퍼 생성 플래그 그렇지 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the resolved assembly references.</source>
          <target state="translated">확인된 된 어셈블리 참조를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resolved assembly references.</source>
          <target state="translated">확인 된 어셈블리 참조입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the fully qualified files on disk that correspond to the physical locations of the type libraries that were provided as input to this task.</source>
          <target state="translated">이 작업에 대 한 입력으로 제공 된 형식 라이브러리의 물리적 위치에 디스크에 해당 하는 정규화 된 파일을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The fully qualified files on disk that correspond to the physical locations of the type libraries that were provided as input to this task.</source>
          <target state="translated">이 작업에 대 한 입력으로 제공 된 형식 라이브러리의 물리적 위치에 해당 하는 디스크의 정규화 된 파일입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the paths to the modules that were found.</source>
          <target state="translated">발견 된 모듈에는 경로 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The paths to the modules that were found.</source>
          <target state="translated">발견 된 모듈에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If ExecuteAsTool is true, this must be set to the SDK tools path for the framework version being targeted.</source>
          <target state="translated">ExecuteAsTool true 이면이 대상 프레임 워크 버전에 대 한 SDK 도구 경로를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag specifying whether messages or warnings are logged.</source>
          <target state="translated">메시지 또는 경고 기록 되는지 여부를 지정 하는 플래그를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, messages and warnings are logged.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 메시지 및 경고를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns the flag.</source>
          <target state="translated">플래그를 반환합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the cache file for COM component timestamps.</source>
          <target state="translated">COM 구성 요소 타임 스탬프에 대 한 캐시 파일을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The cache file for COM component timestamps.</source>
          <target state="translated">COM 구성 요소 타임 스탬프에 대 한 캐시 파일입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The project target framework version.</source>
          <target state="translated">프로젝트 대상 프레임 워크 버전입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Default is empty.</source>
          <target state="translated">기본값은 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>which means there will be no filtering for the reference based on their target framework.</source>
          <target state="translated">즉, 해당 대상 프레임 워크에 따라 참조에 대 한 필터링을 하지 않고 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the preferred target processor architecture, which is passed to the tlbimp.exe /machine flag after translation, for example x86, ia64, amd64 or msil.</source>
          <target state="translated">에 전달 되는 tlbimp.exe /machine 플래그 변환 후, 기본 대상 프로세서 아키텍처의 예에서는 x86, ia64, amd64 또는 msil에 대 한 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the name of the preferred target processor architecture.</source>
          <target state="translated">기본 대상 프로세서 아키텍처의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the type library file path to COM references.</source>
          <target state="translated">COM 참조에 대 한 형식 라이브러리 파일 경로 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property may contain item metadata.</source>
          <target state="translated">이 속성의 항목 메타 데이터를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the section "TypeLibFiles Item Metadata" in <bpt id="p1">[</bpt>ResolveComReference Task<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 "TypeLibFiles 항목 메타 데이터" 섹션을 참조 <bpt id="p1">[</bpt>ResolveComReference 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The type library file path to COM references.</source>
          <target state="translated">COM 참조에 대 한 형식 라이브러리 파일 경로입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the type library names to resolve.</source>
          <target state="translated">형식 라이브러리 이름을 확인할 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property may contain item metadata.</source>
          <target state="translated">이 속성의 항목 메타 데이터를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the section "TypeLibFiles Item Metadata" in <bpt id="p1">[</bpt>ResolveComReference Task<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 "TypeLibFiles 항목 메타 데이터" 섹션을 참조 <bpt id="p1">[</bpt>ResolveComReference 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type library names to resolve.</source>
          <target state="translated">해결 하려면 형식 라이브러리 이름입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the location on disk where the generated interop assembly is placed.</source>
          <target state="translated">생성된 된 interop 어셈블리를 배치할 디스크의 위치를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The location on disk where the generated interop assembly is placed.</source>
          <target state="translated">생성된 된 interop 어셈블리를 배치할 디스크의 위치입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>