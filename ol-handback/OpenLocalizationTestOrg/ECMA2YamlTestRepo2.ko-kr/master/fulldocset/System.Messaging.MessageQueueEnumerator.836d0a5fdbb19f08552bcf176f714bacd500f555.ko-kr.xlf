<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fdb83d175479136df33f1017a6ceab13106b6ed</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.MessageQueueEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1380024aa99fe0714bed20be7f251910813bff7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4672ec0455c354d8f3060781255926efffa18c3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">메시지 큐의 메시지를 열거 하는 정방향 전용 커서를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use MessageQueueEnumerator for dynamic interaction with queues on the network.</source>
          <target state="translated">MessageQueueEnumerator를 사용 하 여 네트워크에서 큐와 동적 상호 작용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods available through the &lt;xref:System.Messaging.MessageQueue&gt; class can return either a MessageQueueEnumerator containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">통해 사용할 수 있는 메서드는 &lt;xref:System.Messaging.MessageQueue&gt;클래스 동적 큐 또는 큐 컬렉션 내의 지정 된 메서드가 호출 된 시간에 대 한 스냅숏을 포함 하는 배열 목록을 포함 하는 MessageQueueEnumerator 중 하나를 반환할 수 있습니다.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">큐는 네트워크에 정의 된 순서가 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">예를 들어 컴퓨터, 레이블, 공개 또는 개인 상태 여 정렬 되거나 다른 사용자를 액세스할 수 있는 기준 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MessageQueueEnumerator is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">MessageQueueEnumerator는 목록 헤드를 동적으로 초기화 하는 커서입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can move the cursor to the first queue of the enumeration by calling &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; 를 호출 하 여 열거형의 첫 번째 큐에 커서를 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the enumerator has been initialized, you can use &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; to step forward through the remaining queues.</source>
          <target state="translated">열거자가 초기화 된 후 사용할 수 있습니다 &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;나머지 큐 앞으로 단계별로 실행 되도록 합니다.&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to step backward with a MessageQueueEnumerator.</source>
          <target state="translated">여는 MessageQueueEnumerator 뒤로 이동 하는 것이 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">커서는 큐 열거형에서 앞으로 이동 하는 것을 허용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can call &lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt; to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">호출할 수 있습니다 &lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;열거형 다시 설정 하 고 다시 목록의 처음에 커서를 놓습니다.&lt;/xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">열거자는 동적 커서의 현재 위치 뒤에 추가 하는 큐 열거자가 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">첫 번째 호출 재설정 하지 않고 커서의 현재 위치 앞에 삽입 하는 큐를 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">열거자와 연결 된 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system retains an open handle, &lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">운영 체제에 대해 열린 핸들이 유지 &lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;, 커서의 수명 동안 큐 열거자에.&lt;/xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you finish working with the enumerator, call Close to release the resources associated with the handle.</source>
          <target state="translated">Close를 호출에서는 열거자와 함께 작업을 완료 하면 핸들에 연결 된 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the enumeration.</source>
          <target state="translated">현재 가져옵니다 <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it does not point to anything, so Current is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">열거자를 만들 때이를 가리키지 않습니다 아무것도 하므로 현재는 유효 하지 하 고 액세스 하는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">호출 해야 &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;열거형의 첫 번째 큐에 커서를 배치할 수 있습니다.&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple calls to Current with no intervening calls to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; will return the same &lt;xref:System.Messaging.MessageQueue&gt; object.</source>
          <target state="translated">에 대 한 중간 호출 된 현재를 여러 번 호출 &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;는 동일한 반환 &lt;xref:System.Messaging.MessageQueue&gt;개체입니다.&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">커서가 현재 배치 되어 큐입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You called Current before the first call to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext<bpt id="p1">*</bpt>&gt;. The cursor is located before the first queue in the enumeration.       -or-       You called Current after a call to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext<ept id="p1">*</ept>&gt; had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">첫 번째 호출 하기 전에 현재 호출 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 합니다. 커서가는 열거형의 첫 번째 큐 앞에 배치 됩니다.       -또는-을 호출한 후에 현재 호출 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; (의 커서가 나타내는 열거의 마지막 대기열 뒤) false를 반환한 것입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Messaging.MessageQueueEnumerator&gt; to be reallocated for other purposes.</source>
          <target state="translated">사용 하는 리소스를 사용 하면 Dispose를 호출는 &lt;xref:System.Messaging.MessageQueueEnumerator&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public &lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 와 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Messaging.MessageQueueEnumerator&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Messaging.MessageQueueEnumerator&gt;참조.&lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">네트워크에서 큐를 찾는 데 사용 하는 네이티브 메시지 큐 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you no longer need this &lt;xref:System.Messaging.MessageQueueEnumerator&gt; instance, call &lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt; to free this handle to the resource.</source>
          <target state="translated">더 이상 필요한 경우이 &lt;xref:System.Messaging.MessageQueueEnumerator&gt;인스턴스를 호출 &lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;리소스에이 핸들을 해제 합니다.&lt;/xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The native handle to the current queue.</source>
          <target state="translated">현재 큐에 대 한 기본 핸들입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handle does not exist.</source>
          <target state="translated">핸들 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">호출 코드 찾아보기 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">현재 사용 가능한 경우 열거자는 열거형의 다음 큐로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext returns <ph id="ph1">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated">MoveNext 반환 <ph id="ph1">`false`</ph> 열거형과 관련 된 큐가 없는 경우 즉시 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext will return <ph id="ph1">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated">MoveNext 돌아갑니다 <ph id="ph1">`true`</ph> 컬렉션의 끝에 도달 하면 될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">그런 다음 반환 합니다 <ph id="ph1">`false`</ph> 각 연속 호출에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However once MoveNext has returned <ph id="ph1">`false`</ph>, accessing the &lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt; property will throw an exception.</source>
          <target state="translated">그러나 MoveNext를 반환 했습니다. 일단 <ph id="ph1">`false`</ph>, 액세스 하는 &lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;속성 예외가 throw 됩니다.&lt;/xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first &lt;xref:System.Messaging.MessageQueue&gt; of the enumeration, and the first call to MoveNext brings the first queue of the enumeration into view.</source>
          <target state="translated">만들어지면 열거자는 일반적으로 배치 중 첫 번째 앞 &lt;xref:System.Messaging.MessageQueue&gt;MoveNext 호출, 열거형 및 첫 번째도 열거형의 첫 번째 큐를 제공 합니다.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next queue; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>열거자 다음 큐;로 이동 성공 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우 열거자는 열거형의 끝에 도달 했습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">호출 코드 찾아보기 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">열거형의 시작 부분을 가리키도록 커서를 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">열거자 앞 으로만 이동 가능한 방향으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">이 메서드를 사용 하 여 열거 된 큐의 시작 부분으로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reset positions the cursor at the first queue in the list.</source>
          <target state="translated">다시 설정 목록에서 첫 번째 큐에 커서를 놓습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; after calling Reset to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">호출할 필요가 없습니다 &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;열거형의 첫 번째 큐 앞으로 커서를 이동할 수는 재설정을 호출한 후.&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the enumeration.</source>
          <target state="translated">현재 가져옵니다 <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">커서가 현재 배치 되어 큐입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>