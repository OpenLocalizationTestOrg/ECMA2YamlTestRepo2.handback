<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a37224856cd55c77f61d74a22c2e7da01d601c04</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.ErrObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bec2e42cbd7ddb4d0d58fc0360689900b5bcdbf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7561f43e964dc435ab31bf0a6f20e0c0ba01667e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_ErrObject" name="ErrObject" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains properties and procedures used to identify and handle run-time errors using the <bpt id="p2">&lt;xref uid="langword_csharp_Err" name="Err" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_ErrObject" name="ErrObject" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모듈 속성 및 식별 하 고 사용 하 여 런타임 오류를 처리 하는 데 사용 되는 프로시저에 포함 되어는 <bpt id="p2">&lt;xref uid="langword_csharp_Err" name="Err" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ErrObject`</ph> module supports the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated"><ph id="ph1">`ErrObject`</ph> 모듈에서는 <ph id="ph2">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;.&lt;/xref:Microsoft.VisualBasic.Information.Err%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Clears all property settings of the <bpt id="p1">&lt;xref uid="langword_csharp_Err" name="Err" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">모든 속성 설정을 지웁니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Err" name="Err" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">`Clear`</ph> to explicitly clear the <ph id="ph2">`Err`</ph> object after an error has been handled, such as when you use deferred error handling with <ph id="ph3">`On Error Resume Next`</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">`Clear`</ph> 명시적으로 선택 취소 된 <ph id="ph2">`Err`</ph> 오류가 처리 된 후, 지연 된 오류 처리를 사용 하는 경우 등 개체 <ph id="ph3">`On Error Resume Next`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Clear`</ph> method is called automatically whenever any of the following statements executes:      -   Any type of <ph id="ph2">`Resume`</ph> statement      -   <ph id="ph3">`Exit Sub`</ph>, <ph id="ph4">`Exit Function`</ph>, or <ph id="ph5">`Exit Property`</ph>      -   Any <ph id="ph6">`On Error`</ph> statement      -   Any <ph id="ph7">`Try...Catch...Finally`</ph> statement          &gt; <ph id="ph8">[!NOTE]</ph>     &gt;  The <ph id="ph9">`On Error Resume Next`</ph> construct may be preferable to <ph id="ph10">`On Error GoTo`</ph> when handling errors generated during access to other objects.</source>
          <target state="translated"><ph id="ph1">`Clear`</ph> 메서드는 다음 문을 실행할 때마다:-모든 종류의 <ph id="ph2">`Resume`</ph> 문- <ph id="ph3">`Exit Sub`</ph>, <ph id="ph4">`Exit Function`</ph>, 또는 <ph id="ph5">`Exit Property`</ph> -모든 <ph id="ph6">`On Error`</ph> 문-모든 <ph id="ph7">`Try...Catch...Finally`</ph> 문 &gt; <ph id="ph8">[!NOTE]</ph> &gt;는 <ph id="ph9">`On Error Resume Next`</ph> 구문에 더 적합할 수 있습니다 <ph id="ph10">`On Error GoTo`</ph> 다른 개체에 액세스 하는 동안 발생 한 오류를 처리 하는 경우.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Checking <ph id="ph1">`Err`</ph> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <ph id="ph2">`Err.Number`</ph>, as well as which object originally generated the error (the object specified in <ph id="ph3">`Err.Source`</ph>).</source>
          <target state="translated">검사 <ph id="ph1">`Err`</ph> 개체와 함께 각 상호 작용 개체는 코드에서 액세스 된 후: 확인할 수 있는 개체의 오류 코드에 배치 <ph id="ph2">`Err.Number`</ph>, 개체가 원래 오류를 생성 뿐만 아니라 (에 지정 된 개체가 <ph id="ph3">`Err.Source`</ph>).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing a descriptive string associated with an error.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 오류와 관련 된 설명 문자열을 포함 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Description`</ph> property setting consists of a short description of the error.</source>
          <target state="translated"><ph id="ph1">`Description`</ph> 속성 설정은 오류에 대 한 간단한 설명을 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to alert the user to an error that you cannot or do not want to handle.</source>
          <target state="translated">한 오류를 처리할 수 없거나 처리 되지 않을 사용자에 게 알리도록 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When generating a user-defined error, assign a short description of your error to the <ph id="ph1">`Description`</ph> property.</source>
          <target state="translated">사용자 정의 오류를 생성 하는 경우 해당 오류에 대 한 간단한 설명을 할당는 <ph id="ph1">`Description`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Description`</ph> property is not filled in, and the value of the &lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt; property corresponds to a Visual Basic run-time error, then the string returned by the &lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt; function is set in the <ph id="ph2">`Description`</ph> property when the error is generated.</source>
          <target state="translated">경우는 <ph id="ph1">`Description`</ph> 속성, 입력 값과는 &lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;반환 하는 문자열이 한 다음 속성은 Visual Basic 런타임 오류에 해당는 &lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;함수에 설정 되어는 <ph id="ph2">`Description`</ph> 오류가 발생 하는 경우이 속성.&lt;/xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt; &lt;/xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing a descriptive string associated with an error.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 오류와 관련 된 설명 문자열을 포함 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">줄 번호 없음를 못한 경우 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">발생 한 오류를 나타내는 예외를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`GetException`</ph> function is available only from the <ph id="ph2">`Err`</ph> object class.</source>
          <target state="translated"><ph id="ph1">`GetException`</ph> 함수는 에서만 사용할 수는 <ph id="ph2">`Err`</ph> 개체 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>It works with the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">`Err`</ph> object to display the error that has occurred.</source>
          <target state="translated">와 함께 작동는 <ph id="ph1">`Exception`</ph> 의 속성은 <ph id="ph2">`Err`</ph> 발생 한 오류를 표시 하려면 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">발생 한 오류를 나타내는 예외를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns or sets an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the context ID for a topic in a Help file.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 도움말 파일의 항목에 대 한 컨텍스트 ID를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`HelpContext`</ph> property is used to display context-sensitive Help for an application.</source>
          <target state="translated"><ph id="ph1">`HelpContext`</ph> 속성은 응용 프로그램에 대 한 상황에 맞는 도움말을 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a Help file is specified in <ph id="ph1">`HelpFile`</ph>, the <ph id="ph2">`HelpContext`</ph> property is used to automatically display the Help file identified.</source>
          <target state="translated">도움말 파일을 지정 하는 경우 <ph id="ph1">`HelpFile`</ph>, <ph id="ph2">`HelpContext`</ph> 속성은 자동으로 식별 된 도움말 파일을 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both the <ph id="ph1">`HelpFile`</ph> and <ph id="ph2">`HelpContext`</ph> properties are empty, the value of the &lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt; property  is checked.</source>
          <target state="translated">모두는 <ph id="ph1">`HelpFile`</ph> 및 <ph id="ph2">`HelpContext`</ph> 속성은 비어의 값은 &lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;속성을 검사 합니다.&lt;/xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the <ph id="ph1">`Number`</ph> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">`Number`</ph> 속성 값에 해당 하는 Visual Basic 런타임 오류 아니면 오류에 대 한 Visual Basic 도움말 컨텍스트 ID를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the <ph id="ph1">`Number`</ph> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">`Number`</ph> 속성 Visual Basic 오류에 해당 하지 않는, Visual Basic 도움말 파일에 대 한 내용을 화면이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should write routines in your application to handle typical errors.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일반 오류를 처리 하도록 응용 프로그램에서 루틴을 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">개체를 프로그래밍할 때 여 오류 처리의 품질을 향상 하거나 오류를 복구할 수 없는 경우 프로그램 사용자에 게 의미 있는 메시지를 표시 하도록 개체의 도움말 파일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns or sets an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the context ID for a topic in a Help file.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 도움말 파일의 항목에 대 한 컨텍스트 ID를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 도움말 파일의 정규화 된 경로 포함 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a Help file is specified by the <ph id="ph1">`HelpFile`</ph> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</source>
          <target state="translated">도움말 파일을 통해 지정 된 경우는 <ph id="ph1">`HelpFile`</ph> 속성을 자동으로 호출 하는 도움말 키 (또는 F1 키)를 누를 때 오류 메시지 대화 상자.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`HelpContext`</ph> property contains a valid context ID for the specified file, that topic is automatically displayed.</source>
          <target state="translated">경우는 <ph id="ph1">`HelpContext`</ph> 속성 포함 올바른 컨텍스트 ID를 지정된 된 파일을 해당 항목에 대 한 자동으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">`HelpFile`</ph> is specified, the Visual Basic Help file is displayed.</source>
          <target state="translated">하지 않으면 <ph id="ph1">`HelpFile`</ph> 지정, Visual Basic 도움말 파일이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should write routines in your application to handle typical errors.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일반 오류를 처리 하도록 응용 프로그램에서 루틴을 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">개체를 프로그래밍할 때 여 오류 처리의 품질을 향상 하거나 오류를 복구할 수 없는 경우 프로그램 사용자에 게 의미 있는 메시지를 표시 하도록 개체의 도움말 파일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 도움말 파일의 정규화 된 경로 포함 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">동적 연결 라이브러리 (DLL)에 대 한 호출에서 생성 되는 시스템 오류 코드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LastDllError property applies only to DLL calls made from Visual Basic code.</source>
          <target state="translated">LastDllError 속성 Visual Basic 코드에서 DLL 호출에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When such a call is made, the called function usually returns a code indicating success or failure, and the LastDllError property is filled.</source>
          <target state="translated">이러한 호출을 수행 하는 경우 호출된 된 함수에는 일반적으로 성공 또는 실패를 나타내는 코드를 반환 하 고 LastDllError 속성이 채워집니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</source>
          <target state="translated">성공 또는 실패를 나타내는 반환 값을 결정 하는 DLL의 함수에 대 한 설명서를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the failure code is returned, the Visual Basic application should immediately check the LastDllError property.</source>
          <target state="translated">오류 코드가 반환 되는 때마다 Visual Basic 응용 프로그램 LastDllError 속성 즉시 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is raised when the LastDllError property is set.</source>
          <target state="translated">LastDllError 속성이 설정 된 경우 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The LastDllError property is protected by &lt;xref:System.Security.Permissions.SecurityAction&gt;, which helps prevent it from being accessed from untrusted code.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The LastDllError 속성을 보호 &lt;xref:System.Security.Permissions.SecurityAction&gt;에서 신뢰할 수 없는 코드에서 액세스 하는 사용 되지 않도록 합니다.&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Security.Permissions.SecurityAction&gt; requires only the immediate caller to have &lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt; permission.</source>
          <target state="translated">그러나 &lt;xref:System.Security.Permissions.SecurityAction&gt;을 직접 실행 호출자만 필요 &lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;권한.&lt;/xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt; &lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your code can be called from partially trusted code, exposing the value of LastDllError without validation is a security risk.</source>
          <target state="translated">코드와 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는 경우 유효성 검사 없이 LastDllError의 값을 노출 되어 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  For important limitations about how to use the &lt;xref:System.Security.Permissions.SecurityAction&gt; member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">&gt;&gt; 사용 하는 방법에 대 한 중요 한 제한에 대 한는 &lt;xref:System.Security.Permissions.SecurityAction&gt;멤버 참조 <bpt id="p1">[</bpt>비교 요구&lt;/xref:System.Security.Permissions.SecurityAction&gt; LinkDemand<ept id="p1">](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about permissions, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">사용 권한에 대 한 자세한 내용은 참조 &lt;xref:System.Security.Permissions.SecurityPermission&gt;및 <bpt id="p1">[</bpt>코드 액세스 권한<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.&lt;/xref:System.Security.Permissions.SecurityPermission&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note   For smart devices this property always returns zero.</source>
          <target state="translated">Note 스마트 장치에 대 한이 속성은 항상&amp;0;을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">동적 연결 라이브러리 (DLL)에 대 한 호출에서 생성 되는 시스템 오류 코드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">반환 하거나 오류를 지정 하는 숫자 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">모든는 <ph id="ph1">`Raise`</ph> 제외한 인수 <ph id="ph2">`Number`</ph> 는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">속성 설정 및 선택적 인수를 생략 하면는 <ph id="ph1">`Err`</ph> 지워지지 않은 값을 포함 하는 개체, 해당 값이 해당 오류에 대 한 값으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">때문에 <ph id="ph1">`Err`</ph> 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 하는 개체는 <ph id="ph2">`Error`</ph> 문, <ph id="ph3">`Raise`</ph> 클래스 모듈을 쓸 때 오류를 생성 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">예를 들어,는 <ph id="ph1">`Raise`</ph> 메서드, 오류를 생성 하는 원본에 지정할 수 있습니다는 <ph id="ph2">`Source`</ph> 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When returning a user-defined error from an object, set <ph id="ph1">`Err.Number`</ph> by adding the number you selected as an error code to the <ph id="ph2">`VbObjectError`</ph> constant.</source>
          <target state="translated">개체에서 사용자 정의 오류를 반환할 때 설정 <ph id="ph1">`Err.Number`</ph> 를 오류 코드로 선택한 수를 추가 하 여는 <ph id="ph2">`VbObjectError`</ph> 상수입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you use the following code to return the number 1051 as an error code:       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrErrorHandling#13<ept id="p2">](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated">오류 코드로 1051 개수를 반환 하려면 다음 코드를 사용 예를 들어: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrErrorHandling #13<ept id="p2">](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">반환 하거나 오류를 지정 하는 숫자 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is greater than 65535.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>65535 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Generates a run-time error; can be used instead of the <bpt id="p1">&lt;xref uid="langword_csharp_Error" name="Error" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> statement.</source>
          <target state="translated">런타임 오류가 발생; 대신 사용할 수는 <bpt id="p1">&lt;xref uid="langword_csharp_Error" name="Error" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 문.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">모든는 <ph id="ph1">`Raise`</ph> 제외한 인수 <ph id="ph2">`Number`</ph> 는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">속성 설정 및 선택적 인수를 생략 하면는 <ph id="ph1">`Err`</ph> 지워지지 않은 값을 포함 하는 개체, 해당 값이 해당 오류에 대 한 값으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">때문에 <ph id="ph1">`Err`</ph> 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 하는 개체는 <ph id="ph2">`Error`</ph> 문, <ph id="ph3">`Raise`</ph> 클래스 모듈을 쓸 때 오류를 생성 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">예를 들어,는 <ph id="ph1">`Raise`</ph> 메서드, 오류를 생성 하는 원본에 지정할 수 있습니다는 <ph id="ph2">`Source`</ph> 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> integer that identifies the nature of the error.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>오류의 특성을 식별 하는 정수입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</source>
          <target state="translated">Visual Basic 오류 0-65535 범위에 있습니다 범위 0-512은 시스템 오류;에 예약 되어 있습니다. 513-65535 범위는 사용자 정의 오류에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When setting the <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property to your own error code in a class module, you add your error code number to the <bpt id="p2">&lt;xref uid="langword_csharp_vbObjectError" name="vbObjectError" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> constant.</source>
          <target state="translated">설정할 때의 <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 모듈에 해당 하는 오류 코드에 대 한 속성을 추가한 사용자의 오류 코드 번호를는 <bpt id="p2">&lt;xref uid="langword_csharp_vbObjectError" name="vbObjectError" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 상수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, to generate the error number 513, assign <ph id="ph1">`vbObjectError + 513`</ph> to the <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">예를 들어 513 오류 번호를 생성 하려면 할당 <ph id="ph1">`vbObjectError + 513`</ph> 에 <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression naming the object or application that generated the error.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체 또는 오류를 발생 시킨 응용 프로그램 이름을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When setting this property for an object, use the form <ph id="ph1">`project`</ph>.<ph id="ph2">`class`</ph>.</source>
          <target state="translated">개체에 대 한이 속성을 설정할 때 사용 폼 <ph id="ph1">`project`</ph>.<ph id="ph2">`class`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Source`</ph> is not specified, the process ID of the current Visual Basic project is used.</source>
          <target state="translated">경우 <ph id="ph1">`Source`</ph> 를 지정 하지 않으면 현재 Visual Basic 프로젝트의 프로세스 ID를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression describing the error.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>오류를 설명 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If unspecified, the value in the <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is examined.</source>
          <target state="translated">지정 하지 않으면 값은 <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <bpt id="p1">&lt;xref uid="langword_csharp_Error" name="Error" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is used as the <bpt id="p2">&lt;xref uid="langword_csharp_Description" name="Description" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">Visual Basic 런타임 오류 매핑될 수 있는 경우 코드를 통해 반환 되는 문자열의 <bpt id="p1">&lt;xref uid="langword_csharp_Error" name="Error" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수도 사용 되는 <bpt id="p2">&lt;xref uid="langword_csharp_Description" name="Description" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If there is no Visual Basic error corresponding to the <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property, the "Application-defined or object-defined error" message is used.</source>
          <target state="translated">에 해당 하는 Visual Basic 오류가 없는 경우는 <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성을 "응용 프로그램 정의 또는 개체 정의 오류" 메시지가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The fully qualified path to the Help file in which help on this error can be found.</source>
          <target state="translated">이 오류에 대 한 도움말을 찾을 수 있는 도움말 파일에 대 한 정규화 된 경로입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</source>
          <target state="translated">지정 하지 않으면 Visual Basic 정규화 드라이브, 경로 및 Visual Basic 도움말 파일의 파일 이름을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The context ID identifying a topic within <ph id="ph1">`HelpFile`</ph> that provides help for the error.</source>
          <target state="translated">내에서 항목을 식별 하는 컨텍스트 ID <ph id="ph1">`HelpFile`</ph> 오류에 대 한 도움말을 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If omitted, the Visual Basic Help-file context ID for the error corresponding to the <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is used, if it exists.</source>
          <target state="translated">에 해당 하는 오류에 대 한 Visual Basic 도움말 파일 컨텍스트 ID를 지정 하지 않으면는 <bpt id="p1">&lt;xref uid="langword_csharp_Number" name="Number" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성이 있는 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 또는 원래 오류를 생성 하는 응용 프로그램의 이름을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Source`</ph> property specifies a <ph id="ph2">`String`</ph> expression representing the object that generated the error; the expression is usually the object's class name or process ID.</source>
          <target state="translated"><ph id="ph1">`Source`</ph> 속성 지정는 <ph id="ph2">`String`</ph> 개체를 나타내는 식을 오류를 생성 하는 되므로 일반적으로 식은 개체의 클래스 이름 또는 프로세스 id입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Source`</ph> property to provide information when your code is unable to handle an error generated in an accessed object.</source>
          <target state="translated">사용 된 <ph id="ph1">`Source`</ph> 코드 액세스 된 개체에서 생성 된 오류를 처리할 수 없는 경우 정보를 제공 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you access Microsoft Excel and it generates a <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel sets <ph id="ph2">`Err.Number`</ph> to its error code for that error and sets <ph id="ph3">`Source`</ph> to "Excel.Application".</source>
          <target state="translated">예를 들어, Microsoft Excel을 액세스 하 고 생성 하는 경우는 <ph id="ph1">`Division by zero`</ph> 오류를 Microsoft Excel 설정 <ph id="ph2">`Err.Number`</ph> 해당 오류 및 집합의 오류 코드를 <ph id="ph3">`Source`</ph> "Excel.Application"에 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application is generating an error from code, <ph id="ph1">`Source`</ph> is your application's programmatic ID.</source>
          <target state="translated">응용 프로그램 코드에서 오류가 생성 되는 경우 <ph id="ph1">`Source`</ph> 프로그래밍 방식으로 응용 프로그램의 ID입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within a class, <ph id="ph1">`Source`</ph> should contain a name having the form <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.<bpt id="p2">*</bpt>class<ept id="p2">*</ept>.</source>
          <target state="translated">클래스 내 <ph id="ph1">`Source`</ph> 형식 이름이 포함 되어야 <bpt id="p1">*</bpt>프로젝트<ept id="p1">*</ept>.<bpt id="p2">*</bpt> 클래스<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an unexpected error occurs in your code, the <ph id="ph1">`Source`</ph> property is automatically filled in.</source>
          <target state="translated">사용자 코드에서 예기치 않은 오류가 발생 하는 경우는 <ph id="ph1">`Source`</ph> 속성이 자동으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For errors in a module, <ph id="ph1">`Source`</ph> contains the project name.</source>
          <target state="translated">모듈에 오류에 대 한 <ph id="ph1">`Source`</ph> 프로젝트 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">반환 하거나 설정는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 또는 원래 오류를 생성 하는 응용 프로그램의 이름을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>