<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37e507b692d22cbd6ad4e589a76d68e2460b3f57</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Information.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410e11b7ce97a043e4b28e67faab6d4b0841b980</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c09943a549e137ae8049e7252a5922fd68398c89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Information" name="Information" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains the procedures used to return, test for, or verify information.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Information" name="Information" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모듈에 반환할 테스트 또는 정보를 확인 하는 데 사용 하는 절차가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</source>
          <target state="translated">이 모듈은 Visual Basic 언어 키워드와 오류 정보를 제공, 데이터 유효성 검사, 배열 범위를 결정 및 데이터 형식 및 색 정보를 검색 하는 런타임 라이브러리 멤버를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">줄 번호 없음를 못한 경우 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Contains information about run-time errors.</source>
          <target state="translated">런타임 오류에 대 한 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties of the <ph id="ph1">`Err`</ph> object are set by the generator of an error—Visual Basic, an object, or the programmer.</source>
          <target state="translated">속성은 <ph id="ph1">`Err`</ph> 개체가 오류가 생성자에 의해 설정 됩니다-Visual Basic, 개체 또는 프로그래머가 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a run-time error occurs, the properties of the <ph id="ph1">`Err`</ph> object are filled with information that uniquely identifies the error and that you can use to handle the error.</source>
          <target state="translated">런타임 오류가 발생할 때의 속성은 <ph id="ph1">`Err`</ph> 오류를 고유 하 게 식별 하는 정보로 채워진 개체를 오류를 처리 하는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate a run-time error in your code, use the <ph id="ph1">`Raise`</ph> method.</source>
          <target state="translated">코드에서 런타임 오류를 생성 하려면 사용 된 <ph id="ph1">`Raise`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Err`</ph> object's properties are reset to zero or zero-length strings ("") after an <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, or <ph id="ph5">`Resume Next`</ph> statement within an error-handling routine.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> 개체의 속성을&amp;0; 또는 빈 문자열 다시 설정 됩니다 ("") 한 후는 <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, 또는 <ph id="ph5">`Resume Next`</ph> 오류 처리 루틴 내에 문의 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using any form of the <ph id="ph1">`Resume`</ph> statement outside of an error-handling routine will not reset the <ph id="ph2">`Err`</ph> object's properties.</source>
          <target state="translated">모든 형태를 사용 하는 <ph id="ph1">`Resume`</ph> 오류 처리 루틴 외부로 다시 설정 되지 것입니다는 <ph id="ph2">`Err`</ph> 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`Clear`</ph> method to explicitly reset <ph id="ph2">`Err`</ph>.</source>
          <target state="translated">사용할 수는 <ph id="ph1">`Clear`</ph> 메서드를 명시적으로 다시 설정할 <ph id="ph2">`Err`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Raise`</ph> method rather than the <ph id="ph2">`Error`</ph> statement to generate run-time errors for system errors and class modules.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`Raise`</ph> 메서드 보다는 <ph id="ph2">`Error`</ph> 시스템 오류에 대 한 런타임 오류를 생성 하 고 클래스 모듈 문을 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your decision about whether to use the <ph id="ph1">`Raise`</ph> method in other code depends on the richness of the information you want to return.</source>
          <target state="translated">사용할지 여부를 결정 하는 <ph id="ph1">`Raise`</ph> 다른 코드에서 메서드 반환 하려는 정보의 양에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Err`</ph> object is an intrinsic object with global scope.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> 개체는 글로벌 범위를 갖는 내장 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you do not need to create an instance of it in your code.</source>
          <target state="translated">따라서 코드에 해당 형식의 인스턴스를 만들 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Contains information about run-time errors.</source>
          <target state="translated">런타임 오류에 대 한 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a variable points to an array.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수가 배열을 가리키는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsArray`</ph> returns <ph id="ph2">`True`</ph> if the variable points to an array; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph>반환 <ph id="ph2">`True`</ph> 변수가 배열을 가리키는지; 그렇지 않으면 반환 <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsArray`</ph> is especially useful with objects that might contain arrays.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph>배열을 포함 하는 개체와 특히 유용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>변수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a variable points to an array.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수가 배열을 가리키는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression represents a valid <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식을 유효한 나타내는지 여부를 나타내는 값 <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is of the &lt;xref:System.DateTime&gt; data type or can be converted to it; otherwise, it returns <ph id="ph4">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph>반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 입니다는 &lt;xref:System.DateTime&gt;데이터 입력 수에 변환 된 없으면, 반환 하거나 <ph id="ph4">`False`</ph>.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.DateTime&gt; data type holds both a date value and a time value.</source>
          <target state="translated">&lt;xref:System.DateTime&gt;데이터 형식은 날짜 값과 시간 값을 갖습니다.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a valid date, a valid time, or a valid date and time.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph>반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 유효한 날짜, 유효한 시간 또는 유효한 날짜 및 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression represents a valid <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식을 유효한 나타내는지 여부를 나타내는 값 <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to the <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식으로 계산 될 수 있는지 여부를 나타내는 값의 <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDBNull`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> evaluates to the &lt;xref:System.DBNull&gt; type; otherwise, <ph id="ph4">`IsDBNull`</ph> returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDBNull`</ph>반환 <ph id="ph2">`True`</ph> 의 데이터 형식이 <ph id="ph3">`Expression`</ph> 로 평가 되는 &lt;xref:System.DBNull&gt;입력; 그렇지 않으면 <ph id="ph4">`IsDBNull`</ph> 반환 <ph id="ph5">`False`</ph>.&lt;/xref:System.DBNull&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.DBNull?displayProperty=fullName&gt; value indicates that the <ph id="ph1">`Object`</ph> represents missing or nonexistent data.</source>
          <target state="translated">&lt;xref:System.DBNull?displayProperty=fullName&gt;값 이면는 <ph id="ph1">`Object`</ph> 없거나 존재 하지 않는 데이터를 나타냅니다.&lt;/xref:System.DBNull?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DBNull`</ph> is not the same as <ph id="ph2">`Nothing`</ph>, which indicates that a variable has not yet been initialized.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph>와 동일 하지는 <ph id="ph2">`Nothing`</ph>는 변수가 초기화 되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DBNull`</ph> is also not the same as a zero-length string (<ph id="ph2">`""`</ph>), which is sometimes referred to as a null string.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph>또한 같지 않습니다 길이가&amp;0; 인 문자열 (<ph id="ph2">`""`</ph>), null 문자열 참조 되는 경우에 따라 있는 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to the <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식으로 계산 될 수 있는지 여부를 나타내는 값의 <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression is an exception type.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식이 예외 유형 인지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsError`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an <ph id="ph3">`Object`</ph> variable that derives from the &lt;xref:System.Exception&gt; class in the &lt;xref:System&gt; namespace.</source>
          <target state="translated"><ph id="ph1">`IsError`</ph>반환 <ph id="ph2">`True`</ph> 식이 나타내는 경우는 <ph id="ph3">`Object`</ph> 변수에서 파생 되는 &lt;xref:System.Exception&gt;클래스에 &lt;xref:System&gt;네임 스페이스.&lt;/xref:System&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that derives from &lt;xref:System.Exception?displayProperty=fullName&gt; can be caught with the <ph id="ph1">`Try...Catch...Finally`</ph> statements.</source>
          <target state="translated">파생 되는 예외 &lt;xref:System.Exception?displayProperty=fullName&gt;와 낼 수 있습니다는 <ph id="ph1">`Try...Catch...Finally`</ph> 문.&lt;/xref:System.Exception?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression is an exception type.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식이 예외 유형 인지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식에 할당 된 개체가 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNothing`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph>반환 <ph id="ph2">`True`</ph> 반환 하는 경우 식이 현재 개체에 할당 된, 그렇지 않으면 되지 않는 개체 변수를 나타내는, <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNothing`</ph> is intended to work on reference types.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph>참조 형식에서 작동 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value type cannot hold a value of  and reverts to its default value if you assign <ph id="ph1">`Nothing`</ph> to it.</source>
          <target state="translated">값 형식을의 값을 보유할 수 없습니다 및 할당 하는 경우 값이 기본값으로 되돌아갑니다 <ph id="ph1">`Nothing`</ph> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you supply a value type in <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> always returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated">에 값 형식을 제공 하는 경우 <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> 항상 반환 <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식에 할당 된 개체가 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 숫자 식을 계산 될 수 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also returns <ph id="ph1">`True`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that can be successfully converted to a number.</source>
          <target state="translated">또한 반환 <ph id="ph1">`True`</ph> 경우 <ph id="ph2">`Expression`</ph> 는 <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, 또는 <ph id="ph5">`Object`</ph> 숫자로 성공적으로 변환할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Expression`</ph> can contain non-numeric characters.</source>
          <target state="translated"><ph id="ph1">`Expression`</ph>숫자가 아닌 문자를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is a string that contains a valid hexadecimal or octal number.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 유효한&amp;16; 진수 또는&amp;8; 진수 숫자를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> also returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> contains a valid numeric expression that begins with a + or - character or contains commas.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>도 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 로 시작 하는 유효한 숫자 식에 포함 되어는 + 또는-문자 또는 쉼표를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`False`</ph> if <ph id="ph3">`Expression`</ph> is of data type <ph id="ph4">`Date`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>반환 <ph id="ph2">`False`</ph> 경우 <ph id="ph3">`Expression`</ph> 데이터 형식의 <ph id="ph4">`Date`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns <ph id="ph1">`False`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that cannot be successfully converted to a number.</source>
          <target state="translated">반환 <ph id="ph1">`False`</ph> 경우 <ph id="ph2">`Expression`</ph> 는 <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, 또는 <ph id="ph5">`Object`</ph> 를 변환할 수 없는 성공적으로 숫자입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 숫자 식을 계산 될 수 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식이 참조 형식으로 계산 될 수 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsReference`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a reference type, such as a class instance, a <ph id="ph4">`String`</ph> type, or an array of any type; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph>반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 클래스 인스턴스를 같은 참조 형식, 나타냅니다는 <ph id="ph4">`String`</ph> 형식 또는 모든 형식의; 배열 그렇지 <ph id="ph5">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference type contains a pointer to data stored elsewhere in memory.</source>
          <target state="translated">참조 형식이 다른 위치에서 메모리에 저장 된 데이터에 대 한 포인터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value type contains its own data.</source>
          <target state="translated">값 형식 자체 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식이 참조 형식으로 계산 될 수 있는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">지정된 된 배열 차원의 사용할 수 있는 최저 첨자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</source>
          <target state="translated">배열 첨자가 0에서 시작 하므로 모든 차원에 대해 사용할 수 있는 최저 첨자는 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an array with the following dimensions, <ph id="ph1">`LBound`</ph> returns the values in the following table:      <ph id="ph2">```vb#   Dim a(100, 5, 4) As Byte   ```</ph>      |Call to LBound|Return value|   |--------------------|------------------|   |<ph id="ph3">`LBound(a, 1)`</ph>|0|   |<ph id="ph4">`LBound(a, 2)`</ph>|0|   |<ph id="ph5">`LBound(a, 3)`</ph>|0|</source>
          <target state="translated">다음 차원 배열에 대해 <ph id="ph1">`LBound`</ph> 다음 표에 값을 반환 합니다.: <ph id="ph2">```vb#   Dim a(100, 5, 4) As Byte   ```</ph> | LBound에 대 한 호출 | 반환 값 |   |--------------------|------------------|   | <ph id="ph3">`LBound(a, 1)`</ph>|0|   | <ph id="ph4">`LBound(a, 2)`</ph>|0|   | <ph id="ph5">`LBound(a, 3)`</ph>|0|</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Array of any data type.</source>
          <target state="translated">모든 데이터 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The array in which you want to find the lowest possible subscript of a dimension.</source>
          <target state="translated">차원의 사용 가능한 최저 첨자를 찾으려고 할 수 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The dimension for which the lowest possible subscript is to be returned.</source>
          <target state="translated">가능한 최저 첨자 반환할 차원입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">2 초에 대 한 첫 번째 차원에 대 한 1을 사용 하 여 등에입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Rank`</ph> is omitted, 1 is assumed.</source>
          <target state="translated">경우 <ph id="ph1">`Rank`</ph> 는 생략 하면 1이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The lowest value the subscript for the specified dimension can contain.</source>
          <target state="translated">지정된 된 차원에 대 한 첨자는 가장 낮은 값 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> always returns 0 as long as <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p2">&lt;/code&gt;</ept> has been initialized, even if it has no elements, for example if it is a zero-length string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>항상 0을 반환 합니다 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p2">&lt;/code&gt;</ept> 예를 들어 길이가 0 인 문자열인 경우 요소가 없는 경우에 초기화 되었습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> throws an &lt;xref:System.ArgumentNullException&gt;.</source>
          <target state="translated">If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> throws an &lt;xref:System.ArgumentNullException&gt;.&lt;/xref:System.ArgumentNullException&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph> less than 1, or <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> is greater than the rank of <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph>1 보다 작으면 또는 <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> 의 순위 보다 크면 <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 숫자 색을 지정 된 해당 RGB 색 코드를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</source>
          <target state="translated">반환된 된 값 최하위 바이트 부터는 Visual Basic 언어에서 사용 하는 RGB 시스템의 적절 한 색을 설정 하는 데 빨강, 녹색 및 파랑 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Color`</ph> argument has these settings.</source>
          <target state="translated"><ph id="ph1">`Color`</ph> 인수에 이러한 설정이 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Number|Color|Number|Color|   |------------|-----------|------------|-----------|   |0|Black|8|Gray|   |1|Blue|9|Light blue|   |2|Green|10|Light green|   |3|Cyan|11|Light cyan|   |4|Red|12|Light red|   |5|Magenta|13|Light magenta|   |6|Yellow|14|Light yellow|   |7|White|15|Bright white|</source>
          <target state="translated">| 숫자 | 색 | 숫자 | 색 |   |------------|-----------|------------|-----------|   |&amp;0; | 블랙 |&amp;8; | 회색 |   |&amp;1; | 파란색 |&amp;9; | 연한 파랑 |   |&amp;2; | 녹색 |&amp;10; | 연한 녹색 |   |&amp;3; | 녹청 |&amp;11; | 밝은 녹청 |   |&amp;4; | 빨간색 |&amp;12; | 빨간색 연한 |   |&amp;5; | 자홍 |&amp;13; | 자홍 연한 |   |&amp;6; | 노란색 |&amp;14; | 연한 노랑 |   |&amp;7; | 흰색 |&amp;15; | 밝은 흰색 |</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A whole number in the range 0–15.</source>
          <target state="translated">0에서 15 사이의 정수입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 숫자 색을 지정 된 해당 RGB 색 코드를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Color&lt;/code&gt;</ph> is outside of range 0 to 15, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Color&lt;/code&gt;</ph>0에서 15 까지의 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 빨간색, 녹색 및 파란색 구성 요소 집합에서 RGB 색상 값을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</source>
          <target state="translated">색 사양을 사용할 수 있는 응용 프로그램 메서드 및 속성 사양이 RGB를 나타내는 숫자 색 값을 기대 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</source>
          <target state="translated">RGB 색상 값 빨간색, 녹색 및 파란색 표시할 특정 색의 상대 강도 지정 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value for any argument to <ph id="ph1">`RGB`</ph> is greater than 255, 255 is used.</source>
          <target state="translated">경우에 대 한 인수 값 <ph id="ph1">`RGB`</ph> 255 보다 크면 255가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists some standard colors and the red, green, and blue values they include.</source>
          <target state="translated">다음 표에서 일부 표준 색과 포함 된 빨간색, 녹색 및 파랑 값을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Color|Red value|Green value|Blue value|   |-----------|---------------|-----------------|----------------|   |Black|0|0|0|   |Blue|0|0|255|   |Green|0|255|0|   |Cyan|0|255|255|   |Red|255|0|0|   |Magenta|255|0|255|   |Yellow|255|255|0|   |White|255|255|255|</source>
          <target state="translated">| 색 | 빨간색 값 | 값을 녹색 | 값을 파랑 |   |-----------|---------------|-----------------|----------------|   | 블랙 |&amp;0; |&amp;0; |&amp;0; |   | 파란색 |&amp;0; |&amp;0; |&amp;255; |   | 녹색 |&amp;0; |&amp;255; |&amp;0; |   | 녹청 |&amp;0; |&amp;255; |&amp;255; |   | 빨간색 |&amp;255; |&amp;0; |&amp;0; |   | 자홍 |&amp;255; |&amp;0; |&amp;255; |   | 노란색 |&amp;255; |&amp;255; |&amp;0; |   | 흰색 |&amp;255; |&amp;255; |&amp;255; |</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>0 – 255 범위에는 빨간색의 농도 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>0 – 255 범위에 색의 녹색의 강도 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>0 – 255 범위에 색의 파랑의 강도 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 빨간색, 녹색 및 파란색 구성 요소 집합에서 RGB 색상 값을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Green&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;Blue&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;Red&lt;/code&gt;</ph> is outside of range 0 to 255, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Green&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;Blue&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;Red&lt;/code&gt;</ph> 0부터 255 까지의 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the system data type name of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수 시스템 데이터 형식 이름을 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SystemTypeName`</ph> returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</source>
          <target state="translated"><ph id="ph1">`SystemTypeName`</ph>정규화 된 공용 언어 런타임 (CLR) 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VbName`</ph> contains "Date", <ph id="ph2">`SystemTypeName`</ph> returns "System.DateTime".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VbName`</ph> "Date" 포함 <ph id="ph2">`SystemTypeName`</ph> "System.DateTime"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SystemTypeName`</ph> does not recognize the value of <ph id="ph2">`VbName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">경우 <ph id="ph1">`SystemTypeName`</ph> 의 값을 인식 하지 않으므로 <ph id="ph2">`VbName`</ph>, 반환 <ph id="ph3">`Nothing`</ph> (문자열이 아니라 "없음").</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable containing a Visual Basic type name.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic 형식 이름을 포함 하는 변수입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the system data type name of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수 시스템 데이터 형식 이름을 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing data-type information about a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수에 대 한 데이터 형식 정보를 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the <ph id="ph1">`String`</ph> values returned by <ph id="ph2">`TypeName`</ph> for different contents of <ph id="ph3">`VarName`</ph>.</source>
          <target state="translated">다음 표는 <ph id="ph1">`String`</ph> 반환한 값 <ph id="ph2">`TypeName`</ph> 의 서로 다른 내용에 대 한 <ph id="ph3">`VarName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>|<ph id="ph1">`VarName`</ph> contents|String returned|   |------------------------|---------------------|   |16-bit <ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph> value type|"Boolean"|   |8-bit binary value type|"Byte"|   |16-bit character value type|"Char"|   |64-bit date and time value type|"Date"|   |Reference type indicating missing or nonexistent data|"DBNull"|   |128-bit fixed-point numeric value type|"Decimal"|   |64-bit floating-point numeric value type|"Double"|   |32-bit integer value type|"Integer"|   |Reference type pointing to an unspecialized object|"Object"|   |Reference type pointing to a specialized object created from class <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>|"<bpt id="p2">*</bpt>objectclass<ept id="p2">*</ept>"|   |64-bit integer value type|"Long"|   |Reference type with no object currently assigned to it|"Nothing"|   |8-bit signed integer value type|"SByte"|   |16-bit integer value type|"Short"|   |32-bit floating-point numeric value type|"Single"|   |Reference type pointing to a string of 16-bit characters|"String"|   |32-bit unsigned integer value type|"UInteger"|   |64-bit unsigned integer value type|"ULong"|   |16-bit unsigned integer value type|"UShort"|       If <ph id="ph4">`VarName`</ph> is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</source>
          <target state="translated">| <ph id="ph1">`VarName`</ph> 내용을 | 반환 된 문자열 |   |------------------------|---------------------|   | 16 비트 <ph id="ph2">`True`</ph> 또는 <ph id="ph3">`False`</ph> 값 형식 | " 부울 "|   | 8 비트 이진 값 형식 | " 바이트 "|   | 16 비트 문자 값 형식 | " 문자 "|   | 64 비트 날짜 및 시간 값 형식 | " 날짜 "|   | 참조 누락 되었거나 존재 하지 않는 데이터를 나타내는 형식 | " DBNull "|   | 128 비트 고정 소수점 숫자 값 형식 | " 10 진수 "|   | 64 비트 부동 소수점 숫자 값 형식 | " 이중 "|   | 32 비트 정수 값 형식 | " 정수 "|   | 지정 되지 않은 개체를 가리키는 형식 참조 | " 개체 "|   | 참조 형식 클래스에서 지정 된 개체를 가리키는 <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>| " <bpt id="p2">*</bpt>objectclass<ept id="p2">*</ept>"|   | 64 비트 정수 값 형식 | " 긴 "|   | 참조 형식에 현재 할당 된 개체가 있는 | " Nothing "|   | 8 비트 부호 있는 정수 값 형식 | " SByte "|   | 16 비트 정수 값 형식 | " 짧은 "|   | 32 비트 부동 소수점 숫자 값 형식 | " 단일 "|   | 16 비트 문자의 문자열을 가리키는 형식 참조 | " 문자열 "|   | 32 비트 부호 없는 정수 값 형식 | " UInteger "|   | 64 비트 부호 없는 정수 값 형식 | " ULong "|   | 16 비트 부호 없는 정수 값 형식 | " UShort "|       경우 <ph id="ph4">`VarName`</ph> 은 배열, 반환 되는 문자열 앞의 표에 빈 괄호가 추가 된 문자열 중 하나가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an array of integers, <ph id="ph2">`TypeName`</ph> returns "Integer()".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VarName`</ph> 정수의 배열을 가리킵니다 <ph id="ph2">`TypeName`</ph> "필수적 요소"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`TypeName`</ph> returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</source>
          <target state="translated">때 <ph id="ph1">`TypeName`</ph> 참조 형식의 이름을 반환 이름만 자체를 정규화 된 이름이 아니라, 클래스 등 반환 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an object of class &lt;xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;, <ph id="ph2">`TypeName`</ph> returns "PaperSource".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VarName`</ph> 클래스의 개체를 가리키는 &lt;xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;, <ph id="ph2">`TypeName`</ph> "PaperSource"를 반환 합니다.&lt;/xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, <ph id="ph1">`TypeName`</ph> returns "Nothing".</source>
          <target state="translated">변수가 특정 클래스 형식으로 선언 하지만 개체가 할당, 없는 경우에 <ph id="ph1">`TypeName`</ph> "없음"을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>변수입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 구조를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing data-type information about a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수에 대 한 데이터 형식 정보를 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Returns the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">지정된 된 차원의 배열에 대 한 사용 가능한 최고 첨자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Array of any data type.</source>
          <target state="translated">모든 데이터 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The array in which you want to find the highest possible subscript of a dimension.</source>
          <target state="translated">차원의 사용 가능한 최고 첨자를 찾으려고 할 수 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The dimension for which the highest possible subscript is to be returned.</source>
          <target state="translated">가능한 최고 첨자 반환할 차원입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">2 초에 대 한 첫 번째 차원에 대 한 1을 사용 하 여 등에입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Rank`</ph> is omitted, 1 is assumed.</source>
          <target state="translated">경우 <ph id="ph1">`Rank`</ph> 는 생략 하면 1이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The highest value the subscript for the specified dimension can contain.</source>
          <target state="translated">가장 높은 값 첨자 지정된 된 차원에 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> has only one element, <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns 0.</source>
          <target state="translated">경우 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p1">&lt;/code&gt;</ept> 요소가 하나만 <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> has no elements, for example if it is a zero-length string, <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns -1.</source>
          <target state="translated">경우 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p1">&lt;/code&gt;</ept> 예를 들어 길이가&amp;0; 인 문자열인 경우 요소가 없는 <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> -1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph> is less than 1, or <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> is greater than the rank of <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph>1 보다 작으면 또는 <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> 의 순위 보다 크면 <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the data type classification of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수의 데이터 형식을 분류를 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The integer value returned by <ph id="ph1">`VarType`</ph> is a member of the &lt;xref:Microsoft.VisualBasic.VariantType&gt;.</source>
          <target state="translated">반환 된 정수 값 <ph id="ph1">`VarType`</ph> &lt;xref:Microsoft.VisualBasic.VariantType&gt;.&lt;/xref:Microsoft.VisualBasic.VariantType&gt; 의 구성원</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the values returned by <ph id="ph1">`VarType`</ph> for special cases of <ph id="ph2">`VarName`</ph>.</source>
          <target state="translated">다음 표에서 반환 하는 값을 보여 줍니다. <ph id="ph1">`VarType`</ph> 의 특수 한 경우에 대 한 <ph id="ph2">`VarName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Data type represented by <ph id="ph1">`VarName`</ph>|Value returned by <ph id="ph2">`VarType`</ph>|   |----------------------------------------|---------------------------------|   |<bpt id="p1">[</bpt>Nothing<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">|</ph><ph id="ph4">`VariantType.Object`</ph>|   |&lt;xref:System.DBNull&gt;|<ph id="ph5">`VariantType.Null`</ph>|   |Enumeration|Underlying data type (<ph id="ph6">`SByte`</ph>, <ph id="ph7">`Byte`</ph>, <ph id="ph8">`Short`</ph>, <ph id="ph9">`UShort`</ph>, <ph id="ph10">`Integer`</ph>, <ph id="ph11">`UInteger`</ph>, <ph id="ph12">`Long`</ph>, or <ph id="ph13">`ULong`</ph>)|   |Array|Bitwise OR of array element type and <ph id="ph14">`VariantType.Array`</ph>|   |Array of arrays|Bitwise OR of <ph id="ph15">`VariantType.Object`</ph> and <ph id="ph16">`VariantType.Array`</ph>|   |Structure (&lt;xref:System.ValueType?displayProperty=fullName&gt;)|<ph id="ph17">`VariantType.UserDefinedType`</ph>|   |&lt;xref:System.Exception&gt;|<ph id="ph18">`VariantType.Error`</ph>|   |Unknown|<ph id="ph19">`VariantType.Object`</ph><ph id="ph20">|</ph></source>
          <target state="translated">| 데이터 형식으로 표시 <ph id="ph1">`VarName`</ph>| 반환 된 값 <ph id="ph2">`VarType`</ph>|   |----------------------------------------|---------------------------------|   | <bpt id="p1">[</bpt>Nothing<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">|</ph><ph id="ph4">`VariantType.Object`</ph>|   | &lt;xref:System.DBNull&gt;| <ph id="ph5">`VariantType.Null`</ph>|   | 열거형 | Underlying data type (<ph id="ph6">`SByte`</ph>, <ph id="ph7">`Byte`</ph>, <ph id="ph8">`Short`</ph>, <ph id="ph9">`UShort`</ph>, <ph id="ph10">`Integer`</ph>, <ph id="ph11">`UInteger`</ph>, <ph id="ph12">`Long`</ph>, or <ph id="ph13">`ULong`</ph>)|   | 배열 | 배열 요소 형식은의 비트 OR 및 <ph id="ph14">`VariantType.Array`</ph>|   | 배열의 배열 | 비트 OR <ph id="ph15">`VariantType.Object`</ph> 및 <ph id="ph16">`VariantType.Array`</ph>|   | 구조 (&lt;xref:System.ValueType?displayProperty=fullName&gt;) |<ph id="ph17">`VariantType.UserDefinedType`</ph>|   | &lt;xref:System.Exception&gt;| <ph id="ph18">`VariantType.Error`</ph>|   | 알 수 없는 | <ph id="ph19">`VariantType.Object`</ph><ph id="ph20">|</ph>&lt;/xref:System.Exception&gt;&lt;/xref:System.ValueType?displayProperty=fullName&gt;&lt;/xref:System.DBNull&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>변수입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 구조를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the data type classification of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수의 데이터 형식을 분류를 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수의 Visual Basic 데이터 형식 이름을 포함 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`VbTypeName`</ph> returns the Visual Basic type name corresponding to the common language runtime type name.</source>
          <target state="translated"><ph id="ph1">`VbTypeName`</ph>공용 언어 런타임 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`UrtName`</ph> contains "Int32" or "System.Int32", <ph id="ph2">`VbTypeName`</ph> returns "Integer".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`UrtName`</ph> "Int32" 또는 "System.Int32" 포함 <ph id="ph2">`VbTypeName`</ph> "정수"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`VbTypeName`</ph> does not recognize the value of <ph id="ph2">`UrtName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">경우 <ph id="ph1">`VbTypeName`</ph> 의 값을 인식 하지 않으므로 <ph id="ph2">`UrtName`</ph>, 반환 <ph id="ph3">`Nothing`</ph> (문자열이 아니라 "없음").</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type name in <ph id="ph1">`UrtName`</ph> can be obtained from various sources, for example from the &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property in the &lt;xref:System.Reflection.MemberInfo&gt; array of the &lt;xref:System.Type&gt; class.</source>
          <target state="translated">에 형식 이름을 <ph id="ph1">`UrtName`</ph> 예를 들어 &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; &lt;xref:System.Reflection.MemberInfo&gt; &lt;xref:System.Type&gt;클래스&lt;/xref:System.Type&gt; 의 배열&lt;/xref:System.Reflection.MemberInfo&gt; 속성&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt; 에서 다양 한 소스에서 가져올 수 있습니다</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable containing a type name used by the common language runtime.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>공용 언어 런타임에서 사용 되는 형식 이름을 포함 하는 변수입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변수의 Visual Basic 데이터 형식 이름을 포함 하는 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>