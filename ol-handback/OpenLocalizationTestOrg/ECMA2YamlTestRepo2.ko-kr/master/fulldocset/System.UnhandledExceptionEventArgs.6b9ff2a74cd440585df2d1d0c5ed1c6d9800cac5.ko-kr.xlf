<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1df74697c42b6d7608eb37143f457472cb861f7e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.UnhandledExceptionEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9cb327a1cda739db44acafb07ae66d59a54c3eb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88af0b19fae061cabcfe20b4d97595fd3402068c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the event that is raised when there is an exception that is not handled in any application domain.</source>
          <target state="translated">응용 프로그램 도메인에서 처리 되지 않은 예외가 있을 때 발생 되는 이벤트에 대 한 데이터를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnhandledExceptionEventArgs provides access to the exception object and a flag indicating whether the common language runtime is terminating.</source>
          <target state="translated">UnhandledExceptionEventArgs 예외 개체 및 공용 언어 런타임의 종료 여부를 나타내는 플래그에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnhandledExceptionEventArgs is one of the parameters passed into &lt;xref:System.UnhandledExceptionEventHandler&gt; for the &lt;xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt; event.</source>
          <target state="translated">로 전달 된 매개 변수 중 하나는 UnhandledExceptionEventArgs은 &lt;xref:System.UnhandledExceptionEventHandler&gt;에 대 한는 &lt;xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt;이벤트.&lt;/xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt; &lt;/xref:System.UnhandledExceptionEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.UnhandledExceptionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the exception object and a common language runtime termination flag.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.UnhandledExceptionEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 예외 개체 및 공용 언어 런타임 종료 플래그입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The exception that is not handled.</source>
          <target state="translated">처리 되지 않은 예외입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the runtime is terminating; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>런타임의; 종료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the unhandled exception object.</source>
          <target state="translated">처리 되지 않은 예외 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns an object of type &lt;xref:System.Object&gt; rather than one derived from &lt;xref:System.Exception&gt;.</source>
          <target state="translated">이 속성 형식을 &lt;xref:System.Object&gt;하나 &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; 에서 파생 된 것이 아니라&lt;/xref:System.Object&gt; 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the Common Language Specification requires that all exception types derive from &lt;xref:System.Exception&gt;, it is possible for methods to throw exceptions with objects not derived from &lt;xref:System.Exception&gt;.</source>
          <target state="translated">예외 형식 모두 &lt;xref:System.Exception&gt;를 &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; 에서 파생 되지 않은 개체를 사용 하 여 예외를 throw 하는 방법에 대 한 수&lt;/xref:System.Exception&gt; 에서 파생 하는 공용 언어 사양 필요 하지만</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do the following to work with this exception:      -   Apply the  &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; attribute with a &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt; value of <ph id="ph1">`true`</ph> to the assembly that contains the event handler.</source>
          <target state="translated">이 예외와 함께 작동 하도록 다음을 수행할 수 있습니다:-적용는 &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;특성이 &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt;값 <ph id="ph1">`true`</ph> 이벤트 처리기가 포함 된 어셈블리에.&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wraps all exceptions not derived from the &lt;xref:System.Exception&gt; class in a &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; object.</source>
          <target state="translated">파생 되지 않은 모든 예외를 래핑합니다이 &lt;xref:System.Exception&gt;클래스에 &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;개체입니다.&lt;/xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then safely cast (in C#) or convert (in Visual Basic) the object returned by this property to an &lt;xref:System.Exception&gt; object, and retrieve the original exception object from the &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">있습니다 수 다음 안전 하 게 캐스팅 (C#) 또는 변환 (Visual Basic의 경우)이이 속성을 반환 하는 개체는 &lt;xref:System.Exception&gt;개체를 원래 예외 개체를 검색 된 &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that some compilers, such as the C# and Visual Basic compilers, automatically apply this attribute.</source>
          <target state="translated">Note C# 및 Visual Basic 컴파일러 같은 일부 컴파일러에서는이 특성을 자동으로 적용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cast the object returned by this property to an &lt;xref:System.Exception&gt; object.</source>
          <target state="translated">-이 속성을 반환 하는 개체 캐스팅는 &lt;xref:System.Exception&gt;개체입니다.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The unhandled exception object.</source>
          <target state="translated">처리 되지 않은 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates whether the common language runtime is terminating.</source>
          <target state="translated">공용 언어 런타임의 종료 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beginning with the .NET Framework version 2.0, this property returns <ph id="ph1">`true`</ph> for most unhandled exceptions, unless an application compatibility flag is used to revert to the behavior of versions 1.0 and 1.1.</source>
          <target state="translated">.NET Framework 버전 2.0부터,이 속성은 반환 <ph id="ph1">`true`</ph> 대부분에 대 한 버전 1.0 및 1.1의 동작으로 되돌리려면 응용 프로그램 호환성 플래그를 사용 하지 않으면 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that most unhandled exceptions in threads, including thread pool threads, are allowed to proceed naturally, which normally results in termination of the application.</source>
          <target state="translated">일반적으로 인해 종료 응용 프로그램의 스레드 풀 스레드를 비롯 한 스레드의 가장 처리 되지 않은 예외 없이 진행 수 있도록 이유에서입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, including a list of cases in which the runtime does not terminate, see <bpt id="p1">[</bpt>Exceptions in Managed Threads<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">런타임 종료 되지 않는 사례 목록을 비롯 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>관리 되는 스레드의 예외<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Information    The following applies to the .NET Framework versions 1.0 and 1.1: This property returns <ph id="ph1">`true`</ph> when an exception is received in, but not handled by, an application's main thread.</source>
          <target state="translated">다음.NET Framework 버전 1.0 및 1.1에 적용 되는 버전 정보:이 속성은 반환 <ph id="ph1">`true`</ph> 예외가 이지만 수신 응용 프로그램의 주 스레드에 의해 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property also returns <ph id="ph1">`true`</ph> if an unmanaged thread is executing managed code and receives an unhandled exception.</source>
          <target state="translated">또한이 속성 반환 <ph id="ph1">`true`</ph> 처리 되지 않은 예외를 수신 하는 관리 되지 않는 스레드가 관리 코드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, this property returns <ph id="ph1">`false`</ph> for thread pool threads and managed threads created by an application, because versions 1.0 and 1.1 catch unhandled exceptions in such threads and ignore them.</source>
          <target state="translated">마지막으로,이 속성은 반환 <ph id="ph1">`false`</ph> 스레드 풀 스레드 및 버전 1.0 및 1.1 이러한 스레드의에서 처리 되지 않은 예외를 catch 하 고 무시 하기 때문에 응용 프로그램에서 생성 하는 관리 되는 스레드에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the runtime is terminating; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>런타임의; 종료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>