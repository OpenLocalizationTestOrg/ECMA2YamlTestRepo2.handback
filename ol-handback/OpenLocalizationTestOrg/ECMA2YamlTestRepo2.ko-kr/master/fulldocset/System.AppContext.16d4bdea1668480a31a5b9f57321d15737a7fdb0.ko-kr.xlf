<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">369b157777e366ead5cccc73baf9eabedc811ef6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AppContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ad578cc6fd8f2a566d1ab66eb9cb4136a8f321a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1771e5aea560ab11c830e3792e8b5c5a74ecfe13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides members for setting and retrieving data about an application's context.</source>
          <target state="translated">설정 및 응용 프로그램의 컨텍스트에 대 한 데이터를 검색 하기 위한 멤버를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">어셈블리 확인자에서 사용 하 여 어셈블리를 조사 하는 기본 디렉터리의 경로 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a per application domain property.</source>
          <target state="translated">이 한 응용 프로그램 도메인 속성 당 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its value corresponds to the &lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt; property of the current application domain.</source>
          <target state="translated">해당 값에 해당 하는 &lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt;현재 응용 프로그램 도메인의 속성입니다.&lt;/xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">어셈블리 확인자에서 어셈블리를 조사를 사용 하는 기본 디렉터리의 경로 이름입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sets the value of a switch.</source>
          <target state="translated">스위치의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of the switch.</source>
          <target state="translated">스위치의 이름입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value of the switch.</source>
          <target state="translated">스위치의 값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tries to get the value of a switch.</source>
          <target state="translated">스위치의 값을 가져오려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.AppContext&gt; class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">&lt;xref:System.AppContext&gt;클래스를 사용 하면 라이브러리 작성자가 사용자에 게 새로운 기능에 대 한 균일 한 옵트아웃 메커니즘을 제공할 수 있습니다.&lt;/xref:System.AppContext&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">옵트아웃 요청을 통신 하려면 구성 요소 간에 느슨하게 결합 된 계약을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">이 기능은 기존 기능이 변경 될 때 일반적으로 중요 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">반대로, 이미 있기는 암시적 옵트인 새로운 기능에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime automatically populates the switches assigned to an &lt;xref:System.AppContext&gt; instance by reading the registry and the application's configuration file.</source>
          <target state="translated">에 할당 하는 스위치를 자동으로 채우려고 하는 공용 언어 런타임에서 &lt;xref:System.AppContext&gt;레지스트리 및 응용 프로그램의 구성 파일을 읽어 인스턴스.&lt;/xref:System.AppContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of these switches can then be overridden, and new switches added, by calling the &lt;xref:System.AppContext.SetSwitch%2A&gt; method.</source>
          <target state="translated">호출 하 여 새 스위치를 추가 하 고 이러한 스위치의 값을 재정의할 수 다음,는 &lt;xref:System.AppContext.SetSwitch%2A&gt;메서드.&lt;/xref:System.AppContext.SetSwitch%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A library calls the TryGetSwitch method to check whether its consumers have declared the value of the switch and then act appropriately on it.</source>
          <target state="translated">라이브러리는 소비자가 스위치의 값을 선언한 및에 적절 하 게 작동 있는지 여부를 확인 하려면 TryGetSwitch 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, if the switch is not defined, the new functionality is enabled..</source>
          <target state="translated">스위치를 정의 하지 않은 경우에 기본적으로 새 기능 사용은...</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the switch is defined and its value is <ph id="ph1">`false`</ph>, the new functionality is also enabled.</source>
          <target state="translated">스위치 정의 되어 있고 해당 값이 있으면 <ph id="ph1">`false`</ph>, 새로운 기능에도 사용 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If its value is <ph id="ph1">`true`</ph>, the legacy behavior is enabled.</source>
          <target state="translated">값이 <ph id="ph1">`true`</ph>, 레거시 동작을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the switch.</source>
          <target state="translated">스위치의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the value of <ph id="ph1">`switchName`</ph> if <ph id="ph2">`switchName`</ph> was found, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph3">`switchName`</ph> was not found.</source>
          <target state="translated">이 메서드가 반환 될 때 값이 포함 된 <ph id="ph1">`switchName`</ph> 경우 <ph id="ph2">`switchName`</ph> 찾았지만 또는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph3">`switchName`</ph> 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">switchName</ph><ept id="p2">&lt;/code&gt;</ept> was set and the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">isEnabled</ph><ept id="p3">&lt;/code&gt;</ept> argument contains the value of the switch; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">switchName</ph> <ept id="p2">&lt;/code&gt;</ept> 설정한 및 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">isEnabled</ph> <ept id="p3">&lt;/code&gt;</ept> 스위치의 값을 포함 하는 인수, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>