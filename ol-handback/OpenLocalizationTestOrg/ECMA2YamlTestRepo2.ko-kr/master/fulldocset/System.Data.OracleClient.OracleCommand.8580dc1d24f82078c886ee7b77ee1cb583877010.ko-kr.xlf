<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">032ceb4d1ca856e6dc37882a85ca05533d27ca74</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1f54468ab96d4110e3385e4d7b63e48a87f143c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f53eceae1453175819ca5fa9d9bd08b8d0309627</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an SQL statement or stored procedure to execute against a database.</source>
          <target state="translated">SQL 문 또는 데이터베이스에 대해 실행할 저장된 프로시저를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Oracle 및 ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OracleCommand class provides the following methods for executing commands against a data source:      |Item|Description|   |----------|-----------------|   |&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;|Executes commands that return rows.|   |&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;|Executes an SQL statement against the &lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt; and returns the number of rows affected.|   |&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;|Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.|   |&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;|Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.|       You can reset the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; property and reuse the OracleCommand object.</source>
          <target state="translated">데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 하는 OracleCommand 클래스: | 항목 | 설명 |   |----------|-----------------|   | &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;| 행을 반환 하는 명령을 실행 합니다. |   | &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;| &lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;에 대해 SQL 문을 실행 하 고 영향을 받는 행의 수를 반환 합니다. |   | &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;| SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행 합니다. |   | &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;| .NET Framework 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 합니다. |   | &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;| Oracle 고유 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 합니다. |       다시 설정할 수 있습니다는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;속성 및 OracleCommand 개체 다시 사용 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of the command results in a fatal &lt;xref:System.Data.OracleClient.OracleException&gt;, the &lt;xref:System.Data.OracleClient.OracleConnection&gt; may close.</source>
          <target state="translated">명령 실행으로 인해 심각한 경우 &lt;xref:System.Data.OracleClient.OracleException&gt;, &lt;xref:System.Data.OracleClient.OracleConnection&gt;닫힐 수 있습니다.&lt;/xref:System.Data.OracleClient.OracleConnection&gt; &lt;/xref:System.Data.OracleClient.OracleException&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 다시 연결 하 고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Unlike the <bpt id="p1">**</bpt>Command<ept id="p1">**</ept> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the OracleCommand object does not support a &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 달리는 <bpt id="p1">**</bpt>명령<ept id="p1">**</ept> 개체가 지원 하지 않는 OracleCommand 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;속성.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a command timeout has no effect and the value returned is always zero.</source>
          <target state="translated">명령 제한 시간 설정 아무 효과가 없으며 반환 되는 값은 항상&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Data.OracleClient.OracleCommand&gt;안내 하십시오.&lt;/xref:System.Data.OracleClient.OracleCommand&gt; 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;|empty string ("")|   |&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;|<ph id="ph1">`Text`</ph>|   |&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;|null|</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;| 빈 문자열 ("") |   | &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;| <ph id="ph1">`Text`</ph>|   | &lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;|null|&lt;/xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;&lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 쿼리 텍스트와 함께 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query and an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 쿼리 텍스트와 함께 클래스 및 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the connection to a database.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에 연결을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query, an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object, and an <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 쿼리 텍스트와 함께 클래스는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체 및 <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of this implementation of the &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Data.OracleClient.OracleCommand&gt;.&lt;/xref:System.Data.OracleClient.OracleCommand&gt; 이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;|<ph id="ph1">`cmdText`</ph>|   |&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;|<ph id="ph2">`Text`</ph>|   |&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;|A new &lt;xref:System.Data.OracleClient.OracleConnection&gt; that is the value for the <ph id="ph3">`connection`</ph> parameter.|       You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;| <ph id="ph1">`cmdText`</ph>|   | &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;| <ph id="ph2">`Text`</ph>|   | &lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;| 새 &lt;xref:System.Data.OracleClient.OracleConnection&gt;하는 값에 대 한는 <ph id="ph3">`connection`</ph> 매개 변수입니다. |       관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.&lt;/xref:System.Data.OracleClient.OracleConnection&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the connection to a database.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에 연결을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> executes.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 실행 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attempts to cancel the execution of an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">실행을 취소 하려고 한 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is nothing to cancel, nothing happens.</source>
          <target state="translated">가 취소할 경우 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">그러나 처리 중인 명령을 취소 동작이 실패 하는 경우 예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a copy of this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 파일의 복사본을 만듭니다 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in which all property values are the same as the original.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 모든 속성 값은 원래와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the SQL statement or stored procedure to execute against the database.</source>
          <target state="translated">SQL 문 또는 데이터베이스에 대해 실행할 저장된 프로시저를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the CommandText property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;속성이로 설정 되어 <ph id="ph1">`StoredProcedure`</ph>, 저장된 프로시저의 이름으로 CommandText 속성을 설정 해야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph1">`CommandType.Text`</ph>.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph>       When using named parameters in an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">예를 들어: <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph> 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding &lt;xref:System.Data.OracleClient.OracleParameter&gt; objects to the &lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt; property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 &lt;xref:System.Data.OracleClient.OracleParameter&gt;개체는 &lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.&lt;/xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt; &lt;/xref:System.Data.OracleClient.OracleParameter&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The SQL statement or stored procedure to execute.</source>
          <target state="translated">SQL 문 또는 저장된 프로시저를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">명령을 실행 하는 시도 종료 하 고 오류를 생성 하기 전 대기 시간을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.ArgumentException&gt; is generated if the assigned CommandTimeout property value is less than 0.</source>
          <target state="translated">&lt;xref:System.ArgumentException&gt;할당 된 CommandTimeout 속성 값이 0 보다 작은 경우 생성 됩니다.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for the command to execute.</source>
          <target state="translated">시간 (초) 명령이 실행 될 때까지 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default value is 30 seconds.</source>
          <target state="translated">기본값은 30 초입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText*&gt; property is interpreted.</source>
          <target state="translated">나타내는 값을 가져오거나 방법을 &lt;xref:System.Data.OracleClient.OracleCommand.CommandText*&gt;속성을 해석 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText*&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the CommandType property is set to <ph id="ph1">`StoredProcedure`</ph>, you should set the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; property to the full Oracle call syntax.</source>
          <target state="translated">에서는 CommandType 속성이로 설정 된 경우 <ph id="ph1">`StoredProcedure`</ph>를 설정 해야는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;속성을 전체 Oracle 호출 구문.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command then executes this stored procedure when you call one of the Execute methods (for example, &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; or &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;).</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;또는 &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;).&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;, CommandType and &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; properties cannot be set if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;, CommandType 및 &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph1">`CommandType.Text`</ph>.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph>       When using named parameters in an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">예를 들어: <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph> 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding &lt;xref:System.Data.OracleClient.OracleParameter&gt; objects to the &lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt; property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 &lt;xref:System.Data.OracleClient.OracleParameter&gt;개체는 &lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.&lt;/xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt; &lt;/xref:System.Data.OracleClient.OracleParameter&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value was not a valid <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값이 유효한 <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this instance of the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의이 인스턴스에서 사용 되는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set the Connection, &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;, and &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">연결을 설정할 수 없습니다 &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;, 및 &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set Connection while a transaction is in progress and the &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt; property is not null, an &lt;xref:System.InvalidOperationException&gt; is generated.</source>
          <target state="translated">트랜잭션을 진행 중인 동안 연결을 설정 하는 경우와 &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;속성이 null이 아니면는 &lt;xref:System.InvalidOperationException&gt;생성 됩니다.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set Connection after the transaction has been committed or rolled back, and the &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt; property is not null, the &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt; property is then set to a null value.</source>
          <target state="translated">트랜잭션이 커밋 또는 롤백 후 연결을 설정 하는 경우 및 &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;속성이 null이 아니면는 &lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;속성은 null 값으로 설정 됩니다.&lt;/xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 원본에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null 값입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Connection property was changed while a transaction was in progress.</source>
          <target state="translated">트랜잭션을 진행 중인 동안 연결 속성이 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateParameter method is a strongly-typed version of &lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;.</source>
          <target state="translated">CreateParameter 메서드는 &lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;.&lt;/xref:System.Data.IDbCommand.CreateParameter%2A&gt; 의 강력한 형식의 버전</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the command object should be visible in a customized interface control.</source>
          <target state="translated">명령 개체를 사용자 지정 된 인터페이스 컨트롤에 표시 되어야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the command object should be visible in a control; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>를 명령 개체를 컨트롤;에 표시 해야 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement against the &lt;xref:System.Data.OracleClient.OracleCommand.Connection*&gt; and returns the number of rows affected.</source>
          <target state="translated">에 대해 SQL 문을 실행은 &lt;xref:System.Data.OracleClient.OracleCommand.Connection*&gt;영향을 받는 행 수를 반환 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.Connection*&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a &lt;xref:System.Data.DataSet&gt;, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">ExecuteNonQuery를 사용 하 여 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하려면 또는 사용 하지 않고 데이터베이스에 데이터를 변경 하는 &lt;xref:System.Data.DataSet&gt;를 실행 하는 UPDATE, INSERT 또는 DELETE 문에.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">ExecuteNonQuery 모든 행을 반환 하지 않는 있지만 모든 출력 매개 변수 또는 반환 값 매개 변수에 매핑된 데이터로 채워집니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">문의 다른 모든 형식에 대 한 반환 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">문의 다른 모든 형식에 대 한 반환 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-       The connection is not open.</source>
          <target state="translated">-또는-는 연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement against the &lt;xref:System.Data.OracleClient.OracleCommand.Connection*&gt; and returns the number of rows affected.</source>
          <target state="translated">에 대해 SQL 문을 실행은 &lt;xref:System.Data.OracleClient.OracleCommand.Connection*&gt;영향을 받는 행 수를 반환 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.Connection*&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use ExecuteOracleNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a &lt;xref:System.Data.DataSet&gt;, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">ExecuteOracleNonQuery을 사용 하 여 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업 수행 또는 사용 하지 않고 데이터베이스에 데이터를 변경 하는 &lt;xref:System.Data.DataSet&gt;를 실행 하는 UPDATE, INSERT 또는 DELETE 문에.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>ExecuteOracleNonQuery differs from &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt; in that it returns <ph id="ph1">`rowid`</ph> as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</source>
          <target state="translated">와 다른 ExecuteOracleNonQuery &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;반환 한다는 점에서 <ph id="ph1">`rowid`</ph> 정확히 하나의 행에 영향을 주는 INSERT, DELETE 또는 UPDATE 문을 실행 하는 경우 출력 매개 변수로.&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</source>
          <target state="translated">그러면 후속 관련된 쿼리에에서 성능을 향상 시킬 수 있도록 하는 Oracle 데이터베이스에서 행을 고유 하 게 식별 하는 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although ExecuteOracleNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">하지만 ExecuteOracleNonQuery 모든 행을 반환 하지 않는 모든 출력 매개 변수 또는 반환 값 매개 변수로 매핑될 데이터로 채워집니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A base64 string representation of the actual row ID in the server.</source>
          <target state="translated">서버에 있는 실제 행 ID의 base64 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">문의 다른 모든 형식에 대 한 반환 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-or-       The connection is not open.</source>
          <target state="translated">-또는-는 연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</source>
          <target state="translated">쿼리를 실행 하 고 관련 Oracle 데이터 형식으로 쿼리에서 반환한 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Extra columns or rows are ignored.</source>
          <target state="translated">추가 열 이나 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ExecuteOracleScalar method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">ExecuteOracleScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires less code than using the &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; method, and then performing the operations necessary to generate the single value from the data returned by an &lt;xref:System.Data.OracleClient.OracleDataReader&gt;.</source>
          <target state="translated">이렇게 하려면 &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; &lt;xref:System.Data.OracleClient.OracleDataReader&gt;.&lt;/xref:System.Data.OracleClient.OracleDataReader&gt; 에서 반환 된 다음 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; 사용 하 여 보다 적은 코드가 필요</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical ExecuteOracleScalar query can be formatted as in the following C# example:      <ph id="ph1">```   command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";   count = command.ExecuteOracleScalar();   ```</ph></source>
          <target state="translated">다음 C# 예제와 같이 일반적인 ExecuteOracleScalar 쿼리 서식을 지정할 수 있습니다.<ph id="ph1">```   command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";   count = command.ExecuteOracleScalar();   ```</ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <bpt id="p1">&lt;xref uid="langword_csharp_REF CURSOR" name="REF CURSOR" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">결과 경우는 Oracle 고유 데이터 형식 또는 null 참조로 설정 되는 결과의 첫 번째 행의 첫 번째 열을 <bpt id="p1">&lt;xref uid="langword_csharp_REF CURSOR" name="REF CURSOR" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Sends the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText<bpt id="p1">*</bpt>&gt; to the &lt;xref:System.Data.OracleClient.OracleCommand.Connection<ept id="p1">*</ept>&gt; and builds an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">보냅니다는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;와 빌드는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;속성이 <ph id="ph1">`StoredProcedure`</ph>, &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;저장된 프로시저의 이름으로 속성을 설정 해야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command then executes this stored procedure when you call ExecuteReader.</source>
          <target state="translated">다음 명령은 ExecuteReader를 호출 하는 경우이 저장된 프로시저를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>More than one &lt;xref:System.Data.OracleClient.OracleDataReader&gt; can be open at any given time.</source>
          <target state="translated">둘 이상의 &lt;xref:System.Data.OracleClient.OracleDataReader&gt;어느 시점에서 열 수 있습니다.&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Sends the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText<bpt id="p1">*</bpt>&gt; to the &lt;xref:System.Data.OracleClient.OracleCommand.Connection<ept id="p1">*</ept>&gt;, and builds an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using one of the <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">보냅니다는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;, 및 빌드는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 중 하나를 사용 하는 <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you expect your SQL statement to return only a single row, specifying <ph id="ph1">`SingleRow`</ph> as the &lt;xref:System.Data.CommandBehavior&gt; value may improve application performance.</source>
          <target state="translated">SQL 문의 단일 행만 반환 될 경우 지정 <ph id="ph1">`SingleRow`</ph> 로 &lt;xref:System.Data.CommandBehavior&gt;값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.&lt;/xref:System.Data.CommandBehavior&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;속성이 <ph id="ph1">`StoredProcedure`</ph>, &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;저장된 프로시저의 이름으로 속성을 설정 해야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command then executes this stored procedure when you call &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;.&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; 를 호출할 때 다음이 저장된 프로시저를 실행 명령</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.OracleClient.OracleDataReader&gt; supports a special mode that enables large binary values to be read efficiently.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;.&lt;/xref:System.Data.CommandBehavior&gt; 에 대 한 설정</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>More than one &lt;xref:System.Data.OracleClient.OracleDataReader&gt; can be open at any given time.</source>
          <target state="translated">둘 이상의 &lt;xref:System.Data.OracleClient.OracleDataReader&gt;어느 시점에서 열 수 있습니다.&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</source>
          <target state="translated">쿼리를 실행 하 고.NET Framework 데이터 형식으로 쿼리에서 반환한 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Extra columns or rows are ignored.</source>
          <target state="translated">추가 열 이나 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">ExecuteScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires less code than using the &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; method, and then performing the operations necessary to generate the single value from the data returned by an &lt;xref:System.Data.OracleClient.OracleDataReader&gt;.</source>
          <target state="translated">이렇게 하려면 &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; &lt;xref:System.Data.OracleClient.OracleDataReader&gt;.&lt;/xref:System.Data.OracleClient.OracleDataReader&gt; 에서 반환 된 다음 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; 사용 하 여 보다 적은 코드가 필요</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical ExecuteScalar query can be formatted as in the following C# example:      <ph id="ph1">```   CommandText = "SELECT COUNT(*) FROM Region";   Int32 count = (int32) ExecuteScalar();   ```</ph></source>
          <target state="translated">다음 C# 예제와 같이 일반적인 ExecuteScalar 쿼리 서식을 지정할 수 있습니다.<ph id="ph1">```   CommandText = "SELECT COUNT(*) FROM Region";   Int32 count = (int32) ExecuteScalar();   ```</ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <bpt id="p1">&lt;xref uid="langword_csharp_REF CURSOR" name="REF CURSOR" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">.NET Framework 데이터 형식으로 결과의 첫 번째 행의 첫 번째 열 집합 또는 결과 집합이 비어 있으면 null 참조 또는 결과 <bpt id="p1">&lt;xref uid="langword_csharp_REF CURSOR" name="REF CURSOR" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;속성이 <ph id="ph1">`StoredProcedure`</ph>, &lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;저장된 프로시저의 이름으로 속성을 설정 해야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph1">`CommandType.Text`</ph>.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph>       When using named parameters in an SQL statement called by an &lt;xref:System.Data.OracleClient.OracleCommand&gt; of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">예를 들어: <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```</ph> 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 &lt;xref:System.Data.OracleClient.OracleCommand&gt;의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding &lt;xref:System.Data.OracleClient.OracleParameter&gt; objects to the Parameters property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 &lt;xref:System.Data.OracleClient.OracleParameter&gt;매개 변수 속성에는 개체), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.&lt;/xref:System.Data.OracleClient.OracleParameter&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The parameters of the SQL statement or stored procedure.</source>
          <target state="translated">SQL 문 또는 저장된 프로시저의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Creates a prepared (or compiled) version of the command at the data source.</source>
          <target state="translated">데이터 원본에 명령의 준비 된 (또는 컴파일된) 버전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before you call Prepare, specify the data type of each parameter in the statement to be prepared.</source>
          <target state="translated">준비를 호출 하기 전에 준비 해야 할 문의 각 매개 변수의 데이터 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.OracleClient.OracleCommand.Connection<bpt id="p1">*</bpt>&gt; is not set.       -or-       The &lt;xref:System.Data.OracleClient.OracleCommand.Connection<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.OracleClient.OracleConnection.Open*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 설정 되지 않았습니다.       -or-       The &lt;&gt;<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.OracleClient.OracleConnection.Open*&gt;.&lt;/xref:System.Data.OracleClient.OracleConnection.Open*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Resets the &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout*&gt; property to the default value.</source>
          <target state="translated">다시 설정 된 &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout*&gt;속성의 기본값을.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandTimeout*&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of the &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt; is 30 seconds.</source>
          <target state="translated">기본값은 &lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;30 초입니다.&lt;/xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> within which the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> executes.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 실행 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 트랜잭션 속성을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the transaction property to an &lt;xref:System.Data.OracleClient.OracleTransaction&gt; object that is not connected to the same &lt;xref:System.Data.OracleClient.OracleConnection&gt; as the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object, an exception will be thrown the next time you attempt to execute a statement.</source>
          <target state="translated">트랜잭션 속성을 설정 하는 경우는 &lt;xref:System.Data.OracleClient.OracleTransaction&gt;동일 하 게 연결 되어 있지 않은 개체 &lt;xref:System.Data.OracleClient.OracleConnection&gt;로 &lt;xref:System.Data.OracleClient.OracleCommand&gt;개체 다음에 문을 실행 하려고 하면 예외가 throw 됩니다.&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleConnection&gt; &lt;/xref:System.Data.OracleClient.OracleTransaction&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null 값입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how the <bpt id="p1">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method should apply command results to the <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 하는 값을 가져오거나 설정 합니다. 방법을 <bpt id="p1">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드는 명령 결과를 적용 해야는 <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Data.UpdateRowSource&gt; value is <ph id="ph1">`Both`</ph> unless the command is automatically generated (as in the case of the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;), in which case the default is <ph id="ph2">`None`</ph>.</source>
          <target state="translated">기본 &lt;xref:System.Data.UpdateRowSource&gt;값은 <ph id="ph1">`Both`</ph> 명령이 자동으로 생성 하지 않는 한 (의 경우로 &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;),이 경우 기본값은 <ph id="ph2">`None`</ph>.&lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.UpdateRowSource&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using the &lt;xref:System.Data.UpdateRowSource&gt; property, see <bpt id="p1">[</bpt>DataAdapter Parameters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 &lt;xref:System.Data.UpdateRowSource&gt;속성 참조 <bpt id="p1">[</bpt>DataAdapter 매개 변수<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Data.UpdateRowSource&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The value entered was not one of the <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">입력 한 값 중 하나 였습니다는 <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>