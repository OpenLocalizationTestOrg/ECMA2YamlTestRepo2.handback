<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af564208cdfd065882505ba5a98aaa420b51af30</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.DependencyPropertyConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31e5f3ffb9958bbe43b5eeb3de5db85d58877f89</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3922f4019bf503a5109e696f4b854c26f8c43e7d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converts from a string to a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">문자열에서 변환 된 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyPropertyConverter class only converts from a &lt;xref:System.String&gt; into an instance of &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">DependencyPropertyConverter 클래스는 &lt;xref:System.String&gt; &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; 의 인스턴스로&lt;/xref:System.String&gt; 에서 변환</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other attempts at conversion throw an exception.</source>
          <target state="translated">예외를 throw 하는 다른 방법을 시도해도 변환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyPropertyConverter converts from a &lt;xref:System.String&gt; using the following input format: <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept><ph id="ph1">`.`</ph><bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept>.</source>
          <target state="translated">변환 하는 DependencyPropertyConverter는 &lt;xref:System.String&gt;다음 입력된 형식을 사용 하 여: <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept><ph id="ph1">`.`</ph><bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept>.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A format of <bpt id="p1">*</bpt>namespacePrefix<ept id="p1">*</ept>:<bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph1">`.`</ph><bpt id="p3">*</bpt>propertyName<ept id="p3">*</ept> is also accepted for legacy reasons but the <bpt id="p4">*</bpt>namespacePrefix<ept id="p4">*</ept>: component is ignored.</source>
          <target state="translated">형식을 <bpt id="p1">*</bpt>namespacePrefix<ept id="p1">*</ept>:<bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph1">`.`</ph><bpt id="p3">*</bpt>propertyName<ept id="p3">*</ept> 레거시 용도로 사용할 수 있지만 <bpt id="p4">*</bpt>namespacePrefix<ept id="p4">*</ept>: 구성 요소가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A format of <bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept> is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the <bpt id="p2">*</bpt>typeName<ept id="p2">*</ept>, by service implementation of &lt;xref:System.Xaml.IAmbientProvider&gt; in the context.</source>
          <target state="translated">형식을 <bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept> ; 특정 한 경우에도 사용할 수이 format는 앰비언트 속성을 평가 하 고 추론 하는 기능에는 <bpt id="p2">*</bpt>typeName<ept id="p2">*</ept>, 서비스 구현에 의해 &lt;xref:System.Xaml.IAmbientProvider&gt;컨텍스트에서.&lt;/xref:System.Xaml.IAmbientProvider&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.</source>
          <target state="translated">레거시 용도로이 클래스는 BAML 레코드의 변환을 지원 하지만 구현 정보 이므로에 신뢰할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of &lt;xref:System.Windows.Setter.Property%2A&gt; and generating a &lt;xref:System.Windows.DependencyProperty&gt; value.</source>
          <target state="translated">이 변환기의 동작은 XAML 처리에 대 한 단일 WPF 시나리오 주위 지향 구체적으로: 특성 값을 읽기 &lt;xref:System.Windows.Setter.Property%2A&gt;를 생성 한 &lt;xref:System.Windows.DependencyProperty&gt;값.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.Setter.Property%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_DependencyPropertyConverter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_DependencyPropertyConverter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.DependencyPropertyConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Markup.DependencyPropertyConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determines whether an object of the specified type can be converted to an instance of <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 형식의 개체의 인스턴스로 변환할 수 있는지 여부를 결정 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; class only converts a string to an instance of &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;클래스에만 &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; 의 인스턴스를 문자열로 변환&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore only a <ph id="ph1">`sourceType`</ph> of &lt;xref:System.String&gt; returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">따라서만 <ph id="ph1">`sourceType`</ph> 의 &lt;xref:System.String&gt;반환 <ph id="ph2">`true`</ph>.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`context`</ph> is not used by this implementation.</source>
          <target state="translated"><ph id="ph1">`context`</ph>이 구현에서 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">이 변환기가 호출 되는 환경에 대 한 정보를 제공 하는 형식 컨텍스트.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">변환을 위해 확인할 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this converter can perform the operation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 변환기에는 작업에서 수행할 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Determines whether an instance of <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be converted to the specified type.</source>
          <target state="translated">인스턴스 여부를 확인 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 구현은 항상 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">이 변환기가 호출 되는 환경에 대 한 정보를 제공 하는 형식 컨텍스트.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">변환을 위해 확인할 형식입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this converter can perform the operation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 변환기에는 작업에서 수행할 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Attempts to convert the specified object to a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, using the specified context.</source>
          <target state="translated">지정된 된 개체를 변환 하려고 한 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 지정된 된 컨텍스트를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; class only converts a string to an instance of &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;클래스에만 &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; 의 인스턴스를 문자열로 변환&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`culture`</ph> is not used by this implementation.</source>
          <target state="translated"><ph id="ph1">`culture`</ph>이 구현에서 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`context`</ph> provided is expected to provide services that are required for proper evaluation.</source>
          <target state="translated"><ph id="ph1">`context`</ph> 제공 되는 적절 한 평가에 필요한 서비스를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include &lt;xref:System.Xaml.IAmbientProvider&gt;, &lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;, and &lt;xref:System.Xaml.IXamlSchemaContextProvider&gt;.</source>
          <target state="translated">여기에 &lt;xref:System.Xaml.IAmbientProvider&gt;, &lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;, 및 &lt;xref:System.Xaml.IXamlSchemaContextProvider&gt;.&lt;/xref:System.Xaml.IXamlSchemaContextProvider&gt; &lt;/xref:System.Windows.Markup.IXamlTypeResolver&gt; &lt;/xref:System.Xaml.IAmbientProvider&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">이 변환기가 호출 되는 환경에 대 한 정보를 제공 하는 형식 컨텍스트.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Culture specific information.</source>
          <target state="translated">문화권별 정보입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The converted object.</source>
          <target state="translated">변환 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the conversion is successful, this is a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 변환이 성공한 경우는 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> cannot be converted.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph>변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph> are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph> are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Attempts to convert a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified type, using the specified context.</source>
          <target state="translated">변환 하려고 한 <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 형식으로 지정된 된 컨텍스트를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Always throws an exception.</source>
          <target state="translated">항상 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation always throws an exception.</source>
          <target state="translated">이 구현은 항상 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">이 변환기가 호출 되는 환경에 대 한 정보를 제공 하는 형식 컨텍스트.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Culture specific information.</source>
          <target state="translated">문화권별 정보입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The type to convert the object to.</source>
          <target state="translated">개체를 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Always throws an exception.</source>
          <target state="translated">항상 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>