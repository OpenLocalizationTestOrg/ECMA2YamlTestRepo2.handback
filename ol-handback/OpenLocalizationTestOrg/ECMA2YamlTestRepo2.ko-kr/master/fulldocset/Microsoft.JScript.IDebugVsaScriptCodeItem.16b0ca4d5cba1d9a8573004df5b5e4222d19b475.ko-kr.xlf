<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca5c39cdb67a23924d2922659bbaeaaf56c0aeb7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.JScript.IDebugVsaScriptCodeItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54cc59618805a57090469855efd2c1acfa6aa924</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b43c012dabcca3d89d7bc38983d1f43a4ebda3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods that evaluate expressions and parse strings.</source>
          <target state="translated">식을 계산 하 고 문자열 구문 분석 하는 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</source>
          <target state="translated">이 인터페이스는 일반적으로 코드 블록을 나타내는 개체에서 구현 하 고 디버거에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface provides extra functionality that is needed by an IActiveScript host.</source>
          <target state="translated">이 인터페이스는 IActiveScript 호스트에 필요한 추가 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</source>
          <target state="translated">클래스에서 구현 된 경우 블록, 식 또는 문 코드 항목이 나타내는 평가 하 고 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</source>
          <target state="translated">일반적으로 호출 (예: 조사식 창)에서 식을 계산 해야 하는 디버거에서 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For expressions, the value is the result of the expression.</source>
          <target state="translated">식의 값은 식의 결과입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</source>
          <target state="translated">블록 및 문의 결과 식은 계산 블록 또는 문에 의해 마지막 식이입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the Evaluate method is functionally identical to the &lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt; method.</source>
          <target state="translated">Evaluate 메서드는 기능적으로 동일는 &lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;메서드.&lt;/xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the marshaling attributes differ.</source>
          <target state="translated">마샬링 특성에만 다릅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the interface allows an unmanaged debugger to obtain the return value as an <ph id="ph1">`IUnknown`</ph> pointer rather than a <ph id="ph2">`VARIANT`</ph>.</source>
          <target state="translated">인터페이스의이 버전으로 반환 값을 가져올 수는 관리 되지 않는 디버거를 사용 하면 한 <ph id="ph1">`IUnknown`</ph> 포인터 대신 <ph id="ph2">`VARIANT`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns a value that represents the evaluation of the statement, expression, or block.</source>
          <target state="translated">문, 식 또는 블록의 평가 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a class, parses strings and returns the parsed-out information.</source>
          <target state="translated">클래스에서 구현 하는 경우 문자열을 구문 분석 하 고 구문 분석 된 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 메서드를 나타내는 중단점에 대 한 정보를 구문 분석 하는 디버거는 일반적으로 <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The debugger might have a breakpoint typed in by the user in the form <bpt id="p1">*</bpt>functionname-arguments-ILoffset<ept id="p1">*</ept>.</source>
          <target state="translated">디버거는 중단점에 폼에서 사용자가 입력 한 있을 수 <bpt id="p1">*</bpt>functionname-인수-ILoffset<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A named breakpoint string can have a complex format, for example, <ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph> The parameter list is optional, as is the IL offset.</source>
          <target state="translated">명명 된 중단점 문자열 복잡 한 형식에 예를 들어 있을 수 <ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph> 매개 변수 목록은 선택적 요소는 IL 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</source>
          <target state="translated">함수, 선택적 인수 목록 및 선택적 IL 오프셋을 제공 하는 잘 구성 된 명명 된 중단점 문자열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</source>
          <target state="translated">Out 매개 변수는 함수의 이름을 반환 경우 구문 분석 입력된 문자열 토큰이 나 빈 문자열 입력된 문자열 잘 구성 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Out parameter returning the number of arguments in the optional argument list.</source>
          <target state="translated">Out 매개 변수는 선택적 인수 목록에서 인수 개수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns zero if there is no arguments list or if the string is not well formed.</source>
          <target state="translated">인수 목록이 없습니다 문자열이 올바른 형식이 아니면&amp;0;을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</source>
          <target state="translated">Out 매개 변수 반환에서 모든 인수의 형식 이름 공백으로 구분 된 목록이 인수 목록 또는 빈 문자열에 인수 목록이 없거나 입력된 문자열 형식이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</source>
          <target state="translated">Out 매개 변수는 입력에 명명 된 함수의 반환 형식을 포함 하는 문자열 또는 반환 형식이 없거나 경우 빈 문자열 이거나 입력된 문자열을 반환 형식이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</source>
          <target state="translated">부호 없는 정수 (long) IL 오프셋 없이 했습니다 또는 문자열 형식이 잘못 된 경우&amp;0; 또는 입력된 문자열에서 IL 오프셋을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the named breakpoint is successfully parsed, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 명명 된 중단점의 구문 분석 되 면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 그렇지 않은 경우.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>