<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18e366ad8b4ec0bed32aaeaa0054b441b06c34a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Reflection.Binder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99360ebb0bd35915cd1e92e3a877b00a54a1be61</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f98751ecd10a223ca3b0da29a09e354e8b710aeb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</source>
          <target state="translated">후보 목록에서 구성원을 선택 하 고 정식 인수 형식으로 실제 인수 형식을 형식 변환을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations of the Binder class are used by methods such as &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;, which selects from a set of possible members to execute, based on a set of parameter types and argument values; &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;, which selects a method based on parameter types; and so on.</source>
          <target state="translated">바인더 클래스의 구현 &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;, 같은 매개 변수 형식 및 인수 값의 집합에 따라를 실행 하려면 가능한 멤버의 집합에서 선택 하는 방법에서 사용 &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;, 매개 변수 형식 및 등을 기반으로 하는 메서드를 선택 하는.&lt;/xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A default implementation of the Binder class is provided by the &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">바인더 클래스의 기본 구현에서 제공 되는 &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by the constructors of derived classes, to initialize state in this type.</source>
          <target state="translated">이 생성자는이 형식에 상태를 초기화 하려면 파생된 클래스의 생성자에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Selects a field from the given set of fields, based on the specified criteria.</source>
          <target state="translated">지정된 된 조건에 따라 필드가 지정 된 집합에서 필드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`bindingAttr`</ph> does not include &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;, the default binder implementation provided by &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; simply returns the first element of <ph id="ph2">`match`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`bindingAttr`</ph> 는 &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;에서 제공 하는 기본 바인더 구현 &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;의 첫 번째 요소를 반환 <ph id="ph2">`match`</ph>.&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>No selection is done.</source>
          <target state="translated">선택 영역이 없는 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the binding provided by &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 방법은 &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; 에서 제공 하는 바인딩이 제어 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set of fields that are candidates for matching.</source>
          <target state="translated">집합에 일치 하는 필드입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">예를 들어, 한 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에서 사용 됩니다 <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 리플렉션에서 확인 가능한 필드 집합이 일치 하는 일반적으로 올바른 멤버 이름을 했기 때문에이 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">제공 하는 기본 구현을 <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 이 배열 순서를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The field value used to locate a matching field.</source>
          <target state="translated">일치 하는 필드를 찾는 데 필드 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">인스턴스 &lt;xref:System.Globalization.CultureInfo&gt;형식 강제 변환 하는 바인더 구현에서 데이터 형식의 강제 변환을 제어 하는 데 사용 되는.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">경우 <ph id="ph1">`culture`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;현재 스레드가 사용 됩니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">예를 들어, 바인더 구현에는 문자열 값을 숫자 형식 강제 변환 허용 하는 경우이 매개 변수는 변환 하는 데 필요한는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 1, 000을 나타내는 한 <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값을 1, 000은 각 문화권 마다 다르게 표현 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">기본 바인더에는 이러한 문자열 강제 변환을 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The matching field.</source>
          <target state="translated">일치 하는 필드입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains multiple fields that are equally good matches for <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> 포함 <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> 동등 하 게 일치에 대 한 여러 필드가 포함 된 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a field of type <ph id="ph5">`MyClass`</ph> and a field of type <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 포함는 <ph id="ph2">`MyClass`</ph> 구현 하는 개체는 <ph id="ph3">`IMyClass`</ph> 인터페이스 및 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept> 형식의 필드를 포함 <ph id="ph5">`MyClass`</ph> 형식의 필드 및 <ph id="ph6">`IMyClass`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains no fields that can accept <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> 포함 <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> 수락할 수 있는 필드가 없는 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> 포함 <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 이거나 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Selects a method to invoke from the given set of methods, based on the supplied arguments.</source>
          <target state="translated">메서드를 제공 된 인수에 따라의 지정된 된 집합에서 호출할 메서드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default binder takes into account both parameters that have values and <ph id="ph1">`params`</ph> arrays (<ph id="ph2">`ParamArray`</ph> arrays in Visual Basic).</source>
          <target state="translated">기본 바인더는 고려 값이 있는 매개 변수가 모두 및 <ph id="ph1">`params`</ph> 배열 (<ph id="ph2">`ParamArray`</ph> Visual Basic의 배열)입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, it is possible to find a match in cases where <ph id="ph1">`args`</ph> and <ph id="ph2">`match`</ph> do not contain the same number of elements.</source>
          <target state="translated">즉, 일치 하는 경우에도 찾을 수 있는 <ph id="ph1">`args`</ph> 및 <ph id="ph2">`match`</ph> 동일한 요소 수를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by BindToMethod.</source>
          <target state="translated">바인더 클라이언트를 BindToMethod에서 인수 배열 조작 된 경우 인수 배열을 다시 원래 형식으로 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this remap capability to get back by-reference arguments when such arguments are present.</source>
          <target state="translated">이러한 인수가 있을 때 참조로 인수 प र이 다시 매핑 기능을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you pass arguments by name, the binder reorders the argument array.</source>
          <target state="translated">이름으로 인수를 전달 하는 경우 바인더 인수 배열 다시 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`state`</ph> parameter keeps track of argument reordering, thus enabling the binder's &lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt; method to reorder the argument array to its original form.</source>
          <target state="translated"><ph id="ph1">`state`</ph> 매개 변수 인수 순서 변경을 바인더의 사용할 수 있게 하는 추적 &lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;원래 형태로 인수 배열 순서를 변경 하려면 메서드.&lt;/xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindToMethod method is used by the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">BindToMethod 메서드를 사용 하 여는 &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">집합에 일치 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">예를 들어, 한 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에서 사용 됩니다 <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 리플렉션에서 확인 가능한 메서드 집합을 일치 하는 일반적으로 올바른 멤버 이름을 했기 때문에이 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">제공 하는 기본 구현을 <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 이 배열 순서를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The arguments that are passed in.</source>
          <target state="translated">에 전달 되는 인수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <ph id="ph1">`names`</ph> parameter is used to specify an order other than positional order.</source>
          <target state="translated">바인더;이 배열에 있는 인수의 순서를 변경할 수 있습니다. 경우 기본 바인더 인수의 순서를 변경 하는 예를 들어는 <ph id="ph1">`names`</ph> 위치 순서 외의 순서를 지정 하려면 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</source>
          <target state="translated">바인더 구현 인수 형식의 강제 변환, 형식 및 인수 값을도 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">배열 형식이 수정 된 매개 변수 서명과 함께 작동 하도록 바인딩을 사용 하는 매개 변수 한정자입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default binder implementation does not use this parameter.</source>
          <target state="translated">기본 바인더 구현에서이 매개 변수를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">인스턴스 &lt;xref:System.Globalization.CultureInfo&gt;형식 강제 변환 하는 바인더 구현에서 데이터 형식의 강제 변환을 제어 하는 데 사용 되는.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">경우 <ph id="ph1">`culture`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;현재 스레드가 사용 됩니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">예를 들어, 바인더 구현에는 문자열 값을 숫자 형식 강제 변환 허용 하는 경우이 매개 변수는 변환 하는 데 필요한는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 1, 000을 나타내는 한 <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값을 1, 000은 각 문화권 마다 다르게 표현 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">기본 바인더에는 이러한 문자열 강제 변환을 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The parameter names, if parameter names are to be considered when matching, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if arguments are to be treated as purely positional.</source>
          <target state="translated">매개 변수 이름은 일치 시 고려해 야 할 경우 매개 변수 이름이 나 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인수 위치로 처리 되는 경우.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, parameter names must be used if arguments are not supplied in positional order.</source>
          <target state="translated">예를 들어, 매개 변수 이름은 위치 순서에 인수를 제공 하지 않는 경우 사용할 수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the method returns, <ph id="ph1">`state`</ph> contains a binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">메서드가 반환 된 후 <ph id="ph1">`state`</ph> 바인더 제공 개체는 인수 순서 변경을 추적를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The binder creates this object, and the binder is the sole consumer of this object.</source>
          <target state="translated">바인더가이 개체를 만들고이 개체의 유일한 소비자는 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`state`</ph> is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns, you must pass <ph id="ph2">`state`</ph> to the &lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt; method if you want to restore <ph id="ph3">`args`</ph> to its original order, for example, so that you can retrieve the values of <bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> parameters (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> parameters in Visual Basic).</source>
          <target state="translated">경우 <ph id="ph1">`state`</ph> 않습니다 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때 <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 반환 전달 해야 <ph id="ph2">`state`</ph> 에 &lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt;메서드 복원 하려는 경우 <ph id="ph3">`args`</ph> 를 원래의 값을 검색할 수 있도록 예를 들어 순서 <bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 매개 변수 (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> Visual Basic에서 매개 변수).&lt;/xref:System.Reflection.Binder.ReorderArgumentArray*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The matching method.</source>
          <target state="translated">일치 하는 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 와 동등 하 게 일치 하는 여러 메서드가 포함 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes <ph id="ph5">`MyClass`</ph> and a method that takes <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept> 포함는 <ph id="ph2">`MyClass`</ph> 구현 하는 개체는 <ph id="ph3">`IMyClass`</ph> 인터페이스 및 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept> 사용 하는 메서드를 포함 <ph id="ph5">`MyClass`</ph> 사용 하는 메서드 및 <ph id="ph6">`IMyClass`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains no methods that can accept the arguments supplied in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 메서드가 포함 되지 않은에 제공 된 인수를 수락할 수 있는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이거나 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Changes the type of the given <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given <bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">종류를 변경 하는 지정 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 주어진 <bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">리플렉션 공용 형식 시스템의 액세스 가능성 규칙을 모델링합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">예를 들어 호출자에 게 동일한 어셈블리에 포함 된 경우 호출자에 게 필요는 없습니다 특별 한 권한이 내부 멤버에 대 한.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the caller needs &lt;xref:System.Security.Permissions.ReflectionPermission&gt;.</source>
          <target state="translated">그렇지 않은 경우 호출자가 &lt;xref:System.Security.Permissions.ReflectionPermission&gt;.&lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">이것은 보호 되는 멤버 조회 일치, private, 및 등입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The general principle is that <ph id="ph1">`ChangeType`</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">일반적으로 <ph id="ph1">`ChangeType`</ph> 없는 데이터 손실이 없는 확장을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">확장 강제 변환의 예로 64 비트 부호 있는 정수 값으로 사용 되는 32 비트 부호 있는 정수 값 강제 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">이 데이터가 손실 될 수 있는 축소 변환에서 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">축소 변환의 예로 64 비트 부호 있는 정수는 32 비트 부호 있는 정수를 강제 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the coercions performed by the default <ph id="ph1">`ChangeType`</ph>.</source>
          <target state="translated">다음 표에서 기본적으로 수행 된 변환이 <ph id="ph1">`ChangeType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Source type|Target type|   |-----------------|-----------------|   |Any type|Its base type.|   |Any type|The interface it implements.|   |Char|UInt16, UInt32, Int32, UInt64, Int64, Single, Double|   |Byte|Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double|   |SByte|Int16, Int32, Int64, Single, Double|   |UInt16|UInt32, Int32, UInt64, Int64, Single, Double|   |Int16|Int32, Int64, Single, Double|   |UInt32|UInt64, Int64, Single, Double|   |Int32|Int64, Single, Double|   |UInt64|Single, Double|   |Int64|Single, Double|   |Single|Double|   |Non-reference|By-reference.|</source>
          <target state="translated">| 소스 형식 | 대상 유형 |   |-----------------|-----------------|   | 모든 형식 | 기본 형식입니다. |   | 모든 형식 | 구현 하는 인터페이스입니다. |   | Char | UInt16, UInt32, Int32, UInt64, Int64, Single, Double |   | 바이트 | Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double |   | SByte | Int16, Int32, Int64, Single, Double |   | UInt16 | UInt32, Int32, UInt64, Int64, Single, Double |   | Int16 | Int32, Int64, Single, Double |   | UInt32 | UInt64, Int64, Single, Double |   | Int32 | Int64, 단방향, 이중 |   | UInt64 | Single, Double |   | Int64 | Single, Double |   | 단일 | 이중 |   | 비참조 형식 | 참조로 전달 합니다. |</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The object to change into a new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 변경 하려면 개체 <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that <ph id="ph1">`value`</ph> will become.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 <ph id="ph1">`value`</ph> 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types.</source>
          <target state="translated">인스턴스 &lt;xref:System.Globalization.CultureInfo&gt;데이터 형식의 강제 변환을 제어 하는 데 사용 되는.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">경우 <ph id="ph1">`culture`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;현재 스레드가 사용 됩니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Note   For example, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">예를 들어,이 매개 변수는 변환 하는 데 필요한는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 1, 000을 나타내는 한 <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 값을 1, 000은 각 문화권 마다 다르게 표현 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An object that contains the given value as the new type.</source>
          <target state="translated">새 형식으로 지정 된 값을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Upon returning from &lt;xref:System.Reflection.Binder.BindToMethod*&gt;, restores the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> argument to what it was when it came from <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 하면 &lt;xref:System.Reflection.Binder.BindToMethod*&gt;, 복원 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept> 인수에서 제공 하는 때를 <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.Binder.BindToMethod*&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method if <ph id="ph1">`state`</ph> is not <ph id="ph2">`null`</ph> after a return from <ph id="ph3">`BindToMethod`</ph>.</source>
          <target state="translated">공용 언어 런타임에서이 메서드를 호출 하는 경우 <ph id="ph1">`state`</ph> 않습니다 <ph id="ph2">`null`</ph> 에서 반환 된 후 <ph id="ph3">`BindToMethod`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual arguments that are passed in.</source>
          <target state="translated">에 전달 되는 실제 인수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Both the types and values of the arguments can be changed.</source>
          <target state="translated">형식과 인수의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">바인더 제공 개체는 인수 순서 변경을 추적 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Selects a method from the given set of methods, based on the argument type.</source>
          <target state="translated">방법, 인수 종류에 따라의 지정된 된 집합에서 메서드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should return <ph id="ph1">`null`</ph> if no method matches the criteria.</source>
          <target state="translated">이 메서드를 반환 하도록 <ph id="ph1">`null`</ph> 메서드가 없는 조건과 일치 하는 경우.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the selection provided by the <ph id="ph1">`GetConstructor`</ph> and <ph id="ph2">`GetMethod`</ph> methods on <ph id="ph3">`Type`</ph>.</source>
          <target state="translated">이 메서드를 제공 하는 선택을 제어는 <ph id="ph1">`GetConstructor`</ph> 및 <ph id="ph2">`GetMethod`</ph> 에 대 한 메서드 <ph id="ph3">`Type`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">집합에 일치 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">예를 들어, 한 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에서 사용 됩니다 <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 리플렉션에서 확인 가능한 메서드 집합을 일치 하는 일반적으로 올바른 멤버 이름을 했기 때문에이 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">제공 하는 기본 구현을 <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 이 배열 순서를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameter types used to locate a matching method.</source>
          <target state="translated">일치 하는 메서드를 찾는 데 매개 변수 형식.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">배열 형식이 수정 된 매개 변수 서명과 함께 작동 하도록 바인딩을 사용 하는 매개 변수 한정자입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The matching method, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">일치 하는 경우 메서드를 찾았습니다. 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for the parameter types described by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">types</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 하 게 하 여 설명 하는 매개 변수 형식에 대 한 동일 하 게 일치 하는 여러 메서드가 포함 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">types</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the array in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> contains a &lt;xref:System.Type&gt; object for <ph id="ph2">`MyClass`</ph> and the array in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes a base class of <ph id="ph4">`MyClass`</ph> and a method that takes an interface that <ph id="ph5">`MyClass`</ph> implements.</source>
          <target state="translated">예를 들어 배열 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept> 포함는 &lt;xref:System.Type&gt;개체에 대 한 <ph id="ph2">`MyClass`</ph> 및 배열에 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph3">match</ph> <ept id="p2">&lt;/code&gt;</ept> 의 기본 클래스를 사용 하는 메서드가 들어 <ph id="ph4">`MyClass`</ph> 및 인터페이스를 사용 하는 메서드 <ph id="ph5">`MyClass`</ph> 구현.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이거나 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-       An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> derives from &lt;xref:System.Type&gt;, but is not of type <bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-요소가 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept> 에서 파생 &lt;xref:System.Type&gt;, 있지만 유형이 <bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Selects a property from the given set of properties, based on the specified criteria.</source>
          <target state="translated">속성을 지정된 된 조건에 따라의 지정된 된 집합에서 속성을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the selection provided by the <ph id="ph1">`GetProperty`</ph> method on <ph id="ph2">`Type`</ph>.</source>
          <target state="translated">이 메서드를 제공 하는 선택을 제어는 <ph id="ph1">`GetProperty`</ph> 메서드를 <ph id="ph2">`Type`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The set of properties that are candidates for matching.</source>
          <target state="translated">집합에 일치 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">예를 들어는 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에서 사용 됩니다 <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, reflection에서 확인 가능 하는 속성 집합이 일치 하는 일반적으로 올바른 멤버 이름을 했기 때문에이 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">제공 하는 기본 구현을 <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 이 배열 순서를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The return value the matching property must have.</source>
          <target state="translated">일치 하는 속성이 반환 값이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The index types of the property being searched for.</source>
          <target state="translated">인덱스 형식에 대 한 검색 중인 속성입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Used for index properties such as the indexer for a class.</source>
          <target state="translated">클래스에 대 한 인덱서 같은 인덱스 속성에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">배열 형식이 수정 된 매개 변수 서명과 함께 작동 하도록 바인딩을 사용 하는 매개 변수 한정자입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The matching property.</source>
          <target state="translated">일치 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple properties that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">returnType</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">indexes</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 동등 하 게 일치에 대 한 여러 속성이 포함 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">returnType</ph> <ept id="p2">&lt;/code&gt;</ept> 및 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">indexes</ph> <ept id="p3">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">기본 바인더에 대 한 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이거나 빈 배열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>