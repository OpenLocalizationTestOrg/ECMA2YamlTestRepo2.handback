<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06cbc4d10d770a040412a8bce6d0d8a5b8f78a85</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.HybridDictionary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8faaace634ba6c5d5e6e6e611869590b1ce8d17</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d63f0d43306f62d722d0912b092d6293d5e95e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <bpt id="p1">&lt;xref uid="langword_csharp_IDictionary" name="IDictionary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by using a <bpt id="p2">&lt;xref href="System.Collections.Specialized.ListDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> while the collection is small, and then switching to a <bpt id="p3">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> when the collection gets large.</source>
          <target state="translated">구현 <bpt id="p1">&lt;xref uid="langword_csharp_IDictionary" name="IDictionary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 사용 하 여 한 <bpt id="p2">&lt;xref href="System.Collections.Specialized.ListDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션이 소형을 및로 전환 합니다는 <bpt id="p3">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 컬렉션이 커지면 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is recommended for cases where the number of elements in a dictionary is unknown.</source>
          <target state="translated">이 클래스에는 사전의 요소 수가 알 수 없는 경우에 권장 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It takes advantage of the improved performance of a &lt;xref:System.Collections.Specialized.ListDictionary&gt; with small collections, and offers the flexibility of switching to a &lt;xref:System.Collections.Hashtable&gt; which handles larger collections better than &lt;xref:System.Collections.Specialized.ListDictionary&gt;.</source>
          <target state="translated">향상 된 성능을 활용 한 &lt;xref:System.Collections.Specialized.ListDictionary&gt;컬렉션이 작은 &lt;xref:System.Collections.Hashtable&gt; &lt;xref:System.Collections.Specialized.ListDictionary&gt;.&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 보다 더 큰 컬렉션을 처리 하&lt;/xref:System.Collections.Hashtable&gt; 는 전환의 유연성을 제공 하 고&lt;/xref:System.Collections.Specialized.ListDictionary&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the initial size of the collection is greater than the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the collection is stored in a &lt;xref:System.Collections.Hashtable&gt; to avoid the overhead of copying elements from the &lt;xref:System.Collections.Specialized.ListDictionary&gt; to a &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">컬렉션의 초기 크기는 &lt;xref:System.Collections.Specialized.ListDictionary&gt;컬렉션에는 &lt;xref:System.Collections.Hashtable&gt; &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에서 요소를 복사 하는 오버 헤드를 방지 하기 위해&lt;/xref:System.Collections.Hashtable&gt; 저장 됩니다&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에 대 한 최적의 크기 보다 큰 경우</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor accepts a Boolean parameter that allows the user to specify whether the collection ignores the case when comparing strings.</source>
          <target state="translated">생성자는 사용자 컬렉션 문자열을 비교할 때 대/소문자를 무시 하는지 여부를 지정할 수 있게 하는 부울 매개 변수를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is case-sensitive, it uses the key's implementations of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">및 &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; 키 구현을 사용 하 여 대/소문자 구분 컬렉션의 경우</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is case-insensitive, it performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</source>
          <target state="translated">대/소문자 구분 컬렉션의 경우 서 수 대/소문자 구분을 간단한 비교는 고정 문화권의 대/소문자 규칙을 따르는 수행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the collection is case-sensitive.</source>
          <target state="translated">기본적으로 컬렉션은 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the invariant culture, see &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.</source>
          <target state="translated">고정 문화권에 대 한 자세한 내용은 &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.&lt;/xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be null, but a value can.</source>
          <target state="translated">키가 null 일 수 있지만 값 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`For Each`</ph> Visual basic에서) 컬렉션의 요소 형식의 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since each element of the HybridDictionary is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">HybridDictionary의 각 요소는 키/값 쌍에 요소 유형 키의 형식 또는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">대신, 요소 형식이 &lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.spe_3_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.spe_3_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_3_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated">예를 들어: <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.spe_3_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.spe_3_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.HybridDictionary2#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_3_1.vb)</ept> <ept id="p5">]</ept> 는 <ph id="ph1">`foreach`</ph> 문에 열거자를 컬렉션에 쓰는 것부터 읽기 가능 주변 래퍼입니다.    </target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates an empty case-sensitive <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">빈 대/소문자 구분 만듭니다 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the collection is case-sensitive and uses the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; as the hash code provider and the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; as the comparer.</source>
          <target state="translated">기본적으로는 컬렉션은 대/소문자 구분 멤버와의 키의 구현을 사용 하 여 &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;해시 코드 공급자와 키의 구현으로 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;비교자로.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.HybridDictionary&gt; must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;고유 해야 합니다.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates an empty <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified case sensitivity.</source>
          <target state="translated">빈 만듭니다 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 지정 된 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`caseInsensitive`</ph> is <ph id="ph2">`false`</ph>, the collection uses the key's implementations of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`caseInsensitive`</ph> 은 <ph id="ph2">`false`</ph>, 컬렉션 및 &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; 키 구현을 사용 하 여</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`caseInsensitive`</ph> is <ph id="ph2">`true`</ph>, the collection performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</source>
          <target state="translated">경우 <ph id="ph1">`caseInsensitive`</ph> 은 <ph id="ph2">`true`</ph>, 컬렉션 간단한 서 수 대/소문자 비구분 비교 수행, 고정 문화권의 대/소문자 규칙을 따르는 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the invariant culture, see &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.</source>
          <target state="translated">고정 문화권에 대 한 자세한 내용은 &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.&lt;/xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A Boolean that denotes whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is case-insensitive.</source>
          <target state="translated">나타내는 부울입니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대/소문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates a case-sensitive <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified initial size.</source>
          <target state="translated">대/소문자 구분 만듭니다 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 초기 크기입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the initial size of the collection is greater than the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the collection is stored in a &lt;xref:System.Collections.Hashtable&gt; to avoid the overhead of copying elements from the &lt;xref:System.Collections.Specialized.ListDictionary&gt; to the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">컬렉션의 초기 크기는 &lt;xref:System.Collections.Specialized.ListDictionary&gt;컬렉션에는 &lt;xref:System.Collections.Hashtable&gt; &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에서 요소를 복사 하는 오버 헤드를 방지 하기 위해&lt;/xref:System.Collections.Hashtable&gt; 저장 됩니다&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에 대 한 최적의 크기 보다 큰 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the collection is case-sensitive and uses the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; as the hash code provider and the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; as the comparer.</source>
          <target state="translated">기본적으로는 컬렉션은 대/소문자 구분 멤버와의 키의 구현을 사용 하 여 &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;해시 코드 공급자와 키의 구현으로 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;비교자로.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.HybridDictionary&gt; must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;고유 해야 합니다.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialSize`</ph>.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 <ph id="ph3">`initialSize`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The approximate number of entries that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can initially contain.</source>
          <target state="translated">항목의 대략적인 수 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 처음 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified initial size and case sensitivity.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 처음 크기와 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the initial size of the collection is greater than the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the collection is stored in a &lt;xref:System.Collections.Hashtable&gt; to avoid the overhead of copying elements from the &lt;xref:System.Collections.Specialized.ListDictionary&gt; to the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">컬렉션의 초기 크기는 &lt;xref:System.Collections.Specialized.ListDictionary&gt;컬렉션에는 &lt;xref:System.Collections.Hashtable&gt; &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에서 요소를 복사 하는 오버 헤드를 방지 하기 위해&lt;/xref:System.Collections.Hashtable&gt; 저장 됩니다&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에 대 한 최적의 크기 보다 큰 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`caseInsensitive`</ph> is <ph id="ph2">`false`</ph>, the collection uses the key's implementations of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`caseInsensitive`</ph> 은 <ph id="ph2">`false`</ph>, 컬렉션 및 &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; 키 구현을 사용 하 여</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`caseInsensitive`</ph> is <ph id="ph2">`true`</ph>, the collection performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</source>
          <target state="translated">경우 <ph id="ph1">`caseInsensitive`</ph> 은 <ph id="ph2">`true`</ph>, 컬렉션 간단한 서 수 대/소문자 비구분 비교 수행, 고정 문화권의 대/소문자 규칙을 따르는 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the invariant culture, see &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.</source>
          <target state="translated">고정 문화권에 대 한 자세한 내용은 &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.&lt;/xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialSize`</ph>.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 <ph id="ph3">`initialSize`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The approximate number of entries that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can initially contain.</source>
          <target state="translated">항목의 대략적인 수 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 처음 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A Boolean that denotes whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is case-insensitive.</source>
          <target state="translated">나타내는 부울입니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대/소문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Adds an entry with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 키와 값에 항목을 추가 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">개체의 상태와 해시 코드 값 간에 상관 관계가 있는 일반적으로 쓰일 수 없습니다 키로 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">예를 들어 문자열 개체는 키로 사용 하기 위해 StringBuilder 개체 보다 더 나은입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">키 일 수 없습니다 <ph id="ph1">`null`</ph>, 값과는 수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">사용할 수도 있습니다는 &lt;xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt;에 속성 키의 값을 설정 하 여 새 요소를 추가할 수 없습니다.는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;; 예를 들어 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; &lt;/xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, setting the &lt;xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">그러나 지정된 된 키에 이미 있는 경우는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;설정는 &lt;xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt;속성 이전 값을 덮어씁니다.&lt;/xref:System.Collections.Specialized.HybridDictionary.Item%2A&gt; &lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">반면, Add 메서드는 기존 요소를 수정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the number of elements becomes greater than the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the elements are copied from the &lt;xref:System.Collections.Specialized.ListDictionary&gt; to a &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">요소의 수는 &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에서 요소가 복사 되는&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 에 대 한 최적의 크기 보다 큰 상태일 때는</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this only happens once.</source>
          <target state="translated">그러나 이것은 한 번입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is already stored in a &lt;xref:System.Collections.Hashtable&gt; and the number of elements falls below the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the collection remains in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">컬렉션 &lt;xref:System.Collections.Hashtable&gt;요소 수가 a &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; 컬렉션은 유지에&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 대 한 최적의 크기 보다 작으면 및&lt;/xref:System.Collections.Hashtable&gt; 이미 저장 되어</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The key of the entry to add.</source>
          <target state="translated">추가할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value of the entry to add.</source>
          <target state="translated">추가할 항목의 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값일 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An entry with the same key already exists in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">같은 키를 가진 항목에 이미 있습니다.는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Removes all entries from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">항목을 모두 제거 된 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;가&amp;0;으로 설정 하 고 컬렉션의 요소에 다른 개체에 대 한 참조도 해제 됩니다.&lt;/xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is already stored in a &lt;xref:System.Collections.Hashtable&gt;, the collection remains in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">컬렉션에 &lt;xref:System.Collections.Hashtable&gt;컬렉션은 &lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; 에 이미 저장 되어 있는 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특정 키가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`key`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;에 대 한 메서드 <ph id="ph1">`key`</ph> 확인 하려면 여부 <ph id="ph2">`item`</ph> 존재 합니다.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;의 메서드는 <ph id="ph1">`item`</ph> 컬렉션의 개체에 대 한 매개 변수.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">찾을 수 있는 키의 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an entry with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 지정 된 항목이 고, 그렇지 않으면 키 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> entries to a one-dimensional &lt;xref:System.Array&gt; instance at the specified index.</source>
          <target state="translated">복사본의 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 엔트리를&amp;1; 차원 &lt;xref:System.Array&gt;지정된 된 인덱스에 있는 인스턴스에.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;열거자 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 을 반복 하는 같은 순서로&lt;/xref:System.Array&gt; 요소가 복사 되</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>To copy only the keys in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, use <ph id="ph1">`HybridDictionary.Keys.CopyTo`</ph>.</source>
          <target state="translated">에 있는 키를 복사 하는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;를 사용 하 여 <ph id="ph1">`HybridDictionary.Keys.CopyTo`</ph>.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To copy only the values in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, use <ph id="ph1">`HybridDictionary.Values.CopyTo`</ph>.</source>
          <target state="translated">값만 복사 하는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;를 사용 하 여 <ph id="ph1">`HybridDictionary.Values.CopyTo`</ph>.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;의 대상인은 &lt;xref:System.Collections.DictionaryEntry&gt;에서 복사한 개체 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 가능한 공간 보다 큰 <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 포함 된 키/값 쌍의 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 포함 된 키/값 쌍의 수는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;반복 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">이 위치에서 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.HybridDictionary&gt; implements the IsFixedSize property because it is required by the &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; interface.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.HybridDictionary&gt;에 필요 하기 때문에 IsFixedSize 속성을 구현 하는 &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;인터페이스.&lt;/xref:System.Collections.IDictionary?displayProperty=fullName&gt;&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">컬렉션 크기가 고정된 된 컬렉션을 만든 후 기존 요소를 수정할 수 있습니다에 추가 하거나 제거할 요소의 수 없습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">크기가 고정된 된 컬렉션은 지정 된 추가 및 요소를 제거 하지 못하도록 하는 래퍼 컬렉션 따라서를 추가 하거나 제거할 요소를 포함 하 여 내부 컬렉션을 변경 하는 경우 고정 크기 컬렉션에 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성은 항상 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.HybridDictionary&gt; implements the IsReadOnly property because it is required by the &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; interface.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.HybridDictionary&gt;에 필요 하기 때문에 IsReadOnly 속성을 구현 하는 &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;인터페이스.&lt;/xref:System.Collections.IDictionary?displayProperty=fullName&gt;&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성은 항상 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.HybridDictionary&gt; implements the IsSynchronized property because it is required by the &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; interface.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.HybridDictionary&gt;에 필요 하기 때문에 IsSynchronized 속성을 구현 하는 &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt;인터페이스.&lt;/xref:System.Collections.ICollection?displayProperty=fullName&gt;&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide a synchronized version of the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; using the &lt;xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;를 사용 하 여 &lt;xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A&gt; &lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성은 항상 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">지정된 된 키와 연결 된 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: <ph id="ph1">`myCollection[key]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the Item property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">에 존재 하지 않는 키의 값을 설정 하 여 새 요소를 추가 하는 항목 속성을 사용할 수도 있습니다는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;; 예를 들어 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">그러나 지정된 된 키에 이미 있는 경우는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, 이전 값을 덮어씁니다 항목 속성을 설정 합니다.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the &lt;xref:System.Collections.Specialized.HybridDictionary.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">반면,는 &lt;xref:System.Collections.Specialized.HybridDictionary.Add%2A&gt;메서드는 기존 요소를 수정 하지 않습니다.&lt;/xref:System.Collections.Specialized.HybridDictionary.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">키 일 수 없습니다 <ph id="ph1">`null`</ph>, 값과는 수입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.Specialized.HybridDictionary.Contains%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">구분 하기 위해 <ph id="ph1">`null`</ph> 지정된 된 키를 찾을 수 없으므로 반환 되는 및 <ph id="ph2">`null`</ph> 지정된 된 키의 값은 반환 되는 <ph id="ph3">`null`</ph>를 사용 하 여는 &lt;xref:System.Collections.Specialized.HybridDictionary.Contains%2A&gt;목록에 키가 있는지 확인 하는 메서드.&lt;/xref:System.Collections.Specialized.HybridDictionary.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic에서는 동일한 인덱싱 기능을 기본 속성으로 항목을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The key whose value to get or set.</source>
          <target state="translated">키 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정된 된 키와 연결 된 값입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, attempting to get it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and attempting to set it creates a new entry using the specified key.</source>
          <target state="translated">지정된 된 키가 없으면 get 반환 하려고 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 지정된 된 키를 사용 하 여 새 항목을 만듭니다 설정 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Specialized.HybridDictionary.Values%2A&gt; method.</source>
          <target state="translated">에 있는 값의 순서는 &lt;xref:System.Collections.ICollection&gt;지정 되어 있지에 연결 된 값과 순서가 동일 하지만 &lt;xref:System.Collections.ICollection&gt;에서 반환 되는 &lt;xref:System.Collections.Specialized.HybridDictionary.Values%2A&gt;메서드.&lt;/xref:System.Collections.Specialized.HybridDictionary.Values%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;정적 복사 하지 않습니다; 대신 &lt;xref:System.Collections.ICollection&gt;원래 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 의 키를 다시 참조할&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;계속 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 변경</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 키를 가지는 엔트리를 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; remains unchanged.</source>
          <target state="translated">경우는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;지정된 키를 가진 요소가 포함 되지 않습니다는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;변경 되지 않습니다.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; &lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
          <target state="translated">예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is already stored in a &lt;xref:System.Collections.Hashtable&gt; and the number of elements falls below the optimal size for a &lt;xref:System.Collections.Specialized.ListDictionary&gt;, the collection remains in the &lt;xref:System.Collections.Hashtable&gt; to avoid the overhead of copying elements from the &lt;xref:System.Collections.Hashtable&gt; back to a &lt;xref:System.Collections.Specialized.ListDictionary&gt;.</source>
          <target state="translated">컬렉션 &lt;xref:System.Collections.Hashtable&gt;요소의 수는 &lt;xref:System.Collections.Specialized.ListDictionary&gt; &lt;xref:System.Collections.Hashtable&gt; &lt;xref:System.Collections.Hashtable&gt;다시에 &lt;xref:System.Collections.Specialized.ListDictionary&gt;.&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 로&lt;/xref:System.Collections.Hashtable&gt; 에서 요소를 복사 하는 오버 헤드를 방지 하기 위해&lt;/xref:System.Collections.Hashtable&gt; 에서 컬렉션은 유지에&lt;/xref:System.Collections.Specialized.ListDictionary&gt; 대 한 최적의 크기로 아래 연결 되 고&lt;/xref:System.Collections.Hashtable&gt; 이미 저장 되어</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The key of the entry to remove.</source>
          <target state="translated">제거할 엔트리의 키입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; using the SyncRoot property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;SyncRoot 속성을 사용 하 여.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, not directly on the &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.</source>
          <target state="translated">동기화 하는 코드의 SyncRoot에 대 한 작업을 수행 해야는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;, &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 으로 만들어지므로&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; object.</source>
          <target state="translated">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;개체입니다.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IEnumerator&gt;반복 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">이 위치에서, 호출 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>호출, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; 또는&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 을 다음에 호출할 컬렉션 변경 될 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">사이 컬렉션이 수정 되는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;및 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;값을 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Specialized.HybridDictionary.Keys%2A&gt; method.</source>
          <target state="translated">에 있는 값의 순서는 &lt;xref:System.Collections.ICollection&gt;지정 되어 있지는 연결 된 키와 순서가 동일 하지만 &lt;xref:System.Collections.ICollection&gt;에서 반환 되는 &lt;xref:System.Collections.Specialized.HybridDictionary.Keys%2A&gt;메서드.&lt;/xref:System.Collections.Specialized.HybridDictionary.Keys%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;정적 복사 하지 않습니다; 대신 &lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.Specialized.HybridDictionary&gt;.&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 원래에서 값을 다시 참조&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.Specialized.HybridDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.Specialized.HybridDictionary&gt;계속 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영&lt;/xref:System.Collections.Specialized.HybridDictionary&gt; 변경</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;값을 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.HybridDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>