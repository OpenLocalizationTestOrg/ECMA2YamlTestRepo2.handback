<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31cd92e3a66dd65e8f574a5810d836d283ded34c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.TraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">170c9f7134c1dea3cba0bceee58f98d5c0bb0de1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5fbd710325c648913712da4748970a5dae2d430</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">제공 된 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적 및 디버그 출력 모니터링 하는 수신기에 대 한 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Diagnostics.TraceListener&gt;.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Diagnostics.TraceListener&gt;안내 하십시오.&lt;/xref:System.Diagnostics.TraceListener&gt; 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Default Value|   |--------------|-------------------|   |Name|The empty string ("").|   |Indent|Zero.|   |IndentSize|Four spaces.|</source>
          <target state="translated">| 속성 | 기본 값 |   |--------------|-------------------|   | 이름 | 빈 문자열 (""). | | 들여쓰기 |&amp;0;. |   | IndentSize | 공백&amp;4; 개입니다. |</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified name as the listener.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 수신기로 지정된 된 이름을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에 정의 된 사용자 지정 추적 수신기 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from the &lt;xref:System.Diagnostics.TraceListener&gt; class can add custom attributes by overriding the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method and returning a string array of custom attribute names.</source>
          <target state="translated">클래스에서 상속 되는 &lt;xref:System.Diagnostics.TraceListener&gt;클래스를 재정의 하 여 사용자 지정 특성을 추가할 수는 &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;메서드 및 사용자 지정 특성 이름의 문자열 배열을 반환 합니다.&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Attributes property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated">Attributes 속성 응용 프로그램의 구성 파일에서 참조 되는 사용자 지정 특성을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the following configuration file excerpt the &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; custom attribute "delimiter" is referenced.</source>
          <target state="translated">예를 들어 다음 구성 파일 예제에에서는 &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;사용자 지정 특성 "구분 기호"를 참조 합니다.&lt;/xref:System.Diagnostics.DelimitedListTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the Attributes property returns a &lt;xref:System.Collections.Specialized.StringDictionary&gt; containing the string "delimiter".</source>
          <target state="translated">이 경우 특성 속성 반환는 &lt;xref:System.Collections.Specialized.StringDictionary&gt;"구분 기호" 문자열이 포함 된.&lt;/xref:System.Collections.Specialized.StringDictionary&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>       Unreferenced custom attributes are not enumerated.</source>
          <target state="translated"><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>참조 되지 않은 사용자 지정 특성을 열거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;메서드.&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the custom attributes for the trace listener.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적 수신기에 대 한 사용자 지정 특성이 포함 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 더 이상 추적 또는 디버깅 출력을 받지 않도록 출력 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the output is going to a file, such as to the &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.</source>
          <target state="translated">이 메서드를 사용 하 여 출력 하는 경우 파일에 같은 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">이 메서드를 호출한 후 개체를 다시 초기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Diagnostics.TraceListener&gt; to be reallocated for other purposes.</source>
          <target state="translated">사용 하는 리소스를 사용 하면 Dispose를 호출는 &lt;xref:System.Diagnostics.TraceListener&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>보호 된 호출 &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;메서드는 <ph id="ph2">`disposing`</ph> 매개 변수 설정 <ph id="ph3">`true`</ph>.&lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 와 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Diagnostics.TraceListener&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Diagnostics.TraceListener&gt;참조.&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Emits an error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">오류 메시지를 내보냅니다 구현할 때 만든 수신기에는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">기본 동작은 응용 프로그램 사용자 인터페이스 모드로 실행 중일 때 메시지 상자에 지정된 된 메시지를 표시 하는 &lt;xref:System.Diagnostics.TraceListener&gt;인스턴스에 &lt;xref:System.Diagnostics.TraceListenerCollection&gt;컬렉션.&lt;/xref:System.Diagnostics.TraceListenerCollection&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 &lt;xref:System.Diagnostics.TraceListenerCollection&gt;컬렉션에 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 의 인스턴스가 있는&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 &lt;xref:System.Diagnostics.TraceListener&gt;를 하거나 컬렉션에서 제거 합니다.&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">오류를 내보냅니다 구현할 때 만든 메시지와 자세한 오류 메시지는 수신기를는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">기본 동작은 응용 프로그램이 실행 하는 사용자 인터페이스 모드로 때 메시지 상자에 메시지와 자세한 메시지를 표시 하는 &lt;xref:System.Diagnostics.TraceListener&gt;인스턴스에 &lt;xref:System.Diagnostics.TraceListenerCollection&gt;컬렉션.&lt;/xref:System.Diagnostics.TraceListenerCollection&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">기본적으로 &lt;xref:System.Diagnostics.TraceListenerCollection&gt;컬렉션에 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.&lt;/xref:System.Diagnostics.DefaultTraceListener&gt; 의 인스턴스가 있는&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 &lt;xref:System.Diagnostics.TraceListener&gt;를 하거나 컬렉션에서 제거 합니다.&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A detailed message to emit.</source>
          <target state="translated">내보낼 자세한 메시지입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">가져오고 추적 수신기에 대 한 추적 필터를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">차단 스위치에서 추적 소스를 제공 하는 것 이상의 계층을 제공 하는 추적 수신기에 추적 필터를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the &lt;xref:System.Diagnostics.EventTypeFilter&gt; can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">예를 들어는 &lt;xref:System.Diagnostics.EventTypeFilter&gt;수신기에서 출력 된 이벤트 형식을 제어 하는 추적 수신기에 추가할 수 있습니다.&lt;/xref:System.Diagnostics.EventTypeFilter&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">스위치 조건이 충족 하기 때문에 호출 되는 수신기에 추적 출력을 보낼 수 있는지 확인 하려면 있는 경우 해당 필터를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object derived from the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class.</source>
          <target state="translated">파생 된 개체는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 출력 버퍼를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">추적 수신기에서 지 원하는 사용자 지정 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for GetSupportedAttributes returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현에서는 GetSupportedAttributes 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A string array naming the custom attributes supported by the trace listener, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are no custom attributes.</source>
          <target state="translated">추적 수신기에서 지 원하는 사용자 지정 특성 이름을 지정 하는 문자열 배열을 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 특성이 없는 경우.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the indent level.</source>
          <target state="translated">들여쓰기 수준을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IndentLevel property represents the number of times that the indent specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">IndentLevel 속성은 들여쓰기로 지정 된 횟수를 나타냅니다는 &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;속성이 적용 됩니다.&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">이 속성은 스레드/요청 별로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The indent level.</source>
          <target state="translated">들여쓰기 수준입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
          <target state="translated">기본값은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">속성은 스레드/요청 별로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is four spaces.</source>
          <target state="translated">기본값은 공백&amp;4; 개입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">값은&amp;0; 보다 작은 집합 작업이 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">안전한 추적 수신기가 스레드로부터 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of IsThreadSafe is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">IsThreadSafe의 값은 수신기를 쓸 때 전역 잠금을 사용할 것인지 결정 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of IsThreadSafe is <ph id="ph1">`false`</ph>, the global lock is used regardless of the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.</source>
          <target state="translated">IsThreadSafe 값이 <ph id="ph1">`false`</ph>, 전역 잠금을 &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt; 값에 관계 없이 사용 됩니다</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The global lock is not used only if the value of IsThreadSafe is <ph id="ph1">`true`</ph> and the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">전역 잠금을 IsThreadSafe의 값은 경우에 사용 하지 <ph id="ph1">`true`</ph> 의 값과 &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;은 <ph id="ph2">`false`</ph>.&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">기본 동작은 전역를 사용 하는 수신기에 쓸 때마다 잠금.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the trace listener is thread safe; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>추적 수신기가 스레드로부터 안전 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 이름을 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name can be used to organize and access listeners in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">구성 하 고 수신기에 액세스 하는 이름을 사용할 수 있습니다는 &lt;xref:System.Diagnostics.TraceListenerCollection&gt;컬렉션.&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 이름을 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">출력의 들여쓰기 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The &lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt; method, called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes, sets the NeedIndent property value to <ph id="ph1">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> 는 &lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;메서드를 호출한는 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;및 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;클래스, NeedIndent 속성 값을 설정 <ph id="ph1">`false`</ph> 불필요 한 들여쓰기 나중 않으려면.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt; &lt;/xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the NeedIndent property to <ph id="ph1">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">NeedIndent 속성을 설정 해야 <ph id="ph1">`true`</ph> 될 때마다 추적 출력을 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the output should be indented; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>출력을 들여쓰기; 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">추적을 기록 정보, 데이터 개체 및 이벤트 정보를 수신기 별 출력 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">기본 구현 쓰기는 <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> 및 <ph id="ph4">`id`</ph> 머리글 및 바닥글 추적의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated"><ph id="ph1">`data`</ph> 매개 변수는 추적 메시지의 본문으로 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a &lt;xref:System.String&gt;.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> 데이터 개체의 메서드는 개체에 &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; 를 변환 하는</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The trace data to emit.</source>
          <target state="translated">내보낼 추적 데이터입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">추적 정보, 배열 데이터 개체 및 이벤트 정보를 수신기 별 출력에 씁니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">기본 구현은의 값을 쓰는 <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> 및 <ph id="ph3">`id`</ph> 헤더와 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">데이터 개체를 사용 하 여 문자열로 변환 되는 <ph id="ph1">`ToString`</ph> 각 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph> 데이터 바닥글의 값에 의존 하는 출력 데이터의 특성으로 기록 됩니다는 &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;속성.&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of objects to emit as data.</source>
          <target state="translated">데이터로 내보낼 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">쓰기 추적 및 이벤트 정보를 수신기 별 출력 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">기본 구현은의 값을 쓰는 <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> 및 <ph id="ph3">`id`</ph> 헤더와 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph> 데이터 바닥글의 값에 의존 하는 출력 데이터의 특성으로 기록 됩니다는 &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;속성.&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">추적 정보, 메시지 및 이벤트 정보를 수신기 별 출력에 씁니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">기본 구현은의 값을 쓰는 <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> 및 <ph id="ph3">`id`</ph> 매개 변수를 헤더로 올는 <ph id="ph4">`message`</ph> 데이터입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph> 데이터 바닥글의 값에 의존 하는 출력 데이터의 특성으로 기록 됩니다는 &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;속성.&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">추적 정보, 형식이 지정 된 배열 개체 및 이벤트 정보를 수신기 별 출력에 씁니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">기본 구현은의 값을 쓰는 <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> 및 <ph id="ph3">`id`</ph> 헤더와 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the &lt;xref:System.String.Format%2A&gt; method, passing the <ph id="ph2">`format`</ph> string and <ph id="ph3">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 개체 배열을 사용 하는 문자열로 변환할는 &lt;xref:System.String.Format%2A&gt;전달 하는 메서드는 <ph id="ph2">`format`</ph> 문자열 및 <ph id="ph3">`args`</ph> 추적의 메시지 부분으로 된 문자열의 서식을 지정 하려면 배열.&lt;/xref:System.String.Format%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph> 데이터 바닥글의 값에 의존 하는 출력 데이터의 특성으로 기록 됩니다는 &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;속성.&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">개체에 해당 하는&amp;0; 개 이상의 서식 항목이 포함 된 형식 문자열은 <ph id="ph1">`args`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 지정할 개체가&amp;0; 개 이상 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">추적 출력 옵션을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TraceOutputOptions property determines the optional content of trace output.</source>
          <target state="translated">TraceOutputOptions 속성 추적 출력의 선택적 콘텐츠를 결정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">속성 특히 코드의 섹션에 대 한 추가 데이터를 포함 하도록 구성 파일에서 또는 프로그래밍 방식으로 실행 하는 동안 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can set the TraceOutputOptions property for the console trace listener to &lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt; to add call stack information to the trace output.</source>
          <target state="translated">예를 들어 콘솔 추적 수신기는 TraceOutputOptions 속성을 설정할 수 있습니다 &lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;추적 출력에 호출 스택 정보를 추가 합니다.&lt;/xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.TraceOptions&gt; enumeration is not used by the following classes and methods:      -   The &lt;xref:System.Diagnostics.EventLogTraceListener&gt; class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceOptions&gt;열거형은 다음과 같은 클래스 및 메서드를 사용 되지 않습니다.- &lt;xref:System.Diagnostics.EventLogTraceListener&gt;클래스 수 있기 때문에 많은 양의 데이터를 로그에 기록&lt;/xref:System.Diagnostics.EventLogTraceListener&gt; &lt;/xref:System.Diagnostics.TraceOptions&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;, &lt;xref:System.Diagnostics.DefaultTraceListener&gt;, and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">- <ph id="ph1">`Write`</ph> 및 <ph id="ph2">`WriteLine`</ph> 의 메서드는 &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;, &lt;xref:System.Diagnostics.DefaultTraceListener&gt;, 및 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;클래스.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt; &lt;/xref:System.Diagnostics.ConsoleTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods of the &lt;xref:System.Diagnostics.TraceListener&gt; class when they are not overridden in a derived class.</source>
          <target state="translated">- &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;의 &lt;xref:System.Diagnostics.TraceListener&gt;파생된 클래스에서 재정의 되지 않는 경우 클래스&lt;/xref:System.Diagnostics.TraceListener&gt; 및 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;메서드&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">값이 유효 집합 작업이 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">추적 정보, 메시지, 관련된 작업 id 및 이벤트 정보를 수신기 별 출력에 씁니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 메서드는 응용 프로그램 코드에서 직접 하지만의 멤버만 호출할 수 없습니다는 &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, 및 &lt;xref:System.Diagnostics.TraceSource&gt;추적 데이터를 출력을 작성 하는 클래스입니다.&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt; method is used for the correlation of related traces.</source>
          <target state="translated">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;관련된 추적의 상관 관계에 대 한 메서드를 사용 합니다.&lt;/xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TraceTransfer method calls the &lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt; method to process the call, with the eventType level set to &lt;xref:System.Diagnostics.TraceEventType&gt; and the <ph id="ph1">`relatedActivityId`</ph>&lt;xref:System.Guid&gt; as a string appended to the message.</source>
          <target state="translated">TraceTransfer 메서드 호출의 &lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;eventType 수준을 설정에서 호출을 처리 하기 위해 메서드 &lt;xref:System.Diagnostics.TraceEventType&gt;및 <ph id="ph1">`relatedActivityId`</ph> &lt;xref:System.Guid&gt;메시지에 추가 하는 문자열로.&lt;/xref:System.Guid&gt; &lt;/xref:System.Diagnostics.TraceEventType&gt; &lt;/xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트에 대 한 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Guid&gt; object identifying a related activity.</source>
          <target state="translated">A &lt;xref:System.Guid&gt;관련된 작업을 식별 하는 개체입니다.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">개체의 값을 씁니다 &lt;xref:System.Object.ToString*&gt;구현할 때 만든 수신기에 대 한 메서드는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;쓰려는 정규화 된 클래스 이름이.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 메시지를 기록 파생된 클래스에서 만든 수신기에 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;xref:System.Object.ToString*&gt;구현할 때 만든 수신기에 대 한 메서드는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;쓰려는 정규화 된 클래스 이름이.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">범주 이름 및 기록 메시지 수신기를 구현할 때 만든는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Writes the indent to the listener you create when you implement this class, and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt; property to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 클래스를 구현할 때 만든 수신기에 들여쓰기를 기록 하 고 다시 설정 된 &lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt;속성을 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Diagnostics.TraceListener.NeedIndent*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the indent and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 메서드는 들여쓰기 하 고 다시 설정 된 &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method if &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; is <ph id="ph1">`true`</ph> when you are overriding the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods.</source>
          <target state="translated">이 메서드를 호출 &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;은 <ph id="ph1">`true`</ph> 재정의 하는 경우는 &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;및 &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;메서드.&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">기본적으로이 메서드는 들여쓰기에 빈 공간을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the indent is determined by the values of the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; properties.</source>
          <target state="translated">들여쓰기의 크기의 값에 따라 결정 되는 &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;및 &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;속성.&lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; property represents the number of times the indent of the size specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;속성으로 지정 된 크기의 들여쓰기 횟수를 나타내는 &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;속성이 적용 됩니다.&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;및 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;클래스.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">개체의 값을 씁니다 &lt;xref:System.Object.ToString*&gt;구현할 때 만든 수신기에 대 한 메서드는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스, 줄 종결자를 차례로 나옵니다.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">구현 하는 일반적인 줄 종결자는 캐리지 리턴 줄 바꿈 (\r).</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;쓰려는 정규화 된 클래스 이름이.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 수신기에 메시지를 만든 씁니다 줄 종결자 파생된 클래스에 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">구현 하는 일반적인 줄 종결자는 캐리지 리턴 줄 바꿈 (\r).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">범주 이름 및 개체의 값을 씁니다 &lt;xref:System.Object.ToString*&gt;구현할 때 만든 수신기에 대 한 메서드는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스를 다음 줄 종결자.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">구현 하는 일반적인 줄 종결자는 캐리지 리턴 줄 바꿈 (\r).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;쓰려는 정규화 된 클래스 이름이.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">범주 이름 및 기록 메시지 수신기를 구현할 때 만든는 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스, 줄 종결자를 차례로 나옵니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">구현 하는 일반적인 줄 종결자는 캐리지 리턴 줄 바꿈 (\r).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성 하는 데 사용 되는 범주 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>