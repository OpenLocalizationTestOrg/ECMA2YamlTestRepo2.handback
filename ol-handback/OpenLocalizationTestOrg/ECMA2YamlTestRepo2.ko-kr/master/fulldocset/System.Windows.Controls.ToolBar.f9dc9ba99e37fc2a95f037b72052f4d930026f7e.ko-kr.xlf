<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f8f98196057528bcccecf4b9904d26b17e330ce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Controls.ToolBar.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be21a42b4ff89fa3e6035c66e53a91a945685e2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">776a941748e23a3e0fab8c80d18dc6e36d24f309</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a container for a group of commands or controls.</source>
          <target state="translated">명령 또는 컨트롤의 그룹에 대 한 컨테이너를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ToolBar controls provide an overflow mechanism that places items that do not fit on the ToolBar into an overflow area.</source>
          <target state="translated">도구 모음 컨트롤 도구 모음 오버플로 영역에 맞지 않는 항목을 배치 하는 오버플로 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only toolbar elements within a parent &lt;xref:System.Windows.Controls.ToolBarTray&gt; can be moved or resized by the user.</source>
          <target state="translated">부모 내에서 도구 모음 요소만 &lt;xref:System.Windows.Controls.ToolBarTray&gt;이동 하거나 사용자가 크기 조정할 수 있습니다.&lt;/xref:System.Windows.Controls.ToolBarTray&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>ToolBar is a &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;, which means its header and collection of objects can be of any type (such as string, image, or panel).</source>
          <target state="translated">도구 모음을 한 &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;, 즉 헤더와 개체의 컬렉션 (예: 문자열, 이미지 또는 패널) 형식일 수 있습니다.&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt; class.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;클래스&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Customizing the ToolBar Control    To apply the same property settings to multiple ToolBar controls, use the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.</source>
          <target state="translated">동일한 속성 설정을 사용 하 여 여러 도구 모음 컨트롤에 적용 된 도구 모음 컨트롤을 사용자 지정의 &lt;xref:System.Windows.FrameworkElement.Style%2A&gt;속성.&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the default &lt;xref:System.Windows.Controls.ControlTemplate&gt; to give the control a unique appearance.</source>
          <target state="translated">기본값을 수정할 수 &lt;xref:System.Windows.Controls.ControlTemplate&gt;고유한 모양을 제어할 수 있습니다.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">만들기에 대 한 자세한 내용은 &lt;xref:System.Windows.Controls.ControlTemplate&gt;, 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see the parts and states that are specific to the ToolBar, see <bpt id="p1">[</bpt>ToolBar Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">부분 및 도구 모음에만 적용 되는 상태를 보려면 참조 <bpt id="p1">[</bpt>도구 모음 스타일 및 템플릿<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 WPF 테마<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Setting a visual property will only have an effect if that property is both present in ToolBar control's default template and is set by using a .</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 시각적 속성을 설정만 영향을 미칠 속성 시각적 도구 모음 컨트롤의 기본 서식 파일에 속성이 있으며를 사용 하 여 설정 된 경우는 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.</source>
          <target state="translated">"변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates where the toolbar should be located in the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">도구 모음에 있는 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the &lt;xref:System.Windows.Controls.ToolBar&gt; in a &lt;xref:System.Windows.Controls.ToolBarTray&gt; depends on the values of the &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt;, Band, and &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt; properties.</source>
          <target state="translated">위치는 &lt;xref:System.Windows.Controls.ToolBar&gt;에 &lt;xref:System.Windows.Controls.ToolBarTray&gt;의 값에 따라 달라는 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt;, 대역 외, 및 &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;속성.&lt;/xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt; &lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ToolBarTray&gt; &lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt; is set to &lt;xref:System.Windows.Controls.Orientation&gt;, a band represents a row in the &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">때 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;로 &lt;xref:System.Windows.Controls.Orientation&gt;밴드 &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 의 행을 나타냅니다&lt;/xref:System.Windows.Controls.Orientation&gt; 설정&lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt; is &lt;xref:System.Windows.Controls.Orientation&gt;, a band represents a column of the &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">경우 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;는 &lt;xref:System.Windows.Controls.Orientation&gt;이면 밴드 &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 열 표현&lt;/xref:System.Windows.Controls.Orientation&gt; &lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the relationship between &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;, Band, and &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;밴드 및 &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;.&lt;/xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt; ,&lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt; 간의 관계를 설명합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Orientation|Band|BandIndex|   |-----------------|----------|---------------|   |Horizontal|Indicates the row in which the &lt;xref:System.Windows.Controls.ToolBar&gt; is positioned.</source>
          <target state="translated">| 방향 | 대역 외 | 밴드 인덱스 |   |-----------------|----------|---------------|   | 가로 | 행을 나타냅니다는 &lt;xref:System.Windows.Controls.ToolBar&gt;배치 됩니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have Band set to a smaller value are above those with a larger value.|Indicates the position of the &lt;xref:System.Windows.Controls.ToolBar&gt; on the Band.</source>
          <target state="translated">위의 큰 값으로 하는 것은 더 작은 값으로 설정 하는 대역 외에 있는 도구입니다. | 위치를 나타내며는 &lt;xref:System.Windows.Controls.ToolBar&gt;밴드에.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt; set to a smaller value are to the left of those with a larger value.|   |Vertical|Indicates the column in which the &lt;xref:System.Windows.Controls.ToolBar&gt; is positioned.</source>
          <target state="translated">왼쪽의 큰 값으로 하는 것은 &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;더 작은 값으로 설정 된 도구입니다. |   | 세로 | 열을 나타냅니다는 &lt;xref:System.Windows.Controls.ToolBar&gt;배치 됩니다.&lt;/xref:System.Windows.Controls.ToolBar&gt; &lt;/xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have Band set to a smaller value are to the left of those with a larger value.|Indicates the position of the &lt;xref:System.Windows.Controls.ToolBar&gt; on the Band.</source>
          <target state="translated">왼쪽의 큰 값으로 하는 것은 더 작은 값으로 설정 하는 대역 외에 있는 도구입니다. | 위치를 나타내며는 &lt;xref:System.Windows.Controls.ToolBar&gt;밴드에.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt; set to a smaller value are above those with a larger value.|      <bpt id="p1">&lt;a name="dependencyPropertyInfo_Band"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ToolBar.BandProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;|</source>
          <target state="translated">큰 값으로 위에 &lt;xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;더 작은 값으로 설정 된 도구입니다. |      <bpt id="p1">&lt;a name="dependencyPropertyInfo_Band"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.ToolBar.BandProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar.BandProperty&gt; &lt;/xref:System.Windows.Controls.ToolBar.BandIndex%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The band of the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the toolbar is positioned.</source>
          <target state="translated">밴드는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 도구 모음 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the band index number that indicates the position of the toolbar on the band.</source>
          <target state="translated">밴드에서 도구 모음의 위치를 나타내는 밴드 인덱스 번호를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly set this property, its value is determined by the order in which the &lt;xref:System.Windows.Controls.ToolBar&gt; is set in the &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">이 속성을 명시적으로 설정 하지 않는 경우 해당 값 따라 사용자가 되는 순서 &lt;xref:System.Windows.Controls.ToolBar&gt; &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 설정&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you put two toolbars in a &lt;xref:System.Windows.Controls.ToolBarTray&gt; without setting the &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt; and BandIndex properties, the value of &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt; will be 0 for both toolbars.</source>
          <target state="translated">예를 들어, 두 개의 도구 모음에 넣으면는 &lt;xref:System.Windows.Controls.ToolBarTray&gt;설정 하지 않고는 &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;및 밴드 인덱스 속성의 값 &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;두 도구 모음에 대 한 0이 됩니다.&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBarTray&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of BandIndex will be 0 for the first toolbar and 1 for the second toolbar.</source>
          <target state="translated">밴드 인덱스의 값은 첫 번째 도구 모음에 대 한 0과 두 번째 도구에 대 한 1 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the &lt;xref:System.Windows.Controls.ToolBar&gt; in a &lt;xref:System.Windows.Controls.ToolBarTray&gt; depends on the values of the &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;, and BandIndex properties.</source>
          <target state="translated">위치는 &lt;xref:System.Windows.Controls.ToolBar&gt;에 &lt;xref:System.Windows.Controls.ToolBarTray&gt;의 값에 따라 달라는 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;, 및 밴드 인덱스 속성.&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ToolBarTray&gt; &lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt; is set to &lt;xref:System.Windows.Controls.Orientation&gt;, a band represents a row in the &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">때 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;로 &lt;xref:System.Windows.Controls.Orientation&gt;밴드 &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 의 행을 나타냅니다&lt;/xref:System.Windows.Controls.Orientation&gt; 설정&lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt; is &lt;xref:System.Windows.Controls.Orientation&gt;, a band represents a column of the &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">경우 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;는 &lt;xref:System.Windows.Controls.Orientation&gt;이면 밴드 &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 열 표현&lt;/xref:System.Windows.Controls.Orientation&gt; &lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the relationship between &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;, &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;, and BandIndex.</source>
          <target state="translated">다음 표에서 설명 간의 관계 &lt;xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;, &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;, 및 밴드 인덱스.&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBarTray.Orientation%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Orientation|Band|BandIndex|   |-----------------|----------|---------------|   |Horizontal|Indicates the row in which the &lt;xref:System.Windows.Controls.ToolBar&gt; is positioned.</source>
          <target state="translated">| 방향 | 대역 외 | 밴드 인덱스 |   |-----------------|----------|---------------|   | 가로 | 행을 나타냅니다는 &lt;xref:System.Windows.Controls.ToolBar&gt;배치 됩니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt; set to a smaller value are above those with a larger value.|Indicates the position of the &lt;xref:System.Windows.Controls.ToolBar&gt; on the &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;.</source>
          <target state="translated">큰 값으로 위에 &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;더 작은 값으로 설정 된 도구입니다. | &lt;xref:System.Windows.Controls.ToolBar&gt; &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;.&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar&gt; 의 위치를 나타내며&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have BandIndex set to a smaller value are to the left of those with a larger value.|   |Vertical|Indicates the column in which the &lt;xref:System.Windows.Controls.ToolBar&gt; is positioned.</source>
          <target state="translated">왼쪽의 큰 값으로 하는 것은 더 작은 값으로 설정 하는 밴드 인덱스에 있는 도구입니다. |   | 세로 | 열을 나타냅니다는 &lt;xref:System.Windows.Controls.ToolBar&gt;배치 됩니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt; set to a smaller value are to the left of those with a larger value.|Indicates the position of the &lt;xref:System.Windows.Controls.ToolBar&gt; on the &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;.</source>
          <target state="translated">왼쪽의 큰 값으로 하는 것은 &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;더 작은 값으로 설정 된 도구입니다. | &lt;xref:System.Windows.Controls.ToolBar&gt; &lt;xref:System.Windows.Controls.ToolBar.Band%2A&gt;.&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar&gt; 의 위치를 나타내며&lt;/xref:System.Windows.Controls.ToolBar.Band%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toolbars that have BandIndex set to a smaller value are above those with a larger value.|      <bpt id="p1">&lt;a name="dependencyPropertyInfo_BandIndex"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ToolBar.BandIndexProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;|</source>
          <target state="translated">위의 큰 값으로 하는 것은 더 작은 값으로 설정 하는 밴드 인덱스에 있는 도구입니다. |      <bpt id="p1">&lt;a name="dependencyPropertyInfo_BandIndex"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.ToolBar.BandIndexProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar.BandIndexProperty&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The position of a toolbar on the band of a <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">대역 외에서 도구 모음의 위치는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBarTray"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.BandIndex*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.BandIndex*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.BandIndex*&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.Band*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.Band*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.Band*&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to buttons on a toolbar.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 도구 모음의 단추에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.Button&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.Button&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.Button&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for buttons on the toolbar.</source>
          <target state="translated">도구 모음 단추에 대 한 기본 스타일을 나타내는 리소스 키입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to check boxes on a <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 확인란에 적용 되는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.CheckBox&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.CheckBox&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.CheckBox&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_CheckBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.CheckBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_CheckBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.CheckBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for check boxes on the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">리소스 키의 확인란에 대 한 기본 스타일을 나타내는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to combo boxes on a <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 콤보 상자에 적용 된는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.ComboBox&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.ComboBox&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.ComboBox&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ComboBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ComboBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ComboBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ComboBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for combo boxes on the toolbar.</source>
          <target state="translated">콤보 상자 도구 모음에 대 한 기본 스타일을 나타내는 리소스 키입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Reads the value of the &lt;xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt; property from the specified element.</source>
          <target state="translated">값을 읽습니다는 &lt;xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt;지정된 된 요소에서 속성.&lt;/xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The element from which to read the property.</source>
          <target state="translated">속성을 읽을 요소입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Reads the value of the &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt; property from the specified element.</source>
          <target state="translated">값을 읽습니다는 &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;지정된 된 요소에서 속성.&lt;/xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the possible mode values, see &lt;xref:System.Windows.Controls.OverflowMode&gt;.</source>
          <target state="translated">사용할 수 있는 모드 값 &lt;xref:System.Windows.Controls.OverflowMode&gt;.&lt;/xref:System.Windows.Controls.OverflowMode&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The element from which to read the property.</source>
          <target state="translated">속성을 읽을 요소입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the toolbar has items that are not visible.</source>
          <target state="translated">도구 모음에 표시 되지 않는 항목이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Windows.Controls.ToolBar&gt; has more items than it has the space to show, it puts the remaining items in its overflow area.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Controls.ToolBar&gt;표시할 공간이 보다 더 항목이 들어 나머지 항목 오버플로 영역에 배치 합니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can click the arrow on the &lt;xref:System.Windows.Controls.ToolBar&gt; to access the overflow items.</source>
          <target state="translated">사용자에 있는 화살표를 클릭할 수는 &lt;xref:System.Windows.Controls.ToolBar&gt;오버플로 항목에 액세스할 수 있습니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_HasOverflowItems"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ToolBar.HasOverflowItemsProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_HasOverflowItems"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.ToolBar.HasOverflowItemsProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.ToolBar.HasOverflowItemsProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are items on the toolbar that are not visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>도구 모음에서; 볼 수 없는 항목이 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.HasOverflowItems*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.HasOverflowItems*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.HasOverflowItems*&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt; attached property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt;연결 된 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.IsOverflowItem*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> overflow area is currently visible.</source>
          <target state="translated">나타내는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 넘침 영역 현재 표시 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsOverflowOpen"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ToolBar.IsOverflowOpenProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsOverflowOpen"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.ToolBar.IsOverflowOpenProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt; &lt;/xref:System.Windows.Controls.ToolBar.IsOverflowOpenProperty&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the overflow area is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>넘침 영역 표시 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.IsOverflowOpen*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.IsOverflowOpen*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.IsOverflowOpen*&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remeasures a <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">다시 측정 한 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The measurement constraints.</source>
          <target state="translated">측정 제약 조건입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot return a size larger than the constraint.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제약 조건 보다 큰 크기를 반환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The size of the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">크기는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to menus on a <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메뉴에 적용 된는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.Menu&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.Menu&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.Menu&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MenuStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.MenuStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MenuStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.MenuStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for menus on the toolbar.</source>
          <target state="translated">도구 모음에서 메뉴에 대 한 기본 스타일을 나타내는 리소스 키입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Provides an appropriate <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.ToolBarAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation for this control, as part of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.</source>
          <target state="translated">적절 한 제공 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.ToolBarAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 일부로이 컨트롤에 대 한 구현을 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 인프라입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The type-specific <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">형식별 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.ItemsControl.Items*&gt; property changes.</source>
          <target state="translated">될 때 호출 된 &lt;xref:System.Windows.Controls.ItemsControl.Items*&gt;속성 변경.&lt;/xref:System.Windows.Controls.ItemsControl.Items*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The arguments for the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.</source>
          <target state="translated">에 대 한 인수는 &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;이벤트.&lt;/xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a key is pressed on an item in the <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">클래스에 대 한 처리를 제공는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 항목에 대 한 키를 누를 때 발생 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user presses HOME, the first item in the &lt;xref:System.Windows.Controls.ToolBar&gt; receives keyboard focus.</source>
          <target state="translated">사용자가 첫 번째 항목 홈는 &lt;xref:System.Windows.Controls.ToolBar&gt;키보드 포커스를 받습니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user presses END, the last item in the &lt;xref:System.Windows.Controls.ToolBar&gt; receives keyboard focus.</source>
          <target state="translated">사용자가 끝에 있는 마지막 항목은 &lt;xref:System.Windows.Controls.ToolBar&gt;키보드 포커스를 받습니다.&lt;/xref:System.Windows.Controls.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this occurs, this implementation marks the &lt;xref:System.Windows.UIElement.KeyDown&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 경우이 구현 표시는 &lt;xref:System.Windows.UIElement.KeyDown&gt;이벤트를 설정 하 여 처리 된 것으로 &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;에 이벤트 데이터의 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt; &lt;/xref:System.Windows.UIElement.KeyDown&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The arguments for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 인수는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> loses mouse capture.</source>
          <target state="translated">클래스에 대 한 처리를 제공는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발생 하는 경우는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 마우스 캡처를 손실 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.LostMouseCapture&gt; event data.</source>
          <target state="translated">이 구현은 처리 상태를 변경 되지 않습니다 (의 &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;속성)의 &lt;xref:System.Windows.UIElement.LostMouseCapture&gt;이벤트 데이터입니다.&lt;/xref:System.Windows.UIElement.LostMouseCapture&gt; &lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The arguments for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 인수는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the orientation of the <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">방향을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets its value from the parent &lt;xref:System.Windows.Controls.ToolBarTray&gt;.</source>
          <target state="translated">이 속성 &lt;xref:System.Windows.Controls.ToolBarTray&gt;.&lt;/xref:System.Windows.Controls.ToolBarTray&gt; 부모에서 해당 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Orientation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ToolBar.OrientationProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Orientation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.ToolBar.OrientationProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.ToolBar.OrientationProperty&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The toolbar orientation.</source>
          <target state="translated">도구 모음의 방향입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Controls.Orientation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Controls.Orientation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.Orientation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> dependency property.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.Orientation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt; attached property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;연결 된 속성입니다.&lt;/xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Prepares the specified element to display the specified item.</source>
          <target state="translated">지정된 된 항목을 표시 하기 위해 지정 된 요소를 준비 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The element that will display the item.</source>
          <target state="translated">항목을 표시 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The item to display.</source>
          <target state="translated">항목 표시입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to radio buttons on a toolbar.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 도구 모음에 있는 라디오 단추에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.RadioButton&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.RadioButton&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.RadioButton&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_RadioButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.RadioButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_RadioButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.RadioButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for radio buttons on the toolbar.</source>
          <target state="translated">리소스 키 라디오 단추 도구 모음에 대 한 기본 스타일을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to separators on a <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구분 기호에 적용 된는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.Separator&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.Separator&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.Separator&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SeparatorStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.SeparatorStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SeparatorStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.SeparatorStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for separators on the toolbar.</source>
          <target state="translated">도구 모음에서 구분 기호에 대 한 기본 스타일을 나타내는 리소스 키입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Writes the value of the &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt; property to the specified element.</source>
          <target state="translated">값을 씁니다는 &lt;xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;지정된 된 요소에 대 한 속성.&lt;/xref:System.Windows.Controls.ToolBar.OverflowMode*&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the possible mode values, see &lt;xref:System.Windows.Controls.OverflowMode&gt;.</source>
          <target state="translated">사용할 수 있는 모드 값 &lt;xref:System.Windows.Controls.OverflowMode&gt;.&lt;/xref:System.Windows.Controls.OverflowMode&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The element to write the property to.</source>
          <target state="translated">속성을 쓸 요소입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The property value to set.</source>
          <target state="translated">설정할 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to text boxes on a <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 텍스트 상자에 적용 한 <bpt id="p2">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.TextBox&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.TextBox&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.TextBox&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TextBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.TextBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TextBoxStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.TextBoxStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for text boxes on the toolbar</source>
          <target state="translated">도구 모음에 있는 텍스트 상자에 대 한 기본 스타일을 나타내는 리소스 키</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ToggleButton"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> controls on a <bpt id="p3">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 적용할 <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ToggleButton"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컨트롤에 <bpt id="p3">&lt;xref href="System.Windows.Controls.ToolBar"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the default style of &lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt; controls on the &lt;xref:System.Windows.Controls.ToolBar&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt; &lt;xref:System.Windows.Controls.ToolBar&gt;.&lt;/xref:System.Windows.Controls.ToolBar&gt; 에서 컨트롤&lt;/xref:System.Windows.Controls.Primitives.ToggleButton&gt; 의 기본 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>="<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ToggleButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleButtonStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= "<ph id="ph1">`{`</ph> <bpt id="p4">**</bpt>ToolBar.ToggleButtonStyleKey<ept id="p4">**</ept><ph id="ph2">`}"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A resource key that represents the default style for toggle buttons on the toolbar.</source>
          <target state="translated">토글 단추 도구 모음에 대 한 기본 스타일을 나타내는 리소스 키입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>