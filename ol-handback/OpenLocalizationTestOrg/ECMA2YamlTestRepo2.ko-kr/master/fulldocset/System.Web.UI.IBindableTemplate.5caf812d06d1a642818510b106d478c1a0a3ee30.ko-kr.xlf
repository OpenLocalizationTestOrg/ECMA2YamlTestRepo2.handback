<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bf3761e152c39eb5d7db3938c4aac180e425225</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.IBindableTemplate.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eae60a6bc4090ec5ee5aaeca04f02214535f1690</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0b9af5bc8479a041778b3b8bf76cbb2eb46400c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way for ASP.NET data-bound controls, such as <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, to automatically bind to an ASP.NET data source control within templated content sections.</source>
          <target state="translated">와 같은 ASP.NET 데이터 바인딩된 컨트롤에는 방법을 제공 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 템플릿 내용 섹션에서 ASP.NET 데이터 소스 제어에 자동으로 바인딩할 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface provides a way for ASP.NET data-bound controls, such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, &lt;xref:System.Web.UI.WebControls.GridView&gt;, and &lt;xref:System.Web.UI.WebControls.FormView&gt;, to bind to data supplied by an ASP.NET data source control, such as &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; or &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;, when the data-bound control includes templated content.</source>
          <target state="translated">IBindableTemplate 인터페이스 사용 하면 ASP.NET 데이터 바인딩된 컨트롤 같은 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, &lt;xref:System.Web.UI.WebControls.GridView&gt;, 및 &lt;xref:System.Web.UI.WebControls.FormView&gt;와 같은 ASP.NET 데이터 소스 컨트롤에서 제공 하는 데이터에 바인딩할 &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;또는 &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;데이터 바인딩된 컨트롤 템플릿 기반 콘텐츠를 포함 하는 경우.&lt;/xref:System.Web.UI.WebControls.SqlDataSource&gt; &lt;/xref:System.Web.UI.WebControls.ObjectDataSource&gt; &lt;/xref:System.Web.UI.WebControls.FormView&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Page developers do not implement the IBindableTemplate interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 페이지 개발자 IBindableTemplate 인터페이스를 구현 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers creating custom data-bound controls might manipulate IBindableTemplate objects in implementations of the &lt;xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt; and &lt;xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt; methods, but do not implement their own IBindableTemplate objects.</source>
          <target state="translated">사용자 지정 데이터 바인딩된 컨트롤을 만드는 개발자의 병렬 구현에서 IBindableTemplate 개체를 조작할 수는 &lt;xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt;및 &lt;xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt;메서드, 하지만 자신의 IBindableTemplate 개체를 구현 하지 않습니다.&lt;/xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt; &lt;/xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-bound controls such as &lt;xref:System.Web.UI.WebControls.GridView&gt; typically are aware of their child control trees, and can therefore bind values to them, extract values from them, and pass these values between the data-bound control and a data source control whenever data binding occurs.</source>
          <target state="translated">와 같은 데이터 바인딩된 컨트롤 &lt;xref:System.Web.UI.WebControls.GridView&gt;일반적으로 자식 제어 트리를 인식 하므로 값을 바인딩하고,에서 값을 추출 하 고 수 데이터 바인딩이 발생할 때마다 데이터 바인딩된 컨트롤 및 데이터 소스 컨트롤 간의 이러한 값을 전달 합니다.&lt;/xref:System.Web.UI.WebControls.GridView&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when a page developer defines templated content for a data-bound control, the child controls within the template are not visible to the parent data-bound control: the parent can render the child content (because controls effectively render themselves), but it cannot extract the values of these child controls to pass to an associated data source control's update, insert, or delete operation.</source>
          <target state="translated">그러나 페이지 개발자는 데이터 바인딩된 컨트롤에 대 한 템플릿 내용을 정의할 때 템플릿 내에서 자식 컨트롤에 표시 되지 않습니다는 부모 데이터 바인딩된 컨트롤: 자식 컨트롤 (효과적으로 컨트롤을 렌더링 자체) 이므로 콘텐츠, 하지만 연결 된 데이터 소스 컨트롤의 업데이트, 삽입 또는 삭제 작업에 전달할 이러한 자식 컨트롤의 값을 추출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In data-binding scenarios, templated content is opaque to a parent data-bound control.</source>
          <target state="translated">데이터 바인딩 시나리오의 템플릿 기반 콘텐츠는 부모 데이터 바인딩된 컨트롤에 불투명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Bind`</ph> syntax makes it possible for the data-bound control to extract the values from a control data-bound inside an IBindableTemplate instance.</source>
          <target state="translated"><ph id="ph1">`Bind`</ph> 구문을 사용 하면 IBindableTemplate 인스턴스 내 데이터 바인딩된 컨트롤에서 값을 추출 하는 데이터 바인딩된 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data binding can be one-way or two-way.</source>
          <target state="translated">단방향 또는 양방향 데이터 바인딩을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>(These binding directions are defined by the &lt;xref:System.ComponentModel.BindingDirection&gt; enumeration.) One-way data binding is any data binding performed in an outbound direction, from data source control to data-bound control; for example, any data-reading scenario involves one-way data binding.</source>
          <target state="translated">(이러한 바인딩 방향은 정의한는 &lt;xref:System.ComponentModel.BindingDirection&gt;열거형.)&lt;/xref:System.ComponentModel.BindingDirection&gt; 단방향 데이터 바인딩에 데이터 바인딩된 컨트롤을 데이터 소스 제어에서의 아웃 바운드 방향으로 수행 하는 데이터 바인딩 예를 들어 모든 데이터 읽기 시나리오 단방향 데이터 바인딩을 포함합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For one-way data binding, you can use one-way data binding syntax (<ph id="ph1">`&lt;%# Eval("fieldname") %&gt;`</ph>) inside templated content, and do not need to use two-way ASP.NET data-binding syntax.</source>
          <target state="translated">단방향 데이터 바인딩에 대 한 단방향 데이터 바인딩 구문을 사용할 수 있습니다 (<ph id="ph1">`&lt;%# Eval("fieldname") %&gt;`</ph>) 템플릿 내용 안에 양방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two-way data-binding describes data-binding in the inbound direction, from the data-bound control to the data source control.</source>
          <target state="translated">데이터 소스 컨트롤에 데이터 바인딩된 컨트롤에서 인바운드 방향의 데이터 바인딩을 설명 하는 양방향 데이터 바인딩을 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Automatic edit, insert, and delete scenarios using ASP.NET data-bound and data source controls are two-way data-binding scenarios.</source>
          <target state="translated">자동 편집, 삽입 및 삭제 시나리오 ASP.NET을 사용 하 여 데이터 바인딩 및 데이터 소스 제어는 양방향 데이터 바인딩 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>These scenarios use two-way data-binding expressions (<ph id="ph1">`&lt;%# Bind("fieldname") %&gt;`</ph>).</source>
          <target state="translated">이러한 시나리오에서는 양방향 데이터 바인딩 식 (<ph id="ph1">`&lt;%# Bind("fieldname") %&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface and the ASP.NET infrastructure support automatic, declarative, two-way data binding between ASP.NET data source controls and templated content.</source>
          <target state="translated">IBindableTemplate 인터페이스 및 ASP.NET 인프라 ASP.NET 데이터 소스 제어와 템플릿 내용 간의 자동 선언적 이며 양방향 데이터 바인딩을 지원합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ASP.NET data-binding expressions and syntax, see <bpt id="p1">[</bpt>Binding to Databases<ept id="p1">](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)</ept> and <bpt id="p2">[</bpt>Data-Binding Expressions Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">ASP.NET 데이터 바인딩 식 및 구문에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터베이스에 바인딩<ept id="p1">](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)</ept> 및 <bpt id="p2">[</bpt>데이터 바인딩 식 개요<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Templated content for data-bound controls is most often defined declaratively.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 대 한 템플릿 기반 콘텐츠는 대부분 선언적으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the processes most commonly used to bind templated data to data-bound controls.</source>
          <target state="translated">다음 표에서 가장 일반적으로 사용 되는 템플릿 기반 데이터를 데이터 바인딩된 컨트롤에 바인딩하는 프로세스를 설명 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Data-bound control|Process|   |-------------------------|-------------|   |&lt;xref:System.Web.UI.WebControls.DetailsView&gt;|The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;, &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt; property.|   |&lt;xref:System.Web.UI.WebControls.GridView&gt;|The data-bound control is bound to data using the <ph id="ph2">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; property.</source>
          <target state="translated">| 데이터 바인딩된 컨트롤 | 프로세스 |   |-------------------------|-------------|   | &lt;xref:System.Web.UI.WebControls.DetailsView&gt;| 데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph1">`DataSourceID`</ph> 는 &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;에 템플릿 내용 및 데이터 소스 컨트롤의 속성이 정의 되어 &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;또는 &lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt;속성입니다. |   | &lt;xref:System.Web.UI.WebControls.GridView&gt;| 데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph2">`DataSourceID`</ph> 템플릿 내용 및 데이터 소스 컨트롤의 속성에 정의 된 프로그램 &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;또는 &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.GridView&gt; control does not support an insert operation.|   |&lt;xref:System.Web.UI.WebControls.FormView&gt;|The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt;, &lt;xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt;, or &lt;xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt; property, or in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.|       The &lt;xref:System.Web.UI.WebControls.DataList&gt; and &lt;xref:System.Web.UI.WebControls.Repeater&gt; controls do not support automatic two-way data-binding scenarios.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.GridView&gt;컨트롤 삽입 작업을 지원 하지 않습니다. |   | &lt;xref:System.Web.UI.WebControls.FormView&gt;| 데이터 바인딩된 컨트롤을 사용 하 여 데이터 바인딩되는 <ph id="ph1">`DataSourceID`</ph> 속성과 템플릿 내용은 &lt;xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt;에 정의 된 &lt;xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt;, 또는 &lt;xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt;속성 또는 &lt;xref:System.Web.UI.WebControls.TemplateField&gt;개체에 저장 합니다. |       &lt;xref:System.Web.UI.WebControls.DataList&gt;및 &lt;xref:System.Web.UI.WebControls.Repeater&gt;컨트롤 자동 양방향 데이터 바인딩 시나리오를 지원 하지 않습니다.&lt;/xref:System.Web.UI.WebControls.Repeater&gt; &lt;/xref:System.Web.UI.WebControls.DataList&gt; &lt;/xref:System.Web.UI.WebControls.TemplateField&gt; &lt;/xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt; &lt;/xref:System.Web.UI.WebControls.FormView&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET implicitly creates an IBindableTemplate object when templated content that binds to an ASP.NET data source control within the template is parsed.</source>
          <target state="translated">템플릿 내에서 ASP.NET 데이터 소스 컨트롤에 바인딩되는 템플릿 기반 콘텐츠를 구문 분석할 때 ASP.NET에서 암시적으로 IBindableTemplate 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the ASP.NET parser creates an instance of the &lt;xref:System.Web.UI.CompiledBindableTemplateBuilder&gt; class when it parses templated content that uses ASP.NET data-binding syntax and contains ASP.NET Web server controls that support data binding.</source>
          <target state="translated">특히, ASP.NET 파서의 인스턴스를 만듭니다는 &lt;xref:System.Web.UI.CompiledBindableTemplateBuilder&gt;ASP.NET 데이터 바인딩 구문을 사용 하 고 데이터 바인딩을 지 원하는 ASP.NET 웹 서버 컨트롤을 포함 하는 템플릿 기반 콘텐츠를 구문 분석할 때 클래스.&lt;/xref:System.Web.UI.CompiledBindableTemplateBuilder&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>These ASP.NET sever controls are marked by the &lt;xref:System.ComponentModel.BindableAttribute&gt; attribute.</source>
          <target state="translated">이러한 ASP.NET 서버 컨트롤 회색으로 표시 되는 &lt;xref:System.ComponentModel.BindableAttribute&gt;특성.&lt;/xref:System.ComponentModel.BindableAttribute&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface defines one method, &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;.</source>
          <target state="translated">IBindableTemplate 인터페이스 &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;.&lt;/xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt; 하나의 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is defined for two-way data binding, so that a data-bound control can automatically extract name/value pairs from templated content and pass the pairs to a data source control at run time.</source>
          <target state="translated">이 메서드는 자동으로 템플릿 내용에서 이름/값 쌍을 추출 하 고 런타임 시 데이터 소스 컨트롤에 전달할 수는 데이터 바인딩된 컨트롤에 대 한 양방향 데이터 바인딩을 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For automatic data binding to succeed, the field names extracted from the templated content by the &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt; method must match parameter names in an associated data source control.</source>
          <target state="translated">자동 데이터 바인딩에 성공 하려면에 대 한 필드 이름 템플릿 내용에서 추출 된 &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;메서드는 연결 된 데이터 소스 제어에 매개 변수 이름은 일치 해야 합니다.&lt;/xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control developers call the &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt; method explicitly only within their implementations of &lt;xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt; or some other similar method of a custom data-bound control.</source>
          <target state="translated">개발자가 호출 제어는 &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;메서드 명시적으로의 구현이 &lt;xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt;또는 사용자 지정 데이터 바인딩된 컨트롤의 다른 유사한 방법을.&lt;/xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt; &lt;/xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When implemented by a class, retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</source>
          <target state="translated">클래스에서 구현 하는 경우 템플릿 내용에서 양방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 바인딩된 값에 대 한 이름/값 쌍의 집합을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 이름/값 쌍을 추출해 올으로 전달 되는 데이터 바인딩된 컨트롤에서 양방향 데이터 바인딩 시나리오에는 연결 된 데이터 소스 제어 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of name/value pairs.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이름/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name represents the name of a control within templated content, and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</source>
          <target state="translated">이름 템플릿 내용에서 컨트롤의 이름을 나타내고 값이 양방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 바인딩된 속성 값의 현재 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>