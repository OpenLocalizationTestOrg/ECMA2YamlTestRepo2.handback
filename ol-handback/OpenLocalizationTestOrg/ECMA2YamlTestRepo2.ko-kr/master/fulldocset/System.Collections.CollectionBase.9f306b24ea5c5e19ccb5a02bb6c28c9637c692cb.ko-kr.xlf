<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caf0eb6d123f00a7b348b2791a4260550924e27e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.CollectionBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24b35aaa092a4c8801047d0eaa8766286594d7f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abafb16a2574242f5e24bf46cf6ef923e56b225e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for a strongly typed collection.</source>
          <target state="translated">제공 된 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 클래스에 대 한 강력한 형식의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CollectionBase instance is always modifiable.</source>
          <target state="translated">CollectionBase 인스턴스는 항상 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Collections.ReadOnlyCollectionBase&gt; for a read-only version of this class.</source>
          <target state="translated">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;이 클래스의 읽기 전용 버전에 대 한&lt;/xref:System.Collections.ReadOnlyCollectionBase&gt; 참조</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a CollectionBase is the number of elements the CollectionBase can hold.</source>
          <target state="translated">CollectionBase 용량이 CollectionBase 저장할 수 있는 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a CollectionBase, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">요소는 CollectionBase에 추가 되 면 자동으로 용량 증가 하면 재할당을 통해 필요에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity can be decreased by setting the &lt;xref:System.Collections.CollectionBase.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">설정 하 여 용량을 줄일 수 있습니다는 &lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;속성이 명시적으로.&lt;/xref:System.Collections.CollectionBase.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the default initial capacity.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 초기 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.CollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.CollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.CollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.CollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.CollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.CollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified capacity.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.CollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.CollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.CollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.CollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.CollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.CollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 <ph id="ph3">`capacity`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">새 목록에 처음 저장할 수 있는 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of elements that the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">요소의 수를 가져오거나는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.CollectionBase&gt; can store.</source>
          <target state="translated">용량에는 요소의 수가 하는 &lt;xref:System.Collections.CollectionBase&gt;저장할 수 있습니다.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.CollectionBase.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;에서 요소를 실제로 &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; 의 수&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">용량은 항상 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt; 보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.CollectionBase.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">경우 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;요소를 추가 하는 동안 용량을 초과 하면, 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 다시 할당 하 여 용량을 증가 시켜 자동으로.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity can be decreased by setting the Capacity property explicitly.</source>
          <target state="translated">용량 속성을 명시적으로 설정 하 여 용량을 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">용량 값을 명시적으로 설정 하는 경우 내부 배열에서 지정 된 용량에 맞게도 다시 할당 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. 속성을 설정 하는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 새 용량입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">요소의 수는는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Capacity is set to a value that is less than &lt;xref:System.Collections.CollectionBase.Count*&gt;.</source>
          <target state="translated">용량이 &lt;xref:System.Collections.CollectionBase.Count*&gt;.&lt;/xref:System.Collections.CollectionBase.Count*&gt; 보다 작은 값으로 설정 되어</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">시스템에서 사용할 수 있는 메모리가 부족 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Removes all objects from the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">개체를 모두 제거 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This method cannot be overridden.</source>
          <target state="translated">이 메서드를 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.CollectionBase.Count%2A&gt; is set to zero.</source>
          <target state="translated">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;0으로 설정 됩니다.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform custom actions before or after the collection is cleared, override the protected &lt;xref:System.Collections.CollectionBase.OnClear%2A&gt; or &lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt; method.</source>
          <target state="translated">사용자 지정 작업을 수행 하기 전 또는 컬렉션의 선택이 취소 후 보호 된 재정의 &lt;xref:System.Collections.CollectionBase.OnClear%2A&gt;또는 &lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt;메서드.&lt;/xref:System.Collections.CollectionBase.OnClearComplete%2A&gt; &lt;/xref:System.Collections.CollectionBase.OnClear%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This property cannot be overridden.</source>
          <target state="translated">이 속성을 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 요소의 수는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">반복 하는 열거자를 반환 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic, C#]       <ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">이 위치에서, 호출 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>호출, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;예외를 throw 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; 또는&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 을 다음에 호출할 컬렉션 변경 될 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">사이 컬렉션이 수정 되는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;및 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거지 않습니다 본질적으로 스레드로부터 안전한 프로시저가 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the GetEnumerator method is not visible to COM clients by default, inheriting the &lt;xref:System.Collections.CollectionBase&gt; class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">GetEnumerator 메서드가 기본적으로 COM 클라이언트에 표시 되지 않는 동안 상속 하는 &lt;xref:System.Collections.CollectionBase&gt;클래스 노출할 수 있습니다 및 COM 클라이언트에서 원하지 않는 동작이 발생할 수 있습니다.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;에 대 한는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the list of elements in the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 있는 요소의 목록을 포함 하는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the InnerList property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성 InnerList 속성에서 반환 되는 인스턴스에는 나타나지 않습니다.&lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance itself.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타내는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스 자체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.IList&gt; containing the list of elements in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.IList&gt;에 있는 요소의 목록을 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the List property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">목록 속성에서 반환 되는 인스턴스에서 반환 되는 인스턴스에는 없지만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; representing the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance itself.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;나타내는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 자체.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes when clearing the contents of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">내용을 지울 때 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</source>
          <target state="translated">이 메서드의 기본 구현 컬렉션을 지울 전에 동작을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">프로세스가 실패 하면 컬렉션 이전 상태로 되돌립니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after clearing the contents of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">내용을 지운 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</source>
          <target state="translated">이 메서드의 기본 구현 컬렉션의 선택을 취소 한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before inserting a new element into the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 요소를 삽입 하기 전에 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 삽입 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">프로세스가 실패 하면 컬렉션 이전 상태로 되돌립니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to insert <ph id="ph1">`value`</ph>.</source>
          <target state="translated">삽입할&amp;0;부터 시작 인덱스 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The new value of the element at <ph id="ph1">`index`</ph>.</source>
          <target state="translated">에 있는 요소의 새 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after inserting a new element into the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 요소를 삽입 한 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 삽입 한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection reverts back to its previous state if one of the following occurs:      -   The process fails.</source>
          <target state="translated">컬렉션에서 다음 중 하나가 발생 하는 경우 이전 상태로 되돌립니다.-프로세스가 실패 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   This method is overridden to throw an exception.</source>
          <target state="translated">-이 메서드는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to insert <ph id="ph1">`value`</ph>.</source>
          <target state="translated">삽입할&amp;0;부터 시작 인덱스 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The new value of the element at <ph id="ph1">`index`</ph>.</source>
          <target state="translated">에 있는 요소의 새 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes when removing an element from the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">요소를 제거 하는 경우 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 제거 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">프로세스가 실패 하면 컬렉션 이전 상태로 되돌립니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> can be found.</source>
          <target state="translated">인덱스&amp;0;부터 시작 <ph id="ph1">`value`</ph> 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the element to remove from <ph id="ph1">`index`</ph>.</source>
          <target state="translated">제거할 요소의 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after removing an element from the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">요소를 제거한 후 사용자 지정 프로세스를 추가로 수행 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 제거한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection reverts back to its previous state if one of the following occurs:      -   The process fails.</source>
          <target state="translated">컬렉션에서 다음 중 하나가 발생 하는 경우 이전 상태로 되돌립니다.-프로세스가 실패 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   This method is overridden to throw an exception.</source>
          <target state="translated">-이 메서드는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> can be found.</source>
          <target state="translated">인덱스&amp;0;부터 시작 <ph id="ph1">`value`</ph> 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The value of the element to remove from <ph id="ph1">`index`</ph>.</source>
          <target state="translated">제거할 요소의 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes before setting a value in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">값을 설정 하기 전에 사용자 지정 프로세스를 추가로 수행는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</source>
          <target state="translated">이 메서드의 기본 구현 지정된 된 요소를 설정 하기 전에 몇 가지 작업을 수행 하는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">프로세스가 실패 하면 컬렉션 이전 상태로 되돌립니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`oldValue`</ph> can be found.</source>
          <target state="translated">인덱스&amp;0;부터 시작 <ph id="ph1">`oldValue`</ph> 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value to replace with <ph id="ph1">`newValue`</ph>.</source>
          <target state="translated">로 바꿀 값 <ph id="ph1">`newValue`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The new value of the element at <ph id="ph1">`index`</ph>.</source>
          <target state="translated">에 있는 요소의 새 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes after setting a value in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">값을 설정한 후 사용자 지정 프로세스를 추가로 수행는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</source>
          <target state="translated">이 메서드의 기본 구현 지정한 요소를 설정한 후 작업을 수행할 수는 파생된 클래스에서 재정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection reverts back to its previous state if one of the following occurs:      -   The process fails.</source>
          <target state="translated">컬렉션에서 다음 중 하나가 발생 하는 경우 이전 상태로 되돌립니다.-프로세스가 실패 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   This method is overridden to throw an exception.</source>
          <target state="translated">-이 메서드는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`oldValue`</ph> can be found.</source>
          <target state="translated">인덱스&amp;0;부터 시작 <ph id="ph1">`oldValue`</ph> 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The value to replace with <ph id="ph1">`newValue`</ph>.</source>
          <target state="translated">로 바꿀 값 <ph id="ph1">`newValue`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The new value of the element at <ph id="ph1">`index`</ph>.</source>
          <target state="translated">에 있는 요소의 새 값 <ph id="ph1">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Performs additional custom processes when validating a value.</source>
          <target state="translated">값 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method determines whether <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, and, if so, throws &lt;xref:System.ArgumentNullException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현을 결정 여부 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, 하 고,이 경우 &lt;xref:System.ArgumentNullException&gt;.&lt;/xref:System.ArgumentNullException&gt; throw</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</source>
          <target state="translated">것은 지정된 된 요소의 유효성을 검사할 때 추가 동작을 수행 하려면 파생된 클래스에서 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.CollectionBase.List%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt; property.</source>
          <target state="translated">반환 된 인스턴스에만 On * 메서드가 호출 되는 &lt;xref:System.Collections.CollectionBase.List%2A&gt;속성에 의해 반환 되는 인스턴스는 없지만 &lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;속성.&lt;/xref:System.Collections.CollectionBase.InnerList%2A&gt; &lt;/xref:System.Collections.CollectionBase.List%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">이 메서드의 기본 구현 하는 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The object to validate.</source>
          <target state="translated">유효성을 검사할 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 인덱스에 요소를 제거는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is not overridable.</source>
          <target state="translated">이 메서드는 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">제거할 요소의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 보다 크거나 같으면 <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">전체 복사 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호환 되는&amp;1; 차원 &lt;xref:System.Array&gt;대상 배열의 지정된 된 인덱스부터 시작 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">지정된 된 배열의 호환 되는 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">이 방법은 사용 하 여 &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;요소를 복사해올.&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;에서 복사한 요소의 대상인 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 가능한 공간 보다 큰 <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Collections.CollectionBase&gt; instance is not synchronized.</source>
          <target state="translated">A &lt;xref:System.Collections.CollectionBase&gt;인스턴스 동기화 되지 않았습니다.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide a synchronized version of the &lt;xref:System.Collections.CollectionBase&gt; using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.CollectionBase&gt;를 사용 하 여 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">컬렉션을 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.CollectionBase#2<ept id="p2">](~/add/codesnippet/cpp/c3b5b435-5577-4ea3-8822-_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.CollectionBase#2<ept id="p4">](~/add/codesnippet/csharp/c3b5b435-5577-4ea3-8822-_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.CollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/c3b5b435-5577-4ea3-8822-_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Collections.CollectionBase#2<ept id="p2">](~/add/codesnippet/cpp/c3b5b435-5577-4ea3-8822-_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.CollectionBase#2<ept id="p4">](~/add/codesnippet/csharp/c3b5b435-5577-4ea3-8822-_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.CollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/c3b5b435-5577-4ea3-8822-_1.vb)</ept> <ept id="p5">]</ept> 이 속성의 값을 검색 하는 것은 o (1) 작업.    &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 액세스는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 은 동기화 (스레드로부터 안전함); 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.CollectionBase&gt; using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.CollectionBase&gt;를 사용 하 여 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; of the &lt;xref:System.Collections.CollectionBase&gt;, not directly on the &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">동기화 하는 코드에서 작업을 수행 해야는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;의 &lt;xref:System.Collections.CollectionBase&gt;, &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; 으로 만들어지므로&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.CollectionBase&gt; object.</source>
          <target state="translated">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 &lt;xref:System.Collections.CollectionBase&gt;개체입니다.&lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">컬렉션을 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.CollectionBase#2<ept id="p2">](~/add/codesnippet/cpp/cacfe8dc-771f-47eb-a7e1-_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.CollectionBase#2<ept id="p4">](~/add/codesnippet/csharp/cacfe8dc-771f-47eb-a7e1-_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.CollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/cacfe8dc-771f-47eb-a7e1-_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Collections.CollectionBase#2<ept id="p2">](~/add/codesnippet/cpp/cacfe8dc-771f-47eb-a7e1-_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.CollectionBase#2<ept id="p4">](~/add/codesnippet/csharp/cacfe8dc-771f-47eb-a7e1-_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.CollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/cacfe8dc-771f-47eb-a7e1-_1.vb)</ept> <ept id="p5">]</ept> 이 속성의 값을 검색 하는 것은 o (1) 작업.    &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Adds an object to the end of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">개체의 끝에 추가 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.CollectionBase.Count%2A&gt; already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</source>
          <target state="translated">경우 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;이미 용량과, 자동으로 내부 배열은 재할당 하 고 새 요소를 추가 하기 전에 기존 요소를 새 배열에 복사 하 여 목록의 용량이 두 배가 됩니다.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.CollectionBase.Count%2A&gt; is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">경우 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;작은 용량 보다이 메서드는 o (1) 작업.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O 됩니다 용량을 새 요소로 적용로 늘려야 하는 경우 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;의 끝에 추가할 수는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 인덱스는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific element.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특정 요소를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 선형 검색; 수행 따라서이 메서드는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 를 호출 하 여 같은지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;에 대 한 메서드 <ph id="ph1">`item`</ph> 확인 하려면 여부 <ph id="ph2">`item`</ph> 존재 합니다.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;의 메서드는 <ph id="ph1">`item`</ph> 컬렉션의 개체에 대 한 매개 변수.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 찾으려고는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에 지정 된 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 검색 &lt;xref:System.Object&gt;전체에서 처음 나타나는&amp;0;부터 시작 하는 인덱스를 반환 하 고 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 선형 검색; 수행 따라서이 메서드는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 를 호출 하 여 같은지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;에 대 한 메서드 <ph id="ph1">`item`</ph> 확인 하려면 여부 <ph id="ph2">`item`</ph> 존재 합니다.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;의 메서드는 <ph id="ph1">`item`</ph> 컬렉션의 개체에 대 한 매개 변수.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 찾으려고는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">첫 번째로 나타나는 항목의&amp;0;부터 시작 인덱스 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 전체 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>이거나, 없는 경우, 그렇지 않으면-1입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">요소를 삽입는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.CollectionBase.Count%2A&gt; already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</source>
          <target state="translated">경우 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;이미 용량과, 자동으로 새 요소를 삽입 하기 전에 내부 배열을 다시 할당 하 여 목록의 용량이 두 배가 됩니다.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.CollectionBase.Count%2A&gt;, <ph id="ph2">`value`</ph> is added to the end of &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`index`</ph> 같으면 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;, <ph id="ph2">`value`</ph> &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; 의 끝에 추가&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">연속 요소를 컬렉션의 목록, 삽입 지점 다음에 오는 요소를 아래로 이동 처럼 새 요소를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">인덱스&amp;0;부터 시작 <ph id="ph1">`value`</ph> 삽입 해야 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert.</source>
          <target state="translated">&lt;xref:System.Object&gt;삽입할.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 보다 크면 <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">컬렉션 크기가 고정된 된 컬렉션을 만든 후 기존 요소를 수정할 수 있습니다에 추가 하거나 제거할 요소의 수 없습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">크기가 고정된 된 컬렉션은 지정 된 추가 및 요소를 제거 하지 못하도록 하는 래퍼 컬렉션 따라서를 추가 하거나 제거할 요소를 포함 하 여 내부 컬렉션을 변경 하는 경우 고정 크기 컬렉션에 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고정 되어 고, 그렇지 않으면 크기가 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 읽기 전용, 되지 않았으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 요소를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: <ph id="ph1">`myCollection[index]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">가져오거나 설정할 요소의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 요소입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 보다 크거나 같으면 <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">첫 번째는 특정 개체에서 제거 된 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.CollectionBase&gt; does not contain the specified object, the &lt;xref:System.Collections.CollectionBase&gt; remains unchanged.</source>
          <target state="translated">경우는 &lt;xref:System.Collections.CollectionBase&gt;지정 된 개체가 들어 있지 않은 여 &lt;xref:System.Collections.CollectionBase&gt;변경 되지 않습니다.&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.CollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
          <target state="translated">예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 선형 검색; 수행 따라서이 메서드는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.CollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.CollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 를 호출 하 여 같은지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 제거 하 고 <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter was not found in the <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에서 찾을 수 없습니다는 <bpt id="p2">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Collections.CollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>