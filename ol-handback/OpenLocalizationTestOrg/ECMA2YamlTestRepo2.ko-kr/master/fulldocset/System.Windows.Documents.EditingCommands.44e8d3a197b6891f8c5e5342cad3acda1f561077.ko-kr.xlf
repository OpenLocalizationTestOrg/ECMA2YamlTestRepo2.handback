<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad2780e08915411a42e7f9ae565271edd2806d30</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Documents.EditingCommands.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75b2f61bfe0acd7b479b2b5e8c2339e24d56a4ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">831189fc043462b8fedafca338fddb2f22bf1bd5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a standard set of editing related commands.</source>
          <target state="translated">편집 관련된 명령의 표준 집합을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the editing commands and the associated default key gestures (with key names from the &lt;xref:System.Windows.Input.Key&gt; and &lt;xref:System.Windows.Input.ModifierKeys&gt; enumerations).</source>
          <target state="translated">다음 표에서 편집 명령 및 연결 된 기본 키 제스처 (키 이름으로는 &lt;xref:System.Windows.Input.Key&gt;및 &lt;xref:System.Windows.Input.ModifierKeys&gt;열거형)입니다.&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Editing command|Default key gesture|   |---------------------|-------------------------|   |&lt;xref:System.Windows.Documents.EditingCommands.AlignCenter%2A&gt;|<ph id="ph1">`Ctrl`</ph><ph id="ph2">+</ph><ph id="ph3">`E`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.AlignJustify%2A&gt;|<ph id="ph4">`Ctrl`</ph><ph id="ph5">+</ph><ph id="ph6">`J`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.AlignLeft%2A&gt;|<ph id="ph7">`Ctrl`</ph><ph id="ph8">+</ph><ph id="ph9">`L`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.AlignRight%2A&gt;|<ph id="ph10">`Ctrl`</ph><ph id="ph11">+</ph><ph id="ph12">`R`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt;|<ph id="ph13">`Backspace`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A&gt;|no default key gesture|   |&lt;xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A&gt;|<ph id="ph14">`Ctrl`</ph><ph id="ph15">+</ph><ph id="ph16">`OemOpenBrackets`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt;|<ph id="ph17">`Ctrl`</ph><ph id="ph18">+</ph><ph id="ph19">`Shift`</ph><ph id="ph20">+</ph><ph id="ph21">`T`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.Delete%2A&gt;|<ph id="ph22">`Delete`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A&gt;|<ph id="ph23">`Ctrl`</ph><ph id="ph24">+</ph><ph id="ph25">`Delete`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A&gt;|<ph id="ph26">`Ctrl`</ph><ph id="ph27">+</ph><ph id="ph28">`Backspace`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A&gt;|<ph id="ph29">`Shift`</ph><ph id="ph30">+</ph><ph id="ph31">`Enter`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A&gt;|<ph id="ph32">`Enter`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A&gt;|no default key gesture|   |&lt;xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A&gt;|<ph id="ph33">`Ctrl`</ph><ph id="ph34">+</ph><ph id="ph35">`OemCloseBrackets`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt;|<ph id="ph36">`Ctrl`</ph><ph id="ph37">+</ph><ph id="ph38">`T`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A&gt;|<ph id="ph39">`Down`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A&gt;|<ph id="ph40">`PageDown`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A&gt;|<ph id="ph41">`Ctrl`</ph><ph id="ph42">+</ph><ph id="ph43">`Down`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt;|<ph id="ph44">`Left`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A&gt;|<ph id="ph45">`Ctrl`</ph><ph id="ph46">+</ph><ph id="ph47">`Left`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A&gt;|<ph id="ph48">`Right`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A&gt;|<ph id="ph49">`Ctrl`</ph><ph id="ph50">+</ph><ph id="ph51">`Right`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt;|<ph id="ph52">`Ctrl`</ph><ph id="ph53">+</ph><ph id="ph54">`End`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt;|<ph id="ph55">`Ctrl`</ph><ph id="ph56">+</ph><ph id="ph57">`Home`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt;|<ph id="ph58">`End`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A&gt;|<ph id="ph59">`Home`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A&gt;|<ph id="ph60">`Up`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A&gt;|<ph id="ph61">`PageUp`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A&gt;|<ph id="ph62">`Ctrl`</ph><ph id="ph63">+</ph><ph id="ph64">`Up`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A&gt;|<ph id="ph65">`Shift`</ph><ph id="ph66">+</ph><ph id="ph67">`Down`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A&gt;|<ph id="ph68">`Shift`</ph><ph id="ph69">+</ph><ph id="ph70">`PageDown`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A&gt;|<ph id="ph71">`Ctrl`</ph><ph id="ph72">+</ph><ph id="ph73">`Shift`</ph><ph id="ph74">+</ph><ph id="ph75">`Down`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt;|<ph id="ph76">`Shift`</ph><ph id="ph77">+</ph><ph id="ph78">`Left`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt;|<ph id="ph79">`Ctrl`</ph><ph id="ph80">+</ph><ph id="ph81">`Shift`</ph><ph id="ph82">+</ph><ph id="ph83">`Left`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A&gt;|<ph id="ph84">`Shift`</ph><ph id="ph85">+</ph><ph id="ph86">`Right`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt;|<ph id="ph87">`Ctrl`</ph><ph id="ph88">+</ph><ph id="ph89">`Shift`</ph><ph id="ph90">+</ph><ph id="ph91">`Right`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A&gt;|<ph id="ph92">`Ctrl`</ph><ph id="ph93">+</ph><ph id="ph94">`Shift`</ph><ph id="ph95">+</ph><ph id="ph96">`End`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A&gt;|<ph id="ph97">`Ctrl`</ph><ph id="ph98">+</ph><ph id="ph99">`Shift`</ph><ph id="ph100">+</ph><ph id="ph101">`Home`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A&gt;|<ph id="ph102">`Shift`</ph><ph id="ph103">+</ph><ph id="ph104">`End`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A&gt;|<ph id="ph105">`Shift`</ph><ph id="ph106">+</ph><ph id="ph107">`Home`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A&gt;|<ph id="ph108">`Shift`</ph><ph id="ph109">+</ph><ph id="ph110">`Up`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A&gt;|<ph id="ph111">`Shift`</ph><ph id="ph112">+</ph><ph id="ph113">`PageUp`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A&gt;|<ph id="ph114">`Ctrl`</ph><ph id="ph115">+</ph><ph id="ph116">`Shift`</ph><ph id="ph117">+</ph><ph id="ph118">`Up`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.TabBackward%2A&gt;|<ph id="ph119">`Shift`</ph><ph id="ph120">+</ph><ph id="ph121">`Tab`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.TabForward%2A&gt;|<ph id="ph122">`Tab`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;|<ph id="ph123">`Ctrl`</ph><ph id="ph124">+</ph><ph id="ph125">`B`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A&gt;|<ph id="ph126">`Ctrl`</ph><ph id="ph127">+</ph><ph id="ph128">`Shift`</ph><ph id="ph129">+</ph><ph id="ph130">`L`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A&gt;|<ph id="ph131">`Insert`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A&gt;|<ph id="ph132">`Ctrl`</ph><ph id="ph133">+</ph><ph id="ph134">`I`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A&gt;|<ph id="ph135">`Ctrl`</ph><ph id="ph136">+</ph><ph id="ph137">`Shift`</ph><ph id="ph138">+</ph><ph id="ph139">`N`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A&gt;|<ph id="ph140">`Ctrl`</ph><ph id="ph141">+</ph><ph id="ph142">`OemPlus`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A&gt;|<ph id="ph143">`Ctrl`</ph><ph id="ph144">+</ph><ph id="ph145">`Shift+OemPlus`</ph>|   |&lt;xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A&gt;|<ph id="ph146">`Ctrl`</ph><ph id="ph147">+</ph><ph id="ph148">`U`</ph>|       Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the &lt;xref:System.Windows.Input.ModifierKeys&gt; key to differentiate selection commands from caret movement commands.</source>
          <target state="translated">| 편집 명령 | 기본 키 제스처 |   |---------------------|-------------------------|   | &lt;xref:System.Windows.Documents.EditingCommands.AlignCenter%2A&gt;| <ph id="ph1">`Ctrl`</ph><ph id="ph2">+</ph><ph id="ph3">`E`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.AlignJustify%2A&gt;| <ph id="ph4">`Ctrl`</ph><ph id="ph5">+</ph><ph id="ph6">`J`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.AlignLeft%2A&gt;| <ph id="ph7">`Ctrl`</ph><ph id="ph8">+</ph><ph id="ph9">`L`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.AlignRight%2A&gt;| <ph id="ph10">`Ctrl`</ph><ph id="ph11">+</ph><ph id="ph12">`R`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt;| <ph id="ph13">`Backspace`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A&gt;| 기본 키 제스처 없음 |   | &lt;xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A&gt;| <ph id="ph14">`Ctrl`</ph><ph id="ph15">+</ph><ph id="ph16">`OemOpenBrackets`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt;| <ph id="ph17">`Ctrl`</ph><ph id="ph18">+</ph><ph id="ph19">`Shift`</ph><ph id="ph20">+</ph><ph id="ph21">`T`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.Delete%2A&gt;| <ph id="ph22">`Delete`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A&gt;| <ph id="ph23">`Ctrl`</ph><ph id="ph24">+</ph><ph id="ph25">`Delete`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A&gt;| <ph id="ph26">`Ctrl`</ph><ph id="ph27">+</ph><ph id="ph28">`Backspace`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A&gt;| <ph id="ph29">`Shift`</ph><ph id="ph30">+</ph><ph id="ph31">`Enter`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A&gt;| <ph id="ph32">`Enter`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A&gt;| 기본 키 제스처 없음 |   | &lt;xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A&gt;| <ph id="ph33">`Ctrl`</ph><ph id="ph34">+</ph><ph id="ph35">`OemCloseBrackets`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt;| <ph id="ph36">`Ctrl`</ph><ph id="ph37">+</ph><ph id="ph38">`T`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A&gt;| <ph id="ph39">`Down`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A&gt;| <ph id="ph40">`PageDown`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A&gt;| <ph id="ph41">`Ctrl`</ph><ph id="ph42">+</ph><ph id="ph43">`Down`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt;| <ph id="ph44">`Left`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A&gt;| <ph id="ph45">`Ctrl`</ph><ph id="ph46">+</ph><ph id="ph47">`Left`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A&gt;| <ph id="ph48">`Right`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A&gt;| <ph id="ph49">`Ctrl`</ph><ph id="ph50">+</ph><ph id="ph51">`Right`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt;| <ph id="ph52">`Ctrl`</ph><ph id="ph53">+</ph><ph id="ph54">`End`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt;| <ph id="ph55">`Ctrl`</ph><ph id="ph56">+</ph><ph id="ph57">`Home`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt;| <ph id="ph58">`End`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A&gt;| <ph id="ph59">`Home`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A&gt;| <ph id="ph60">`Up`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A&gt;| <ph id="ph61">`PageUp`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A&gt;| <ph id="ph62">`Ctrl`</ph><ph id="ph63">+</ph><ph id="ph64">`Up`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A&gt;| <ph id="ph65">`Shift`</ph><ph id="ph66">+</ph><ph id="ph67">`Down`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A&gt;| <ph id="ph68">`Shift`</ph><ph id="ph69">+</ph><ph id="ph70">`PageDown`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A&gt;| <ph id="ph71">`Ctrl`</ph><ph id="ph72">+</ph><ph id="ph73">`Shift`</ph><ph id="ph74">+</ph><ph id="ph75">`Down`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt;| <ph id="ph76">`Shift`</ph><ph id="ph77">+</ph><ph id="ph78">`Left`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt;| <ph id="ph79">`Ctrl`</ph><ph id="ph80">+</ph><ph id="ph81">`Shift`</ph><ph id="ph82">+</ph><ph id="ph83">`Left`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A&gt;| <ph id="ph84">`Shift`</ph><ph id="ph85">+</ph><ph id="ph86">`Right`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt;| <ph id="ph87">`Ctrl`</ph><ph id="ph88">+</ph><ph id="ph89">`Shift`</ph><ph id="ph90">+</ph><ph id="ph91">`Right`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A&gt;| <ph id="ph92">`Ctrl`</ph><ph id="ph93">+</ph><ph id="ph94">`Shift`</ph><ph id="ph95">+</ph><ph id="ph96">`End`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A&gt;| <ph id="ph97">`Ctrl`</ph><ph id="ph98">+</ph><ph id="ph99">`Shift`</ph><ph id="ph100">+</ph><ph id="ph101">`Home`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A&gt;| <ph id="ph102">`Shift`</ph><ph id="ph103">+</ph><ph id="ph104">`End`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A&gt;| <ph id="ph105">`Shift`</ph><ph id="ph106">+</ph><ph id="ph107">`Home`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A&gt;| <ph id="ph108">`Shift`</ph><ph id="ph109">+</ph><ph id="ph110">`Up`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A&gt;| <ph id="ph111">`Shift`</ph><ph id="ph112">+</ph><ph id="ph113">`PageUp`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A&gt;| <ph id="ph114">`Ctrl`</ph><ph id="ph115">+</ph><ph id="ph116">`Shift`</ph><ph id="ph117">+</ph><ph id="ph118">`Up`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.TabBackward%2A&gt;| <ph id="ph119">`Shift`</ph><ph id="ph120">+</ph><ph id="ph121">`Tab`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.TabForward%2A&gt;| <ph id="ph122">`Tab`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;| <ph id="ph123">`Ctrl`</ph><ph id="ph124">+</ph><ph id="ph125">`B`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A&gt;| <ph id="ph126">`Ctrl`</ph><ph id="ph127">+</ph><ph id="ph128">`Shift`</ph><ph id="ph129">+</ph><ph id="ph130">`L`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A&gt;| <ph id="ph131">`Insert`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A&gt;| <ph id="ph132">`Ctrl`</ph><ph id="ph133">+</ph><ph id="ph134">`I`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A&gt;| <ph id="ph135">`Ctrl`</ph><ph id="ph136">+</ph><ph id="ph137">`Shift`</ph><ph id="ph138">+</ph><ph id="ph139">`N`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A&gt;| <ph id="ph140">`Ctrl`</ph><ph id="ph141">+</ph><ph id="ph142">`OemPlus`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A&gt;| <ph id="ph143">`Ctrl`</ph><ph id="ph144">+</ph><ph id="ph145">`Shift+OemPlus`</ph>|   | &lt;xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A&gt;| <ph id="ph146">`Ctrl`</ph><ph id="ph147">+</ph><ph id="ph148">`U`</ph>|       캐럿 이동 명령 및 선택 영역 확장 명령을 기본 키 제스처의 공통 집합을 공유 하거나, 일반 다&lt;/xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.TabForward%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.TabBackward%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.Delete%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.AlignRight%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.AlignLeft%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.AlignJustify%2A&gt; &lt;/xref:System.Windows.Documents.EditingCommands.AlignCenter%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the &lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt; command has a default key gesture of &lt;xref:System.Windows.Input.Key&gt;, and the corresponding &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt; command has a default key gesture of &lt;xref:System.Windows.Input.ModifierKeys&gt;+&lt;xref:System.Windows.Input.Key&gt;.</source>
          <target state="translated">예를 들어는 &lt;xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt;명령에는 기본 키 제스처는 &lt;xref:System.Windows.Input.Key&gt;, 그리고 해당 &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt;명령에는 기본 키 제스처 + &lt;xref:System.Windows.Input.ModifierKeys&gt;&lt;xref:System.Windows.Input.Key&gt;.&lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the command definitions provided by the EditingCommands class do not make use of command parameters (the <ph id="ph1">`parameter`</ph> parameter expected by the &lt;xref:System.Windows.Input.ICommand.Execute%2A&gt; method).</source>
          <target state="translated">명령 정의 EditingCommands 클래스에서 제공 하지 않게 일반적으로 명령 매개 변수 사용 (의 <ph id="ph1">`parameter`</ph> 에서 예상 되는 매개 변수는 &lt;xref:System.Windows.Input.ICommand.Execute%2A&gt;메서드).&lt;/xref:System.Windows.Input.ICommand.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on commands and commanding, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">명령 및 명령 실행에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>입력 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Represents the AlignCenter command, which requests that the current paragraph or a selection of paragraphs be centered.</source>
          <target state="translated">현재 단락 또는 단락 선택을 가운데 맞춤 될 요청 AlignCenter 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 효과 선택 영역에 참여 하는 각 단락의 전체 내용을에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure shows an example of centered content.</source>
          <target state="translated">다음 그림에는 가운데 맞춤 된 콘텐츠의 예가 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Screenshot: TextAlign property value of Center<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-center.png "</bpt>Screenshot: TextAlign property value of Center<ept id="p2">")</ept>       This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated"><bpt id="p1">![</bpt>스크린 샷: Center의 TextAlign 속성 값<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-center.png "</bpt>스크린 샷: Center의 TextAlign 속성 값<ept id="p2">")</ept> 이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignCenter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="AlignCenter"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignCenter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="AlignCenter"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_E" name="E" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_E" name="E" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Represents the AlignJustify command, which requests that the current paragraph or a selection of paragraphs be justified.</source>
          <target state="translated">현재 단락 또는 단락 선택을 양쪽 맞춤 되도록 요청 AlignJustify 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 선택 영역의 모든 단락에는 효과가 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</source>
          <target state="translated">콘텐츠를 맞출는 정렬 된 줄은 동일 하거나 거의 같도록 너비의 되도록 각 내용 줄 내에서 가로 간격 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content is typically justified to create smooth edges on the sides of the content.</source>
          <target state="translated">콘텐츠는 일반적으로 부드러운 가장자리 콘텐츠의 양쪽에서 만들려는 양쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</source>
          <target state="translated">나머지 보다 짧은 종종 이기 때문에이 명령이 호출 된 후 단락의 마지막 줄에서는 양쪽 맞춤 되지 않고 남아 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure shows unjustified (left-aligned) content.</source>
          <target state="translated">다음 그림에서는 양쪽 맞춤 되지 않은 (왼쪽 맞춤) 콘텐츠를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Screenshot: Content is unjustified<ept id="p1">]</ept><bpt id="p2">(~/add/media/content-unjustified.png "</bpt>Screenshot: Content is unjustified<ept id="p2">")</ept>       The following figure shows the same content after it has been justified.</source>
          <target state="translated"><bpt id="p1">![</bpt>스크린 샷: 콘텐츠를 정렬 된<ept id="p1">]</ept><bpt id="p2">(~/add/media/content-unjustified.png "</bpt>스크린 샷: 콘텐츠 양쪽 맞춤 되지 않은<ept id="p2">")</ept> 양쪽 맞춤 된 후 다음 그림은 동일한 콘텐츠.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Screenshot of content justified text<ept id="p1">]</ept><bpt id="p2">(~/add/media/content-justified.png "</bpt>Screenshot of content justified text<ept id="p2">")</ept>       There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated"><bpt id="p1">![</bpt>콘텐츠의 스크린 샷 텍스트 맞춤<ept id="p1">]</ept><bpt id="p2">(~/add/media/content-justified.png "</bpt>콘텐츠의 스크린 샷 텍스트 맞춤<ept id="p2">")</ept> 반드시 지정된 된 개체에서이 명령에 응답 하는 실제 구현을; 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignJustify"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="AlignJustify"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignJustify"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="AlignJustify"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_J" name="J" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_J" name="J" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Represents the AlignLeft command, which requests that a selection of content be aligned left.</source>
          <target state="translated">선택 된 콘텐츠의 왼쪽 정렬 될 요청 AlignLeft 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 효과 선택 영역에 참여 하는 각 단락의 전체 내용을에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure shows an example of left-aligned content.</source>
          <target state="translated">다음 그림에는 왼쪽 맞춤 콘텐츠의 예가 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Screenshot: TextAlign property value of Left<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-left.png "</bpt>Screenshot: TextAlign property value of Left<ept id="p2">")</ept>       There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated"><bpt id="p1">![</bpt>스크린 샷: Left의 TextAlign 속성 값<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-left.png "</bpt>스크린 샷: Left의 TextAlign 속성 값<ept id="p2">")</ept> 반드시 지정된 된 개체에서이 명령에 응답 하는 실제 구현을; 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignLeft"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="AlignLeft"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignLeft"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="AlignLeft"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_L" name="L" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_L" name="L" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Represents the AlignRight command, which requests that a selection of content be aligned right.</source>
          <target state="translated">선택 된 콘텐츠의 오른쪽 정렬 되어야 요청 AlignRight 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 효과 선택 영역에 참여 하는 각 단락의 전체 내용을에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure shows an example of right-aligned content.</source>
          <target state="translated">다음 그림의 오른쪽에 맞추어져 콘텐츠 예를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Screenshot: TextAlign value of Right<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-right.png "</bpt>Screenshot: TextAlign value of Right<ept id="p2">")</ept>       There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated"><bpt id="p1">![</bpt>스크린 샷: Right의 TextAlign 값<ept id="p1">]</ept><bpt id="p2">(~/add/media/flowdoc-textalign-right.png "</bpt>스크린 샷: Right의 TextAlign 값<ept id="p2">")</ept> 반드시 지정된 된 개체에서이 명령에 응답 하는 실제 구현을; 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignRight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="AlignRight"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_AlignRight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="AlignRight"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_R" name="R" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_R" name="R" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Represents the Backspace command, which requests that a backspace be entered at the current position or over the current selection.</source>
          <target state="translated">현재 위치에서 또는 현재 선택 영역을 통해 백스페이스를 입력 하도록 요청 백스페이스 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</source>
          <target state="translated">빈 선택 영역에 호출 되 면이 명령은 캐럿 바로 앞의 문자 또는 단락 구분 기호를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When invoked on a non-empty selection, this command deletes the selection.</source>
          <target state="translated">비어 있지 않은 선택에 호출 되 면 선택 항목을 삭제이 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</source>
          <target state="translated">이 명령은 즉시이 명령이 호출 된 후 동일한 위치에 삽입 된 내용에 대 한 삭제 된 선택의 서식을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast with the &lt;xref:System.Windows.Documents.EditingCommands.Delete%2A&gt; command, which does not retain previous formatting.</source>
          <target state="translated">와 대비는 &lt;xref:System.Windows.Documents.EditingCommands.Delete%2A&gt;이전 서식 유지 되지 않는 명령입니다.&lt;/xref:System.Windows.Documents.EditingCommands.Delete%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Backspace"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="Backspace"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Backspace"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="Backspace"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Backspace" name="Backspace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Backspace" name="Backspace" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Represents the CorrectSpellingError command, which requests that any misspelled word at the current position be corrected.</source>
          <target state="translated">현재 위치에서 맞춤법이 틀린된 단어를 수정 하도록 요청 CorrectSpellingError 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_CorrectSpellingError"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="CorrectSpellingError"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_CorrectSpellingError"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="CorrectSpellingError"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command has no default key gesture.</source>
          <target state="translated">이 명령에는 기본 키 제스처 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Represents the DecreaseFontSize command, which requests that the font size for the current selection be decreased by 1 point.</source>
          <target state="translated">현재 선택 영역에 대 한 글꼴 크기 1 포인트 감소 될 요청 DecreaseFontSize 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</source>
          <target state="translated">이 명령은 단어 안에 캐럿이 있는 빈 선택 영역에서 호출 되 면 선택 영역 전체 단어에 명령을 적용 하도록 자동으로 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DecreaseFontSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="DecreaseFontSize"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DecreaseFontSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="DecreaseFontSize"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_OemOpenBrackets" name="OemOpenBrackets" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_OemOpenBrackets" name="OemOpenBrackets" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Represents the DecreaseIndentation command, which requests that indentation for the current paragraph be decreased by one tab stop.</source>
          <target state="translated">현재 단락에 대 한 들여쓰기 탭 정지 하나 만큼 여 줄일 수 요청 DecreaseIndentation 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This command has no effect on a text element unless the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; property of the text element is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 하지 않는 한이 명령은 텍스트 요소에 영향을 주지는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;텍스트 요소의 속성이로 설정 되어 <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DecreaseIndentation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="DecreaseIndentation"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DecreaseIndentation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="DecreaseIndentation"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_T" name="T" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_T" name="T" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Represents the Delete command, which requests that the current selection be deleted.</source>
          <target state="translated">현재 선택 영역 삭제 하도록 요청 하는 Delete 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command discards any formatting from the deleted selection.</source>
          <target state="translated">이 명령은 삭제 된 선택 영역 서식을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast with the &lt;xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt; command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</source>
          <target state="translated">와 대비는 &lt;xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt;명령을 즉시이 명령이 호출 된 후 동일한 위치에 삽입 된 콘텐츠에 대 한 삭제 선택 영역의 서식을 유지 하.&lt;/xref:System.Windows.Documents.EditingCommands.Backspace%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Delete"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="Delete"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Delete"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="Delete"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Represents the DeleteNextWord command, which requests that the next word (relative to a current position) be deleted.</source>
          <target state="translated">(현재 위치)에 상대적인 다음 단어는 삭제 될 요청 DeleteNextWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</source>
          <target state="translated">캐럿 단어 안에 포함 된 경우 현재 위치와 단어의 끝 사이의 단어의 나머지 부분에서는 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DeleteNextWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="DeleteNextWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DeleteNextWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="DeleteNextWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Represents the DeletePreviousWord command, which requests that the previous word (relative to a current position) be deleted.</source>
          <target state="translated">(현재 위치)에 상대적인 이전 단어 삭제 하도록 요청 하는 DeletePreviousWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</source>
          <target state="translated">캐럿 단어 안에 포함 된 경우 현재 위치와 해당 단어의 시작 부분 사이의 단어의 나머지 부분에서는 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DeletePreviousWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="DeletePreviousWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DeletePreviousWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="DeletePreviousWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Backspace" name="Backspace" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Backspace" name="Backspace" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Represents the EnterLineBreak command, which requests that a line break be inserted at the current position or over the current selection.</source>
          <target state="translated">현재 선택 영역 또는 현재 위치에 줄 바꿈을 삽입 하도록 요청 하는 EnterLineBreak 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For editors that support flow content, such as &lt;xref:System.Windows.Controls.RichTextBox&gt;, this command causes a &lt;xref:System.Windows.Documents.LineBreak&gt; element to be inserted at the current position.</source>
          <target state="translated">같은 유동 콘텐츠를 지 원하는 편집기에 대 한 &lt;xref:System.Windows.Controls.RichTextBox&gt;,이 명령을 실행 하면은 &lt;xref:System.Windows.Documents.LineBreak&gt;현재 위치에 삽입할 요소입니다.&lt;/xref:System.Windows.Documents.LineBreak&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_EnterLineBreak"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="EnterLineBreak"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_EnterLineBreak"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="EnterLineBreak"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Enter" name="Enter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Enter" name="Enter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Represents the EnterParagraphBreak command, which requests that a paragraph break be inserted at the current position or over the current selection.</source>
          <target state="translated">현재 위치에서 또는 현재 선택 영역을 통해 단락 나누기를 삽입 하도록 요청 하는 EnterParagraphBreak 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is equivalent to the user pressing the ENTER key.</source>
          <target state="translated">이 명령은 ENTER 키를 사용자에 게는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt; (when the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt; property is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;(때는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt;속성은 <ph id="ph1">`true`</ph>).&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This command has no effect on a text element unless the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt; property of the text element is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 하지 않는 한이 명령은 텍스트 요소에 영향을 주지는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt;텍스트 요소의 속성이로 설정 되어 <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_EnterParagraphBreak"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="EnterParagraphBreak"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_EnterParagraphBreak"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="EnterParagraphBreak"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Enter" name="Enter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Enter" name="Enter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Represents the IgnoreSpellingError command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</source>
          <target state="translated">현재 선택 영역 이나 현재 위치에서 맞춤법이 틀린된 단어의 인스턴스를 모두 무시 됩니다 요청 IgnoreSpellingError 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_IgnoreSpellingError"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="IgnoreSpellingError"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_IgnoreSpellingError"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="IgnoreSpellingError"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This command has no default key gesture.</source>
          <target state="translated">이 명령에는 기본 키 제스처 없습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Represents the IncreaseFontSize command, which requests that the font size for the current selection be increased by 1 point.</source>
          <target state="translated">현재 선택 영역에 대 한 글꼴 크기 1 포인트 늘릴 수 요청 IncreaseFontSize 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</source>
          <target state="translated">단어 안에 캐럿이 있는 빈 선택 영역에서이 명령을 호출 하는 경우에 전체 단어에 명령을 적용 하도록 선택 영역 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_IncreaseFontSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="IncreaseFontSize"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_IncreaseFontSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="IncreaseFontSize"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_OemCloseBrackets" name="OemCloseBrackets" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_OemCloseBrackets" name="OemCloseBrackets" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Represents the IncreaseIndentation command, which requests that indentation for the current paragraph be increased by one tab stop.</source>
          <target state="translated">현재 단락에 대 한 들여쓰기 탭 정지 하나 만큼가 늘릴 수 요청 IncreaseIndentation 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This command has no effect on a text element unless the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; property of the text element is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 하지 않는 한이 명령은 텍스트 요소에 영향을 주지는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;텍스트 요소의 속성이로 설정 되어 <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_IncreaseIndentation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="IncreaseIndentation"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_IncreaseIndentation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="IncreaseIndentation"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_T" name="T" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_T" name="T" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Represents the MoveDownByLine command, which requests that the caret move down by one line.</source>
          <target state="translated">한 줄씩 아래로 캐럿 이동 요청 MoveDownByLine 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveDownByLine"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveDownByLine"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Represents the MoveDownByPage command, which requests that the caret move down by one page.</source>
          <target state="translated">캐럿에서 한 페이지 아래로 요청 MoveDownByPage 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveDownByPage"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveDownByPage"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_PageDown" name="PageDown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_PageDown" name="PageDown" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Represents the MoveDownByParagraph command, which requests that the caret move down by one paragraph.</source>
          <target state="translated">한 단락 캐럿 아래로 이동 요청 MoveDownByParagraph 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command positions the caret at the beginning of the next paragraph.</source>
          <target state="translated">이 명령은 다음 단락 시작 부분에 캐럿을 배치합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command behaves like &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt; when invoked on a &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt; &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; 에서 호출 될 때&lt;/xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A&gt; 처럼 동작</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveDownByParagraph"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveDownByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveDownByParagraph"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Represents the MoveLeftByCharacter command, which requests that the caret move one character left.</source>
          <target state="translated">캐럿을 한 문자 왼쪽 이동 요청 MoveLeftByCharacter 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveLeftByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveLeftByCharacter"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveLeftByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveLeftByCharacter"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Represents the MoveLeftByWord command, which requests that the caret move one word left.</source>
          <target state="translated">캐럿 왼쪽을 한 단어를 이동 요청 MoveLeftByWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, this command moves the caret to the beginning of that word.</source>
          <target state="translated">캐럿 단어 안에 포함 된 경우이 명령은 해당 단어의 시작 부분에 캐럿을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command moves the caret to the beginning of the previous word.</source>
          <target state="translated">그렇지 않으면이 명령은 이전 단어의 시작 부분에 캐럿을 이동합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveLeftByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveLeftByWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveLeftByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveLeftByWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Represents the MoveRightByCharacter command, which requests that the caret move one character right.</source>
          <target state="translated">캐럿을 한 문자 오른쪽 이동 요청 MoveRightByCharacter 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveRightByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveRightByCharacter"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveRightByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveRightByCharacter"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Represents the MoveRightByWord command, which requests that the caret move right by one word.</source>
          <target state="translated">캐럿은 여을 한 단어 오른쪽으로 이동 요청 MoveRightByWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, this command moves the caret to the end of that word.</source>
          <target state="translated">캐럿 단어 안에 포함 된 경우이 명령은 해당 단어의 끝에 캐럿을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command moves the caret to the beginning of the next word.</source>
          <target state="translated">그렇지 않으면이 명령은 다음 단어의 시작 부분에 캐럿을 이동합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveRightByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveRightByWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveRightByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveRightByWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Represents the MoveToDocumentEnd command, which requests that the caret move to the very end of content.</source>
          <target state="translated">캐럿이 콘텐츠의 맨 끝으로 이동 요청 MoveToDocumentEnd 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the content at hand.</source>
          <target state="translated">A <bpt id="p1">*</bpt>텍스트 컨테이너<ept id="p1">*</ept> 중인 콘텐츠에 대 한 궁극적인 테두리를 구성 하는 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.TextBlock&gt; and &lt;xref:System.Windows.Documents.FlowDocument&gt; are examples of text containers.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.TextBlock&gt;및 &lt;xref:System.Windows.Documents.FlowDocument&gt;은 텍스트 컨테이너의 예입니다.&lt;/xref:System.Windows.Documents.FlowDocument&gt;&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content collectively contained within a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>.</source>
          <target state="translated">텍스트 컨테이너 내에서 전체적으로 포함 된 내용은 라고는 <bpt id="p1">*</bpt>문서<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToDocumentEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveToDocumentEnd"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToDocumentEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveToDocumentEnd"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Represents the MoveToDocumentStart command, which requests that the caret move to the very beginning of content.</source>
          <target state="translated">캐럿이 콘텐츠의 맨으로 이동 요청 MoveToDocumentStart 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the content at hand.</source>
          <target state="translated">A <bpt id="p1">*</bpt>텍스트 컨테이너<ept id="p1">*</ept> 중인 콘텐츠에 대 한 궁극적인 테두리를 구성 하는 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.TextBlock&gt; and &lt;xref:System.Windows.Documents.FlowDocument&gt; are examples of text containers.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.TextBlock&gt;및 &lt;xref:System.Windows.Documents.FlowDocument&gt;은 텍스트 컨테이너의 예입니다.&lt;/xref:System.Windows.Documents.FlowDocument&gt;&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content collectively contained within a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>.</source>
          <target state="translated">텍스트 컨테이너 내에서 전체적으로 포함 된 내용은 라고는 <bpt id="p1">*</bpt>문서<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToDocumentStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveToDocumentStart"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToDocumentStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveToDocumentStart"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Represents the MoveToLineEnd command, which requests that the caret move to the end of the current line.</source>
          <target state="translated">현재 줄의 끝에 캐럿이 이동 요청 MoveToLineEnd 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToLineEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveToLineEnd"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToLineEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveToLineEnd"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Represents the MoveToLineStart command, which requests that the caret move to the beginning of the current line.</source>
          <target state="translated">캐럿이 현재 줄의 시작 부분으로 이동 요청 MoveToLineStart 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToLineStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveToLineStart"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveToLineStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveToLineStart"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Represents the MoveUpByLine command, which requests that the caret move up by one line.</source>
          <target state="translated">한 줄씩 위로 캐럿 이동 요청 MoveUpByLine 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveUpByLine"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveUpByLine"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Represents the MoveUpByPage command, which requests that the caret move up by one page.</source>
          <target state="translated">요청에서 한 페이지 위로 캐럿 이동 MoveUpByPage 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveUpByPage"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveUpByPage"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_PageUp" name="PageUp" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_PageUp" name="PageUp" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Represents the MoveUpByParagraph command, which requests that the caret move up by one paragraph.</source>
          <target state="translated">한 단락 캐럿 위로 이동 요청 MoveUpByParagraph 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command positions the caret at the beginning of the next paragraph.</source>
          <target state="translated">이 명령은 다음 단락 시작 부분에 캐럿을 배치합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command behaves like &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt; when invoked on a &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt; &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; 에서 호출 될 때&lt;/xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A&gt; 처럼 동작</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt; 에서 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="MoveUpByParagraph"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MoveUpByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="MoveUpByParagraph"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Represents the SelectDownByLine command, which requests that the current selection be expanded down by one line.</source>
          <target state="translated">현재 선택 영역에서 한 줄 아래로 확장 되도록 요청 SelectDownByLine 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectDownByLine"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectDownByLine"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Represents the SelectDownByPage command, which requests that the current selection be expanded down by one page.</source>
          <target state="translated">현재 선택 영역에서 한 페이지 아래로 확장 되도록 요청 SelectDownByPage 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectDownByPage"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectDownByPage"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_PageDown" name="PageDown" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_PageDown" name="PageDown" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Represents the SelectDownByParagraph command, which requests that the current selection be expanded down by one paragraph.</source>
          <target state="translated">한 문장에서 현재 선택 영역 아래로 확장 되도록 요청 SelectDownByParagraph 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command expands the selection to the beginning of the next paragraph.</source>
          <target state="translated">이 명령은 다음 단락 시작 부분으로 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command expands the selection to the end of the current paragraph.</source>
          <target state="translated">그렇지 않으면이 명령은 현재 단락의 끝에 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expanded selection includes the paragraph break that marks the end of the paragraph.</source>
          <target state="translated">확장된 선택 영역 단락의 끝을 표시 하는 단락 나누기를 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectDownByParagraph"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectDownByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectDownByParagraph"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_Down" name="Down" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Represents the SelectLeftByCharacter command, which requests that the current selection be expanded left by one character.</source>
          <target state="translated">현재 선택 영역으로 한 문자 왼쪽 확장 되도록 요청 SelectLeftByCharacter 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectLeftByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectLeftByCharacter"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectLeftByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectLeftByCharacter"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Represents the SelectLeftByWord command, which requests that the current selection be expanded left by one word.</source>
          <target state="translated">현재 선택 영역으로 한 단어 왼쪽 확장 되도록 요청 SelectLeftByWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, this command expands the selection to the beginning of that word.</source>
          <target state="translated">캐럿 단어 내에 있으면이 명령은 해당 단어의 시작 부분에는 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command expands the selection to the beginning of the previous word.</source>
          <target state="translated">그렇지 않으면이 명령은 이전 단어의 시작 부분에는 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expanded selection does not include the word delimiter.</source>
          <target state="translated">확장된 선택 영역에는 단어 구분 기호가 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast with &lt;xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt;, which does include the word delimiter in the expanded selection.</source>
          <target state="translated">와 대비 &lt;xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt;, 확장된 선택 영역에 단어 구분 기호에는입니다.&lt;/xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectLeftByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectLeftByWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectLeftByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectLeftByWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_Left" name="Left" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Represents the SelectRightByCharacter command, which requests that the current selection be expanded right by one character.</source>
          <target state="translated">현재 선택 영역 한 문자 오른쪽으로 확장 되도록 요청 SelectRightByCharacter 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectRightByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectRightByCharacter"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectRightByCharacter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectRightByCharacter"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Represents the SelectRightByWord command, which requests that the current selection be expanded right by one word.</source>
          <target state="translated">현재 선택 영역을 한 단어 오른쪽으로 확장 되도록 요청 SelectRightByWord 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is within a word, this command expands the selection to the end of that word.</source>
          <target state="translated">가 단어 안에서 캐럿이 있는 경우이 명령은 해당 단어의 끝에 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command expands the selection to the end of the next word.</source>
          <target state="translated">그렇지 않으면이 명령은 다음 단어의 끝에 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expanded selection includes the word delimiter.</source>
          <target state="translated">확장된 선택 영역 단어 구분 기호를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast with &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt; which does not include the word delimiter in the expanded selection.</source>
          <target state="translated">와 대비 &lt;xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt;확장된 선택 영역에 단어 구분 기호를 포함 하지 않는.&lt;/xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectRightByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectRightByWord"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectRightByWord"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectRightByWord"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_Right" name="Right" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Represents the SelectToDocumentEnd command, which requests that the current selection be expanded to the very end of content.</source>
          <target state="translated">현재 선택 영역 콘텐츠의 맨 끝으로 확장 되도록 요청 SelectToDocumentEnd 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the content at hand.</source>
          <target state="translated">A <bpt id="p1">*</bpt>텍스트 컨테이너<ept id="p1">*</ept> 중인 콘텐츠에 대 한 궁극적인 테두리를 구성 하는 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.TextBlock&gt; and &lt;xref:System.Windows.Documents.FlowDocument&gt; are examples of text containers.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.TextBlock&gt;및 &lt;xref:System.Windows.Documents.FlowDocument&gt;은 텍스트 컨테이너의 예입니다.&lt;/xref:System.Windows.Documents.FlowDocument&gt;&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content collectively contained within a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>.</source>
          <target state="translated">텍스트 컨테이너 내에서 전체적으로 포함 된 내용은 라고는 <bpt id="p1">*</bpt>문서<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToDocumentEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectToDocumentEnd"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToDocumentEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectToDocumentEnd"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Represents the SelectToDocumentStart command, which requests that the current selection be expanded to the very beginning of content.</source>
          <target state="translated">현재 선택 영역에 콘텐츠의 맨 확장 되도록 요청 SelectToDocumentStart 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the content at hand.</source>
          <target state="translated">A <bpt id="p1">*</bpt>텍스트 컨테이너<ept id="p1">*</ept> 중인 콘텐츠에 대 한 궁극적인 테두리를 구성 하는 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.TextBlock&gt; and &lt;xref:System.Windows.Documents.FlowDocument&gt; are examples of text containers.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.TextBlock&gt;및 &lt;xref:System.Windows.Documents.FlowDocument&gt;은 텍스트 컨테이너의 예입니다.&lt;/xref:System.Windows.Documents.FlowDocument&gt;&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content collectively contained within a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>.</source>
          <target state="translated">텍스트 컨테이너 내에서 전체적으로 포함 된 내용은 라고는 <bpt id="p1">*</bpt>문서<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToDocumentStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectToDocumentStart"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToDocumentStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectToDocumentStart"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Represents the SelectToLineEnd command, which requests that the current selection be expanded to the end of the current line.</source>
          <target state="translated">현재 선택 항목은 현재 줄의 끝으로 확장 되도록 요청 SelectToLineEnd 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToLineEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectToLineEnd"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToLineEnd"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectToLineEnd"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_End" name="End" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Represents the SelectToLineStart command, which requests that the current selection be expanded to the beginning of the current line.</source>
          <target state="translated">현재 선택 항목은 현재 줄의 시작 부분으로 확장 되도록 요청 SelectToLineStart 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToLineStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectToLineStart"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectToLineStart"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectToLineStart"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Home" name="Home" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Represents the SelectUpByLine command, which requests that the current selection be expanded up by one line.</source>
          <target state="translated">현재 선택 영역에서 한 줄 위로 확장 되도록 요청 SelectUpByLine 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectUpByLine"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByLine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectUpByLine"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Represents the SelectUpByPage command, which requests that the current selection be expanded  up by one page.</source>
          <target state="translated">현재 선택 영역에서 한 페이지 위로 확장 되도록 요청 SelectUpByPage 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectUpByPage"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByPage"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectUpByPage"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_PageUp" name="PageUp" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_PageUp" name="PageUp" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Represents the SelectUpByParagraph command, which requests that the current selection be expanded up by one paragraph.</source>
          <target state="translated">한 문장에서 현재 선택 영역 위로 확장 될 요청 SelectUpByParagraph 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</source>
          <target state="translated">캐럿 단락 시작 부분에 있는 경우이 명령은 이전 단락의 시작 부분에는 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this command expands the selection to the beginning of the current paragraph.</source>
          <target state="translated">그렇지 않으면이 명령은 현재 단락의 시작 부분에는 선택 영역을 확장 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="SelectUpByParagraph"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SelectUpByParagraph"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="SelectUpByParagraph"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_Up" name="Up" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Represents the TabBackward command.</source>
          <target state="translated">TabBackward 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior for this command depends on the current selection.</source>
          <target state="translated">이 명령에 대 한 동작은 현재 선택한 내용에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the selection is non-empty, this command is equivalent to &lt;xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt;.&lt;/xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A&gt; 같습니다는 선택 영역이 비어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is in a table cell (represented by the &lt;xref:System.Windows.Documents.TableCell&gt; element), this command moves the caret to the previous cell.</source>
          <target state="translated">캐럿 표 셀에 있으면 (나타내는 &lt;xref:System.Windows.Documents.TableCell&gt;요소),이 명령은 캐럿을 이전 셀으로 이동 합니다.&lt;/xref:System.Windows.Documents.TableCell&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a tab character is inserted in current position.</source>
          <target state="translated">그렇지 않으면 현재 위치에 탭 문자가 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt; (when the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; property is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;(때는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;속성은 <ph id="ph1">`true`</ph>).&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TabBackward"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="TabBackward"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TabBackward"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="TabBackward"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Tab" name="Tab" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Tab" name="Tab" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Represents the TabForward command.</source>
          <target state="translated">TabForward 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior for this command depends on the current selection.</source>
          <target state="translated">이 명령에 대 한 동작은 현재 선택한 내용에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to &lt;xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt;.&lt;/xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A&gt; 같습니다 선택 내용이 비어 또는 선택 내용이 비어 있는 단락 시작 부분에는 현재 캐럿 위치 하는 경우</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is in a table cell (represented by the &lt;xref:System.Windows.Documents.TableCell&gt; element), this command moves the caret to the next cell.</source>
          <target state="translated">캐럿 표 셀에 있으면 (나타내는 &lt;xref:System.Windows.Documents.TableCell&gt;요소),이 명령은 캐럿을 다음 셀으로 이동 합니다.&lt;/xref:System.Windows.Documents.TableCell&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</source>
          <target state="translated">캐럿이 테이블의 마지막 셀에 있으면,이 명령을 사용 하면 새 행을 새 행의 첫 번째 셀에 배치 된 테이블에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a tab character is inserted in current position.</source>
          <target state="translated">그렇지 않으면 현재 위치에 탭 문자가 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt; and &lt;xref:System.Windows.Controls.TextBox&gt; (when the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; property is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;및 &lt;xref:System.Windows.Controls.TextBox&gt;(때는 &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt;속성은 <ph id="ph1">`true`</ph>).&lt;/xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TabForward"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="TabForward"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TabForward"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="TabForward"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Tab" name="Tab" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Tab" name="Tab" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Represents the ToggleBold command, which requests that <bpt id="p1">&lt;xref href="System.Windows.Documents.Bold"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> formatting be toggled on the current selection.</source>
          <target state="translated">요청 하는 ToggleBold 명령을 나타냅니다 <bpt id="p1">&lt;xref href="System.Windows.Documents.Bold"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 선택 영역에서 서식이 전환 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.FontWeight&gt; for the current selection is in the range from &lt;xref:System.Windows.FontWeights.Thin%2A&gt; to &lt;xref:System.Windows.FontWeights.SemiBold%2A&gt;, &lt;xref:System.Windows.FontWeights.Bold%2A&gt; is applied to the current selection.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.FontWeight&gt;까지의 범위에 현재 선택 영역에 대 한 &lt;xref:System.Windows.FontWeights.Thin%2A&gt;를 &lt;xref:System.Windows.FontWeights.SemiBold%2A&gt;, &lt;xref:System.Windows.FontWeights.Bold%2A&gt;현재 선택 영역에 적용 됩니다.&lt;/xref:System.Windows.FontWeights.Bold%2A&gt; &lt;/xref:System.Windows.FontWeights.SemiBold%2A&gt; &lt;/xref:System.Windows.FontWeights.Thin%2A&gt; &lt;/xref:System.Windows.FontWeight&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, &lt;xref:System.Windows.FontWeights.Normal%2A&gt; is applied.</source>
          <target state="translated">그렇지 않으면 &lt;xref:System.Windows.FontWeights.Normal%2A&gt;적용 됩니다.&lt;/xref:System.Windows.FontWeights.Normal%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a comparative list of &lt;xref:System.Windows.FontWeight&gt; values, see &lt;xref:System.Windows.FontWeights&gt;.</source>
          <target state="translated">비교 &lt;xref:System.Windows.FontWeight&gt;값, 참조 &lt;xref:System.Windows.FontWeights&gt;.&lt;/xref:System.Windows.FontWeights&gt; &lt;/xref:System.Windows.FontWeight&gt; 목록은</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</source>
          <target state="translated">선택 내용이 비어 있는 경우 단어 안에 캐럿이 여 선택 영역 전체 단어를 포함 하도록 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleBold"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleBold"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleBold"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleBold"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_B" name="B" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_B" name="B" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Represents the ToggleBullets command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</source>
          <target state="translated">현재 선택 영역에서 정렬 되지 않은 목록 (글머리 기호 목록 라고도 함) 서식이 전환 되도록 요청 ToggleBullets 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 효과 선택 영역에 참여 하는 각 단락의 전체 내용을에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleBullets"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleBullets"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleBullets"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleBullets"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_L" name="L" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_L" name="L" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Represents the ToggleInsert command, which toggles the typing mode between Insert and Overtype.</source>
          <target state="translated">입력 Insert와 겹쳐쓰기 모드를 전환 하는 ToggleInsert 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, and &lt;xref:System.Windows.Controls.PasswordBox&gt;.</source>
          <target state="translated">이 명령은에서 기본적으로 지원 &lt;xref:System.Windows.Controls.RichTextBox&gt;, &lt;xref:System.Windows.Controls.TextBox&gt;, 및 &lt;xref:System.Windows.Controls.PasswordBox&gt;.&lt;/xref:System.Windows.Controls.PasswordBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleInsert"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleInsert"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleInsert"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleInsert"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Insert" name="Insert" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Insert" name="Insert" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Represents the ToggleItalic command, which requests that <bpt id="p1">&lt;xref href="System.Windows.Documents.Italic"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> formatting be toggled on the current selection.</source>
          <target state="translated">요청 하는 ToggleItalic 명령을 나타냅니다 <bpt id="p1">&lt;xref href="System.Windows.Documents.Italic"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 선택 영역에서 서식이 전환 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.FontStyle&gt; for the current selection is &lt;xref:System.Windows.FontStyles.Normal%2A&gt;, &lt;xref:System.Windows.FontStyles.Italic%2A&gt; is applied to the current selection.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.FontStyle&gt;현재 선택 영역에 대 한 &lt;xref:System.Windows.FontStyles.Normal%2A&gt;, &lt;xref:System.Windows.FontStyles.Italic%2A&gt;현재 선택 영역에 적용 됩니다.&lt;/xref:System.Windows.FontStyles.Italic%2A&gt; &lt;/xref:System.Windows.FontStyles.Normal%2A&gt; &lt;/xref:System.Windows.FontStyle&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, &lt;xref:System.Windows.FontStyles.Normal%2A&gt; is applied.</source>
          <target state="translated">그렇지 않으면 &lt;xref:System.Windows.FontStyles.Normal%2A&gt;적용 됩니다.&lt;/xref:System.Windows.FontStyles.Normal%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</source>
          <target state="translated">선택 내용이 비어 있는 경우 단어 안에 캐럿이 여 선택 영역 전체 단어를 포함 하도록 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleItalic"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleItalic"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleItalic"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleItalic"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_I" name="I" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_I" name="I" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Represents the ToggleNumbering command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</source>
          <target state="translated">현재 선택 영역에서 정렬 된 목록 (또는 번호 매기기 목록) 서식이 전환 되도록 요청 ToggleNumbering 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command operates at the &lt;xref:System.Windows.Documents.Paragraph&gt; level.</source>
          <target state="translated">이 명령은에서 작동는 &lt;xref:System.Windows.Documents.Paragraph&gt;수준.&lt;/xref:System.Windows.Documents.Paragraph&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</source>
          <target state="translated">이 명령은 부분적으로 선택의 콘텐츠 (단락 내에서 캐럿이 있는 빈 선택 영역을 포함 합니다.) 단락 내에서 호출 되 면 요청 된 효과가 단락 전체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</source>
          <target state="translated">이 명령은 여러 단락에 걸친 선택에 호출 되 면 효과 선택 영역에 참여 하는 각 단락의 전체 내용을에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleNumbering"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleNumbering"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleNumbering"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleNumbering"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_N" name="N" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_N" name="N" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Represents the ToggleSubscript command, which requests that subscript formatting be toggled on the current selection.</source>
          <target state="translated">현재 선택 영역에서 아래 첨자 서식이 전환 되도록 요청 ToggleSubscript 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleSubscript"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleSubscript"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleSubscript"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleSubscript"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_OemPlus" name="OemPlus" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_OemPlus" name="OemPlus" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Represents the ToggleSuperscript command, which requests that superscript formatting be toggled on the current selection.</source>
          <target state="translated">현재 선택 영역에서 위 첨자 서식이 전환 되도록 요청 ToggleSuperscript 명령을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleSuperscript"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleSuperscript"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleSuperscript"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleSuperscript"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept><ph id="ph2">+</ph><bpt id="p3">&lt;xref uid="langword_csharp_OemPlus" name="OemPlus" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_Shift" name="Shift" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> <ph id="ph2">+</ph> <bpt id="p3">&lt;xref uid="langword_csharp_OemPlus" name="OemPlus" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Represents the ToggleUnderline command, which requests that <bpt id="p1">&lt;xref href="System.Windows.Documents.Underline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> formatting be toggled on the current selection.</source>
          <target state="translated">요청 하는 ToggleUnderline 명령을 나타냅니다 <bpt id="p1">&lt;xref href="System.Windows.Documents.Underline"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 선택 영역에서 서식이 전환 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</source>
          <target state="translated">선택 내용이 비어 있는 경우 단어 안에 캐럿이 여 선택 영역 전체 단어를 포함 하도록 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</source>
          <target state="translated">반드시 있는 것은 아닙니다; 지정된 된 개체에서이 명령에 응답 하는 실제 구현을 대부분의 경우에서에 명령에 응답 하는 구현을 응용 프로그램 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>This command is natively supported by &lt;xref:System.Windows.Controls.RichTextBox&gt;.</source>
          <target state="translated">이 명령은 &lt;xref:System.Windows.Controls.RichTextBox&gt;.&lt;/xref:System.Windows.Controls.RichTextBox&gt; 기본적으로 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleUnderline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="ToggleUnderline"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToggleUnderline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용<ph id="ph1">```   &lt;object property="ToggleUnderline"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The requested command.</source>
          <target state="translated">요청 된 명령입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The default key gesture for this command is <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;xref uid="langword_csharp_U" name="U" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 명령에 대 한 기본 키 제스처는 <bpt id="p1">&lt;xref uid="langword_csharp_Ctrl" name="Ctrl" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <ph id="ph1">+</ph> <bpt id="p2">&lt;xref uid="langword_csharp_U" name="U" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>