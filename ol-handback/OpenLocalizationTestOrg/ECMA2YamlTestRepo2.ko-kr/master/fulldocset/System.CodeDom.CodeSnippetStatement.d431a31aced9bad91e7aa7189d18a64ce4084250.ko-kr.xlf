<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39167d2404aba386e871c50643d714124a662f00</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.CodeSnippetStatement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f69380bd3d7640f29e60e03d899df89128c37963</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">276cb61afc0a84fa5d868a305e700ce0ed486b76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a statement using a literal code fragment.</source>
          <target state="translated">리터럴 코드 조각을 사용 하 여 문을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.</source>
          <target state="translated">CodeSnippetStatement 수정 하지 않고 소스에 직접 포함 될 리터럴 코드 조각을 사용 하 여 문을 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CodeSnippetStatement stores a section of code exactly in its original format as a string.</source>
          <target state="translated">CodeSnippetStatement 문자열로 원래 형식으로 정확 하 게 코드의 섹션을 저장합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CodeDOM does not translate literal code fragments.</source>
          <target state="translated">CodeDOM 리터럴 코드 조각을 의미 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Literal code fragments are stored and output in their original format.</source>
          <target state="translated">리터럴 코드 조각은 저장 하 고 원래 형식으로 출력 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</source>
          <target state="translated">CodeDOM 개체 리터럴 코드를 포함 하는 개발자가 대상 언어에 이미 있는 코드를 캡슐화 할 수 있도록 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt; property contains the literal code for the snippet statement.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt;속성 코드 조각 문에 대 한 리터럴 코드를 포함 합니다.&lt;/xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeSnippetStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.CodeDom.CodeSnippetStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeSnippetStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified code fragment.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.CodeDom.CodeSnippetStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정 된 코드 조각을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The literal code fragment of the statement to represent.</source>
          <target state="translated">나타내는 문의 리터럴 코드 조각입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the literal code fragment statement.</source>
          <target state="translated">리터럴 코드 조각 문을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The literal code fragment statement.</source>
          <target state="translated">리터럴 코드 조각 문입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>