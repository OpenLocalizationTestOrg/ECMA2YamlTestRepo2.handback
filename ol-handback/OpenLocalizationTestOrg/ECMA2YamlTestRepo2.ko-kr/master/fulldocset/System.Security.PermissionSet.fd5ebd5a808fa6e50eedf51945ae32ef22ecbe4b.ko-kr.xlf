<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17e0f07de0dbe61d72b6a52eb9880d885a825d58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.PermissionSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b3617e3ab98378e6e6e04416b4fd753c4c5791</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5006bc484177a2945e4d9a8033dadf416489e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">다양 한 유형의 사용 권한 포함 될 수 있는 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use PermissionSet to perform operations on several different permissions as a group.</source>
          <target state="translated">그룹으로 여러 사용 권한 작업을 수행 하려면 PermissionSet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface, while <ph id="ph2">`None`</ph> allows no permissions.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> 상태를 구현 하는 모든 사용 권한을 허용는 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;인터페이스 동안 <ph id="ph2">`None`</ph> 어떠한 사용 권한도 허용.&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; on an empty &lt;xref:System.Security.PermissionSet&gt; to define the set in greater detail.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;는 비어 있는 &lt;xref:System.Security.PermissionSet&gt;자세히 집합을 정의할 수 있습니다.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">리소스에 대 한 사용 권한 집합의 권한을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">state</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">state</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 유효 하지 않거나 <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with initial values taken from the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">permSet</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스에서 가져온 초기 값으로는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">permSet</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new &lt;xref:System.Security.PermissionSet&gt; contains copies of the permissions contained in the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;지정 된 &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; 포함 된 사용 권한에의 복사본이 포함 된&lt;/xref:System.Security.PermissionSet&gt; 새</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This is equivalent to &lt;xref:System.Security.PermissionSet.Copy%2A&gt; when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 같습니다 &lt;xref:System.Security.PermissionSet.Copy%2A&gt;때는 <ph id="ph2">`permSet`</ph> 매개 변수가 않습니다 <ph id="ph3">`null`</ph>.&lt;/xref:System.Security.PermissionSet.Copy%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set from which to take the value of the new <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to create an empty <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 값을 가져올 집합 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 빈 만들려는 <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 하 게 지정한 사용 권한에 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">이미 추가 된 사용 권한과 동일한 유형의 사용 권한을에 있는 경우는 &lt;xref:System.Security.PermissionSet&gt;, 새 사용 권한을 기존 권한 개체와 지정된 된 권한 개체의 union을입니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">예를 들어 구현 하는 사용 권한 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;에 추가 되는 &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, 결과 union은 원래 <ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">추가할 수 있는 권한이 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 사용 권한 및에 이미 있는 동일한 형식의 모든 사용 권한의 합은 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 하 게 지정한 사용 권한에 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; method.</source>
          <target state="translated">AddPermissionImpl 메서드는에 대 한 구현에서 &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;메서드.&lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">이미 추가 된 사용 권한과 동일한 유형의 사용 권한을에 있는 경우는 &lt;xref:System.Security.PermissionSet&gt;, 새 사용 권한을 기존 권한 개체와 지정된 된 권한 개체의 union을입니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">예를 들어 구현 하는 사용 권한 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;에 추가 되는 &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, 결과 union은 원래 <ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">추가할 수 있는 권한이 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">perm</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 사용 권한 및에 이미 있는 동일한 형식의 모든 사용 권한의 합은 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">perm</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">호출 코드에서 스택의 상위 호출자가 리소스에 액세스할 수 있는 권한이 부여 되지 않았습니다 하는 경우에이 메서드를 호출 하는 코드를 통해 사용 권한 요구로 보호 되는 리소스를 액세스할 수 있음을 선언 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using Assert can create security vulnerabilities.</source>
          <target state="translated">Assert 사용 인해 보안 취약점이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one Assert can be active on a frame.</source>
          <target state="translated">이것이 하나만 Assert 프레임에서 하나의 수 있기 때문에 프레임 내에서 동시에 여러 권한을 어설션할 수 있는 유일한 방법은입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assert is only effective for granted permissions.</source>
          <target state="translated">Assert에 대 한 유일한 유효 사용 권한을 부여 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt; method to cancel an active Assert.</source>
          <target state="translated">호출 된 &lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;또는 &lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt;활성 Assert를 취소 하는 메서드.&lt;/xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Because calling the Assert method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 메서드를 잘못 사용 하는 경우 보안 문제가 발생할 수 있습니다는 모든 코드 호출 체인에 지정된 된 리소스를 액세스할 수 있는 권한이 부여 되어야 하는 요구 사항을 제거 Assert 메서드를 호출 하기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">따라서 매우 주의 해 서 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance asserted has not been granted to the asserting code.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어설션 인스턴스에 어설션 코드가 부여 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-       There is already an active Assert for the current frame.</source>
          <target state="translated">-또는-현재 프레임에 대 한 활성 Assert가 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 파생 되지 않은 사용 권한이 <bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 파생 되지 않은 사용 권한이 <bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converts an encoded <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">인코딩된 변환 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다른 XML 인코딩 형식으로 XML 인코딩 형식에서입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use this method.</source>
          <target state="translated">이 메서드를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">인코딩 형식 중 하나를 나타내는 문자열로: ASCII, 유니코드 또는 이진 파일입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">가능한 값에 "XMLASCII" 또는 "XML", "XMLUNICODE" 및 "BINARY"은 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An XML-encoded permission set.</source>
          <target state="translated">XML로 인코딩된 사용 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">인코딩 형식 중 하나를 나타내는 문자열로: ASCII, 유니코드 또는 이진 파일입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">가능한 값에 "XMLASCII" 또는 "XML", "XMLUNICODE" 및 "BINARY"은 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">지정된 된 출력 형식을 사용 하 여 설정 하는 암호화 된 권한입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">복사본을 만듭니다는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A copy of a &lt;xref:System.Security.PermissionSet&gt; represents the same access to resources as the original object.</source>
          <target state="translated">복사본 한 &lt;xref:System.Security.PermissionSet&gt;원래 개체와 리소스에 동일한 액세스 권한을 나타냅니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">변경 내용이 복사본에 대해 원래 권한 집합 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">복사본은 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Copies the permission objects of the set to the indicated location in an &lt;xref:System.Array&gt;.</source>
          <target state="translated">집합의 사용 권한 개체 &lt;xref:System.Array&gt;.&lt;/xref:System.Array&gt; 의 지정된 된 위치에 복사</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The target array to which to copy.</source>
          <target state="translated">복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">(0부터 시작)를 복사를 시작할 배열의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter has more than one dimension.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에 둘 이상의 차원이 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is out of the range of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept> 의 범위를 벗어난 매개 변수는는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">array</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">사용 권한 집합에 포함 된 사용 권한 개체의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">에 <ph id="ph1">`None`</ph> 또는 <ph id="ph2">`Unrestricted`</ph> 실제 사용 권한은 개체 인스턴스가 사용 되 고&amp;0;이 반환 상태입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The number of permission objects contained in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 포함 된 사용 권한 개체의 수는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Forces a &lt;xref:System.Security.SecurityException&gt; at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">강제로 &lt;xref:System.Security.SecurityException&gt;모든 호출 스택의 상위 호출자가 현재 인스턴스에서 지정 된 사용 권한을 부여 되지 않은 경우 런타임에.&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use Demand on a &lt;xref:System.Security.PermissionSet&gt; to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">요청에서 사용 하 여 한 &lt;xref:System.Security.PermissionSet&gt;모든 호출자가 하나의 작업이 있는 집합의 모든 권한이 있는지 확인 하려면.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">이 메서드를 호출 하는 코드의 사용 권한은 검사 하지 않습니다. 검사 해당 코드의 직접 실행 호출자에서 시작 되 고 스택 위로 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Demand succeeds only if no &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
          <target state="translated">요청이 없는 경우에 성공 하면 &lt;xref:System.Security.SecurityException&gt;throw 됩니다.&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Security.PermissionSet&gt; contains permissions that do not inherit from &lt;xref:System.Security.CodeAccessPermission&gt;, the <ph id="ph1">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">경우는 &lt;xref:System.Security.PermissionSet&gt;에서 상속 되지 않는 권한을 포함 &lt;xref:System.Security.CodeAccessPermission&gt;, <ph id="ph1">`Demand`</ph> 이러한 사용 권한은의 메서드도 호출 됩니다.&lt;/xref:System.Security.CodeAccessPermission&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">호출 체인에 호출자 요구 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">모든 &lt;xref:System.Security.PermissionSet.Demand*&gt;는 현재에서 포함 된 형식의 권한과 공통 된 권한에 대 한 호출 코드를 통과 하 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 실패.&lt;/xref:System.Security.PermissionSet.Demand*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">이 메서드는 호출 스택의 상위 호출자가 해당 호출자가 액세스할 수 있는 권한이 부여 되어 있는 경우에이 메서드를 호출 하는 코드를 통해 보호 된 리소스에 액세스 하지 못하도록 방지 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deny can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls Deny from being used to access the resource protected by the denied permission.</source>
          <target state="translated">Deny는 프로그래머의 책임을 제한 하거나 거부에서 거부 된 권한으로 보호 되는 리소스에 액세스 하는 데 사용 되 고 호출 하는 메서드를 방지할 수 있으므로 실수로 인 한 보안 취약점을 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a method calls Deny on a permission, and if a &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the Deny.</source>
          <target state="translated">메서드는 사용 권한에서 거부를 호출 하는 경우는 &lt;xref:System.Security.PermissionSet.Demand%2A&gt;Deny에 도달 하면 보안 검사를 수행할 권한은 하위 호출 스택의 호출자가 호출에 대 한.&lt;/xref:System.Security.PermissionSet.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deny is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">거부에 대 한 해당 권한 요청할 수 없으므로 부여 되지 않은 사용 권한에 대해 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A previous call to Deny has already restricted the permissions for the current stack frame.</source>
          <target state="translated">Deny 대 한 이전 호출에는 현재 스택 프레임에 대 한 권한을 이미 제한 했습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is equal to the current <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">확인 여부를 지정 된 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 현재 개체가 같은지 <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">일치 여부는 권한 집합에 지정 된 내용에 포함 된 사용 권한에 의해 결정 됩니다 <ph id="ph1">`obj`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`obj`</ph> can be either a &lt;xref:System.Security.PermissionSet&gt; object or a &lt;xref:System.Security.NamedPermissionSet&gt; object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph>일 수 있습니다는 &lt;xref:System.Security.PermissionSet&gt;개체 또는 &lt;xref:System.Security.NamedPermissionSet&gt;개체입니다.&lt;/xref:System.Security.NamedPermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`obj`</ph> is a &lt;xref:System.Security.NamedPermissionSet&gt;, the name and description are ignored.</source>
          <target state="translated">경우 <ph id="ph1">`obj`</ph> 는 &lt;xref:System.Security.NamedPermissionSet&gt;, 이름 및 설명을 무시 됩니다.&lt;/xref:System.Security.NamedPermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재와 비교할 개체 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 개체가 현재 같으면 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체; 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">포함 된 XML 인코딩에서 지정된 된 상태의 보안 개체를 다시 만듭니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">XML은 보안 개체를 다시 만드는 데 사용할 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid permission element.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 올바른 권한 요소가 아닙니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter's version number is not supported.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수의 버전 번호가 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">집합의 사용 권한에 대 한 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">인덱스 열거자를 사용 하 여 집합에서 각각의 사용 권한 개체에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">집합의 사용 권한에 대 한 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">집합의 사용 권한에 대 한 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetEnumeratorImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt; method.</source>
          <target state="translated">GetEnumeratorImpl 메서드는에 대 한 구현에서 &lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;메서드.&lt;/xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">집합의 사용 권한에 대 한 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">에 대 한 해시 코드를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 해시 알고리즘 및 데이터 해시 테이블 같은 구조에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two &lt;xref:System.Security.PermissionSet&gt; objects.</source>
          <target state="translated">두 개를 비교 하 여 해시 코드를 사용 해야 하므로 동일한 사용 권한 집합의 두 인스턴스에 대 한 해시 코드 서로 다를 수 &lt;xref:System.Security.PermissionSet&gt;개체입니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재에 대 한 해시 코드 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">집합에 있는 경우 지정 된 형식의 사용 권한 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`null`</ph> 에 대 한 프로그램 <ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">하지만 <ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;효과적으로 모든 권한이 포함 된 실제 인스턴스 반환가 없습니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The type of the desired permission object.</source>
          <target state="translated">원하는 사용 권한 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A copy of the permission object of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">지정 된 형식의 권한 개체의 복사본은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept> 에 포함 된 매개 변수는 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 또는 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이름이 없는 경우.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">집합에 있는 경우 지정 된 형식의 사용 권한 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetPermission%2A&gt; method.</source>
          <target state="translated">GetPermissionImpl 메서드는에 대 한 구현에서 &lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;메서드.&lt;/xref:System.Security.PermissionSet.GetPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`null`</ph> 에 대 한 프로그램 <ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">하지만 <ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;효과적으로 모든 권한이 포함 된 실제 인스턴스 반환가 없습니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The type of the permission object.</source>
          <target state="translated">사용 권한 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A copy of the permission object, of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter, contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">지정 된 형식의 사용 권한 개체의 복사본은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept> 에 포함 된 매개 변수는 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 또는 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이름이 없는 경우.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission set that is the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">만들고는 사용 권한 집합을 현재의 교집합 반환 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 지정 된 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">두 사용 권한 집합의 교집합에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">특히,이 권한을 모두 전달 하는 모든 요청 설정도 전달 교차점 최소 사용 권한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">각 두 집합 모두에 존재 하는 사용 권한 유형에 대 한 사용 권한만의 두 인스턴스가 교차는 권한을 사용 하 여 <ph id="ph1">`Intersect`</ph> 메서드가 결과 &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; 결과 권한이 포함 되어</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">에 두 집합 중 하나에만 존재 하는 사용 권한 유형 결과 집합에서 제외 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A permission set to intersect with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재 집합과 교차 하는 사용 권한 집합 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified target.</source>
          <target state="translated">현재의 교차 부분을 나타내는 새 사용 권한 집합 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 지정된 된 대상입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This object is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">이 개체는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 교집합이 비어 있는 경우.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.PermissionSet&gt; can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">A &lt;xref:System.Security.PermissionSet&gt;비워 둘 수 있고 아직 완전 제한 상태에 해당 권한이 있는 사용 권한의 인스턴스를 포함 합니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">사용 권한을 완벽 하 게 제한 된 상태에 있으며 하는 경우 해당 <ph id="ph1">`IsSubsetOf`</ph> 메서드 반환 <ph id="ph2">`true`</ph> 때 <ph id="ph3">`null`</ph> 매개 변수로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is empty; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그러지 않으면 빈 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.PermissionSet&gt; cannot be read-only, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">A &lt;xref:System.Security.PermissionSet&gt;이 속성은 항상 읽기 전용 수 없으므로 <ph id="ph1">`false`</ph>.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Determines whether the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a subset of the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">결정 여부 현재 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 지정 된 하위 집합인 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.PermissionSet&gt; is a subset of the target &lt;xref:System.Security.PermissionSet&gt; if all demands that succeed for the &lt;xref:System.Security.PermissionSet&gt; also succeed for the target.</source>
          <target state="translated">A &lt;xref:System.Security.PermissionSet&gt;대상의 하위 집합인 &lt;xref:System.Security.PermissionSet&gt;경우 모든 요청이 있는 성공에 대 한는 &lt;xref:System.Security.PermissionSet&gt;도 대상에 대 한 성공.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">즉, 대상 적어도 하위 집합에 포함 된 사용 권한을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">하위 집합 관계에 대 한 테스트 설정 사용 권한.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This must be either a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 중 하나 여야 합니다는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a subset of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p3">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 현재 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 의 하위 집합인는 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p3">&lt;/code&gt;</ept> 매개 변수, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">안전한 스레드로부터 컬렉션 보장 되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.PermissionSet&gt; does not automatically handle thread safety, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;처리 하지 않는 자동으로 스레드로부터 안전 하므로이 속성은 항상 <ph id="ph1">`false`</ph>합니다.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 를 지 원하는 데 필요</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;효과적으로 구현 하는 모든 권한이 포함 된는 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;인터페이스.&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for any <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is not a subset of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">모든 &lt;xref:System.Security.PermissionSet.Demand*&gt;에 대 한 호출 코드를 통과 하는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 즉 하위 집합이 아니라 현재 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 실패.&lt;/xref:System.Security.PermissionSet.Demand*&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>PermitOnly is similar to &lt;xref:System.Security.PermissionSet.Deny%2A&gt;, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated">PermitOnly는 비슷합니다 &lt;xref:System.Security.PermissionSet.Deny%2A&gt;그렇지 않은 경우는 성공 시 작동이 실패 하도록 스택 워크 있는 상황에서,.&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference is that &lt;xref:System.Security.PermissionSet.Deny%2A&gt; specifies permissions that will cause the stack walk to fail, but PermitOnly specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">차이점은 &lt;xref:System.Security.PermissionSet.Deny%2A&gt;지정 스택을 사용 하면 사용 권한을 워크 실패 하지만 PermitOnly 스택 워크 실패 하지 않게 되는 유일한 권한을 지정 합니다.&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">코드 지정 된 리소스에만 액세스할 수 사용 될 수 있도록 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>PermitOnly is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">PermitOnly는 해당 권한을 요청할 수 없으므로 부여 되지 않은 사용 권한을 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if code lower on the call stack later calls &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission, a &lt;xref:System.Security.SecurityException&gt; is thrown when the stack walk reaches the code that tried to call PermitOnly.</source>
          <target state="translated">그러나 코드에 대 한 호출에 낮은 나중 스택 하는 경우 호출 &lt;xref:System.Security.PermissionSet.Demand%2A&gt;권한에 대해는 &lt;xref:System.Security.SecurityException&gt;스택 워크 PermitOnly을 호출 하려고 하는 코드에 도달 하면 throw 됩니다.&lt;/xref:System.Security.SecurityException&gt; &lt;/xref:System.Security.PermissionSet.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the code that called PermitOnly has not been granted the permission, even though it called PermitOnly for that permission.</source>
          <target state="translated">해당 권한이 PermitOnly 호출 했지만 PermitOnly를 호출 하는 코드에는 권한이 부여 되지 때문입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">집합에서 특정 유형의 사용 권한을 제거합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 제한 없음된 권한 집합에서 사용 권한을 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">사용 권한 집합은 사용 권한이 제거 하려고 하면 예외가 throw 되지 않습니다 후 무제한 상태로 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code attempts to remove the &lt;xref:System.Security.Permissions.FileIOPermission&gt; from the <ph id="ph1">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">다음 C# 코드를 제거 하려고 시도 &lt;xref:System.Security.Permissions.FileIOPermission&gt;에서 <ph id="ph1">`FullTrust`</ph> 사용 권한이 설정 되지만 사용 권한을 제거 되지 않습니다.&lt;/xref:System.Security.Permissions.FileIOPermission&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The type of permission to delete.</source>
          <target state="translated">삭제할 사용 권한의 형식입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">사용 권한 집합에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">집합에서 특정 유형의 사용 권한을 제거합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemovePermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt; method.</source>
          <target state="translated">RemovePermissionImpl 메서드는에 대 한 구현에서 &lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;메서드.&lt;/xref:System.Security.PermissionSet.RemovePermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 제한 없음된 권한 집합에서 사용 권한을 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">사용 권한 집합은 사용 권한이 제거 하려고 하면 예외가 throw 되지 않습니다 후 무제한 상태로 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The type of the permission to remove.</source>
          <target state="translated">제거할 사용 권한의 형식입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">사용 권한 집합에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Causes any previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">이전의 모든 &lt;xref:System.Security.CodeAccessPermission.Assert*&gt;제거 되 고 더 이상 적용 될 현재 프레임에 대 한.&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt; for the current frame, an &lt;xref:System.ExecutionEngineException&gt; is thrown.</source>
          <target state="translated">없는 경우 없는 &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;현재 프레임에 대 한는 &lt;xref:System.ExecutionEngineException&gt;throw 됩니다.&lt;/xref:System.ExecutionEngineException&gt; &lt;/xref:System.Security.CodeAccessPermission.Assert%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There is no previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame.</source>
          <target state="translated">인 &lt;xref:System.Security.CodeAccessPermission.Assert*&gt;현재 프레임에 대 한.&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">사용 권한을 설정 하는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 동일한 형식의 기존 사용 권한을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">이 메서드는 기존 권한에서 동일한 유형의 개체를 제거는 &lt;xref:System.Security.PermissionSet&gt;바꿉니다는 <ph id="ph1">`perm`</ph> 매개 변수.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">사용 권한을 구현 하는 경우 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;에 설정 된 한 &lt;xref:System.Security.PermissionSet&gt;즉 &lt;xref:System.Security.Permissions.PermissionState&gt;, 결과 &lt;xref:System.Security.PermissionSet&gt;더 이상 <ph id="ph1">`Unrestricted`</ph>.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">사용 권한 설정입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">사용 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">사용 권한을 설정 하는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 동일한 형식의 기존 사용 권한을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.SetPermission%2A&gt; method.</source>
          <target state="translated">SetPermissionImpl 메서드는에 대 한 구현에서 &lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;메서드.&lt;/xref:System.Security.PermissionSet.SetPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">이 메서드는 기존 권한에서 동일한 유형의 개체를 제거는 &lt;xref:System.Security.PermissionSet&gt;바꿉니다는 <ph id="ph1">`perm`</ph> 매개 변수.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">사용 권한을 구현 하는 경우 &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;에 설정 된 한 &lt;xref:System.Security.PermissionSet&gt;즉 &lt;xref:System.Security.Permissions.PermissionState&gt;, 결과 &lt;xref:System.Security.PermissionSet&gt;더 이상 <ph id="ph1">`Unrestricted`</ph>.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">사용 권한 설정입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">사용 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">메서드가 호출 되는 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">현재 컬렉션의 루트 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 를 지 원하는 데 필요</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The root object of the current collection.</source>
          <target state="translated">현재 컬렉션의 루트 개체입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">전체 개체 그래프가 deserialize 될 때 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
          <target state="translated">콜백을 시작한 개체입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">이 매개 변수의 기능은 현재 구현 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">문자열 표현을 반환 된 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string representation is useful in debugging to see the state of a &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">문자열 표현의 형식이 &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; 의 상태를 확인 하는 디버깅에 유용한</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 표현을 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">보안 개체 및 현재 상태에 대 한 XML 인코딩을 만듭니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">모든 상태 정보를 포함 하는 보안 개체의 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the union of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the specified <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 합한 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 와 지정 된 <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of a call to Union is a &lt;xref:System.Security.PermissionSet&gt; that represents all the operations represented by the current &lt;xref:System.Security.PermissionSet&gt; as well as all the operations represented by the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">Union에 대 한 호출의 결과 &lt;xref:System.Security.PermissionSet&gt;는 현재 &lt;xref:System.Security.PermissionSet&gt;에 지정 된 &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; 나타내는 모든 작업 뿐만 아니라&lt;/xref:System.Security.PermissionSet&gt; 나타내는 모든 작업을 나타내는&lt;/xref:System.Security.PermissionSet&gt; 는</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">집합 중 하나가 <ph id="ph1">`Unrestricted`</ph>의 union은 <ph id="ph2">`Unrestricted`</ph> 도 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The permission set to form the union with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재와 합 할 사용 권한 집합 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the union of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재의 합집합을 나타내는 새 사용 권한 집합 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 지정 된 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>