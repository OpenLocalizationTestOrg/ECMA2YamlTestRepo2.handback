<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4b1c0bbbb744ceae5dd3f655fe4d602efef4353</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.EncoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e1486b7bf441fe370ff183bb46b062985bebf3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dc68a64823c4f3c678fa1269c86c0de93e4e669</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.Text.EncoderFallbackException&gt; when an input character cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">Throw &lt;xref:System.Text.EncoderFallbackException&gt;때 입력된 문자로 변환할 수 없습니다 인코딩된 출력 바이트 시퀀스로.&lt;/xref:System.Text.EncoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">실패 하는 인코딩 또는 디코딩 작업에 대 한 일반적인 이유는 기본 인코딩 클래스는 문자가 고 해당 하는 바이트 시퀀스 간의 매핑을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt; method, which throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">입력된 문자를 출력 바이트 시퀀스로 변환할 수 없습니다, 경우 인코딩 작업 &lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt; &lt;xref:System.Text.EncoderFallbackException&gt;.&lt;/xref:System.Text.EncoderFallbackException&gt; throw는 메서드&lt;/xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt; 를 호출 하는</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt; class, which represents a data buffer used in an encoding operation, is the base class for the EncoderExceptionFallbackBuffer class.</source>
          <target state="translated">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;인코딩 작업에서 사용 되는 데이터 버퍼를 나타내는 클래스는 EncoderExceptionFallbackBuffer 클래스에 대 한 기본 클래스는&lt;/xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, instead of a data buffer, the EncoderExceptionFallbackBuffer class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
          <target state="translated">그러나 데이터 버퍼 대신 EncoderExceptionFallbackBuffer 클래스 인코딩 작업이 실패 하면 예외가 throw 되는 여기서 표준 동작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">실제 데이터 버퍼가 없습니다 있고, 이러한 버퍼를 처리 하도록 디자인 된 멤버 없는 중요 한 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">입력된 문자를 인코딩할 수 없는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
          <target state="translated">매개 변수는 변환할 수 없는 문자 값과 인덱스 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown character in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;및 &lt;xref:System.Text.Encoder.Convert%2A&gt;메서드는 입력에 알 수 없는 문자가 발생 한 경우 대체 (fallback)를 호출 합니다.&lt;/xref:System.Text.Encoder.Convert%2A&gt; &lt;/xref:System.Text.Encoding.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, Fallback always throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">에 대 한 응답 대체 (fallback)는 항상 throw &lt;xref:System.Text.EncoderFallbackException&gt;.&lt;/xref:System.Text.EncoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An input character.</source>
          <target state="translated">입력된 문자입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">입력된 버퍼에 있는 문자의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">없음.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph>인코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> parameters.</source>
          <target state="translated">이 메서드는 항상의 값을 보고 하는 예외 throw 된 <ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> 및 <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">입력된 문자를 인코딩할 수 없는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
          <target state="translated">매개 변수는 입력에 서로게이트 쌍의 값과 인덱스 위치를 지정 하 고 명목 반환 값은 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter a surrogate pair in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;및 &lt;xref:System.Text.Encoder.Convert%2A&gt;메서드는 입력에는 서로게이트 쌍을 발견할 경우 대체 (fallback)를 호출 합니다.&lt;/xref:System.Text.Encoder.Convert%2A&gt; &lt;/xref:System.Text.Encoding.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, Fallback always throws an exception.</source>
          <target state="translated">에 대 한 응답 대체 (fallback)는 항상 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">입력된 쌍의 상위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">입력된 쌍의 low surrogate 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">입력된 버퍼에서 서로게이트 쌍의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">없음.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The character represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> cannot be encoded.</source>
          <target state="translated">문자 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">charUnknownHigh</ph> <ept id="p1">&lt;/code&gt;</ept> 및 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept> 인코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> is not between U+D800 and U+DBFF, inclusive, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is not between U+DC00 and U+DFFF, inclusive.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept>U + d&amp;800;부터 U + DBFF 까지의 사이의 않습니다 또는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept> U + DC00 및 U + DFFF (포함) 사이 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception fallback buffer.</source>
          <target state="translated">예외 대체 (fallback) 버퍼에서 다음 문자를 검색합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.</source>
          <target state="translated">때문에 &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 GetNextChar 메서드 항상 유니코드 NULL 문자를 반환 합니다.&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
          <target state="translated">반환 값은 항상 NULL 유니코드 문자 (U +&amp;0000;)입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt; method to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">다음 호출이 &lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;메서드를 현재 위치 앞 예외 데이터 버퍼 문자 위치에 액세스 합니다.&lt;/xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the MovePrevious method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">때문에 &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 MovePrevious 메서드는 항상 반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The return value is always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 값은 항상 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that remain to be processed.</source>
          <target state="translated">현재에서 문자 수를 가져옵니다 <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 계속 처리 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the Remaining property always returns zero.</source>
          <target state="translated">때문에 &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 남은 속성은 항상&amp;0;을 반환 합니다.&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
          <target state="translated">반환 값은 항상&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>