<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54440f581605c9fb1e232dedf7dd8b91063ad6ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.ConfigurationCollectionAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a4f1b213a414e49b6e2e22365db613551edb9bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0e0f8800bf564b58f6fb56dbb8983bf625b42b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Declaratively instructs the .NET Framework to create an instance of a configuration element collection.</source>
          <target state="translated">.NET Framework 구성 요소 컬렉션의 인스턴스를 만들고를 선언적으로 지시 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the ConfigurationCollectionAttribute attribute to decorate a &lt;xref:System.Configuration.ConfigurationElementCollection&gt; element.</source>
          <target state="translated">ConfigurationCollectionAttribute 특성을 사용 하 여 데코레이팅하는 &lt;xref:System.Configuration.ConfigurationElementCollection&gt;요소.&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom &lt;xref:System.Configuration.ConfigurationElement&gt; values.</source>
          <target state="translated">이렇게 하면.NET Framework 컬렉션의 인스턴스를 만들고 사용자 지정을 사용 하 여 초기화 하는 데 &lt;xref:System.Configuration.ConfigurationElement&gt;값.&lt;/xref:System.Configuration.ConfigurationElement&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The simplest way to create a custom configuration element is to use the attributed (declarative) model.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 특성 사용된 (선언적) 모델을 사용 하는 가장 간단한 방법은 사용자 지정 구성 요소를 만들 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You declare the elements and decorate them with the ConfigurationCollectionAttribute attribute.</source>
          <target state="translated">요소를 선언 하 고 해당 ConfigurationCollectionAttribute 특성으로 데코레이팅 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related &lt;xref:System.Configuration.ConfigurationElementCollection&gt; instance.</source>
          <target state="translated">이 특성으로 표시 된 각 요소에 대 한.NET Framework 리플렉션을 사용 하 여 데코레이팅하 매개 변수를 읽고 만들 관련 &lt;xref:System.Configuration.ConfigurationElementCollection&gt;인스턴스.&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the programmatic model.</source>
          <target state="translated">프로그래밍 모델을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case it is your responsibility to declare the custom public collection but also to override the &lt;xref:System.Configuration.ConfigurationElementCollection&gt; member and return the properties collection.</source>
          <target state="translated">사용자 지정 공용 컬렉션을 선언할 수 있지만 재정의할 수는 작업은이 경우에 &lt;xref:System.Configuration.ConfigurationElementCollection&gt;멤버 및 속성 컬렉션을 반환 합니다.&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements.</source>
          <target state="translated">.NET Framework 구성 시스템에는 사용자 지정 구성 요소를 만드는 동안 사용할 수 있는 특성 유형을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two kinds of attributes:      -   The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties.</source>
          <target state="translated">특성의 두 종류가:-.NET Framework를 사용자 지정 구성 요소 속성을 만들 방법을 지시 하는 특성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These types include:          -   ConfigurationCollectionAttribute          -   &lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;      -   The attributes that instruct the .NET Framework how to validate the custom configuration element properties.</source>
          <target state="translated">이러한 형식에 포함:-ConfigurationCollectionAttribute- &lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;-.NET Framework를 사용자 지정 구성 요소 속성의 유효성을 검사 하는 방법을 지시 하는 특성.&lt;/xref:System.Configuration.ConfigurationPropertyAttribute&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These types include:          -   &lt;xref:System.Configuration.IntegerValidatorAttribute&gt;          -   &lt;xref:System.Configuration.LongValidatorAttribute&gt;          -   &lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.StringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.TimeSpanValidatorAttribute&gt;</source>
          <target state="translated">These types include:          -   &lt;xref:System.Configuration.IntegerValidatorAttribute&gt;          -   &lt;xref:System.Configuration.LongValidatorAttribute&gt;          -   &lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.StringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.TimeSpanValidatorAttribute&gt;&lt;/xref:System.Configuration.TimeSpanValidatorAttribute&gt;&lt;/xref:System.Configuration.StringValidatorAttribute&gt;&lt;/xref:System.Configuration.RegexStringValidatorAttribute&gt;&lt;/xref:System.Configuration.LongValidatorAttribute&gt;&lt;/xref:System.Configuration.IntegerValidatorAttribute&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use this constructor to tell the .NET Framework the custom type of the property collection to be created.</source>
          <target state="translated">만들 속성 컬렉션의 사용자 지정 형식을.NET Framework를이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The type of the property collection to create.</source>
          <target state="translated">만들 속성 컬렉션의 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;itemType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;itemType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;add&amp;gt;" name="&amp;lt;add&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">이름을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;add&amp;gt;" name="&amp;lt;add&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddItemName property allows you to assign a different name to the configuration element.</source>
          <target state="translated">AddItemName 속성을 사용 하면 구성 요소에 다른 이름을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could use <ph id="ph1">`addUrl`</ph> instead of "add".</source>
          <target state="translated">예를 들어, 사용할 수 <ph id="ph1">`addUrl`</ph> "추가" 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name that substitutes the standard name "add" for the configuration item.</source>
          <target state="translated">표준 이름을 대체 하는 이름 "추가" 구성 항목에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the name for the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;clear&amp;gt;" name="&amp;lt;clear&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">이름을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;clear&amp;gt;" name="&amp;lt;clear&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClearItemsName property allows you to assign a different name to the <ph id="ph1">`&lt;clear&gt;`</ph> configuration element.</source>
          <target state="translated">ClearItemsName 속성에 다른 이름을 지정할 수 있습니다는 <ph id="ph1">`&lt;clear&gt;`</ph> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could use <ph id="ph1">`clearUrls`</ph> instead of "clear".</source>
          <target state="translated">예를 들어, 사용할 수 <ph id="ph1">`clearUrls`</ph> "지우기" 대신 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name that replaces the standard name "clear" for the configuration item.</source>
          <target state="translated">표준 이름을 대체 하는 이름 "지우기" 구성 항목에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">형식을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">종류는 <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the type of the collection element.</source>
          <target state="translated">컬렉션 요소의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ItemType property is used by reflection to get the configuration element type.</source>
          <target state="translated">ItemType 속성은 구성 요소 형식을 가져오기 위해 리플렉션에 의해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type of the collection element.</source>
          <target state="translated">컬렉션 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name for the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;remove&amp;gt;" name="&amp;lt;remove&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">이름을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;remove&amp;gt;" name="&amp;lt;remove&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveItemName property allows you to assign a different name to the <ph id="ph1">`&lt;remove&gt;`</ph> configuration element.</source>
          <target state="translated">RemoveItemName 속성에 다른 이름을 지정할 수 있습니다는 <ph id="ph1">`&lt;remove&gt;`</ph> 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could use <ph id="ph1">`removeUrl`</ph> instead of "remove".</source>
          <target state="translated">예를 들어, 사용할 수 <ph id="ph1">`removeUrl`</ph> "제거" 대신 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The name that replaces the standard name "remove" for the configuration element.</source>
          <target state="translated">표준 이름을 대체 하는 이름 "제거" 구성 요소에 대 한 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>