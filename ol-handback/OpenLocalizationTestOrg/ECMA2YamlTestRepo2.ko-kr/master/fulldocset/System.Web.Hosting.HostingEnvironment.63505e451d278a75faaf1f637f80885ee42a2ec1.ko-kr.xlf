<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1b8c933c88737a5e36345613dd989b2325d7f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Hosting.HostingEnvironment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">159701e3a21c369a79dc38be412ad9d62961beb2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc11f92538ca1d48ba4ed91ab7bc4ee674c5793c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides application-management functions and application services to a managed application within its application domain.</source>
          <target state="translated">응용 프로그램 관리 함수와 응용 프로그램 서비스는 응용 프로그램 도메인 내에서 관리 되는 응용 프로그램에 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each managed application domain contains a static instance of the HostingEnvironment class, which provides access to application-management functions and application services.</source>
          <target state="translated">각 관리 되는 응용 프로그램 도메인에는 응용 프로그램 관리 기능 및 응용 프로그램 서비스에 대 한 액세스를 제공 하는 HostingEnvironment 클래스의 정적 인스턴스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostingEnvironment constructor initializes the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object.</source>
          <target state="translated">HostingEnvironment 생성자 초기화는 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;개체입니다.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostingEnvironment constructor is called only once by the application's &lt;xref:System.Web.Hosting.ApplicationManager&gt; object.</source>
          <target state="translated">HostingEnvironment 생성자를 응용 프로그램의 한 번만 호출 &lt;xref:System.Web.Hosting.ApplicationManager&gt;개체입니다.&lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the HostingEnvironment constructor more than once will cause an &lt;xref:System.InvalidOperationException&gt; exception to be thrown.</source>
          <target state="translated">HostingEnvironment 생성자를 두 번 이상 호출 하면 프로그램 &lt;xref:System.InvalidOperationException&gt;예외를 throw 합니다.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The HostingEnvironment constructor is called more than once.</source>
          <target state="translated">HostingEnvironment 생성자는 두 번 이상 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 속성은 지원는 <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object that contains information about the application host.</source>
          <target state="translated">응용 프로그램 호스트에 대 한 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the unique identifier of the application.</source>
          <target state="translated">응용 프로그램의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application must be running with &lt;xref:System.Web.AspNetHostingPermissionLevel&gt; set to high trust to access the ApplicationID property.</source>
          <target state="translated">응용 프로그램을 실행 해야 &lt;xref:System.Web.AspNetHostingPermissionLevel&gt;응용 프로그램 Id 속성에 액세스 하려면 높은 신뢰 수준으로 설정 합니다.&lt;/xref:System.Web.AspNetHostingPermissionLevel&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The unique identifier of the application.</source>
          <target state="translated">응용 프로그램의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the physical path on disk to the application's directory.</source>
          <target state="translated">응용 프로그램의 디렉터리를 디스크 상의 실제 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The physical path on disk to the application's directory.</source>
          <target state="translated">응용 프로그램의 디렉터리를 디스크 상의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the root virtual path of the application.</source>
          <target state="translated">응용 프로그램의 루트 가상 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplicationVirtualPath property always returns "<ph id="ph1">`/"`</ph> as the first character of the returned value.</source>
          <target state="translated">ApplicationVirtualPath 속성은 항상 반환 "<ph id="ph1">`/"`</ph> 반환된 된 값의 첫 번째 문자로 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application is located in the root of the website, the return value is just "<ph id="ph1">`/"`</ph>.</source>
          <target state="translated">응용 프로그램, 웹 사이트의 루트에 있는 경우 반환 값은 "<ph id="ph1">`/"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The root virtual path of the application with no trailing slash (/).</source>
          <target state="translated">없는 뒤에 슬래시 (/)가 응용 프로그램의 루트 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the current application.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 응용 프로그램에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">현재 <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Reduces the count of busy objects in the hosted environment by one.</source>
          <target state="translated">호스팅된 환경에서 사용 중인 개체 수를 하나씩 줄입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a busy registered object finishes its work, it calls the DecrementBusyCount method to signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it has completed processing and to reduce the count of busy objects by one.</source>
          <target state="translated">등록 된 개체가 작업을 마치면 하는 경우 신호를 보내 DecrementBusyCount 메서드 호출는 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;처리가 완료 되었음을 개체 및 하나에서 사용 중인 개체 수를 줄일 수 있습니다.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">사용 중인 개체 수가&amp;0; 보다 큰 경우 보류 중인 요청이 없는 경우에 호스팅 응용 프로그램 시간 초과 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be a call to the DecrementBusyCount method for each call to the &lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt; method.</source>
          <target state="translated">DecrementBusyCount 메서드 호출에 대해 각각에 대 한 호출 이어야 합니다는 &lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;메서드.&lt;/xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the application identity.</source>
          <target state="translated">응용 프로그램 id가 나타내는 사용자를 가장 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;가장 하기 전의 Windows 사용자를 나타내는 개체입니다; 사용 하면 원래 사용자의 컨텍스트로 되돌릴 수이 개체가 될 수 있습니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">프로세스를 가장할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the specified user token.</source>
          <target state="translated">지정 된 사용자 토큰이 나타내는 사용자를 가장 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows 계정 토큰 핸들입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;가장 하기 전의 Windows 사용자를 나타내는 개체입니다; 사용 하면 원래 사용자의 컨텍스트로 되돌릴 수이 개체가 될 수 있습니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">프로세스를 가장할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</source>
          <target state="translated">지정된 된 가상 경로 또는 지정 된 사용자 토큰에 대 한 구성 설정에 의해 지정 된 사용자를 가장 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Impersonate method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</source>
          <target state="translated">Impersonate 메서드는 지정된 된 가상 경로 영향을 주는 구성 설정의 모든 요소를 적용 한 결과로 생성 된 사용자를 가장 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`identity`</ph> element is not specified for the virtual path, the Impersonate method impersonates the specified Windows account.</source>
          <target state="translated">경우는 <ph id="ph1">`identity`</ph> 요소가 지정 되지 않은 가상 경로 대 한 Impersonate 메서드는 지정 된 Windows 계정을 가장 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows 계정 토큰 핸들입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The path to the requested resource.</source>
          <target state="translated">요청된 된 리소스에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;가장 하기 전의 Windows 사용자를 나타내는 개체입니다; 사용 하면 원래 사용자의 컨텍스트로 되돌릴 수이 개체가 될 수 있습니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">프로세스를 가장할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</source>
          <target state="translated">호스팅 환경에 대 한 액세스는 ASP.NET 빌드 시스템에 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is the ASP.NET hosted application domain used in <bpt id="p2">&lt;xref uid="langword_csharp_ClientBuildManager" name="ClientBuildManager" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> scenarios; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>응용 프로그램 도메인은 호스팅되는 ASP.NET 응용 프로그램 도메인에서 사용 되는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_ClientBuildManager" name="ClientBuildManager" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 시나리오, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Increases the count of busy objects in the hosted environment by one.</source>
          <target state="translated">호스팅된 환경에서 사용 중인 개체 수를&amp;1; 씩 증가 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registered objects signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it is running and to increase the count of busy objects by one.</source>
          <target state="translated">등록 된 개체 신호는 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;실행 중인 개체를 하나씩 사용 중인 개체 수를 늘리십시오.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">사용 중인 개체 수가&amp;0; 보다 큰 경우 보류 중인 요청이 없는 경우에 호스팅 응용 프로그램 시간 초과 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be a call to the &lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt; method for each call to the IncrementBusyCount method.</source>
          <target state="translated">에 대 한 호출 이어야 합니다는 &lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;IncrementBusyCount 메서드를 호출할 때마다.&lt;/xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets any exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">초기화 하는 동안 throw 된 예외를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">초기화 하는 동안 throw 된 예외는 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If no exception was thrown, returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">예외가 throw 되었으면 반환 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gives the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">제공 된 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 임대가 만들어지는 것을 방지 하 여 무한 수명을 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">이 메서드 &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;기본 클래스에서 메서드&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; 를 재정의합니다</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>It always returns <ph id="ph1">`null`</ph> and prevents a lease from being created that would limit the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object's lifetime.</source>
          <target state="translated">액세스할 수 있으려면 <ph id="ph1">`null`</ph> 제한 임대가 만들어지지 않도록 방지 하 고는 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;개체의 수명.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Starts shutting down the web application associated with this host and removes registered objects from the system.</source>
          <target state="translated">이 호스트와 연결 된 웹 응용 프로그램 종료를 시작 하 고 시스템에서 등록 된 개체를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the InitiateShutdown method to stop a web application domain and remove any objects registered with the &lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt; method.</source>
          <target state="translated">InitiateShutdown 메서드를 사용 하 여 웹 응용 프로그램 도메인을 중지 하 고 등록 된 모든 개체를 제거는 &lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;메서드.&lt;/xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately, before the shutdown is complete.</source>
          <target state="translated">종료가 완료 되기 전에이 메서드를 즉시 반환 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called on each registered object with the passed parameter set to <ph id="ph1">`false`</ph> to allow each registered object to shut down asynchronously.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;전달 된 매개 변수를 설정 여 등록 된 각 개체에 대해 메서드를 호출 <ph id="ph1">`false`</ph> 등록 된 각 개체를 비동기적으로 종료할 수 있도록 합니다.&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>After waiting for the amount of time specified in the <ph id="ph1">`shutdownTimeout`</ph> attribute of the  configuration element, the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called again with the passed parameter set to <ph id="ph2">`true`</ph> for each registered object remaining.</source>
          <target state="translated">에 지정 된 시간 동안 대기한 후의 <ph id="ph1">`shutdownTimeout`</ph> 구성 요소의 특성은 &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;메서드는 다시 전달 된 매개 변수 설정 <ph id="ph2">`true`</ph> 남아 있는 등록 된 각 개체에 대 한.&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once all registered objects have finished shutting down, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; objects shuts down the application domain.</source>
          <target state="translated">등록 된 모든 개체가 종료 되 고 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;개체 응용 프로그램 도메인을 종료 합니다.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a value that indicats whether the current application is in a development environment.</source>
          <target state="translated">현재 응용 프로그램 개발 환경에 있는지 여부를 값 해당가 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application is in a development environment; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>응용 프로그램이 있는 경우 개발 환경입니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current application domain is being hosted by an <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재 응용 프로그램 도메인에서 호스팅되는지 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is hosted by an <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>응용 프로그램 도메인에서 호스트 되는 경우는 <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체; 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Maps a virtual path to a physical path on the server.</source>
          <target state="translated">가상 경로 서버의 실제 경로에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The virtual path (absolute or relative).</source>
          <target state="translated">가상 경로 (절대 또는 상대)입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The physical path on the server specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">지정한 서버 상의 실제 경로 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent requests per CPU.</source>
          <target state="translated">CPU 당 최대 동시 요청 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The maximum concurrent requests per CPU.</source>
          <target state="translated">CPU 당 최대 동시 요청 수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent threads per CPU.</source>
          <target state="translated">CPU 당 최대 동시 스레드 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The maximum concurrent threads per CPU.</source>
          <target state="translated">CPU 당 최대 동시 스레드 수입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 메서드는 지원의 <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원 됨]       모든 요청과 무관 백그라운드에서 실행할 수 있는 작업을 예약 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">일반 스레드 풀 작업 항목에서 달리 ASP.NET의 추적할 수 상의 작업 하 고이 API를 통해 등록 된 항목, 현재 실행 ASP.NET 런타임이 종료 이러한 작업 항목 될 때까지 실행이 완료 되는 AppDomain 지연 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">이 API는 ASP.NET 관리 되는 AppDomain 외부에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">제공 된 CancellationToken 신호를 받는 응용 프로그램이 종료 될 때입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the callback returns.</source>
          <target state="translated">QueueBackgroundWorkItem 작업 반환 콜백;를 사용합니다. 작업 항목으로 간주 됩니다 콜백이 반환 될 때 완료 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
          <target state="translated">실행의 단위입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원 됨]       모든 요청과 무관 백그라운드에서 실행할 수 있는 작업을 예약 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">일반 스레드 풀 작업 항목에서 달리 ASP.NET의 추적할 수 상의 작업 하 고이 API를 통해 등록 된 항목, 현재 실행 ASP.NET 런타임이 종료 이러한 작업 항목 될 때까지 실행이 완료 되는 AppDomain 지연 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">이 API는 ASP.NET 관리 되는 AppDomain 외부에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">제공 된 CancellationToken 신호를 받는 응용 프로그램이 종료 될 때입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</source>
          <target state="translated">QueueBackgroundWorkItem 작업 반환 콜백;를 사용합니다. 작업 항목이 반환된 된 작업 터미널 상태로 전환 될 때 완료 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
          <target state="translated">실행의 단위입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Places an object in the list of registered objects for the application.</source>
          <target state="translated">응용 프로그램에 대 한 등록 된 개체 목록에 개체를 배치 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager&gt;클래스를 만들고, 관리, 현재 응용 프로그램 도메인 내에서 개체를 삭제 합니다. 현재 응용 프로그램 도메인 외부에 있는 메서드를 사용 하면.&lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterObject method is used to register previously created objects with the hosting environment.</source>
          <target state="translated">RegisterObject 메서드는 호스팅 환경에 이전에 만든된 개체를 등록에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects registered with the RegisterObject method must implement the &lt;xref:System.Web.Hosting.IRegisteredObject&gt; interface.</source>
          <target state="translated">개체에 등록 된 RegisterObject 메서드를 구현 해야 합니다는 &lt;xref:System.Web.Hosting.IRegisteredObject&gt;인터페이스.&lt;/xref:System.Web.Hosting.IRegisteredObject&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use a registered object, follow these steps:      1.</source>
          <target state="translated">등록된 된 개체를 사용 하려면 다음이 단계를 수행 합니다. 1.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new instance of your registered object by calling the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">호출 하 여 등록 된 개체의 새 인스턴스를 만들고는 &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call a type-specific method to initialize your new object.</source>
          <target state="translated">새 개체를 초기화 하는 형식별 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the initialization method, call the RegisterObject method to add the object to the list of registered objects.</source>
          <target state="translated">초기화 메서드를 등록 된 개체의 목록에 개체를 추가 하려면 RegisterObject 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt; method to return the registered object when required.</source>
          <target state="translated">호출 된 &lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt;필요할 때 등록된 된 개체를 반환 하는 메서드.&lt;/xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you wish to stop your object, call the &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">개체를 중지 하려는 경우 호출 된 &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method in turn calls the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;메서드 호출의 &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; &lt;/xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method, have your object call the &lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt; method.</source>
          <target state="translated">에 &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;메서드, 개체 호출는 &lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;메서드.&lt;/xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt; &lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">등록할 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Registers a new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the ASP.NET compilation system.</source>
          <target state="translated">새 등록 <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ASP.NET 컴파일 시스템을 사용 하 여 인스턴스.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterVirtualPathProvider method adds the specified &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance to the application's list of virtual-path providers.</source>
          <target state="translated">지정 된이 RegisterVirtualPathProvider 메서드 추가 &lt;xref:System.Web.Hosting.VirtualPathProvider&gt;가상 경로 공급자의 인스턴스를 응용 프로그램의 목록.&lt;/xref:System.Web.Hosting.VirtualPathProvider&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; class overview.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.Web.Hosting.VirtualPathProvider&gt;클래스 개요.&lt;/xref:System.Web.Hosting.VirtualPathProvider&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to add to the compilation system.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컴파일 시스템에 추가할 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture specified in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에 지정 된 culture에 현재 스레드를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCultures method sets the current thread to the culture specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> element in the application's configuration file.</source>
          <target state="translated">에 지정 된 culture에 현재 스레드를 설정 하는 SetCultures 메서드는 <bpt id="p1">[</bpt>세계화 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> 응용 프로그램의 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;변경 전의 문화권을 나타내는 개체입니다; 사용 하면 이전 문화권으로 되돌릴 수이 개체가 될 수 있습니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture of the specified virtual path.</source>
          <target state="translated">현재 스레드의 지정 된 가상 경로의 문화권으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCultures method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</source>
          <target state="translated">SetCultures 메서드는 지정된 된 가상 경로 영향을 주는 구성 파일의 모든 요소를 적용 한 결과로 생성 된 culture에 현재 스레드를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The path that contains the culture information.</source>
          <target state="translated">문화권 정보를 포함 하는 경로입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;변경 전의 문화권을 나타내는 개체입니다; 사용 하면 이전 문화권으로 되돌릴 수이 개체가 될 수 있습니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns an enumerated value that indicates why the application terminated.</source>
          <target state="translated">응용 프로그램이 종료 된 이유를 나타내는 열거형된 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.ApplicationShutdownReason"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Web.ApplicationShutdownReason"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the name of the site.</source>
          <target state="translated">사이트의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the site.</source>
          <target state="translated">사이트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 only]       Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</source>
          <target state="translated">[.NET Framework 4.5.1의만 지원 됨]       발생 시기는 작업자 프로세스 또는이 호스트와 연결 된 응용 프로그램 풀은 새 요청 및 종료 결국 됩니다에 대 한 수신을 중지 했습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</source>
          <target state="translated">응용 프로그램 풀과 연결 된 작업자 프로세스 IIS에 의해 종료 되는, 예를 들어 응용 프로그램 풀이 예약 된 재활용 간격을 IIS에 도달 하는 경우 ASP.NET 런타임에 알립니다는 응용 프로그램을 종료 하 고 작업자 프로세스 응용 프로그램 풀에 대 한 새 요청을 수신 대기를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that use long-running requests, for example <bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> applications, can listen for the StopListening event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</source>
          <target state="translated">예를 들어 장기 실행 요청을 사용 하는 응용 프로그램 <bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> 응용 프로그램 수 StopListening 이벤트에 대 한 수신 및 IIS가 응용 프로그램 풀과 연결 된 작업자 프로세스의 종료를 시작한 경우 장기 실행 작업을 정상적으로 종료 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!WARNING]</ph> &gt;  There are several design considerations that a developer must consider when implementing the StopListening event:   &gt;    &gt;  1.</source>
          <target state="translated">&gt; <ph id="ph1">[!WARNING]</ph> &gt;는 개발자 StopListening 이벤트를 구현할 때 고려해 야 하는 몇 가지 디자인 고려 사항: &gt;&gt; 1입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StopListening event is only available for applications that are configured to use the IIS integrated pipeline.</source>
          <target state="translated">IIS 통합된 파이프라인을 사용 하도록 구성 된 응용 프로그램에 사용할 수만 StopListening 이벤트가입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 2.</source>
          <target state="translated">&gt; 2.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers must not throw errors from their StopListening implementations; throwing errors will have unpredictable results.</source>
          <target state="translated">개발자가 자신의 StopListening 구현의 오류를 throw 해서는 안 오류를 throw 하면 예기치 않은 결과 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 3.</source>
          <target state="translated">&gt; 3.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a StopListening event once it has been implemented by a developer.</source>
          <target state="translated">ASP.NET에서 작업의 동시 특성상 보장이 없습니다 ASP.NET 개발자가 구현 되 면 StopListening 이벤트를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 4.</source>
          <target state="translated">&gt; 4.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StopListening event can execute concurrently with other &lt;xref:System.Web.Hosting.IRegisteredObject&gt; notifications.</source>
          <target state="translated">StopListening 이벤트 다른 동시에 실행할 수 &lt;xref:System.Web.Hosting.IRegisteredObject&gt;알림을.&lt;/xref:System.Web.Hosting.IRegisteredObject&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 5.</source>
          <target state="translated">&gt; 5.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers need to be aware that ASP.NET may shut down the application domain while their StopListening event is executing and design their implementations to handle that possibility.</source>
          <target state="translated">개발자는 ASP.NET 해당 StopListening 이벤트 실행 하는 동안 응용 프로그램 도메인을 종료 하 고이 가능성을 처리 하 고 구현을 디자인 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 6.</source>
          <target state="translated">&gt; 6.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>StopListening event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</source>
          <target state="translated">StopListening 이벤트 처리기를 차단 해야 합니다. 구현은 차단 됩니다. 교착 상태 및 오류 급증 시 보호 간격에 도달할 때 IIS 작업자 프로세스를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes an object from the list of registered objects for the application.</source>
          <target state="translated">응용 프로그램에 대 한 등록 된 개체 목록에서 개체를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager&gt;클래스를 만들고, 관리, 현재 응용 프로그램 도메인 내에서 개체를 삭제 합니다. 현재 응용 프로그램 도메인 외부에 있는 메서드를 사용 하면.&lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnregisterObject method is used to remove previously registered objects from the hosting environment.</source>
          <target state="translated">호스팅 환경에서 이전에 등록 된 개체를 제거 하려면 UnregisterObject 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The object to remove.</source>
          <target state="translated">제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the virtual path provider for this application.</source>
          <target state="translated">이 응용 프로그램에 대 한 가상 경로 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>When more than one &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance is registered, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object manages the call chain.</source>
          <target state="translated">둘 이상의 &lt;xref:System.Web.Hosting.VirtualPathProvider&gt;인스턴스가 등록 되는 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;개체 호출 체인을 관리 합니다.&lt;/xref:System.Web.Hosting.HostingEnvironment&gt; &lt;/xref:System.Web.Hosting.VirtualPathProvider&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot control the order in which virtual path providers are called.</source>
          <target state="translated">가상 경로 공급자 호출 되는 순서를 제어할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for this application.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 응용 프로그램에 대 한 인스턴스.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>