<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c55270081c089c98b6121c9a2a94d27692659a38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.IPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a0cc463801d5852e7e56b4b0003d1783984b75d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6118a9a0b9036c6d7344acc3059c1906bd3e1aa4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods implemented by permission types.</source>
          <target state="translated">사용 권한 유형에 의해 구현 된 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</source>
          <target state="translated">공용 언어 런타임에서 사용 권한은 지정 된 리소스에 대 한 보안을 설정할 수 있는 작업 집합을 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</source>
          <target state="translated">작업 또는 보안 제어를 적용 되는 액세스 권한 개체 설명 액세스 또는 작업을 수행 하려면 오른쪽에는 표시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Permissions are used by both application code and the .NET Framework security system in the following ways.</source>
          <target state="translated">사용 권한은 다음과 같은 방법으로 응용 프로그램 코드와.NET Framework 보안 시스템에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Code requests the permissions it needs in order to run.</source>
          <target state="translated">코드를 실행 하는 데 필요한 권한을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The security system policy grants permissions to code in order for it to run.</source>
          <target state="translated">-보안 시스템 정책을 실행 하기 위해에서 코드에 권한을 부여 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Code demands that calling code has a permission.</source>
          <target state="translated">-코드 호출 코드에는 권한이 요청 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Code overrides the security stack using assert/deny/permit-only.</source>
          <target state="translated">코드 보안 스택 assert/거부/허용 전용을 사용 하 여 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you write a new permission, you must implement this interface in your class.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 새 사용 권한을 작성 하는 경우 클래스에서이 인터페이스를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A permission can be accessed by multiple threads.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 권한을 여러 스레드에서 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implementing this interface, you must guarantee that the &lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;, &lt;xref:System.Security.IPermission.Intersect%2A&gt;, &lt;xref:System.Security.IPermission.Union%2A&gt;, and &lt;xref:System.Security.IPermission.Copy%2A&gt; method implementations are thread safe.</source>
          <target state="translated">이 인터페이스를 구현 하도록 보장 해야 하는 &lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;, &lt;xref:System.Security.IPermission.Intersect%2A&gt;, &lt;xref:System.Security.IPermission.Union%2A&gt;, 및 &lt;xref:System.Security.IPermission.Copy%2A&gt;메서드 구현을 스레드로부터 안전 합니다.&lt;/xref:System.Security.IPermission.Copy%2A&gt; &lt;/xref:System.Security.IPermission.Union%2A&gt; &lt;/xref:System.Security.IPermission.Intersect%2A&gt; &lt;/xref:System.Security.IPermission.IsSubsetOf%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">만들고 현재 사용 권한의 동일한 복사본을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">사용 권한의 복사본은 원래 사용 권한과 리소스에 동일한 액세스를 권한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A copy of the current permission.</source>
          <target state="translated">현재 사용 권한의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Throws a &lt;xref:System.Security.SecurityException&gt; at run time if the security requirement is not met.</source>
          <target state="translated">&lt;xref:System.Security.SecurityException&gt;보안 요구 사항이 충족 되지 경우 런타임 시&lt;/xref:System.Security.SecurityException&gt; 발생</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">이 메서드는 일반적으로 호출자에 게 리소스에 액세스할 수 있는 권한이 있는지 확인 하려면 보안 라이브러리에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a file class in a secure class library calls &lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt; for the necessary &lt;xref:System.Security.Permissions.FileIOPermission&gt; before performing a file operation requested by the caller.</source>
          <target state="translated">예를 들어 보안 클래스 라이브러리의 파일 클래스 호출 &lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;필요한 &lt;xref:System.Security.Permissions.FileIOPermission&gt;는 호출자가 요청한 파일 작업을 수행 하기 전에.&lt;/xref:System.Security.Permissions.FileIOPermission&gt; &lt;/xref:System.Security.CodeAccessPermission.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</source>
          <target state="translated">전체 스택 워크를 수행 하 여 보안 기준을 충족 하는이 인터페이스 메서드를 구현 하는 클래스의 대부분을 하지만 반드시 스택 워크가 수행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of an implementation that does not perform a stack walk is &lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">스택 워크를 수행 하지 않는 구현을 예로 &lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;.&lt;/xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">스택 워크가 수행 되 면이 메서드를 호출 하는 코드의 사용 권한은 검사 하지 않습니다. 검사 해당 코드의 직접 실행 호출자에서 시작 되 고 스택 위로 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt; succeeds only if no &lt;xref:System.Security.SecurityException&gt; is raised.</source>
          <target state="translated">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;없는 경우에 성공 &lt;xref:System.Security.SecurityException&gt;발생 합니다.&lt;/xref:System.Security.SecurityException&gt;&lt;/xref:System.Security.CodeAccessPermission.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">만들고 있는 현재 사용 권한 및 지정한 사용 권한의 공통 사용 권한을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">두 사용 권한의 공통 사항에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">원래 사용 권한을 모두 전달 하는 요구만 교집합에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statements are required to be true for all implementations of the Intersect method.</source>
          <target state="translated">다음 문은 모든 Intersect 메서드 구현에는 적용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent &lt;xref:System.Security.IPermission&gt; object references that are not <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>및 <ph id="ph2">`Y`</ph> 나타내는 &lt;xref:System.Security.IPermission&gt;되지 않는 개체 참조 <ph id="ph3">`null`</ph>.&lt;/xref:System.Security.IPermission&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`X`</ph>) returns a value equal to <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`X`</ph>) 같은 값을 반환 <ph id="ph3">`X`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.Intersect(<ph id="ph4">`X`</ph>).</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`Y`</ph>)과 동일한 값을 반환 <ph id="ph3">`Y`</ph>합니다. Intersect (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`null`</ph>) returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`null`</ph>) 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">현재 사용 권한 집합과 교차 하는 사용 권한입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">현재 사용 권한과 동일한 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
          <target state="translated">현재 사용 권한 및 지정한 사용 권한의의 교차 부분을 나타내는 새 사용 권한.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This new permission is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">이 새로운 사용 권한은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 교집합이 비어 있는 경우.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not an instance of the same class as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 않습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 현재 사용 권한과 동일한 클래스의 인스턴스가 아닙니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">현재 사용 권한이 지정된 된 사용 권한의 하위 집합 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">권한 하위 집합 관계에 대해 테스트 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">이 사용 권한은 현재 권한과 동일한 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 사용 권한이 지정 된 사용 권한의 하위 집합이 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 않습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 아니고 현재 사용 권한과 동일한 형식이 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">현재 사용 권한 및 지정된 된 사용 권한을 합한 사용 권한을 만듭니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">Union에 대 한 호출의 결과는 현재 사용 권한 및 지정한 사용 권한의 둘 다로 나타나는 모든 작업을 나타내는 권한입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">사용 권한 중 하나를 전달 하는 모든 요청의 합집합을 통과 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statements are required to be true for all implementations of the Union method.</source>
          <target state="translated">다음 문은 모든 Union 메서드 구현에는 적용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent &lt;xref:System.Security.IPermission&gt; objects that are not <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>및 <ph id="ph2">`Y`</ph> 나타내는 &lt;xref:System.Security.IPermission&gt;없는 개체가 <ph id="ph3">`null`</ph>.&lt;/xref:System.Security.IPermission&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`X`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Union (<ph id="ph2">`X`</ph>)와 동일한 값이 있는 개체를 반환 <ph id="ph3">`X`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`Y`</ph>) returns an object that has the same value as the object returned by <ph id="ph3">`Y`</ph>.Union(<ph id="ph4">`X`</ph>).</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Union (<ph id="ph2">`Y`</ph>)에서 반환 된 개체와 동일한 값이 있는 개체를 반환 <ph id="ph3">`Y`</ph>합니다. Union (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`null`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>. Union (<ph id="ph2">`null`</ph>)와 동일한 값이 있는 개체를 반환 <ph id="ph3">`X`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">현재 사용 권한과 결합할 사용 권한</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">현재 사용 권한과 동일한 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">현재 사용 권한 및 지정한 사용 권한의 합집합을 나타내는 새 사용 권한.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 않습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 아니고 현재 사용 권한과 동일한 형식이 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>