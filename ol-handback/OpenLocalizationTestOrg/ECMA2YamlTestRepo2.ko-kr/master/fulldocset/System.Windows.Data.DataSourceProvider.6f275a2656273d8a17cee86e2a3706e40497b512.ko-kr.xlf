<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">811199a5bee80587805ad0359ab6707cebe6626d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.DataSourceProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b5b543fe859fc3d0167375345867873b3008604</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf793c3dfd9cb4513b4fb6144049d83f99750ee7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Common base class and contract for DataSourceProvider objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.</source>
          <target state="translated">공통 기본 클래스 및 단일 개체 또는 바인딩 소스 개체로 사용할 수 있는 개체 목록을 생성 하기 위해 몇 가지 쿼리를 실행 하는 팩터리 인 DataSourceProvider 개체에 대 한 계약입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>DataSourceProvider is a convenience wrapper around an existing data model; it does not replace any data model.</source>
          <target state="translated">DataSourceProvider는 기존 데이터 모델; 사용 되는 편리한 래퍼 모든 데이터 모델을 대체 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A data provider does not attempt to condense the complexity and versatility of a data model such as <ph id="ph1">[!INCLUDE[TLA2#tla_ado](~/add/includes/tla2sharptla-ado-md.md)]</ph> into one single object with a few properties.</source>
          <target state="translated">데이터 공급자와 같은 복잡 하 고 다양 한 데이터 모델 축소 하려고 하지 <ph id="ph1">[!INCLUDE[TLA2#tla_ado](~/add/includes/tla2sharptla-ado-md.md)]</ph> 몇 가지 속성을 사용 하는 단일 개체에 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>DataSourceProvider is an abstract class.</source>
          <target state="translated">DataSourceProvider 클래스는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the derived classes, which are &lt;xref:System.Windows.Data.XmlDataProvider&gt; and &lt;xref:System.Windows.Data.ObjectDataProvider&gt;.</source>
          <target state="translated">및 &lt;xref:System.Windows.Data.XmlDataProvider&gt; &lt;xref:System.Windows.Data.ObjectDataProvider&gt;.&lt;/xref:System.Windows.Data.ObjectDataProvider&gt; &lt;/xref:System.Windows.Data.XmlDataProvider&gt; 파생된 클래스 중 하나를 사용 하 여</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataSourceProvider is aware of the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> threading and dispatcher model.</source>
          <target state="translated">DataSourceProvider는 인식 된 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 스레딩 및 발송자 모델입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It assumes the thread at creation time to be the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">스레드를 만들 때 가정은 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Events will get marshaled from a worker thread to the UI thread of the application.</source>
          <target state="translated">이벤트 마샬링됩니다 작업자 스레드에서 응용 프로그램의 UI 스레드로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is a protected constructor.</source>
          <target state="translated">protected 생성자입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Indicates that initialization of this object is about to begin; no implicit &lt;xref:System.Windows.Data.DataSourceProvider.Refresh<bpt id="p1">*</bpt>&gt; occurs until the matched &lt;xref:System.Windows.Data.DataSourceProvider.EndInit<ept id="p1">*</ept>&gt; method is called.</source>
          <target state="translated">이 초기화 되는지 나타내는 개체를; 시작 하려고 합니다. 암시적인 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 일치 될 때까지 발생 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, this base class calls this method when &lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Windows.Data.DataSourceProvider.Refresh<ept id="p1">*</ept>&gt; has been called.</source>
          <target state="translated">이 기본 클래스를 파생된 클래스에서 재정의 되 면이 메서드를 호출 하면 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 또는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The base class delays the call if refresh is deferred or initial load is disabled.</source>
          <target state="translated">새로 고침이 지연 또는 초기 로드를 사용 하지 않도록 설정 하는 경우 기본 클래스에서 호출을 지연 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Notes to Implementers:<ept id="p1">**</ept> You can choose to execute the query on the same thread or on a background thread or using <ph id="ph1">`IsAsynchronous`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 동일한 스레드에서 하거나 백그라운드에서 쿼리를 실행 하도록 선택할 수 있습니다 스레드 또는 사용 하 여 <ph id="ph1">`IsAsynchronous`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query is complete, call &lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt; to have the public properties updated.</source>
          <target state="translated">쿼리가 완료 되 면 호출 &lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;공용 속성을 업데이트 해야 합니다.&lt;/xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the underlying data object.</source>
          <target state="translated">기본 데이터 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Data.DataSourceProvider&gt; is used as the source of a binding, this is the resulting binding source object.</source>
          <target state="translated">때는 &lt;xref:System.Windows.Data.DataSourceProvider&gt;사용 되는 결과 바인딩 소스 개체는이 바인딩 소스로.&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.Object&gt; that is the underlying data object.</source>
          <target state="translated">형식의 값 &lt;xref:System.Object&gt;내부 데이터 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt; property has a new value.</source>
          <target state="translated">발생 경우는 &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt;속성에 새 값입니다.&lt;/xref:System.Windows.Data.DataSourceProvider.Data*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> Raise this event when a new data object becomes available on the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 이 이벤트는 새 데이터 개체에서 사용 가능 해지면 발생는 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;속성.&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.</source>
          <target state="translated">공급자 및 지연 자동 새로 고침 속성을 변경 하는 데 사용할 수 있는 지연 주기를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical usage is to create a <ph id="ph1">`using`</ph> scope with this method and then place multiple property changes within the scope.</source>
          <target state="translated">일반적인 사용법은 만들려는 <ph id="ph1">`using`</ph> 이 방법으로 범위가 지정 되 고 다음 범위 내에서 여러 속성 변경 내용을 배치 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This delays automatic refresh until the defer cycle is exited.</source>
          <target state="translated">이 지연 주기가 종료 될 때까지 자동 새로 고침을 지연 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that you can use to dispose of the calling object.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;호출 하는 개체를 삭제 하는 데 사용할 수 있는 개체입니다.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the current <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread to use.</source>
          <target state="translated">현재를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread to use.</source>
          <target state="translated">현재 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>By default, this is the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is associated with the thread on which this instance was created.</source>
          <target state="translated">이 기본적으로는 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 인스턴스가 생성 된 스레드와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Indicates that the initialization of this object has completed; this causes a &lt;xref:System.Windows.Data.DataSourceProvider.Refresh<bpt id="p1">*</bpt>&gt; if no other &lt;xref:System.Windows.Data.DataSourceProvider.DeferRefresh<ept id="p1">*</ept>&gt; is outstanding.</source>
          <target state="translated">이 개체의 초기화가 완료 되었음을; 나타냅니다. 이 인해는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 다른 경우 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 처리 되기를 기다리고 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the error of the last query operation.</source>
          <target state="translated">마지막 쿼리 작업의 오류를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.Exception&gt; that is the error of the last query operation, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there was no error.</source>
          <target state="translated">형식의 값 &lt;xref:System.Exception&gt;즉 마지막 쿼리 작업의 오류 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류가 없는 경우.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Starts the initial query to the underlying data model.</source>
          <target state="translated">기본 데이터 모델을 초기 쿼리를 시작합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The result is returned on the &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt; property.</source>
          <target state="translated">반환 되는 결과 &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt;속성.&lt;/xref:System.Windows.Data.DataSourceProvider.Data*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called by the binding engine when dependent data bindings are activated.</source>
          <target state="translated">종속 데이터 바인딩을 활성화 될 때이 메서드는 일반적으로 바인딩 엔진에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set &lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt; to <ph id="ph1">`false`</ph> to prevent or delay the automatic loading of data.</source>
          <target state="translated">설정 &lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;를 <ph id="ph1">`false`</ph> 데이터의 자동 로드를 방지 하거나 지연.&lt;/xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitialLoad method can be called multiple times.</source>
          <target state="translated">InitialLoad 메서드를 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provider ignores subsequent calls once it is busy executing the initial query; the provider does not restart an already running query when InitialLoad is called again.</source>
          <target state="translated">공급자; 초기 쿼리를 실행 중이면 후속 호출은 무시 공급자는 InitialLoad 다시 호출 될 때 이미 실행 중인 쿼리 다시 시작 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query finishes successfully, any InitialLoad call still does not re-query data.</source>
          <target state="translated">쿼리가 성공적으로 완료 되 면 모든 InitialLoad 호출과 여전히 다시 쿼리하지 않습니다 데이터.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitialLoad operation is typically asynchronous, a &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event is raised when the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property assumed a new value.</source>
          <target state="translated">InitialLoad 작업은 일반적으로 비동기는 &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;이벤트가 발생할 때는 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;속성에 새 값이 사용.&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; &lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application calls &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt; to cause a refresh of the data.</source>
          <target state="translated">응용 프로그램 호출 &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;에 데이터를 새로 고칩니다.&lt;/xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</source>
          <target state="translated">데이터의 자동 로드를 방지 하거나 지연 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the &lt;xref:System.Windows.Data.DataSourceProvider&gt; runs its query and sets its &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property the first time it is used by a binding or a &lt;xref:System.Windows.Data.CollectionViewSource&gt;.</source>
          <target state="translated">일반적으로는 &lt;xref:System.Windows.Data.DataSourceProvider&gt;해당 쿼리를 실행 하 고 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;처음으로 바인딩 또는 &lt;xref:System.Windows.Data.CollectionViewSource&gt;.&lt;/xref:System.Windows.Data.CollectionViewSource&gt; 에서 사용 되는 속성&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; 설정&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can omit this step by setting the IsInitialLoadEnabled property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">IsInitialLoadEnabled 속성을 설정 하 여이 단계를 생략할 수 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the application must explicitly call &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt; to cause the provider to obtain its data.</source>
          <target state="translated">이 경우 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;해당 데이터를 가져오는 경우 공급자를.&lt;/xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to prevent or delay the automatic loading of data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터의 자동 로드를 방지 하거나 지연 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there is an outstanding &lt;xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt; in use.</source>
          <target state="translated">처리 중인 인지 여부를 나타내는 값을 가져옵니다 &lt;xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt;사용에서.&lt;/xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> To get the best use out of refresh deferral, do not call &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt; when this property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 를 새로 고침 deferral는 최상의 이용을 호출 하지 마십시오 &lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;이 속성이 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is an outstanding &lt;xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt; in use; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>처리 중인 없을 경우 &lt;xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt;사용; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Data.DataSourceProvider.DeferRefresh*&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider.PropertyChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event with the provided arguments.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider.PropertyChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제공된 된 인수를 사용 하 여 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Arguments of the event being raised.</source>
          <target state="translated">발생 하는 이벤트의 인수입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">파생된 클래스는 쿼리가 완료 되었음을 나타내기 위해이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This callback can be called from any thread.</source>
          <target state="translated">이 콜백은 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">이 구현은 다시 결과를 마샬링합니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The data that is the result of the query.</source>
          <target state="translated">이 데이터에 쿼리의 결과입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">파생된 클래스는 쿼리가 완료 되었음을 나타내기 위해이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This callback can be called from any thread.</source>
          <target state="translated">이 콜백은 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">이 구현은 다시 결과를 마샬링합니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The data that is the result of the query.</source>
          <target state="translated">이 데이터에 쿼리의 결과입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The error that occurred while running the query.</source>
          <target state="translated">쿼리를 실행 하는 동안 발생 한 오류입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no error.</source>
          <target state="translated">이 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류가 없는 경우.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Optional delegate that is used to execute completion work on the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread, for example, to set additional properties.</source>
          <target state="translated">완성 기능을 실행 하는 데 사용 되는 선택적 대리자는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드, 예를 들어를 추가 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Optional arguments to send as a parameter with the <ph id="ph1">`completionWork`</ph> delegate.</source>
          <target state="translated">선택적 인수는 매개 변수를 파일로 보낼 수는 <ph id="ph1">`completionWork`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Occurs when a property value changes.</source>
          <target state="translated">속성 값이 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initiates a refresh operation to the underlying data model.</source>
          <target state="translated">기본 데이터 모델 새로 고침 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The result is returned on the &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt; property.</source>
          <target state="translated">반환 되는 결과 &lt;xref:System.Windows.Data.DataSourceProvider.Data*&gt;속성.&lt;/xref:System.Windows.Data.DataSourceProvider.Data*&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>A refresh operation is typically asynchronous, a &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event is raised when the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property assumed a new value.</source>
          <target state="translated">새로 고침 작업은 일반적으로 비동기는 &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;이벤트가 발생할 때는 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;속성에 새 값이 사용.&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; &lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the refresh operation fails, the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property is set to <ph id="ph1">`null`</ph>; the &lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt; property is set with the error exception.</source>
          <target state="translated">새로 고침 작업이 실패 하면는 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;속성이 <ph id="ph1">`null`</ph>; &lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt;오류 예외로 속성을 설정 합니다.&lt;/xref:System.Windows.Data.DataSourceProvider.Error%2A&gt; &lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application can call Refresh while a previous refresh is still underway.</source>
          <target state="translated">이전 새로 고침을 계속 진행 하는 동안 응용 프로그램 새로 고침을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Refresh twice raises the &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event twice.</source>
          <target state="translated">새로 고침을 두 번 호출 된 &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;이벤트를 두 번.&lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>