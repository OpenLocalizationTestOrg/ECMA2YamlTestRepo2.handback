<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2898964eddada3c2f6a27eeee3bc84836f27d9f2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.CryptoAPITransform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6b6b1489d208adf102a095f85331be75b052e3b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da0a12b291e041c2d6a2d2658d86a28ee5aad5bb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performs a cryptographic transformation of data.</source>
          <target state="translated">데이터의 암호화 변환을 수행합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">여러 개의 블록을 변형할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if multiple blocks can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>여러 개의 블록을 변환할 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a simple call to &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드는 간단한 &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; 호출</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt; to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> 에서 사용 하는 리소스는 &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`Dispose`</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt; 를 사용 하 여 작업을 마쳤으면</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드는 &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;불안정 한 상태가.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt; was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;차지한.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt; &lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 호출 <ph id="ph2">`Dispose`</ph> &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt; 에 대 한 마지막 참조를 해제 하기 전에</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;개체의 <ph id="ph1">`Finalize`</ph> 메서드.&lt;/xref:System.Security.Cryptography.CryptoAPITransform&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the input block size.</source>
          <target state="translated">입력된 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The input block size in bytes.</source>
          <target state="translated">바이트의 입력된 블록 크기입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the key handle.</source>
          <target state="translated">키 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The key handle.</source>
          <target state="translated">키 핸들입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the output block size.</source>
          <target state="translated">출력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The output block size in bytes.</source>
          <target state="translated">출력 블록 크기 (바이트)에서입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Resets the internal state of <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> so that it can be used again to do a different encryption or decryption.</source>
          <target state="translated">내부 상태를 다시 설정 <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoAPITransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다른 암호화 또는 암호 해독 작업에 다시 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Reset method is called automatically when you call TransformFinalBlock.</source>
          <target state="translated">Reset 메서드 TransformFinalBlock를 호출 하는 경우 자동으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Reset`</ph> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</source>
          <target state="translated"><ph id="ph1">`Reset`</ph> 예를 들어 입력된 암호화 된 데이터 가비지 상태이 고 해독할 수 없는 경우 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, an exception is thrown and <ph id="ph1">`Reset`</ph> is not called.</source>
          <target state="translated">이 경우 예외가 발생 하 고 <ph id="ph1">`Reset`</ph> 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can choose to manually call the <ph id="ph1">`Reset`</ph> method in this case.</source>
          <target state="translated">직접 호출 하도록 선택할 수 있습니다는 <ph id="ph1">`Reset`</ph> 여기서에서 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</source>
          <target state="translated">입력된 바이트 배열의 지정된 된 영역에 대 한 변환을 계산 하 고 결과 변환을 출력 바이트 배열의 지정된 된 영역에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The input on which to perform the operation on.</source>
          <target state="translated">작업을 수행할 수 있습니다에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data from.</source>
          <target state="translated">데이터를 사용 하 여 시작 하는 입력된 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">데이터로 사용할 입력된 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The output to which to write the data to.</source>
          <target state="translated">데이터를 쓸 대상의 출력.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data from.</source>
          <target state="translated">데이터 쓰기를 시작 하는 출력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">outputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">outputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The length of the input buffer is less than the sum of the input offset and the input count.</source>
          <target state="translated">입력된 버퍼의 길이 사용 하면 입력 오프셋과 입력된 횟수의 합계 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">이 매개 변수는 음수가 아닌 숫자가 필요합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Computes the transformation for the specified region of the specified byte array.</source>
          <target state="translated">지정 된 바이트 배열의 지정된 된 영역에 대 한 변환을 계산합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The input on which to perform the operation on.</source>
          <target state="translated">작업을 수행할 수 있습니다에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data from.</source>
          <target state="translated">데이터를 사용 하 여 시작 하는 바이트 배열에 대 한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">데이터로 사용할 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The computed transformation.</source>
          <target state="translated">계산 된 변환 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputOffset</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는&amp;0; 보다 작은 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputCount</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는&amp;0; 보다 작은 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-       The length of the input buffer is less than the sum of the input offset and the input count.</source>
          <target state="translated">-또는-입력된 버퍼의 길이가 입력 오프셋과 입력된 횟수의 합계 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> padding is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 패딩 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is out of range.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputOffset</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">이 매개 변수는 음수가 아닌 숫자가 필요합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>