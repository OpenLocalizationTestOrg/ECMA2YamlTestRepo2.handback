<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fce07c2785976d716103256fece7998bb4fc4ad3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.ProcessStartInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de447e3b87a7fd0c00b2be06c226958eafd9f041</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1326c5e0933b999bb907c04b5f02a113080ff913</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies a set of values that are used when you start a process.</source>
          <target state="translated">프로세스를 시작할 때 사용 되는 값 집합을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProcessStartInfo is used together with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">ProcessStartInfo와 함께 사용 되는 &lt;xref:System.Diagnostics.Process&gt;구성 요소.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you start a process using the &lt;xref:System.Diagnostics.Process&gt; class, you have access to process information in addition to that available when attaching to a running process.</source>
          <target state="translated">사용 하 여 프로세스를 시작할 때는 &lt;xref:System.Diagnostics.Process&gt;실행 중인 프로세스에 연결 하는 경우 프로세스를 사용할 수 있는 정보에 액세스할 수 있는 클래스입니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the ProcessStartInfo class for better control over the process you start.</source>
          <target state="translated">시작 하는 프로세스를 보다 효율적으로 제어할 ProcessStartInfo 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must at least set the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property, either manually or using the constructor.</source>
          <target state="translated">이상 설정 해야 합니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성을 수동으로 또는 생성자를 사용 하 여.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is any application or document.</source>
          <target state="translated">파일 이름은 응용 프로그램이 나 문서입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">여기서 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 <bpt id="p1">**</bpt>폴더 옵션<ept id="p1">**</ept> 운영 체제를 통해 사용할 수 있는 대화 상자.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can set other properties that define actions to take with that file.</source>
          <target state="translated">또한 해당 파일과 함께 수행할 작업을 정의 하는 기타 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a value specific to the type of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property for the &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property.</source>
          <target state="translated">형식에 특정 값을 지정할 수는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성에 대 한는 &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can specify "print" for a document type.</source>
          <target state="translated">예를 들어 "인쇄" 문서 형식에 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, you can specify &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property values to be command-line arguments to pass to the file's open procedure.</source>
          <target state="translated">지정할 수는 또한 &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;속성 값을 해당 파일의 open 프로시저가에 전달할 명령줄 인수입니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify a text editor application in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property, you can use the &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property to specify a text file to be opened by the editor.</source>
          <target state="translated">예를 들어, 텍스트 편집기에서 응용 프로그램을 지정 하는 경우는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성, 있습니다 사용할 수는 &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;속성 편집기에서 열 수를 텍스트 파일을 지정 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</source>
          <target state="translated">표준 입력은 일반적으로 키보드 및 표준 출력과 표준 오류는 일반적으로 모니터 화면입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can use the &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;, &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;, and &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt; properties to cause the process to get input from or return output to a file or other device.</source>
          <target state="translated">사용할 수 있습니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;, &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;, 및 &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;속성으로 인해 프로세스에서 입력 또는 출력 파일 또는 기타 장치로 반환을.&lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;, &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;, or &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; properties on the &lt;xref:System.Diagnostics.Process&gt; component, you must first set the corresponding value on the ProcessStartInfo property.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;, &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;, 또는 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;속성에는 &lt;xref:System.Diagnostics.Process&gt;구성 요소를 먼저 설정 해야 해당 값 ProcessStartInfo 속성에.&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the system throws an exception when you read or write to the stream.</source>
          <target state="translated">그렇지 않으면 시스템 읽거나 스트림에 쓸 때 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to specify whether to start the process by using the operating system shell.</source>
          <target state="translated">설정 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;운영 체제 셸을 사용 하 여 프로세스를 시작 하려면 여부를 지정 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any ProcessStartInfo property up to the time that the process starts.</source>
          <target state="translated">프로세스가 시작 될 때까지 ProcessStartInfo 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when the immediate caller does not have full-trust permission.</source>
          <target state="translated">A &lt;xref:System.Security.SecurityException&gt;직접 실행 호출자에 완전 신뢰 권한이 없는 경우에 throw 됩니다.&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">보안 요청에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>링크 요청<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class without specifying a file name with which to start the process.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 프로세스를 시작 하는 데 사용할 파일 이름을 지정 하지 않고 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set at least the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property before you start the process.</source>
          <target state="translated">설정 해야 적어도 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;프로세스를 시작 하기 전에 속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is any application or document.</source>
          <target state="translated">파일 이름은 응용 프로그램이 나 문서입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 <bpt id="p1">**</bpt>폴더 옵션<ept id="p1">**</ept> 운영 체제를 통해 사용할 수 있는 대화 상자.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optionally, you can also set other properties before you start the process.</source>
          <target state="translated">필요에 따라 프로세스를 시작 하기 전에 다른 속성을 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property supplies actions to take, such as "print", with the file indicated in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;속성이 제공 수행할 동작을, "print" 등의 지정 된 파일의 사용은 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property supplies a way to pass command-line arguments to the file when the system opens it.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;속성이 제공 합니다. 열립니다 때 파일에 명령줄 인수를 전달 하는 방법&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and specifies a file name such as an application or document with which to start the process.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 및 응용 프로그램이 나 프로세스를 시작 하는 문서와 같은 파일 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is any application or document.</source>
          <target state="translated">파일 이름은 응용 프로그램이 나 문서입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 <bpt id="p1">**</bpt>폴더 옵션<ept id="p1">**</ept> 운영 체제를 통해 사용할 수 있는 대화 상자.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property after you call this constructor, up to the time that the process starts.</source>
          <target state="translated">변경할 수는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성 프로세스가 시작 될 때까지이 생성자를 호출 하 고 나면.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An application or document with which to start a process.</source>
          <target state="translated">응용 프로그램이 나 문서 프로세스를 시작할 수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 프로세스를 시작 하는 데 사용할 응용 프로그램 파일 이름을 지정 하 고 응용 프로그램에 전달할 명령줄 인수 집합을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is any application or document.</source>
          <target state="translated">파일 이름은 응용 프로그램이 나 문서입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 <bpt id="p1">**</bpt>폴더 옵션<ept id="p1">**</ept> 운영 체제를 통해 사용할 수 있는 대화 상자.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; or &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; properties after you call this constructor, up to the time that the process starts.</source>
          <target state="translated">변경할 수는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;또는 &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;속성 프로세스가 시작 될 때까지이 생성자를 호출 하 고 나면.&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An application with which to start a process.</source>
          <target state="translated">프로세스를 시작 하는 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Command-line arguments to pass to the application when the process starts.</source>
          <target state="translated">프로세스가 시작 될 때 응용 프로그램에 전달할 명령줄 인수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the set of command-line arguments to use when starting the application.</source>
          <target state="translated">응용 프로그램을 시작할 때 사용할 명령줄 인수 집합을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A single string containing the arguments to pass to the target application specified in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">단일 문자열에 지정 된 대상 응용 프로그램에 전달할 인수를 포함 하는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</source>
          <target state="translated">Windows Vista 이전 버전의 Windows 운영 체제에서 프로세스에 대 한 전체 경로 길이에 추가 하는 인수의 길이 2080 자 보다 짧아야 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On Windows 7 and later versions, the length must be less than 32699.</source>
          <target state="translated">Windows 7 및 이후 버전에서는 길이가 32699 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</source>
          <target state="translated">인수는 구문 분석 하 고 되므로 해당 응용 프로그램의 예상과 일치 해야 합니다는 대상 응용 프로그램에서 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</source>
          <target state="translated">와 같은.net 응용 프로그램 공백은 여러 인수 사이의 구분 기호로 해석 됩니다, 아래 예제에 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</source>
          <target state="translated">공백이 포함 된 단일 인수를 따옴표로 묶어야 하지만 따옴표는 대상 응용 프로그램에 전달 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In include quotation marks in the final parsed argument, triple-escape each mark.</source>
          <target state="translated">따옴표에 포함 되어 최종 분석 인수 트리플 이스케이프를 각 표시 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to start the process in a new window.</source>
          <target state="translated">새 창에서 프로세스 시작 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property is <ph id="ph1">`true`</ph> or the &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; and &lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt; properties are not <ph id="ph2">`null`</ph>, the CreateNoWindow property value is ignored and a new window is created.</source>
          <target state="translated">경우는 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;속성은 <ph id="ph1">`true`</ph> 또는 &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;및 &lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;속성이 <ph id="ph2">`null`</ph>CreateNoWindow 속성 값을 무시 하 고 새 창이 만들어집니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the process should be started without creating a new window to contain it; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; 포함할 새 창을 만들지 않고 프로세스를 시작 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that identifies the domain to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 도메인을 식별 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The Active Directory domain to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 Active Directory 도메인.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The domain property is primarily of interest to users within enterprise environments that use Active Directory.</source>
          <target state="translated">도메인 속성은 주로 Active Directory를 사용 하는 엔터프라이즈 환경 내의 사용자에 게 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the environment variables that apply to this process and its child processes.</source>
          <target state="translated">이 프로세스와 해당 자식 프로세스에 적용 되는 환경 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A generic dictionary containing the environment variables that apply to this process and its child processes.</source>
          <target state="translated">이 프로세스와 해당 자식 프로세스에 적용 되는 환경 변수를 포함 하는 제네릭 사전입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</source>
          <target state="translated">검색 파일에 대 한 경로, 임시 파일, 응용 프로그램별 옵션 및 기타 유사한 정보에 대 한 디렉터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you cannot set the EnvironmentVariables property, you can modify the &lt;xref:System.Collections.Specialized.StringDictionary&gt; returned by the property.</source>
          <target state="translated">EnvironmentVariables 속성을 설정할 수 있지만 수정할 수는 &lt;xref:System.Collections.Specialized.StringDictionary&gt;속성에서 반환 합니다.&lt;/xref:System.Collections.Specialized.StringDictionary&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following code adds a TempPath environment variable: <ph id="ph1">`myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`</ph>.</source>
          <target state="translated">다음 코드에서는 TempPath 환경 변수를 추가 하는 예를 들어: <ph id="ph1">`myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property to <ph id="ph1">`false`</ph> to start the process after changing the EnvironmentVariables property.</source>
          <target state="translated">설정 해야 합니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;속성을 <ph id="ph1">`false`</ph> EnvironmentVariables 속성을 변경한 후 프로세스를 시작할 수 있습니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`true`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown when the &lt;xref:System.Diagnostics.Process.Start%2A&gt; method is called.</source>
          <target state="translated">경우 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;은 <ph id="ph1">`true`</ph>, &lt;xref:System.InvalidOperationException&gt;경우 throw 되는 &lt;xref:System.Diagnostics.Process.Start%2A&gt;메서드를 호출 합니다.&lt;/xref:System.Diagnostics.Process.Start%2A&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A string dictionary that provides environment variables that apply to this process and child processes.</source>
          <target state="translated">이 프로세스와 자식 프로세스에 적용 되는 환경 변수를 제공 하는 문자열 사전입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</source>
          <target state="translated">프로세스를 시작할 수 없는 경우 사용자에 게 오류 대화 상자가 표시 되는지를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>프로세스를 시작할 수 없는 경우 오류 대화 상자를 화면에 표시 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</source>
          <target state="translated">프로세스를 시작할 수 없는 오류 대화 상자가 표시 될 때 사용할 창 핸들을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt; is <ph id="ph1">`true`</ph>, the ErrorDialogParentHandle property specifies the parent window for the dialog box that is shown.</source>
          <target state="translated">경우 &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;은 <ph id="ph1">`true`</ph>, ErrorDialogParentHandle 속성에 표시 되는 대화 상자에 대 한 부모 창을 지정 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is useful to specify a parent to keep the dialog box in front of the application.</source>
          <target state="translated">응용 프로그램 전면에 대화 상자에 부모를 지정 하는 것이 유용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A pointer to the handle of the error dialog box that results from a process start failure.</source>
          <target state="translated">결과 프로세스를 시작 실패 오류 대화 상자의 핸들에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the application or document to start.</source>
          <target state="translated">응용 프로그램 또는 문서를 시작 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set at least the FileName property before you start the process.</source>
          <target state="translated">설정 해야 이상 FileName 속성 프로세스를 시작 하기 전에.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is any application or document.</source>
          <target state="translated">파일 이름은 응용 프로그램이 나 문서입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>A document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 <bpt id="p1">**</bpt>폴더 옵션<ept id="p1">**</ept> 운영 체제를 통해 사용할 수 있는 대화 상자.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of file types available to you depends in part on the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property.</source>
          <target state="translated">파일 형식 집합을 사용할 수 정도 따라 결정의 값에는 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`true`</ph>, you can start any document and perform operations on the file, such as printing, with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">경우 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;은 <ph id="ph1">`true`</ph>를 모든 문서를 시작 하 고 사용 하 여 인쇄, 같은 파일에 대 한 작업을 수행할 수는 &lt;xref:System.Diagnostics.Process&gt;구성 요소.&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`false`</ph>, you can start only executables with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">때 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;은 <ph id="ph1">`false`</ph>와 실행 파일만 시작할 수 있습니다는 &lt;xref:System.Diagnostics.Process&gt;구성 요소.&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can start a ClickOnce application by setting the FileName property to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">FileName 속성 위치 (예를 들어 웹 주소)를 처음 설치한 응용 프로그램을 설정 하 여 ClickOnce 응용 프로그램을 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard disk.</source>
          <target state="translated">하드 디스크에 설치 된 위치를 지정 하 여 ClickOnce 응용 프로그램을 시작 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</source>
          <target state="translated">응용 프로그램에 연결 되며 기본 열기 동작이를 사용할 수 있는 파일 형식의 문서 이름 또는 시작할 응용 프로그램의 이름.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</source>
          <target state="translated">레지스트리에서 로드 되도록 Windows 사용자 프로필 인지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is referenced if the process is being started by using the user name, password, and domain.</source>
          <target state="translated">이 속성은 사용자 이름, 암호 및 도메인을 사용 하 여 프로세스가 시작 되는 경우 참조 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is <ph id="ph1">`true`</ph>, the user's profile in the <ph id="ph2">`HKEY_USERS`</ph> registry key is loaded.</source>
          <target state="translated">값이 <ph id="ph1">`true`</ph>, 사용자의 프로필에는 <ph id="ph2">`HKEY_USERS`</ph> 레지스트리 키를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Loading the profile can be time-consuming.</source>
          <target state="translated">프로필을 로드 하는 것은 시간이 많이 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is best to use this value only if you must access the information in the <ph id="ph1">`HKEY_CURRENT_USER`</ph> registry key.</source>
          <target state="translated">따라서 것이 정보에 액세스 해야 하는 경우에이 값을 사용 하는 <ph id="ph1">`HKEY_CURRENT_USER`</ph> 레지스트리 키입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</source>
          <target state="translated">Windows Server 2003 및 Windows 2000 프로필 언로드될 새 프로세스가 종료 되, 여부는 프로세스를 만들었습니다 자식 프로세스에 관계 없이 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</source>
          <target state="translated">Windows XP에서 프로필은 새 프로세스 후와 만들어진 모든 자식 프로세스가 종료 되었습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the Windows user profile should be loaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Windows 사용자 프로필; 로드 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets a secure string that contains the user password to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 사용자 암호를 포함 하는 보안 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The user password to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 사용자 암호입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets the user password in clear text to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 일반 텍스트에 사용자 암호를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The user password in clear text.</source>
          <target state="translated">일반 텍스트로 사용자 암호입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the error output of an application is written to the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">응용 프로그램의 오류 출력에 쓸지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 스트림 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Diagnostics.Process&gt; writes text to its standard error stream, that text is typically displayed on the console.</source>
          <target state="translated">경우는 &lt;xref:System.Diagnostics.Process&gt;표준 오류 스트림에 텍스트를 쓰는 해당 텍스트는 일반적으로 콘솔에 표시 됩니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>By redirecting the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream, you can manipulate or suppress the error output of a process.</source>
          <target state="translated">리디렉션하여는 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림을 조작 하거나 프로세스의 오류 출력을 표시 하지 않을 수 있습니다.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">예를 들어 텍스트를 필터링 서식을 다르게 지정 하거나 콘솔 및 지정 된 로그 파일 모두에 출력을 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardError to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 설정 해야 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;를 <ph id="ph2">`false`</ph> RedirectStandardError로 설정 하려는 경우 <ph id="ph3">`true`</ph>.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, reading from the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream throws an exception.</source>
          <target state="translated">그렇지 않은 경우에서 읽기는 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림 예외를 throw 합니다.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The redirected &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream can be read synchronously or asynchronously.</source>
          <target state="translated">리디렉션된 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;동기적 또는 비동기적으로 스트림은 읽을 수 있습니다.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods such as &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt; and &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt; perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">와 같은 메서드 &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt;및 &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;프로세스의 오류 출력 스트림에서 동기 읽기 작업을 수행 합니다.&lt;/xref:System.IO.StreamReader.ReadToEnd%2A&gt; &lt;/xref:System.IO.StreamReader.ReadLine%2A&gt; &lt;/xref:System.IO.StreamReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>These synchronous read operations do not complete until the associated &lt;xref:System.Diagnostics.Process&gt; writes to its &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream, or closes the stream.</source>
          <target state="translated">이들 동기 읽기 작업이 연결 될 때까지 완료 되지 않고 &lt;xref:System.Diagnostics.Process&gt;씁니다 해당 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트리밍하거나 스트림을 닫습니다.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, &lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt; starts asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">반면, &lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;시작 비동기 읽기 작업에는 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">이 메서드는 스트림 출력에 대 한 지정 된 이벤트 처리기 하 고 이벤트 처리기에 스트림을 출력 하는 동안 다른 작업을 수행할 수 있는 호출자에 게 즉시 반환 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The application that is processing the asynchronous output should call the &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt; method to ensure that the output buffer has been flushed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 비동기 출력을 처리 하는 응용 프로그램은 &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;메서드를 출력 버퍼 플러시 되었습니다.&lt;/xref:System.Diagnostics.Process.WaitForExit%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Synchronous read operations introduce a dependency between the caller reading from the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream and the child process writing to that stream.</source>
          <target state="translated">동기 작업에서 읽는 호출자 간의 종속성을 유발 읽기는 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림 및 자식 프로세스 스트림에 쓰는.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>These dependencies can cause deadlock conditions.</source>
          <target state="translated">이러한 종속성으로 인해 교착 상태가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">호출자에 게 자식 프로세스의 리디렉션된 스트림에서 읽으면 자식에 종속 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller waits for the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">호출자에 게 자식 스트림에 쓰거나 스트림이 닫을 때까지 읽기 작업에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">리디렉션된 스트림을 맞게 충분 한 데이터를 기록 하는 자식 프로세스를 부모에 종속 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">자식 프로세스 부모 전체 스트림을 읽기 / 스트림의 닫을 때까지 다음 쓰기 작업에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</source>
          <target state="translated">호출자와 자식 프로세스는 작업을 완료 하려면 서로 대기 하 고 아무 작업도 처리할 수 하는 경우 교착 상태가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">호출자와 자식 프로세스 간의 종속성을 평가 하 여 교착 상태를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">예를 들어 다음 C# 코드에서 리디렉션된 스트림에서 읽고 자식 프로세스가 종료 될 때까지 대기 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   // Start the child process.    Process p = new Process();    // Redirect the error stream of the child process.    p.StartInfo.UseShellExecute = false;    p.StartInfo.RedirectStandardError = true;    p.StartInfo.FileName = "Write500Lines.exe";    p.Start();    // Do not wait for the child process to exit before    // reading to the end of its redirected error stream.    // p.WaitForExit();    // Read the error stream first and then wait.    string error = p.StandardError.ReadToEnd();    p.WaitForExit();   ```</ph>       The code example avoids a deadlock condition by calling <ph id="ph2">`p.StandardError.ReadToEnd`</ph> before <ph id="ph3">`p.WaitForExit`</ph>.</source>
          <target state="translated"><ph id="ph1">```   // Start the child process.    Process p = new Process();    // Redirect the error stream of the child process.    p.StartInfo.UseShellExecute = false;    p.StartInfo.RedirectStandardError = true;    p.StartInfo.FileName = "Write500Lines.exe";    p.Start();    // Do not wait for the child process to exit before    // reading to the end of its redirected error stream.    // p.WaitForExit();    // Read the error stream first and then wait.    string error = p.StandardError.ReadToEnd();    p.WaitForExit();   ```</ph>호출 하 여 교착 상태를 방지 하는 코드 예제에서는 <ph id="ph2">`p.StandardError.ReadToEnd`</ph> 전에 <ph id="ph3">`p.WaitForExit`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">부모 호출을 처리 하는 경우 교착 상태가 발생할 수 있습니다 <ph id="ph1">`p.WaitForExit`</ph> 전에 <ph id="ph2">`p.StandardError.ReadToEnd`</ph> 자식 프로세스 리디렉션된 스트림에 맞게 충분 한 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">부모 프로세스를 종료 하는 자식 프로세스 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">표준 출력과 표준 오류 스트림 모두에서 모든 텍스트를 읽을 때에 유사한 문제가 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code performs a read operation on both streams.</source>
          <target state="translated">예를 들어 다음 C# 코드는 두 스트림이 읽기 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   // Do not perform a synchronous read to the end of both   // redirected streams.   // string output = p.StandardOutput.ReadToEnd();   // string error = p.StandardError.ReadToEnd();   // p.WaitForExit();   // Use asynchronous read operations on at least one of the streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids the deadlock condition by performing asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated"><ph id="ph1">```   // Do not perform a synchronous read to the end of both   // redirected streams.   // string output = p.StandardOutput.ReadToEnd();   // string error = p.StandardError.ReadToEnd();   // p.WaitForExit();   // Use asynchronous read operations on at least one of the streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>비동기 읽기 작업에서 수행 하 여 교착 상태를 방지 하는 코드 예제는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">부모 호출을 처리 하는 경우 교착 상태가 발생 <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> 이어서 <ph id="ph2">`p.StandardError.ReadToEnd`</ph> 자식 프로세스 오류 스트림을 맞게 충분 한 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent process would wait indefinitely for the child process to close its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">부모 프로세스는 자식 프로세스를 닫으려면 무기한 대기 해당 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">이러한 종속성과 교착 방지 하기 위해 비동기 읽기 작업을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">또는 두 개의 스레드를 만들고 각 스트림에서 별도 스레드에서 출력을 읽는 하 여 교착 상태를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if error output should be written to <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>오류 출력을 쓸 경우 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the input for an application is read from the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">응용 프로그램에 대 한 입력을에서 읽을 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 스트림 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Diagnostics.Process&gt; can read input text from its standard input stream, typically the keyboard.</source>
          <target state="translated">A &lt;xref:System.Diagnostics.Process&gt;는 표준 입력된 스트림 일반적으로 키보드에서에서 입력된 텍스트를 읽을 수 있습니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>By redirecting the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt; stream, you can programmatically specify the input of a process.</source>
          <target state="translated">리디렉션하여는 &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;스트림에 프로세스의 입력을 프로그래밍 방식으로 지정할 수 있습니다.&lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</source>
          <target state="translated">예를 들어, 키보드 입력을 사용 하는 대신 지정 된 파일의 내용에서 텍스트 또는 다른 응용 프로그램에서 출력을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardInput to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 설정 해야 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;를 <ph id="ph2">`false`</ph> RedirectStandardInput로 설정 하려는 경우 <ph id="ph3">`true`</ph>.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, writing to the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt; stream throws an exception.</source>
          <target state="translated">그렇지 않은 경우에 쓰기는 &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;스트림 예외를 throw 합니다.&lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if input should be read from <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>입력에서 읽어야 하는 경우 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the textual output of an application is written to the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">응용 프로그램의 텍스트 출력을 쓸지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 스트림 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Diagnostics.Process&gt; writes text to its standard stream, that text is typically displayed on the console.</source>
          <target state="translated">경우는 &lt;xref:System.Diagnostics.Process&gt;해당 텍스트는 일반적으로 콘솔에 표시 됩니다 텍스트를 표준 스트림에 씁니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting RedirectStandardOutput to <ph id="ph1">`true`</ph> to redirect the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream, you can manipulate or suppress the output of a process.</source>
          <target state="translated">RedirectStandardOutput를 설정 하 여 <ph id="ph1">`true`</ph> 리디렉션하는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림을 조작 하거나 프로세스의 출력을 표시 하지 않을 수 있습니다.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">예를 들어 텍스트를 필터링 서식을 다르게 지정 하거나 콘솔 및 지정 된 로그 파일 모두에 출력을 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardOutput to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 설정 해야 &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;를 <ph id="ph2">`false`</ph> RedirectStandardOutput로 설정 하려는 경우 <ph id="ph3">`true`</ph>.&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, reading from the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream throws an exception.</source>
          <target state="translated">그렇지 않은 경우에서 읽기는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림 예외를 throw 합니다.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The redirected &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream can be read synchronously or asynchronously.</source>
          <target state="translated">리디렉션된 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;동기적 또는 비동기적으로 스트림은 읽을 수 있습니다.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods such as &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt;, and &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt; perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">와 같은 메서드 &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt;, 및 &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;프로세스의 출력 스트림에서 동기 읽기 작업을 수행 합니다.&lt;/xref:System.IO.StreamReader.ReadToEnd%2A&gt; &lt;/xref:System.IO.StreamReader.ReadLine%2A&gt; &lt;/xref:System.IO.StreamReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>These synchronous read operations do not complete until the associated &lt;xref:System.Diagnostics.Process&gt; writes to its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream, or closes the stream.</source>
          <target state="translated">이들 동기 읽기 작업이 연결 될 때까지 완료 되지 않고 &lt;xref:System.Diagnostics.Process&gt;쓰려는 해당 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트리밍하거나 스트림을 닫습니다.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, &lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt; starts asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">반면, &lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;시작 비동기 읽기 작업에는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables a designated event handler (see &lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">이 메서드는 지정 된 이벤트 처리기를 사용 하면 (참조 &lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;) 출력 스트림 및 즉시 호출자에 게 반환는 작업을 수행할 수 다른 이벤트 처리기에 스트림을 출력 하는 동안.&lt;/xref:System.Diagnostics.Process.OutputDataReceived&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The application that is processing the asynchronous output should call the &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt; method to ensure that the output buffer has been flushed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 비동기 출력을 처리 하는 응용 프로그램은 &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;메서드를 출력 버퍼 플러시 되었습니다.&lt;/xref:System.Diagnostics.Process.WaitForExit%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Synchronous read operations introduce a dependency between the caller reading from the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream and the child process writing to that stream.</source>
          <target state="translated">동기 작업에서 읽는 호출자 간의 종속성을 유발 읽기는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림 및 자식 프로세스 스트림에 쓰는.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>These dependencies can cause deadlock conditions.</source>
          <target state="translated">이러한 종속성으로 인해 교착 상태가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">호출자에 게 자식 프로세스의 리디렉션된 스트림에서 읽으면 자식에 종속 됩니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller waits for the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">호출자에 게 자식 스트림에 쓰거나 스트림이 닫을 때까지 읽기 작업에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">리디렉션된 스트림을 맞게 충분 한 데이터를 기록 하는 자식 프로세스를 부모에 종속 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">자식 프로세스 부모 전체 스트림을 읽기 / 스트림의 닫을 때까지 다음 쓰기 작업에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</source>
          <target state="translated">호출자와 자식 프로세스는 작업을 완료 하려면 서로 대기 하 고 아무 작업도 처리할 수 하는 경우 교착 상태가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">호출자와 자식 프로세스 간의 종속성을 평가 하 여 교착 상태를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">예를 들어 다음 C# 코드에서 리디렉션된 스트림에서 읽고 자식 프로세스가 종료 될 때까지 대기 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   Process p = new Process();   p.StartInfo.UseShellExecute = false;   p.StartInfo.RedirectStandardOutput = true;   p.StartInfo.FileName = "Write500Lines.exe";   p.Start();      // To avoid deadlocks, always read the output stream first and then wait.   string output = p.StandardOutput.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids a deadlock condition by calling <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> before <ph id="ph3">`p.WaitForExit`</ph>.</source>
          <target state="translated"><ph id="ph1">```   Process p = new Process();   p.StartInfo.UseShellExecute = false;   p.StartInfo.RedirectStandardOutput = true;   p.StartInfo.FileName = "Write500Lines.exe";   p.Start();      // To avoid deadlocks, always read the output stream first and then wait.   string output = p.StandardOutput.ReadToEnd();   p.WaitForExit();   ```</ph>호출 하 여 교착 상태를 방지 하는 코드 예제에서는 <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> 전에 <ph id="ph3">`p.WaitForExit`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">부모 호출을 처리 하는 경우 교착 상태가 발생할 수 있습니다 <ph id="ph1">`p.WaitForExit`</ph> 전에 <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> 자식 프로세스 리디렉션된 스트림에 맞게 충분 한 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">부모 프로세스를 종료 하는 자식 프로세스 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">표준 출력과 표준 오류 스트림 모두에서 모든 텍스트를 읽을 때에 유사한 문제가 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code performs a read operation on both streams.</source>
          <target state="translated">예를 들어 다음 C# 코드는 두 스트림이 읽기 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   // To avoid deadlocks, use asynchronous read operations on at least one of the streams.   // Do not perform a synchronous read to the end of both redirected streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids the deadlock condition by performing asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated"><ph id="ph1">```   // To avoid deadlocks, use asynchronous read operations on at least one of the streams.   // Do not perform a synchronous read to the end of both redirected streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>비동기 읽기 작업에서 수행 하 여 교착 상태를 방지 하는 코드 예제는 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">부모 호출을 처리 하는 경우 교착 상태가 발생 <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> 이어서 <ph id="ph2">`p.StandardError.ReadToEnd`</ph> 자식 프로세스 오류 스트림을 맞게 충분 한 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent process would wait indefinitely for the child process to close its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">부모 프로세스는 자식 프로세스를 닫으려면 무기한 대기 해당 &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 &lt;xref:System.Diagnostics.Process.StandardError%2A&gt;스트림.&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">이러한 종속성과 교착 방지 하기 위해 비동기 읽기 작업을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">또는 두 개의 스레드를 만들고 각 스트림에서 별도 스레드에서 출력을 읽는 하 여 교착 상태를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if output should be written to <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>출력을 쓸 경우 <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Gets or sets the preferred encoding for error output.</source>
          <target state="translated">오류 출력에 대 한 기본 설정 인코딩을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the StandardErrorEncoding property is <ph id="ph1">`null`</ph>, the process uses the default standard error encoding for error output.</source>
          <target state="translated">StandardErrorEncoding 속성의 값이 <ph id="ph1">`null`</ph>, 프로세스 오류 출력에 대 한 기본 표준 오류 인코딩을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StandardErrorEncoding property must be set before the process is started.</source>
          <target state="translated">StandardErrorEncoding 속성 프로세스가 시작 되기 전에 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</source>
          <target state="translated">이 속성을 설정 해도 지정 된 인코딩을;는 프로세스에서 사용 되도록 보장 하지 않습니다 프로세스에는 지 원하는 인코딩을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application should be tested to determine which encodings are supported.</source>
          <target state="translated">지원 되는 인코딩을 결정 하는 응용 프로그램을 테스트 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An object that represents the preferred encoding for error output.</source>
          <target state="translated">오류 출력에 대 한 기본 설정된 인코딩을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets or sets the preferred encoding for standard output.</source>
          <target state="translated">표준 출력에 대 한 기본 설정 인코딩을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the StandardOutputEncoding property is <ph id="ph1">`null`</ph>, the process uses the default standard output encoding for the standard output.</source>
          <target state="translated">StandardOutputEncoding 속성의 값이 <ph id="ph1">`null`</ph>, 프로세스는 표준 출력에 대 한 기본 표준 출력 인코딩을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StandardOutputEncoding property must be set before the process is started.</source>
          <target state="translated">StandardOutputEncoding 속성 프로세스가 시작 되기 전에 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property does not guarantee that the process will use the specified encoding.</source>
          <target state="translated">이 속성을 설정 해도 프로세스에서 지정 된 인코딩을 사용 되도록 보장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application should be tested to determine which encodings the process supports.</source>
          <target state="translated">지원 되는 인코딩을 결정 하는 응용 프로그램을 테스트 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>An object that represents the preferred encoding for standard output.</source>
          <target state="translated">표준 출력에 대 한 기본 설정된 인코딩을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Gets or sets the user name to be used when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 사용자 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The user name to use when starting the process.</source>
          <target state="translated">프로세스를 시작할 때 사용할 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to use the operating system shell to start the process.</source>
          <target state="translated">운영 체제 셸을 사용 하 여 프로세스를 시작 하려면 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`false`</ph> enables you to redirect input, output, and error streams.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`false`</ph> 입력, 출력 및 오류 스트림을 리디렉션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  UseShellExecute must be <ph id="ph2">`false`</ph> if the &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; property is not <ph id="ph3">`null`</ph> or an empty string, or an &lt;xref:System.InvalidOperationException&gt; will be thrown when the &lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; UseShellExecute 이어야 합니다 <ph id="ph2">`false`</ph> 경우는 &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;속성은 <ph id="ph3">`null`</ph> 또는 빈 문자열인 경우 또는 &lt;xref:System.InvalidOperationException&gt;throw 됩니다는 &lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt;메서드를 호출 합니다.&lt;/xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the &lt;xref:System.Diagnostics.Process&gt; object.</source>
          <target state="translated">운영 체제 셸을 사용 하 여 프로세스를 시작 하는 경우에 문서 (즉, 기본 열기 동작이 있는 실행 개체와 연결 된 모든 등록 된 파일 형식)를 시작할 고 사용 하 여 인쇄, 같은 파일에 대 한 작업을 수행할 수 있습니다는 &lt;xref:System.Diagnostics.Process&gt;개체입니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, you can start only executables by using the &lt;xref:System.Diagnostics.Process&gt; object.</source>
          <target state="translated">UseShellExecute 다음과 같은 경우 <ph id="ph1">`false`</ph>를 사용 하 여 실행 파일만 시작할 수는 &lt;xref:System.Diagnostics.Process&gt;개체입니다.&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  UseShellExecute must be <ph id="ph2">`true`</ph> if you set the &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt; property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; UseShellExecute 해야 <ph id="ph2">`true`</ph> 설정 하는 경우는 &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;속성을 <ph id="ph3">`true`</ph>.&lt;/xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property behaves differently depending on the value of the UseShellExecute property.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;속성의 UseShellExecute 속성의 값에 따라 다르게 동작 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UseShellExecute is <ph id="ph1">`true`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property specifies the location of the executable.</source>
          <target state="translated">UseShellExecute 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;속성 실행 파일의 위치를 지정 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; is an empty string, it is assumed that the current directory contains the executable.</source>
          <target state="translated">경우 &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;이 빈 문자열인 경우 현재 디렉터리에 실행 파일이 포함 되어 있음을 가정 합니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property is not used to find the executable.</source>
          <target state="translated">UseShellExecute 다음과 같은 경우 <ph id="ph1">`false`</ph>, &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;실행 파일을 찾으려고 속성이 사용 되지 않습니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it is used only by the process that is started and has meaning only within the context of the new process.</source>
          <target state="translated">대신, 시작 되 고 새 프로세스의 컨텍스트 내 에서만 의미가 하는 프로세스에 의해서만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</source>
          <target state="translated">UseShellExecute 다음과 같은 경우 <ph id="ph1">`false`</ph>, &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성, 실행 파일에는 정규화 된 경로 또는 시스템이 PATH 환경 변수에서 지정한 폴더 내에서 찾아야 하는 간단한 실행 파일 이름이 될 수 있습니다.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the shell should be used when starting the process; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the process should be created directly from the executable file.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>셸 프로세스를 시작할 때 사용 해야 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 는 프로세스 실행 파일에서 직접 만들어야 하는 경우.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets or sets the verb to use when opening the application or document specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">응용 프로그램 또는로 지정 된 문서를 열 때 사용할 동사를 가져오거나 설정 합니다.는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each file name extension has its own set of verbs, which can be obtained by using the &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt; property.</source>
          <target state="translated">각 파일 이름 확장명은 고유한을 사용 하 여 가져올 수 있는 동사는 &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the "<ph id="ph1">`print`</ph>" verb will print a document specified by using &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;.</source>
          <target state="translated">예를 들어는 "<ph id="ph1">`print`</ph>" 동사 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; 를 사용 하 여 지정 하는 문서를 인쇄</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default verb can be specified by using an empty string ("").</source>
          <target state="translated">기본 동사는 빈 문자열을 사용 하 여 지정할 수 있습니다 ("").</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</source>
          <target state="translated">동사에는 "편집", "열기", "OpenAsReadOnly", "Print" 및 "Printto"이 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use only verbs that appear in the set of verbs returned by the &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt; property.</source>
          <target state="translated">반환 하는 동사 집합에 표시 되는 동사에만 사용 해야는 &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the Verb property, you must include the file name extension when you set the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">값을 설정할 때 파일 이름 확장명을 포함 해야 Verb 속성을 사용 하면는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name does not need to have an extension if you manually enter a value for the Verb property.</source>
          <target state="translated">파일 이름 확장명이 Verb 속성에 대 한 값을 직접 입력 하는 경우 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The action to take with the file that the process opens.</source>
          <target state="translated">작업 프로세스에서 열린 파일에 수행 하는입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The default is an empty string (""), which signifies no action.</source>
          <target state="translated">기본값은 빈 문자열 (""), 작업이 없음을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets the set of verbs associated with the type of file specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">로 지정 된 파일의 형식과 연결 된 동사 집합을 가져옵니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Verbs property enables you to determine the verbs that can be used with the file specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">동사 속성으로 지정 된 파일에 사용할 수 있는 동사를 확인할 수 있습니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property to the value of any verb in the set.</source>
          <target state="translated">설정할 수 있습니다는 &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;속성 집합의 모든 동사 값.&lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</source>
          <target state="translated">동사에는 "편집", "열기", "OpenAsReadOnly", "Print" 및 "Printto"이 있습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the Verbs property, you must include the file name extension when you set the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">값을 설정할 때 파일 이름 확장명을 포함 해야 Verbs 속성을 사용 하면는 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name extension determines the set of possible verbs.</source>
          <target state="translated">파일 이름 확장명 가능한 동사 집합을 결정합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The actions that the system can apply to the file indicated by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">시스템 파일에 적용할 수 있는 작업으로 표시 된 &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;속성.&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets or sets the window state to use when the process is started.</source>
          <target state="translated">프로세스가 시작 될 때 사용할 창 상태를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</source>
          <target state="translated">최대화, 창에 프로세스 시작 여부를 나타내는 열거형 값 중 하나 최소화, 표준 (둘 다 최대화 또는 최소화) 또는 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Normal" name="Normal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Normal" name="Normal" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The window style is not one of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessWindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration members.</source>
          <target state="translated">창 스타일 중 하나는 <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessWindowStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<bpt id="p1">*</bpt>&gt; property is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, gets or sets the working directory for the process to be started. When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<ept id="p1">*</ept>&gt; is <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, gets or sets the directory that contains the process to be started.</source>
          <target state="translated">경우는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>가져오거나 시작할 프로세스에 대 한 작업 디렉터리입니다. 때 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;은 <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>가져오거나 시작할 프로세스가 들어 있는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<bpt id="p1">*</bpt>&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, the fully qualified name of the directory that contains the process to be started. When the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<ept id="p1">*</ept>&gt; property is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, the working directory for the process to be started.</source>
          <target state="translated">때 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;은 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 시작할 프로세스가 포함 된 디렉터리의 정규화 된 이름입니다. 경우는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 속성은 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>를 시작 하는 프로세스에 대 한 작업 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>