<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfd1a485c7cd423bac8fc1edeb446bfc906a0ac4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaComplexType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05aa106b872305607476746a07a68da6bc4defc8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">702a52072c38fb3df461125f5d44a8c7b43e67e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> World Wide Web Consortium (W3C)에 지정 된 대로 XML 스키마에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class defines a complex type that determines the set of attributes and content of an element.</source>
          <target state="translated">이 클래스는 특성 집합이 및 요소 내용을 결정 하는 복합 유형을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element can be declared with a type attribute that refers to a <ph id="ph1">`complexType`</ph> element that defines the structure, content, and attributes of that element.</source>
          <target state="translated">요소를 참조 하는 type 특성이 선언할 수 있습니다는 <ph id="ph1">`complexType`</ph> 구조, 내용 및 해당 요소의 특성을 정의 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the value for the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated">에 대 한 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 복합 형식의 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is not null, the complex type can contain any attributes from the namespaces specified in the &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.</source>
          <target state="translated">이 속성은 null, 복합 형식 &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt; 에 지정 된 네임 스페이스의 모든 특성을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 복합 형식의 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the collection of attributes for the complex type.</source>
          <target state="translated">복합 유형에 대 한 특성의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Contains <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">포함 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the collection of all the complied attributes of this complex type and its base types.</source>
          <target state="translated">이 복합 형식과 그 기본 형식의 모든 컴파일된 특성의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a combination of all the attributes from the <ph id="ph1">`Attributes`</ph> property from each type in the hierarchy.</source>
          <target state="translated">예를 들어 모든 특성의 조합을 <ph id="ph1">`Attributes`</ph> 각 형식 계층 구조에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is read-only.</source>
          <target state="translated">이 속성의 값은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</source>
          <target state="translated">이 속성 스키마가 성공적으로 컴파일되어 인스턴스 문서에서 허용 되는 전체 특성 집합을 결정 한 후 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The collection of all the attributes from this complex type and its base types.</source>
          <target state="translated">이 복합 형식과 그 기본 형식의 모든 특성의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">컴파일 이후 값은 <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value for <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this complex type and its base type(s).</source>
          <target state="translated">에 대 한 컴파일 이후 값을 가져옵니다 <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 복합 형식과 해당 기본 형식에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is read-only.</source>
          <target state="translated">이 속성의 값은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</source>
          <target state="translated">이 속성에 값 스키마 컴파일한 후에 성공적으로 복합 유형의 전체 특성 집합을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it might be the <ph id="ph1">`anyAttribute`</ph> element from one of the base types.</source>
          <target state="translated">예를 들어, 수 있습니다는 <ph id="ph1">`anyAttribute`</ph> 기본 형식 중 하나에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">컴파일 이후 값은 <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indicates the type of derivation.</source>
          <target state="translated">파생 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">이 특성에는 다음 값이 포함 될 수 있습니다. | Enum | 설명 |   |----------|-----------------|   | <ph id="ph1">`None`</ph>| 에 정의 된 파생 제한을 사용는 <ph id="ph2">`BlockDefault`</ph> 있는 경우 스키마의 속성입니다. |   | <ph id="ph3">`Extension`</ph>| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | <ph id="ph4">`Restriction`</ph>| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | <ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |       <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, 및 <ph id="ph3">`Union`</ph> 파생 메서드는이 속성에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute prevents a complex type from being used in the specified type of derivation.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특성이 지정된 된 형식의 파생에서 사용 되는 복합 유형을 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</source>
          <target state="translated">스키마 유효성 검사 정보 집합 (infoset) 유형을 편집한 후 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used in the instance document.</source>
          <target state="translated">이 값 형식이 적용 되는 방식을 나타냅니다 때 <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 문서에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is taken either from the type itself or, if not defined at the type level, it is taken from the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">이 값은 형식 자체에서 가져오거나에서 가져온 것 형식 수준에서 정의 되지 않은 경우는 <ph id="ph1">`schema`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</source>
          <target state="translated">예를 들어 값이 제한 된 경우 구체적으로 정의 된 형식에만 사용할 수를 구체적으로 정의 된 형식에서 파생 된 형식이 아닌 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">이 특성에는 다음 값이 포함 될 수 있습니다. | Enum | 설명 |   |----------|-----------------|   | <ph id="ph1">`None`</ph>| 에 정의 된 파생 제한을 사용는 <ph id="ph2">`BlockDefault`</ph> 있는 경우 스키마의 속성입니다. |   | <ph id="ph3">`Extension`</ph>| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | <ph id="ph4">`Restriction`</ph>| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | <ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |       <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, 및 <ph id="ph3">`Union`</ph> 파생 메서드는이 속성에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The post-schema-validated infoset value.</source>
          <target state="translated">이후 스키마 유효성 검사 이후 정보 집합 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값에 <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the post-compilation <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this complex type.</source>
          <target state="translated">컴파일 이후을 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 복합 형식의 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt; property.</source>
          <target state="translated">이 함께 사용할 수 없습니다는 &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;속성.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The content model type that is one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">중 하나인 하는 콘텐츠 모델 유형에 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the content model of the complex type which holds the post-compilation value.</source>
          <target state="translated">컴파일 이후 값을 보유 하 고 복합 형식의 콘텐츠 모델을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the content in the post-schema-validation infoset.</source>
          <target state="translated">스키마 유효성 검사 이후 정보 집합의 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is set to <ph id="ph2">`true`</ph> on the <ph id="ph3">`ContentModel`</ph> property that has the type <ph id="ph4">`XmlSchemaComplexContent`</ph>, the value returned is <ph id="ph5">`Mixed`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`IsMixed`</ph> 속성이 <ph id="ph2">`true`</ph> 에 <ph id="ph3">`ContentModel`</ph> 속성 형식을 갖는 <ph id="ph4">`XmlSchemaComplexContent`</ph>, 반환 값은 <ph id="ph5">`Mixed`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is <ph id="ph2">`false`</ph>, the value is either <ph id="ph3">`Empty`</ph> or <ph id="ph4">`ElementOnly`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`IsMixed`</ph> 속성은 <ph id="ph2">`false`</ph>, 값은 <ph id="ph3">`Empty`</ph> 또는 <ph id="ph4">`ElementOnly`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type on the <ph id="ph1">`ContentModel`</ph> property has the type <ph id="ph2">`XmlSchemaSimpleContent`</ph>, then this value is always <ph id="ph3">`TextOnly`</ph>.</source>
          <target state="translated">경우에 입력 된 문자는 <ph id="ph1">`ContentModel`</ph> 속성의 형식이 <ph id="ph2">`XmlSchemaSimpleContent`</ph>,이 값은 항상 <ph id="ph3">`TextOnly`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ContentType`</ph> property must have one of the values shown in the following table.</source>
          <target state="translated"><ph id="ph1">`ContentType`</ph> 속성 다음 표에 표시 된 값 중 하나가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`TextOnly`</ph>|Text-only content.|   |<ph id="ph2">`Empty`</ph>|Empty content.|   |<ph id="ph3">`ElementOnly`</ph>|Element-only content.|   |<ph id="ph4">`Mixed`</ph>|Mixed content model.|</source>
          <target state="translated">| Enum | 설명 |   |----------|-----------------|   | <ph id="ph1">`TextOnly`</ph>| 텍스트 전용 콘텐츠가 있습니다. |   | <ph id="ph2">`Empty`</ph>| 빈 콘텐츠가. |   | <ph id="ph3">`ElementOnly`</ph>| 요소 전용 콘텐츠. |   | <ph id="ph4">`Mixed`</ph>| 혼합된 콘텐츠 모델입니다. |</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the content model for the complex type.</source>
          <target state="translated">복합 형식에 대 한 콘텐츠 모델의 컴파일 이후 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the particle that holds the post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">컴파일 이후 값을 포함 하는 파티클을 가져옵니다는 &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;입자.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ContentTypeParticle`</ph> is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</source>
          <target state="translated">이 <ph id="ph1">`ContentTypeParticle`</ph> 가장 많이 파생 된 형식 및 기본 복합 유형의 콘텐츠 모델 W3C XML 스키마 정의 언어 (XSD) 사양에 정의 된 규칙에 따라 해결 된 후에 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The particle for the content type.</source>
          <target state="translated">콘텐츠 형식에 대 한 파티클입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">컴파일 이후 값은 &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;입자.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the information that determines if the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element can be used in the instance document.</source>
          <target state="translated">있는지 여부를 확인 하는 정보를 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 문서에서 요소를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an element cannot use this <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element directly and must use a complex type that is derived from this <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>,이 요소를 사용할 수 없습니다 <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 요소를 직접이에서 파생 된 복합 형식을 사용 해야 하 고 <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</source>
          <target state="translated">복합 형식은 혼합된 콘텐츠 모델 (콘텐츠 내의 태그) 인지 여부를 결정 하는 정보를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indicates if character data can appear between the child elements of this <ph id="ph1">`complexType`</ph>.</source>
          <target state="translated">문자 데이터의이 자식 요소 사이 나타날 수 경우 나타냅니다 <ph id="ph1">`complexType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`simpleContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute is not allowed (<ph id="ph3">`false`</ph>).</source>
          <target state="translated">경우는 <ph id="ph1">`simpleContent`</ph> 요소는 자식 요소는 <ph id="ph2">`mixed`</ph> 특성을 사용할 수 없습니다 (<ph id="ph3">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`complexContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute can be overridden by the <ph id="ph3">`mixed`</ph> attribute on the <ph id="ph4">`complexContent`</ph> element.</source>
          <target state="translated">경우는 <ph id="ph1">`complexContent`</ph> 요소는 자식 요소는 <ph id="ph2">`mixed`</ph> 특성으로 재정의할 수 있습니다는 <ph id="ph3">`mixed`</ph> 특성에 <ph id="ph4">`complexContent`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if character data can appear between child elements of this complex type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>을 문자 데이터가 복합 형식의 자식 요소 사이 나타날 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the compositor type as one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">작성자 형식 중 하나로 설정 하거나 가져옵니다는 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 또는 <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Particles must be one of the following compositors:      |Element|Description|   |-------------|-----------------|   |<ph id="ph1">`group`</ph>|The complex type contains the elements defined in the referenced group.|   |<ph id="ph2">`sequence`</ph>|The complex type contains the elements defined in the specified sequence.|   |<ph id="ph3">`choice`</ph>|The complex type allows one of the elements specified in the <ph id="ph4">`choice`</ph> element.|   |<ph id="ph5">`all`</ph>|The complex type allows all of the elements specified in the <ph id="ph6">`all`</ph> element to appear once or not at all.|       This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt; property.</source>
          <target state="translated">파티클 다음 작성자 중 하나 여야 합니다: | 요소 | 설명 |   |-------------|-----------------|   | <ph id="ph1">`group`</ph>| 복합 형식 참조 된 그룹에 정의 된 요소를 포함 합니다. |   | <ph id="ph2">`sequence`</ph>| 복합 형식 지정된 된 시퀀스에 정의 된 요소를 포함 합니다. |   | <ph id="ph3">`choice`</ph>| 복합 형식에 지정 된 요소 중 하나를 허용 합니다.는 <ph id="ph4">`choice`</ph> 요소입니다. |   | <ph id="ph5">`all`</ph>| 복합 형식을 사용 하면 모든에 지정 된 요소는 <ph id="ph6">`all`</ph> 요소를 한 번만 나타나거나 전혀 나타나지 않도록 합니다. |       이 함께 사용할 수 없습니다는 &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;속성.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The compositor type.</source>
          <target state="translated">작성자 형식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>