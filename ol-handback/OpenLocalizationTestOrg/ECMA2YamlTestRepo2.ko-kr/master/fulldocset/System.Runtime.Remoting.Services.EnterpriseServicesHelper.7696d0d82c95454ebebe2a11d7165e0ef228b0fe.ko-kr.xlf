<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5575d02514ce404a67d98cd085d02bdd02cc55f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.Services.EnterpriseServicesHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89b32ce8e9fdf86e0fb1a9aa3de26e765f24c4fd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0023a1acf24219a0707a72a2c9b30d70030f7992</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides APIs that are needed for communication and operation with unmanaged classes outside of the <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">통신 및 관리 되지 않는 클래스 외부에서 사용 하 여 작업에 필요한 Api를 제공 된 <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates an instance of <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Services.EnterpriseServicesHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">인스턴스를 만들고 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Services.EnterpriseServicesHelper"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Constructs a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.ReturnMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified <bpt id="p2">&lt;xref href="System.Runtime.Remoting.Activation.IConstructionCallMessage"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">생성 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.ReturnMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 위치에서 <bpt id="p2">&lt;xref href="System.Runtime.Remoting.Activation.IConstructionCallMessage"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A construction call to the object from which the new <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.ReturnMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is returning.</source>
          <target state="translated">개체에 대 한 생성 호출 새 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.ReturnMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the object that is constructed with the construction call in <ph id="ph1">`ctorMsg`</ph>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성 호출을 사용 하 여 생성 되는 개체를 나타내는 <ph id="ph1">`ctorMsg`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Activation.IConstructionReturnMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returned from the construction call that is specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">ctorMsg</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Activation.IConstructionReturnMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 생성 호출에서 반환 되는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">ctorMsg</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Switches a <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> (CCW) from one instance of a class to another instance of the same class.</source>
          <target state="translated">스위치는 <bpt id="p1">[</bpt>COM 호출 가능 래퍼<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> (CCW) 같은 클래스의 다른 인스턴스에 클래스의 한 인스턴스에서 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A proxy that represents the old instance of a class that is referenced by a CCW.</source>
          <target state="translated">Ccw에서 참조 되는 클래스의 기존 인스턴스를 나타내는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A proxy that represents the new instance of a class that is referenced by a CCW.</source>
          <target state="translated">Ccw에 의해 참조 되는 클래스의 새 인스턴스를 나타내는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
          <target state="translated">직접 실행 호출자에 UnmanagedCode 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Wraps the specified <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> COM interface with a <bpt id="p2">[</bpt>Runtime Callable Wrapper<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> (RCW).</source>
          <target state="translated">지정 된 래핑합니다 <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 COM 인터페이스는 <bpt id="p2">[</bpt>런타임 호출 가능 래퍼<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> (RCW).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WrapIUnknownWithComObject method is similar to the &lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=fullName&gt; method, but does not attempt to maintain the identity of the unmanaged object.</source>
          <target state="translated">WrapIUnknownWithComObject 메서드는 비슷합니다는 &lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=fullName&gt;메서드, 하지만 관리 되지 않는 개체의 id를 유지 하려고 하지 않습니다.&lt;/xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, two calls with the same <ph id="ph1">`IUnknown`</ph> to the current method return two different RCWs, but two calls to the &lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A&gt; method with the same <ph id="ph2">`IUnknown`</ph> return the same RCW.</source>
          <target state="translated">동일한 예를 들어, 두 번 호출 <ph id="ph1">`IUnknown`</ph> 현재 메서드를 두 번 호출 하지만 두 가지 다른 Rcw 반환는 &lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A&gt;동일한 메서드 <ph id="ph2">`IUnknown`</ph> 동일한 RCW를 반환 합니다.&lt;/xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> COM interface to wrap.</source>
          <target state="translated">에 대 한 포인터는 <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 래핑하는 COM 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The RCW where the specified <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is wrapped.</source>
          <target state="translated">RCW에 지정 된 <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 래핑됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
          <target state="translated">직접 실행 호출자에 UnmanagedCode 권한이 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>