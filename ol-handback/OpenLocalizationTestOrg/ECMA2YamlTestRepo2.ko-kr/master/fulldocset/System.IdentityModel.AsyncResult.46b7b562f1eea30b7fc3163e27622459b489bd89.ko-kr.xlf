<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">852c3b0036a8798b470d242ab21ccdc5a6aaaab0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.AsyncResult.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6682829ecb250595231f99922c43dd50657952b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33148e8dfb5c90c69c04c810427321ece2c55956</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An abstract base class that implements the &lt;xref:System.IAsyncResult&gt; interface.</source>
          <target state="translated">추상 기본 클래스를 구현 하는 &lt;xref:System.IAsyncResult&gt;인터페이스.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Serves as a base class from which to derive &lt;xref:System.IAsyncResult&gt; objects that can be used for common asynchronous programming scenarios.</source>
          <target state="translated">파생 시키기 위한 기본 클래스 역할을 &lt;xref:System.IAsyncResult&gt;일반적인 비동기 프로그래밍 시나리오에 대해 사용할 수 있는 개체입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see the &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; interface.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;인터페이스.&lt;/xref:System.IAsyncResult?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.TypedAsyncResult%601&gt; class derives from AsyncResult.</source>
          <target state="translated">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;클래스 AsyncResult에서 파생 됩니다.&lt;/xref:System.IdentityModel.TypedAsyncResult%601&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize an instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that does not have a callback delegate or  a state object.</source>
          <target state="translated">인스턴스를 초기화 하는 파생된 클래스의 생성자에서 호출 된 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 콜백 대리자 또는 상태 개체를 갖지 않는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize an instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that does not have a callback delegate but does have  a state object.</source>
          <target state="translated">인스턴스를 초기화 하는 파생된 클래스의 생성자에서 호출 된 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 콜백 대리자는 없지만 상태 개체에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">한정 하거나 비동기 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize an instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that has a callback delegate and  a state object.</source>
          <target state="translated">인스턴스를 초기화 하는 파생된 클래스의 생성자에서 호출 된 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 콜백 대리자 및 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous operation completes.</source>
          <target state="translated">비동기 작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">한정 하거나 비동기 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">한정 하거나 비동기 작업에 대 한 정보를 포함 하는 사용자 정의 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see the &lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">한정 하거나 비동기 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Threading.WaitHandle&gt;비동기 작업이 완료 되기를 기다리는 데 사용 되는.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see the &lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">A &lt;xref:System.Threading.WaitHandle&gt;비동기 작업이 완료 되기를 기다리는 데 사용 되는.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call this version of complete when your asynchronous operation is complete and no exception was encountered.</source>
          <target state="translated">비동기 작업을 완료 한 없는 예외가 발생 했습니다.이 버전의 전체를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It updates the state of the operation and notifies the callback.</source>
          <target state="translated">작업의 상태를 업데이트 하 고 콜백이에 알립니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비동기 작업이 동기적으로; 완료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call this version of complete if you raise an exception during processing.</source>
          <target state="translated">처리 하는 동안 예외가 발생 하는 경우이 버전의 완료를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the &lt;xref:System.IdentityModel.AsyncResult.End*&gt; method.</source>
          <target state="translated">콜백을 알릴 외에도 캡처 예외 및 호출 하는 동안 throw 되 게 저장 된 &lt;xref:System.IdentityModel.AsyncResult.End*&gt;메서드.&lt;/xref:System.IdentityModel.AsyncResult.End*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비동기 작업이 동기적으로; 완료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The exception that occurred during the processing of the asynchronous operation.</source>
          <target state="translated">비동기 작업을 처리 중에 발생 한 예외입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">비동기 작업이 동기적으로 완료 되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see the &lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">자세한 내용은 참조는 &lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비동기 작업이 동기적으로; 완료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the current instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">현재 인스턴스에서 사용 하는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Called by the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult.Dispose"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and &lt;xref:System.IdentityModel.AsyncResult.Finalize*&gt; methods to release the managed and unmanaged resources used by the current instance of the <bpt id="p2">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">에 의해 호출 된 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult.Dispose"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 &lt;xref:System.IdentityModel.AsyncResult.Finalize*&gt;의 현재 인스턴스에서 사용 되는 스레드와 관리 되지 않는 리소스를 해제 하는 메서드는 <bpt id="p2">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스&lt;/xref:System.IdentityModel.AsyncResult.Finalize*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicates that this is an explicit call to Dispose.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Dispose 명시적으로 호출 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Call this method when the <ph id="ph1">`End`</ph> function for the asynchronous operation is complete.</source>
          <target state="translated">이 메서드를 호출 하는 경우는 <ph id="ph1">`End`</ph> 비동기 작업이 완료 될에 대해 작동 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It ensures that the asynchronous operation is complete, and does some common validation.</source>
          <target state="translated">비동기 작업이 완료 되며 몇 가지 일반적인 유효성 검사를 수행 되도록 조정 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; representing the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 작업의 상태를 나타내는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Allows the <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">허용 된 <bpt id="p1">&lt;xref href="System.IdentityModel.AsyncResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">비동기 작업이 완료 되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the operation is complete; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 작업을 완료 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>