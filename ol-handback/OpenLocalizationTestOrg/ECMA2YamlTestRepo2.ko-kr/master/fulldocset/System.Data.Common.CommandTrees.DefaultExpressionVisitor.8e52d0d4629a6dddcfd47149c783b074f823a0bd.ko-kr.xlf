<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1167b65ca5fefb16e8b3da6d6abc89e8782d16e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Common.CommandTrees.DefaultExpressionVisitor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">313f6a17b1cff3c07909afc48f08793ce3c84501</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2b268fab517546cdbbc95d630ab394bdd19317c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visits each element of an expression tree from a given root expression.</source>
          <target state="translated">지정된 된 루트 식에서 식 트리의 각 요소를 방문합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.</source>
          <target state="translated">요소가 변경 되 면 다시 루트에 트리는 다시 작성 되며 새 루트 식이 반환 됩니다. 그렇지 않은 경우 원래 루트 식 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.CommandTrees.DefaultExpressionVisitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Common.CommandTrees.DefaultExpressionVisitor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Represents an event when entering the scope for the expression visitor with specified scope variables.</source>
          <target state="translated">지정 된 범위 변수와 식 방문자에 대 한 범위를 입력할 때 이벤트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The collection of scope variables.</source>
          <target state="translated">범위 변수의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Exits the scope for the expression visitor.</source>
          <target state="translated">식 방문자에 대 한 범위를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Replaces an old expression with a new one for the expression visitor.</source>
          <target state="translated">이전 식이 식 방문자에 대 한 새 바꿉니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The old expression.</source>
          <target state="translated">이전 식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new expression.</source>
          <target state="translated">새 식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Represents an event when the variable is rebound for the expression visitor.</source>
          <target state="translated">식 방문자에 대 한 변수는 다시 바인딩할 때 이벤트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The location of the variable.</source>
          <target state="translated">변수 위치입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The reference of the variable where it is rebounded.</source>
          <target state="translated">Rebounded은 여기서 변수의 참조입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the logical AND expression.</source>
          <target state="translated">논리 AND 식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The logical AND expression.</source>
          <target state="translated">논리 AND 식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.</source>
          <target state="translated">지정된 된 입력된 집합에서의 각 요소에 대해 지정된 된 함수 호출의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The APPLY expression.</source>
          <target state="translated">적용 식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the arithmetic operation applied to numeric arguments.</source>
          <target state="translated">숫자 인수에 적용 된 산술 연산에 대 한 방문자 패턴 구현 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The arithmetic expression.</source>
          <target state="translated">산술 식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the When, Then, and Else clauses.</source>
          <target state="translated">visitor 패턴에 대 한 구현 When, 그리고 Else 절.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The case expression.</source>
          <target state="translated">Case 식입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the type conversion of a single argument to the specified type.</source>
          <target state="translated">지정된 된 형식으로의 단일 인수 형식 변환의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The cast expression.</source>
          <target state="translated">캐스트 식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the comparison operation applied to two arguments.</source>
          <target state="translated">두 인수에 적용 된 비교 작업의 visitor 패턴 구현 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The cast expression.</source>
          <target state="translated">캐스트 식입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the different kinds of constants.</source>
          <target state="translated">다른 종류의 상수의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The constant expression.</source>
          <target state="translated">상수 식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the unconditional join operation between the given collection arguments.</source>
          <target state="translated">지정된 된 컬렉션 인수 사이의 비 조건부 조인 연산의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The join expression.</source>
          <target state="translated">조인 식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.</source>
          <target state="translated">지정된 된 참조에 따라 엔터티를 검색 하는 식의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The DEREF expression.</source>
          <target state="translated">DEREF 식입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the removed duplicate elements from the specified set argument.</source>
          <target state="translated">지정된 된 집합 인수에서 중복 제거 된 요소에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The distinct expression.</source>
          <target state="translated">Distinct 식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.</source>
          <target state="translated">지정 된 집합 인수를 singleton으로 변환 하는 단일 항목으로 지정된 된 집합 인수 변환의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The element expression.</source>
          <target state="translated">요소 식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.</source>
          <target state="translated">기본 엔터티 인스턴스에서 참조를 추출 하는 식의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The entity reference expression.</source>
          <target state="translated">엔터티 참조 식입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the set subtraction operation between the left and right operands.</source>
          <target state="translated">왼쪽 및 오른쪽 피연산자 사이의 집합 빼기 연산의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the basic functionality required by expression types.</source>
          <target state="translated">식 형식에 필요한 기본 기능에 대 한의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a predicate applied to filter an input set.</source>
          <target state="translated">입력된 집합을 필터링에 적용 되는 조건자의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The filter expression.</source>
          <target state="translated">필터 식입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for an invocation of a function.</source>
          <target state="translated">함수의 호출의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The function expression.</source>
          <target state="translated">함수 식입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a group by operation.</source>
          <target state="translated">작업 그룹의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the set intersection operation between the left and right operands.</source>
          <target state="translated">왼쪽 및 오른쪽 피연산자 사이의 교집합 연산의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for an empty set determination applied to a single set argument.</source>
          <target state="translated">단일 집합 인수에 적용 되는 집합이 빈 집합 확인의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the null determination applied to a single argument.</source>
          <target state="translated">구현의 visitor 패턴을 확인 하는 null 프로세스가 단일 인수에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the type comparison of a single argument against the specified type.</source>
          <target state="translated">지정된 된 형식에 대 한 단일 인수의 형식 비교의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</source>
          <target state="translated">내부 조인, 외부 조인, 왼쪽 또는 완전 외부 조인 연산이 지정된 된 조인 조건에 지정 된 컬렉션 인수 사이의 대 한 방문자 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.</source>
          <target state="translated">DbExpression 개체로 나타낸 인수를 람다 함수는 응용 프로그램의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.</source>
          <target state="translated">선택적 이스케이프 문자열을 사용 하 여 지정 된 패턴에 대 한 문자열 비교의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.</source>
          <target state="translated">지정 된 제한 값으로 인수 컬렉션의 요소 수가 제한에 대 한의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.</source>
          <target state="translated">집합 및 레코드 형식을 포함 하 여 지정 된 형식의 새 인스턴스를 생성의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the logical NOT of a single Boolean argument.</source>
          <target state="translated">논리의 visitor 패턴을 구현 하지 단일 인수의 부울입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a reference to a typed null literal.</source>
          <target state="translated">형식화 된 null 리터럴에 대 한 참조의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.</source>
          <target state="translated">지정된 된 집합 인수에서 지정 된 형식의 요소를 검색의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the logical OR of two Boolean arguments.</source>
          <target state="translated">논리 또는 두 개의 부울 인수의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.</source>
          <target state="translated">구현의 visitor 패턴을 매개 변수에 대 한 참조에 대 한이 식을 포함 하는 명령 트리에 선언 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the projection of a given input set over the specified expression.</source>
          <target state="translated">지정된 된 식을 통해 설정 되며 지정된 된 입력의 프로젝션의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for retrieving an instance property.</source>
          <target state="translated">인스턴스 속성을 검색 하기 위한의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.</source>
          <target state="translated">지정된 된 입력된 집합의 요소를 통해 지정된 된 종류의 수량자 작업에 대 한의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.</source>
          <target state="translated">설정 엔터티 내에서 특정 인스턴스에 대 한 강력한 형식의 참조의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the retrieval of the key value from the underlying reference value.</source>
          <target state="translated">기본 참조 값에서 키 값을 검색의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the navigation of a relationship.</source>
          <target state="translated">관계의 탐색의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.</source>
          <target state="translated">구현 엔터티 집합 또는 관계를 통해 검색에 대 한 방문자 패턴 때문에 설정할 대상 속성으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the skip expression.</source>
          <target state="translated">Skip 식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a sort key that can be used as part of the sort order.</source>
          <target state="translated">정렬 순서의 일부로 사용할 수 있는 정렬 키의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.</source>
          <target state="translated">다형 인수에 적용 되는 형식 변환 작업의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the set union operation between the left and right operands.</source>
          <target state="translated">왼쪽 및 오른쪽 피연산자 사이의 집합 union 연산의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for a reference to a variable that is currently in scope.</source>
          <target state="translated">현재 범위에 있는 변수에 대 한 참조의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The implemented visitor.</source>
          <target state="translated">구현 된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the aggregate.</source>
          <target state="translated">집계의 visitor 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The aggregate.</source>
          <target state="translated">집계 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the entity set.</source>
          <target state="translated">구현 하는 엔터티에 대 한의 visitor 패턴을 설정합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The entity set.</source>
          <target state="translated">엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the expression.</source>
          <target state="translated">식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for expression binding.</source>
          <target state="translated">바인딩 식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The expression binding.</source>
          <target state="translated">식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the expression binding list.</source>
          <target state="translated">바인딩 목록 식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The expression binding list.</source>
          <target state="translated">식 바인딩 목록입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the expression list.</source>
          <target state="translated">목록 식의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The expression list.</source>
          <target state="translated">식 목록입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the function.</source>
          <target state="translated">함수에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The function metadata.</source>
          <target state="translated">함수 메타 데이터입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the function aggregate.</source>
          <target state="translated">함수 집계에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The aggregate.</source>
          <target state="translated">집계 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the group aggregate.</source>
          <target state="translated">그룹 집계의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The aggregate.</source>
          <target state="translated">집계 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the group expression binding.</source>
          <target state="translated">그룹 식 바인딩의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The binding.</source>
          <target state="translated">바인딩입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the Lambda function.</source>
          <target state="translated">람다 함수에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The lambda function.</source>
          <target state="translated">람다 함수입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the sort clause.</source>
          <target state="translated">정렬 절의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The sort clause.</source>
          <target state="translated">정렬 절입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the sort order.</source>
          <target state="translated">정렬 순서에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The sort order.</source>
          <target state="translated">정렬 순서입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the type.</source>
          <target state="translated">유형에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The type.</source>
          <target state="translated">유형</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Implements the visitor pattern for the type usage.</source>
          <target state="translated">형식 사용에 대 한의 visitor 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The type.</source>
          <target state="translated">유형</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현 된 방문자 패턴입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>