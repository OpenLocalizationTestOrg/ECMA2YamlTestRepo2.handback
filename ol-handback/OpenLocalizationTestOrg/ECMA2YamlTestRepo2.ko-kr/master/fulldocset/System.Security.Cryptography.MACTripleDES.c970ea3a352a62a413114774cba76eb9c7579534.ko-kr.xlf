<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf43f36b514d905ff3c98a97006797b60cffa672</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.MACTripleDES.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39a6a6995608710f0164591dbdd1eac3547e4c11</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85c91593e9659fbb24a2c8a6d10657df5cb02d2b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Computes a Message Authentication Code (MAC) using <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the input data <bpt id="p2">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하 여 메시지 인증 코드 (MAC) 계산 <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 입력된 데이터에 대 한 <bpt id="p2">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">MAC 비밀 키를 공유 하는 발신자와 수신자 보안 되지 않은 채널을 통해 보낸 메시지가 훼손 되었는지 여부를 확인 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender computes the MAC for the original data, and sends both as a single message.</source>
          <target state="translated">보낸 사람에 게는 원본 데이터에 대 한 MAC을 계산 하 고 모두 단일 메시지로 보냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</source>
          <target state="translated">수신자는 MAC를 받은 메시지에 대해 다시 계산 하 고 계산 된 MAC에 전송 된 MAC과 일치 하는지 확인</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</source>
          <target state="translated">비밀 키의 지식이 없어도 메시지를 변경 하 고 올바른 MAC 재현 하기 때문에 데이터 또는 불일치 상태가 MAC 결과에 변경</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the codes match, the message is authenticated.</source>
          <target state="translated">따라서 코드가 일치 하는 경우에 메시지가 인증 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>MACTripleDES uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</source>
          <target state="translated">MACTripleDES은 16 또는 24 바이트 long, 해시 시퀀스 길이 8 바이트를 생성 하는 키를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor uses the default implementation of &lt;xref:System.Security.Cryptography.TripleDES&gt;.</source>
          <target state="translated">이 생성자는 &lt;xref:System.Security.Cryptography.TripleDES&gt;.&lt;/xref:System.Security.Cryptography.TripleDES&gt; 의 기본 구현을 사용합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key data.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 키 데이터를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor uses the default implementation of &lt;xref:System.Security.Cryptography.TripleDES&gt;.</source>
          <target state="translated">이 생성자는 &lt;xref:System.Security.Cryptography.TripleDES&gt;.&lt;/xref:System.Security.Cryptography.TripleDES&gt; 의 기본 구현을 사용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`rgbKey`</ph> parameter must be 16 or 24 bytes in length.</source>
          <target state="translated"><ph id="ph1">`rgbKey`</ph> 매개 변수는 길이가 16 또는 24 바이트 여야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The secret key for <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryption.</source>
          <target state="translated">에 대 한 비밀 키 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbKey</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbKey</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key data and using the specified implementation of <bpt id="p2">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 키 데이터 및 지정 된 구현의 사용 하 여 <bpt id="p2">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`strTripleDES`</ph> parameter is the friendly name of the &lt;xref:System.Security.Cryptography.TripleDES&gt; implementation type.</source>
          <target state="translated"><ph id="ph1">`strTripleDES`</ph> 매개 변수는 이름이 고 &lt;xref:System.Security.Cryptography.TripleDES&gt;구현 형식.&lt;/xref:System.Security.Cryptography.TripleDES&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation is System.Security.Cryptography.TripleDES.</source>
          <target state="translated">기본 구현은 System.Security.Cryptography.TripleDES입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`rgbKey`</ph> parameter must be 16 or 24 bytes in length.</source>
          <target state="translated"><ph id="ph1">`rgbKey`</ph> 매개 변수는 길이가 16 또는 24 바이트 여야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation to use.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용할 구현입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The secret key for <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryption.</source>
          <target state="translated">에 대 한 비밀 키 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbKey</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbKey</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">strTripleDES</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid name of a <bpt id="p2">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">strTripleDES</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수의 올바른 이름이 아닙니다.는 <bpt id="p2">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">사용 하는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">`Finalize`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 disposing 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>호출 <ph id="ph2">`Dispose`</ph> 삭제로 설정 된 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.MACTripleDES&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Security.Cryptography.MACTripleDES&gt;참조.&lt;/xref:System.Security.Cryptography.MACTripleDES&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is called from an <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> implementation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메서드가 호출 되는 경우는 <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 구현, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Routes data written to the object into the <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryptor for computing the Message Authentication Code (MAC).</source>
          <target state="translated">개체에 쓰여진 데이터의 경로 <bpt id="p1">&lt;xref href="System.Security.Cryptography.TripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 인증 코드 (MAC) 계산에 대 한 암호기입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The input data.</source>
          <target state="translated">입력된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns the computed Message Authentication Code (MAC) after all data is written to the object.</source>
          <target state="translated">반환 된 계산된 코드 MAC (메시지 인증) 후 모든 데이터 개체에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can read this value only after all data is written, and you cannot write more data afterward.</source>
          <target state="translated">모든 데이터가 기록 되 고 나중에 더 많은 데이터를 쓸 수 없습니다 후에이 값을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new instance of &lt;xref:System.Security.Cryptography.MACTripleDES&gt; for each separate segment of data to compute the MAC for that data.</source>
          <target state="translated">새 인스턴스를 만들고 &lt;xref:System.Security.Cryptography.MACTripleDES&gt;해당 데이터에 대 한 MAC 계산 하기 위해 데이터의 각 개별 세그먼트에 대 한.&lt;/xref:System.Security.Cryptography.MACTripleDES&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The computed MAC.</source>
          <target state="translated">계산 된 MAC</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes an instance of <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">인스턴스를 초기화 <bpt id="p1">&lt;xref href="System.Security.Cryptography.MACTripleDES"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the default constructor for the class.</source>
          <target state="translated">이 메서드는 클래스에 대 한 기본 생성자를 호출합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets the padding mode used in the hashing algorithm.</source>
          <target state="translated">해시 알고리즘에 사용 된 패딩 모드를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most plain text messages do not consist of a number of bytes that completely fill blocks.</source>
          <target state="translated">대부분의 일반 텍스트 메시지 완전히 블록을 작성 하는 바이트 수로 구성 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Often, there are not enough bytes to fill the last block.</source>
          <target state="translated">종종 마지막 블록을 채울 바이트 수가 충분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this happens, a padding string is added to the text.</source>
          <target state="translated">이 경우 안쪽 여백 문자열을 텍스트에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</source>
          <target state="translated">예를 들어 블록 길이가 64 비트 마지막 블록 40 비트만 포함 하는 경우 24 비트의 패딩이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Security.Cryptography.PaddingMode&gt; for a description of specific modes.</source>
          <target state="translated">참조 &lt;xref:System.Security.Cryptography.PaddingMode&gt;특정 모드에 대 한.&lt;/xref:System.Security.Cryptography.PaddingMode&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt; property.</source>
          <target state="translated">이 필드는 &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt;속성.&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The padding mode used in the hashing algorithm.</source>
          <target state="translated">해시 알고리즘에 사용 된 패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The property cannot be set because the padding mode is invalid.</source>
          <target state="translated">패딩 모드 잘못 되어 속성을 설정할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>