<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b57045d08ea0a16088d5cd2fc0ae01f4bee9e74</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlSchemaException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b34b2e30a09bcee2aa0796fb648dc7d48ad5768f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9dbe9cfd6004d91e84edc43f47fb05050674de5b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.</source>
          <target state="translated">바인딩 시스템 또는 XAML 위한 다른 스키마 표현 시스템 예외 스키마 컨텍스트를 보고 하는 경우 throw 되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XamlSchemaException is thrown by several cases in the CLR binding support classes that provide the schema context for .NET Framework XAML Services (&lt;xref:System.Xaml.XamlXmlReader&gt;, &lt;xref:System.Xaml.XamlObjectWriter&gt;, or &lt;xref:System.Xaml.XamlServices&gt;).</source>
          <target state="translated">.NET Framework XAML 서비스에 대 한 스키마 컨텍스트를 제공 하는 CLR 바인딩 지원 클래스에 여러 개의 사례에서 throw 되는 XamlSchemaException (&lt;xref:System.Xaml.XamlXmlReader&gt;, &lt;xref:System.Xaml.XamlObjectWriter&gt;, 또는 &lt;xref:System.Xaml.XamlServices&gt;).&lt;/xref:System.Xaml.XamlServices&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlXmlReader&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A XamlSchemaException is typically passed as the inner exception for other exceptions, such as the &lt;xref:System.Xaml.XamlMember.IsUnknown%2A?displayProperty=fullName&gt;-true property for a &lt;xref:System.Xaml.XamlObjectWriterException&gt;, so it should be uncommon to catch a XamlSchemaException directly unless you are implementing a component such as a specialized object writer.</source>
          <target state="translated">XamlSchemaException은 일반적으로 변수로 전달 된 다른 예외에 대 한 내부 예외와 같은 &lt;xref:System.Xaml.XamlMember.IsUnknown%2A?displayProperty=fullName&gt;-true 속성을 &lt;xref:System.Xaml.XamlObjectWriterException&gt;이므로 특수 개체 작성기와 같은 구성 요소를 구현 하는 경우가 아니면는 XamlSchemaException를 직접 catch에 공통적으로 적용 해야 합니다.&lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlMember.IsUnknown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a system-supplied message that describes the error.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류를 설명 하는 시스템 제공 메시지로 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified message that describes the error.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 메시지 오류를 설명 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with serialized data.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> serialize 된 데이터 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">직렬화 된 개체 데이터를 보유 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대 한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 오류 메시지와 해당 예외의 원인인 내부 예외에 대 한 참조를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the &lt;xref:System.Exception.InnerException%2A&gt; property.</source>
          <target state="translated">이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 &lt;xref:System.Exception.InnerException%2A&gt;속성.&lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Exception.InnerException%2A&gt; property returns the same value that is passed into the constructor, or <ph id="ph1">`null`</ph> if the &lt;xref:System.Exception.InnerException%2A&gt; property does not supply the inner exception value to the constructor.</source>
          <target state="translated">&lt;xref:System.Exception.InnerException%2A&gt;속성은 생성자에 전달 되는 동일한 값을 반환 하거나 <ph id="ph1">`null`</ph> 경우는 &lt;xref:System.Exception.InnerException%2A&gt;생성자에 내부 예외 값을 제공 하지 않는.&lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`innerException`</ph> parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> block that handles the inner exception.</source>
          <target state="translated">경우는 <ph id="ph1">`innerException`</ph> 매개 변수가 않습니다 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>에서 현재 예외가 발생 한 <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 내부 예외를 처리 하는 블록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>