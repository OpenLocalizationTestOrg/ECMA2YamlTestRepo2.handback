<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">046eb379d90f299cdbdea0ef622a435d6fb90b71</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Packaging.EncryptedPackageEnvelope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c4487642f80ac0f09e249c6897d1c2641441865</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88f6b14549c388a387379a50f0d05f01b76dcc37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">암호화 된 패키지를 포함 하는 OLE 복합 파일을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>EncryptedPackageEnvelope has no public constructors.</source>
          <target state="translated">EncryptedPackageEnvelope 공용에 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An EncryptedPackageEnvelope is created by use of the static &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;, &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;, or &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt; methods.</source>
          <target state="translated">EncryptedPackageEnvelope 정적을 사용 하 여 만들어집니다. &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;, &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;, 또는 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;메서드.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">암호화 된 패키지와 보유 하는 OLE 복합 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the specified stream.</source>
          <target state="translated">만들고 반환는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스트림에서 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">현재 사용자가 새 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The stream on which to create the file.</source>
          <target state="translated">파일을 만들 스트림입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함 된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">작업을 결정 하는 개체는 현재 사용자는 암호화 된 내용에 대해 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새로 만든 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>읽기/쓰기 액세스를 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and gives it the specified file name.</source>
          <target state="translated">만들고 반환는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 고 지정된 된 파일 이름을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">현재 사용자가 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 복합 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함 된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">작업을 결정 하는 개체는 현재 사용자는 암호화 된 내용에 대해 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새로 만든 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">만들고 반환는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (에 지정된 된 스트림)를 사용 하는 지정 된 암호화 되지 않은 패키지 콘텐츠로 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">현재 사용자가 새 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The stream on which to create the file.</source>
          <target state="translated">파일을 만들 스트림입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">기존의 암호화 되지 않은 패키지를 나타내는 스트림.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함 된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">작업을 결정 하는 개체는 현재 사용자는 암호화 된 내용에 대해 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새로 만든 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>읽기/쓰기 액세스를 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">만들고 반환는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 암호화 되지 않은 패키지를 사용 하 여 콘텐츠로 사용 하 고 지정된 된 파일 이름을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">현재 사용자가 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 복합 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">기존의 암호화 되지 않은 패키지를 나타내는 스트림.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함 된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">작업을 결정 하는 개체는 현재 사용자는 암호화 된 내용에 대해 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새로 만든 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when finished with a &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.</source>
          <target state="translated">에 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; 완료 되 면 Dispose를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; in an unusable state.</source>
          <target state="translated">Dispose 메서드는 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;불안정 한 상태가.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; was occupying.</source>
          <target state="translated">Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;차지한.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; object's &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;개체의 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph>메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 와 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;참조.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">읽기, 쓰기에 대 한 액세스 또는 둘 모두로 파일을 연 있는지 여부를 지정 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that was used to open the file.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 파일을 열에 사용 된 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Flush the stream for both the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its package content.</source>
          <target state="translated">모두에 대 한 스트림 플러시는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 패키지 내용입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the encrypted package inside the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">내의 암호화 된 패키지를 가져옵니다는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the envelope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 봉투에 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">지정된 된 스트림에 암호화 된 패키지 스트림 사용 하는 OLE 복합 파일 인지를 지정 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The stream that is tested.</source>
          <target state="translated">테스트는 스트림.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 스트림이 암호화 패키지 스트림 사용 하는 OLE 복합 파일 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">지정된 된 파일 암호화 된 패키지 스트림 사용 하는 OLE 복합 파일 인지를 지정 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The file that is tested.</source>
          <target state="translated">테스트는 파일입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 파일이 암호화 된 패키지 스트림 사용 하는 OLE 복합 파일 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">지정한 스트림에 암호화 된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">스트림 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">암호화 된 패키지를 포함 하는 스트림.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">읽기 전용 모드로으로 지정한 파일에 암호화 된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">열려 있는 파일은 읽기 전용 이며 공유 해제 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화 된 패키지를 포함 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">공유 하지 않고 지정된 된 액세스와 지정된 된 파일에서 암호화 된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opened file is unshared.</source>
          <target state="translated">열려 있는 파일을 공유 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화 된 패키지를 포함 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The type of access.</source>
          <target state="translated">액세스 형식입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">지정 된 액세스를 제공 및 공유 지정한 파일에 암호화 된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화 된 패키지를 포함 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The type of access.</source>
          <target state="translated">액세스 형식입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The type of sharing.</source>
          <target state="translated">공유의 형식입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">패키지 속성을 (예: 제목 및 주제) 권한 관리 문서의 핵심을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">이러한 핵심 속성 표준 OLE 속성 스트림 (\005SummaryInformation 및 \005DocumentSummaryInformation)에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">핵심 속성은 패키지 자체에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">두 속성 집합의 동기화를 유지 하는 응용 프로그램의 작업은</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.PackageProperties"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the package.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.PackageProperties"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 패키지에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the rights management information stored in the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; specifically, the <bpt id="p2">&lt;xref href="System.Security.RightsManagement.PublishLicense"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref href="System.Security.RightsManagement.UseLicense"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated">권한을에 저장 된 관리 정보를 가져옵니다는 <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 특히는 <bpt id="p2">&lt;xref href="System.Security.RightsManagement.PublishLicense"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref href="System.Security.RightsManagement.UseLicense"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>보호 되는 권한 관리를 구체화 하는 OLE 복합 파일에 저장 된 패키지</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.RightsManagementInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the package.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.RightsManagementInformation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 패키지에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">암호화 된 패키지 외부 복합 파일 스트림에 대 한 액세스를 제공 하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Packaging.StorageInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Packaging.StorageInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> OLE 복합 파일에 암호화 된 패키지 외부에 있는 스트림을 나타내는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>