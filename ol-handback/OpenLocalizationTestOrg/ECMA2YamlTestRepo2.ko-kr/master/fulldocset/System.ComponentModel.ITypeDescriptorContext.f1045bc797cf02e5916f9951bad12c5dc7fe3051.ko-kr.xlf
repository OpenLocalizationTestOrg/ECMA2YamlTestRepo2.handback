<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5c8b0193c975ae9c0ef7ac16d15c75881e5f6b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.ITypeDescriptorContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93f8836400d1d07826ee4632f17e6a0dba23087d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4f1824898a8b446b520388c21c8c45bbd9d2665</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides contextual information about a component, such as its container and property descriptor.</source>
          <target state="translated">컨테이너 및 속성 설명자와 같이 구성 요소에 대 한 컨텍스트 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ITypeDescriptorContext interface provides contextual information about a component.</source>
          <target state="translated">ITypeDescriptorContext 인터페이스는 구성 요소에 대 한 컨텍스트 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>ITypeDescriptorContext is typically used at design time to provide information about a design-time container.</source>
          <target state="translated">ITypeDescriptorContext은 디자인 타임 컨테이너에 대 한 정보를 제공 하도록 디자인 타임에 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is commonly used in type conversion.</source>
          <target state="translated">이 인터페이스는 일반적으로 형식 변환에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see &lt;xref:System.ComponentModel.TypeConverter&gt;.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:System.ComponentModel.TypeConverter&gt;.&lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Do not rely on the presence of this interface when you design a type converter.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 형식 변환기를 디자인할 때이 인터페이스의 존재 여부에 의존 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a particular interface, property, or service is necessary but not available, the type converter should return <ph id="ph1">`null`</ph> rather than throw an exception.</source>
          <target state="translated">형식 변환기를 반환 해야 하는 경우 특정 인터페이스, 속성 또는 서비스를 필요 하지만 사용할 수 없습니다 <ph id="ph1">`null`</ph> 예외를 throw 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface's properties can return <ph id="ph1">`null`</ph> at any time, and you should plan for this.</source>
          <target state="translated">이 인터페이스의이 속성을 반환할 수 <ph id="ph1">`null`</ph> 언제 든 지 되며이 대 한 계획 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the container representing this <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> request.</source>
          <target state="translated">이 나타내는 컨테이너를 가져옵니다 <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Container property gets the logical container of the component associated with the type descriptor.</source>
          <target state="translated">컨테이너 속성 형식 설명자와 연결 된 구성의 논리적 컨테이너를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the set of objects for this <bpt id="p2">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if there is no container or if the <bpt id="p4">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> does not use outside objects.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 개체의 집합으로 <bpt id="p2">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 컨테이너가 없으면 또는 경우는 <bpt id="p4">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 외부 개체를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the object that is connected with this type descriptor request.</source>
          <target state="translated">이 형식 설명자 요청과 연결 된 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Instance property gets the object that is invoking the &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; interface.</source>
          <target state="translated">인스턴스 속성을 호출 하는 개체를 가져옵니다는 &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;인터페이스.&lt;/xref:System.ComponentModel.ITypeDescriptorContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a type converter is given a &lt;xref:System.Drawing.Color&gt; to convert, Instance returns the actual instance of the control that is using the &lt;xref:System.Drawing.Color&gt;.</source>
          <target state="translated">예를 들어, 형식 변환기 &lt;xref:System.Drawing.Color&gt;인스턴스를 변환 하려면 &lt;xref:System.Drawing.Color&gt;.&lt;/xref:System.Drawing.Color&gt; 사용 하는 컨트롤의 실제 인스턴스를 반환&lt;/xref:System.Drawing.Color&gt; 하기 위해 지정 된 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can subsequently query the control for further information about its services and its &lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;.</source>
          <target state="translated">서비스 및 해당 &lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;.&lt;/xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt; 에 대 한 자세한 내용은 대 한 제어를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The object that invokes the method on the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no object responsible for the call.</source>
          <target state="translated">메서드를 호출 하는 개체는 <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 호출에 대 한 책임 개체인 경우.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IComponentChangeService.ComponentChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IComponentChangeService.ComponentChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the OnComponentChanged method to send notification that an instance of an object has changed.</source>
          <target state="translated">개체의 인스턴스가 변경 알림 보내기 하려면 OnComponentChanged 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnComponentChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnComponentChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IComponentChangeService.ComponentChanging"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IComponentChangeService.ComponentChanging"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the OnComponentChanging method to send notification that an instance of an object is about to be changed.</source>
          <target state="translated">개체의 인스턴스를 변경할 수는 알림을 보내도록 OnComponentChanging 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns a value indicating whether this object can be changed.</source>
          <target state="translated">이 메서드는 또한이 개체를 변경할 수 있는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`false`</ph> is returned, do not change the object.</source>
          <target state="translated">때 <ph id="ph1">`false`</ph> 가 반환 되는 개체를 변경 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnComponentChanging method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnComponentChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this object can be changed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 개체를 변경할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with the given context item.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결 된 지정된 된 컨텍스트 항목입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the given context item; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no <bpt id="p3">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> responsible for the call.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 항목, 그렇지 않으면 지정된 된 컨텍스트를 설명 하는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 없는 경우 없는 <bpt id="p3">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 호출을 담당 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>