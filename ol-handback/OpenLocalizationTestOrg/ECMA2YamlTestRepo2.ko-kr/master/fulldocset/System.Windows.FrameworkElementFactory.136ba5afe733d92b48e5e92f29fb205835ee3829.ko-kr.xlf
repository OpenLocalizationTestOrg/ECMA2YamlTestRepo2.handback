<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c0af1c59b9db4806475c1f99407ebd69f4d070a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkElementFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98fe49c3d5fdc84efc2a36670a00720eece6c549</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db9633333df4326a1bf00e363460ecdf3fd2649c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports the creation of templates.</source>
          <target state="translated">서식 파일 만들기를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a deprecated way to programmatically create templates, which are subclasses of &lt;xref:System.Windows.FrameworkTemplate&gt; such as &lt;xref:System.Windows.Controls.ControlTemplate&gt; or &lt;xref:System.Windows.DataTemplate&gt;; not all of the template functionality is available when you create a template using this class.</source>
          <target state="translated">이 클래스는 사용 되지 않는 프로그래밍 방식으로 템플릿과 다릅니다 &lt;xref:System.Windows.FrameworkTemplate&gt; &lt;xref:System.Windows.Controls.ControlTemplate&gt; &lt;xref:System.Windows.DataTemplate&gt;;이 클래스를 사용 하 여 템플릿을 만들 때 사용할 수는 템플릿 기능 중 일부만&lt;/xref:System.Windows.DataTemplate&gt; 또는&lt;/xref:System.Windows.Controls.ControlTemplate&gt; 같은&lt;/xref:System.Windows.FrameworkTemplate&gt; 서브 클래스를 만드는 방법</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to programmatically create a template is to load <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> from a string or a memory stream using the &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; method of the &lt;xref:System.Windows.Markup.XamlReader&gt; class.</source>
          <target state="translated">권장 하는 프로그래밍 방식으로 템플릿을 만드는 방법은 로드할 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 문자열이 나 &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; &lt;xref:System.Windows.Markup.XamlReader&gt;클래스&lt;/xref:System.Windows.Markup.XamlReader&gt; 의 메서드&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt; 를 사용 하 여 메모리 스트림을</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified text to produce.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 지정 된 텍스트를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The text string to produce.</source>
          <target state="translated">되려면 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 클래스</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The type of instance to create.</source>
          <target state="translated">만들 인스턴스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Type&gt; and name.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 &lt;xref:System.Type&gt;및 이름입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type of instance to create.</source>
          <target state="translated">만들 인스턴스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The style identifier.</source>
          <target state="translated">스타일 식별자입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the given routed event to the instances created by this factory.</source>
          <target state="translated">지정된 된 라우트된 이벤트에 대 한 이벤트 처리기를이 팩터리에서 만든 인스턴스에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event being handled.</source>
          <target state="translated">처리 중인 라우트된 이벤트에 대 한 개체 식별자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">처리기 구현에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the given routed event to the instances created by this factory, with the option of having the provided handler be invoked even in cases of routed events that had already been marked as handled by another element along the route.</source>
          <target state="translated">제공된 된 처리기가 이미 것으로 표시 된 경로 따라 다른 요소에서 처리 된 라우트된 이벤트의 경우에도 호출할 수 있는 옵션과 함께이 팩터리에서 만든 인스턴스에 지정된 된 라우트된 이벤트에 대 한 이벤트 처리기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event being handled.</source>
          <target state="translated">처리 중인 라우트된 이벤트에 대 한 개체 식별자입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">처리기 구현에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Whether to invoke the handler in cases where the routed event has already been marked as handled in its arguments object.</source>
          <target state="translated">여기서 라우트된 이벤트가 이미 됨으로 표시 된 해당 인수 개체에서 처리 하는 경우에서 처리기를 호출할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to invoke the handler even when the routed event is marked handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>도 처리기를 호출 하 고, 라우트된 이벤트가 표시 되 면 처리 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Asking to handle already-handled routed events is not common.</source>
          <target state="translated">이미 처리 된 라우트된 이벤트를 처리 하는 흔하지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds a child factory to this factory.</source>
          <target state="translated">이 팩터리를 자식 팩터리를 추가합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to add as a child.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 자식으로 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the first child factory.</source>
          <target state="translated">첫 번째 자식 팩터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FirstChild"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FirstChild"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> the first child factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 첫 번째 자식 팩터리입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this object is in an immutable state.</source>
          <target state="translated">이 개체가 변경 불가능 한 상태에서 인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_IsSealed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_IsSealed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this object is in an immutable state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 개체는 변경할 수 없는 상태 이면 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a template item.</source>
          <target state="translated">서식 파일 항목의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A string that is the template identifier.</source>
          <target state="translated">템플릿 식별자는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the next sibling factory.</source>
          <target state="translated">다음 형제 팩터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_NextSibling"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_NextSibling"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the next sibling factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다음 형제 팩터리입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the parent <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">부모를 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Parent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Parent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the parent factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 부모 팩터리입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Removes an event handler from the given routed event.</source>
          <target state="translated">지정된 된 라우트된 이벤트에서 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This applies to the instances created by this factory.</source>
          <target state="translated">이를이 팩터리에서 만든 인스턴스에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event.</source>
          <target state="translated">라우트된 이벤트에 대 한 개체 식별자입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Sets up data binding on a property.</source>
          <target state="translated">데이터 바인딩 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Identifies the property where the binding should be established.</source>
          <target state="translated">바인딩을 해야 설정할 속성을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Description of the binding.</source>
          <target state="translated">바인딩 설명입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Set up a dynamic resource reference on a child property.</source>
          <target state="translated">자식 속성에서 동적 리소스 참조를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The property to which the resource is bound.</source>
          <target state="translated">리소스 연결 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Sets the value of a dependency property.</source>
          <target state="translated">종속성 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The dependency property identifier of the property to set.</source>
          <target state="translated">설정할 속성의 종속성 속성 식별자입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The new value.</source>
          <target state="translated">새 값입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the text string to produce.</source>
          <target state="translated">되려면 텍스트 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Text"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Text"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The text string to produce.</source>
          <target state="translated">되려면 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the objects this factory produces.</source>
          <target state="translated">이 팩터리에서 생성 하는 개체의 유형을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Type"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Type"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type of the objects this factory produces.</source>
          <target state="translated">이 팩터리에서 생성 하는 개체의 형식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>