<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18db866c7fc767d96060c227092af2e5506fdd8c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.IObjectReference.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">474c7d03921d0c2d573777fc511b5a4bc9c25a9b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b9568b8beb5792e87fc30d5098a9ae5c9a95878</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that the current interface implementer is a reference to another object.</source>
          <target state="translated">현재 인터페이스 구현 자가 다른 개체에 대 한 참조 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</source>
          <target state="translated">Serialize 된 스트림을 지정 하는 개체 대신 deserialize 해야 하는 실제 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.</source>
          <target state="translated">이 메서드는 개체가 아닌 실제 개체를 프록시 생성자를 serialize 하면 원격 상황에서 유용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the proxy-creator object is deserialized, deserialization calls its GetRealObject method.</source>
          <target state="translated">프록시 생성자 개체를 deserialize 하는 역직렬화 해당 GetRealObject 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.</source>
          <target state="translated">이 시점에서 프록시 생성자 개체 다시 원래 실제 개체에 원격 컴퓨터에서 참조 하는 프록시 개체의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.</source>
          <target state="translated">마지막으로, 프록시 생성자 개체를 삭제 하 고 나중에 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider how &lt;xref:System.Type&gt; objects are serialized.</source>
          <target state="translated">예를 들어 어떻게 &lt;xref:System.Type&gt;개체는 직렬화 되어.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of transmitting the data from the &lt;xref:System.Type&gt; object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing &lt;xref:System.Runtime.Serialization.IObjectReference&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt; &lt;xref:System.Runtime.Serialization.IObjectReference&gt;.&lt;/xref:System.Runtime.Serialization.IObjectReference&gt; 를 구현 하는 개체에 있는 어셈블리에 대 한 정보 및 형식 개체의 이름으로 소유자 개체를 전송 하는 개체를 시스템&lt;/xref:System.Type&gt; 에서 데이터를 전송 하는 대신</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted.</source>
          <target state="translated">형식 이름 및 어셈블리 이름 모두를 사용할 수 있는 deserialization 인프라 GetRealObject 전송 된 소유자 개체에서 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This holder returns the &lt;xref:System.Type&gt; object that is inserted into the graph.</source>
          <target state="translated">이 보유자가 반환 된 &lt;xref:System.Type&gt;그래프에 삽입 하는 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is protected by a &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; for the &lt;xref:System.Security.Permissions.SecurityPermission&gt; with the &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; specified.</source>
          <target state="translated">이 메서드는에 의해 보호 되는 &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;에 대 한는 &lt;xref:System.Security.Permissions.SecurityPermission&gt;와 &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt;지정.&lt;/xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; &lt;/xref:System.Security.Permissions.SecurityPermission&gt; &lt;/xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; from which the current object is deserialized.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;현재 개체를 역직렬화 할 원본에서.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the actual object that is put into the graph.</source>
          <target state="translated">그래프에 배치 하는 실제 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The call will not work on a medium trusted server.</source>
          <target state="translated">호출 중간 신뢰할 수 있는 서버에서 작동 하지 않습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>