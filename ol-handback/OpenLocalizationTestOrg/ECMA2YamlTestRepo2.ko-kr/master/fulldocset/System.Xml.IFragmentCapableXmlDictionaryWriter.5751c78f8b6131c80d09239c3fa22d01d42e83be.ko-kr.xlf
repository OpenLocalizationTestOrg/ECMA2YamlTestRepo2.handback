<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58215183db17d3283008bf141455cebea30ca98d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.IFragmentCapableXmlDictionaryWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d127506ba86a5c2d1a2cbbd06013701d483f7a2b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da3d41756c1720fb8a3f24de908ab9ec67a8ab5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains properties and methods that when implemented by a &lt;xref:System.Xml.XmlDictionaryWriter&gt;, allows processing of XML fragments.</source>
          <target state="translated">속성 및 메서드가 포함 되어는 구현한는 &lt;xref:System.Xml.XmlDictionaryWriter&gt;, XML 조각 처리를 허용 합니다.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class defines the properties and methods related to the capability of an &lt;xref:System.Xml.XmlDictionaryWriter&gt; to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.</source>
          <target state="translated">속성 및의 기능과 관련 된 메서드를 정의 하는이 클래스는 &lt;xref:System.Xml.XmlDictionaryWriter&gt;을 함께 만들어진 스트림이 아닌 다른 스트림으로 출력 ('조각')의 일부로 리디렉션 및 조각이 캡처된 리디렉션을 통해 다시 나중에 같은 작성기의 주 스트림으로 직접 삽입 합니다.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this &lt;xref:System.Xml.XmlDictionaryWriter&gt; can process XML fragments.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부이 &lt;xref:System.Xml.XmlDictionaryWriter&gt;XML 조각을 처리할 수 있습니다.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns t<ph id="ph1">`r`</ph>ue if the writer that implements this interface can generate and accept XML fragments.</source>
          <target state="translated">T 반환<ph id="ph1">`r`</ph>ue이이 인터페이스를 구현 하는 작성기를 생성 하 고 XML을 수락 하는 경우 조각 수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this &lt;xref:System.Xml.XmlDictionaryWriter&gt; can process XML fragments; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 경우 &lt;xref:System.Xml.XmlDictionaryWriter&gt;XML 조각을 처리할 수, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Ends the processing of an XML fragment.</source>
          <target state="translated">XML 조각 처리를 종료합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stops redirecting output to the stream supplied by the matching <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">일치 하는에서 제공 되는 스트림으로 출력 리디렉션을 중지 <ph id="ph1">`StartFragment`</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>After this call, the XML writing output goes to the stream originally used by the writer before the <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">이 호출 후에 XML 출력을 작성 하기 전에 작성기에서 원래 사용한 스트림으로로 이동는 <ph id="ph1">`StartFragment`</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starts the processing of an XML fragment.</source>
          <target state="translated">XML 조각 처리를 시작합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Temporarily starts redirecting the writing of the XML output to the supplied stream until <ph id="ph1">`EndFragment`</ph> is called.</source>
          <target state="translated">임시로 될 때까지 제공 된 스트림으로 XML 출력의 작성을 리디렉션하기 시작 <ph id="ph1">`EndFragment`</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`generateSelfContainedTextFragment`</ph> is <ph id="ph2">`true`</ph>, then the redirected XML output is always text XML and is self-contained in terms of its namespace context.</source>
          <target state="translated">경우 <ph id="ph1">`generateSelfContainedTextFragment`</ph> 은 <ph id="ph2">`true`</ph>, 리디렉션된 XML 출력은 항상 텍스트 XML 및 네임 스페이스 컨텍스트로 자체 포함 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`StartFragment`</ph>() calls cannot be nested.</source>
          <target state="translated"><ph id="ph1">`StartFragment`</ph>() 호출을 중첩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The stream to write to.</source>
          <target state="translated">쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, any namespaces declared outside the fragment is declared again if used inside of it; if <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> the namespaces are not declared again.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 조각의 외부 선언 된 모든 네임 스페이스 선언 됩니다 다시 내부;에서 사용 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 네임 스페이스가 다시 선언 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Writes an XML fragment to the underlying stream of the writer.</source>
          <target state="translated">XML 조각을 작성기의 내부 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Writes a fragment captured between <ph id="ph1">`StartFragment`</ph> and <ph id="ph2">`EndFragment`</ph> and calls back into the XmlDictionaryWriter's main stream.</source>
          <target state="translated">사이 캡처된 조각을 쓰고 <ph id="ph1">`StartFragment`</ph> 및 <ph id="ph2">`EndFragment`</ph> 및 XmlDictionaryWriter의 주 스트림으로 다시 호출 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fragment written is <ph id="ph1">`count`</ph> bytes starting at the index <ph id="ph2">`offset`</ph> from the supplied <ph id="ph3">`buffer`</ph>.</source>
          <target state="translated">작성 된 조각은 <ph id="ph1">`count`</ph> 인덱스에서 시작 하는 바이트 <ph id="ph2">`offset`</ph> 제공 된 <ph id="ph3">`buffer`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior is undefined if the supplied fragment was not captured using this writer instance.</source>
          <target state="translated">제공된 된 조각이이 작성자 인스턴스를 사용 하 여 캡처되지 않은 경우 동작이 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The buffer to write to.</source>
          <target state="translated">쓸 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The starting position from which to write in <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">쓸 시작 위치 <ph id="ph1">`buffer`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">에 쓸 바이트 수는 <ph id="ph1">`buffer`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>