<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">940db9ed67d018db6d21e4ea6f78b6fc85ced9a7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Common.DbDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e25db708249d2ada50d2c6cfa2e86415596f03e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e1ce5f5243784c2b95187df1ef8be64e73e6b81</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Aids implementation of the <bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">구현을 지원는 <bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Inheritors of DbDataAdapter implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>.</source>
          <target state="translated">DbDataAdapter의 상속 자가 강력한 형식을 제공 하는 함수 집합을 구현 하지만 완벽 하 게 구현 하는 데 필요한 기능을 대부분 상속는 <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DbDataAdapter class inherits from the &lt;xref:System.Data.Common.DataAdapter&gt; class and helps a class implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> designed for use with a relational database.</source>
          <target state="translated">DbDataAdapter 클래스에서 상속 된 &lt;xref:System.Data.Common.DataAdapter&gt;클래스 및 구현 하는 클래스를 사용 하면는 <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> 관계형 데이터베이스와 함께 사용 하기 위한.&lt;/xref:System.Data.Common.DataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application does not create an instance of the DbDataAdapter interface directly, but creates an instance of a class that inherits &lt;xref:System.Data.IDbDataAdapter&gt; and DbDataAdapter.</source>
          <target state="translated">응용 프로그램을 직접 DbDataAdapter 인터페이스의 인스턴스를 만들지 않습니다 되지만 상속 되는 클래스의 인스턴스를 만듭니다 &lt;xref:System.Data.IDbDataAdapter&gt;및 DbDataAdapter.&lt;/xref:System.Data.IDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit DbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">DbDataAdapter를 상속 하는 클래스는 상속 된 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the DbDataAdapter class defines the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property, and the DbDataAdapter interface defines eight overloads of the &lt;xref:System.Data.IDataAdapter.Fill%2A&gt; method.</source>
          <target state="translated">예를 들어 DbDataAdapter 클래스 정의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성과 DbDataAdapter 인터페이스 정의의&amp;8; 개 오버 로드는 &lt;xref:System.Data.IDataAdapter.Fill%2A&gt;메서드.&lt;/xref:System.Data.IDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn, the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; class inherits the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method, and also defines two additional overloads of &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; that take an ADO Recordset object as a parameter.</source>
          <target state="translated">차례로 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;클래스 상속의 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드를 추가 두 오버 로드를 정의 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;는 ADO 레코드 집합 개체를 매개 변수로 사용 하는.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화 한 <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.Common.DbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.Common.DbDataAdapter&gt;, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;|A new &lt;xref:System.Data.IDbCommand&gt;.|   |&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;|A new &lt;xref:System.Data.IDbCommand&gt;.|   |&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;|A new &lt;xref:System.Data.IDbCommand&gt;.|   |&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;|A new &lt;xref:System.Data.IDbCommand&gt;.|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;| 새 &lt;xref:System.Data.IDbCommand&gt;. |   | &lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;| 새 &lt;xref:System.Data.IDbCommand&gt;. |   | &lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;| 새 &lt;xref:System.Data.IDbCommand&gt;. |   | &lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;| 새 &lt;xref:System.Data.IDbCommand&gt;. |   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt; &lt;/xref:System.Data.IDbCommand&gt; &lt;/xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.IDbCommand&gt; &lt;/xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.IDbCommand&gt; &lt;/xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.IDbCommand&gt; &lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from an existing object of the same type.</source>
          <target state="translated">새 인스턴스를 초기화 한 <bpt id="p1">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 동일한 형식의 기존 개체에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Data.Common.DbDataAdapter&gt; constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</source>
          <target state="translated">이 오버 로드는 &lt;xref:System.Data.Common.DbDataAdapter&gt;생성자는 사용 하기 위한.NET Framework 데이터 공급자가 복제 구현에서 사용 하기 위해 비슷한 생성자를 구현 하는 경우.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to create the new <bpt id="p2">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 만드는 데 개체 <bpt id="p2">&lt;xref uid="langword_csharp_DataAdapter" name="DataAdapter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the current batch.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 일괄 처리에 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add to the batch.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 일괄 처리에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The number of commands in the batch before adding the <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 하기 전에 일괄 처리의 명령 수는 <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The adapter does not support batches.</source>
          <target state="translated">어댑터는 일괄 처리를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Removes all <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects from the batch.</source>
          <target state="translated">모든 제거 <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 일괄 처리에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The adapter does not support batches.</source>
          <target state="translated">어댑터는 일괄 처리를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> executed during the &lt;xref:System.Data.IDataAdapter.Update*&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Data.IDataAdapter.Update*&gt;.&lt;/xref:System.Data.IDataAdapter.Update*&gt; 하는 동안 실행</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">명령에 대 한 업데이트 인지 삽입, 삭제 또는 SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.DataTableMapping"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.DataTableMapping"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스는 <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that updates the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to execute during the &lt;xref:System.Data.IDataAdapter.Update*&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Data.IDataAdapter.Update*&gt;.&lt;/xref:System.Data.IDataAdapter.Update*&gt; 실행 하려면</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">명령에 대 한 업데이트 인지 삽입, 삭제 또는 SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.DataTableMapping"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.DataTableMapping"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스는 <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default name used by the <bpt id="p1">&lt;xref href="System.Data.Common.DataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for table mappings.</source>
          <target state="translated">사용 하는 기본 이름을 <bpt id="p1">&lt;xref href="System.Data.Common.DataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 매핑 테이블에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Table" is the default name used by the &lt;xref:System.Data.Common.DataAdapter&gt; object for table mappings.</source>
          <target state="translated">"Table"은 사용 되는 기본 이름을 &lt;xref:System.Data.Common.DataAdapter&gt;개체 테이블 매핑에.&lt;/xref:System.Data.Common.DataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>DefaultSourceTableName is when an application adds a table mapping to be used with &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;, but does not specify a &lt;xref:System.Data.DataTable&gt; name.</source>
          <target state="translated">DefaultSourceTableName는 응용 프로그램에서 사용 되는 테이블 매핑을 추가 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;, 하지만 지정 하지 않는 한 &lt;xref:System.Data.DataTable&gt;이름.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets a command for deleting records from the data set.</source>
          <target state="translated">데이터 집합에서 레코드를 삭제 하기 위한 명령의 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt; is automatically generated.</source>
          <target state="translated">동안 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;자동으로 생성 됩니다.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.IDataAdapter.Update*&gt; to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.IDataAdapter.Update*&gt;데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.&lt;/xref:System.Data.IDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Executes the current batch.</source>
          <target state="translated">현재 일괄 처리를 실행합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The return value from the last command in the batch.</source>
          <target state="translated">일괄 처리의 마지막 명령에서 반환 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 하거나 행의 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fill method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">Fill 메서드 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDbConnection&gt; object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated">&lt;xref:System.Data.IDbConnection&gt;select 명령에서 연관 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before Fill is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;는 채우기가 호출 되기 전에 종료를 열어 데이터를 검색 한 다음 닫을.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before Fill is called, it remains open.</source>
          <target state="translated">채우기가 호출 되기 전에 연결이 열려 있으면 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">데이터 테이블을 채우는 동안 오류 또는 예외가 발생 하는 경우 오류가 발생 하기 전에 추가 된 행은 데이터 테이블에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분에서는 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a command does not return any rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">에 테이블이 추가 명령을 모든 행을 반환 하지 않으면는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않습니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</source>
          <target state="translated">지정 된 쿼리가 여러 결과 반환 하는 경우 결과 집합 쿼리를 반환 하는 각 행에 대 한 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</source>
          <target state="translated">없는 테이블이 생성 된 행을 반환 하지 않는 쿼리에 대 한 선택 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 때문에 선택 쿼리에 대해 생성 된 테이블 생성 되는 첫 번째 테이블에 있기 때문에 "Table" 이라는 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet&gt;경우 결과 중 하나에 오류가 있으면 일괄 처리 SQL 문과 같이 여러 결과 반환 모든 후속 결과 건너뛰고 지정 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 추가 되지 않습니다&lt;/xref:System.Data.DataSet&gt; 를 채우는 데 사용 된 SELECT 문에서</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using subsequent Fill calls to refresh the contents of the &lt;xref:System.Data.DataSet&gt;, two conditions must be met:      1.</source>
          <target state="translated">때 호출의 내용을 새로 고치려면 채우기 후속를 사용 하는 &lt;xref:System.Data.DataSet&gt;, 두 조건이 충족 되어야 합니다: 1.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SQL statement should match the one initially used to populate the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">SQL 문을 처음 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 를 채우는 데 사용 되는 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>키<ept id="p1">**</ept> 열 정보가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행은 조정을 한 번만에 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 해당 하는&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;를 지정 하 여는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성은 &lt;xref:System.Data.DataTable&gt;, 하거나 설정 하 여는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성을 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use Fill with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 채우기는 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> name.</source>
          <target state="translated">추가 하거나 지정된 된 범위에서의 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이름입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation then adds the rows to destination &lt;xref:System.Data.DataTable&gt; objects in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; objects if they do not already exist.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;대상에 행을 추가 하는 작업을 다음 &lt;xref:System.Data.DataTable&gt;개체에 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating &lt;xref:System.Data.DataTable&gt; objects, the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation normally creates only column name metadata.</source>
          <target state="translated">만들 때 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;작업은 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overload of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; that takes <ph id="ph1">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">오버 로드가 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;생긴다는 <ph id="ph1">`DataTable`</ph> 대로 매개 변수 에서만 첫 번째 결과 가져옵니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use an overload of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; that takes <ph id="ph1">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">오버 로드를 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;생긴다는 <ph id="ph1">`DataSet`</ph> 여러 결과를 얻으려면 매개 변수로.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");    dataset.Tables.Add("AAA");    adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.       adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");    dataset.Tables.Add("AAA");    adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.       adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");       adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       You can use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");       adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;여러 번에 같은 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; and &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;및 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.NET Framework 데이터에 대 한 공급자만 첫 번째 결과 대 한 스키마 정보를 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for table mapping.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블 매핑에 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> names.</source>
          <target state="translated">추가 하거나 행의 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이름입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDbConnection&gt; object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated">&lt;xref:System.Data.IDbConnection&gt;select 명령에서 연관 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;전에 닫은 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a command does not return any rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">에 테이블이 추가 명령을 모든 행을 반환 하지 않으면는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않습니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 후속 열에 대 한 이름을 생성 합니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">없는 테이블이 생성 된 행을 반환 하지 않는 쿼리에 대 한 선택 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 이후 select 쿼리에 대해 생성 되는 테이블을 이름이 "Table" 생성 되는 첫 번째 테이블에 있기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>데이터 테이블을 채우는 동안 오류 또는 예외가 발생 하는 경우 오류가 발생 하기 전에 추가 된 행은 데이터 테이블에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분에서는 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as a batch SQL statement, be aware of the following:      -   If one of the results contains an error, all subsequent results are skipped and not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">채우는 데 사용 된 SELECT 문에서 &lt;xref:System.Data.DataSet&gt;다음에 주의 SQL 문을 일괄 처리 수와 같은 여러 결과 반환:-모든 후속 결과 건너뛰고 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 추가 되지 결과 중 하나에 오류가,&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using subsequent &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; calls to refresh the contents of the &lt;xref:System.Data.DataSet&gt;, two conditions must be met:      1.</source>
          <target state="translated">다음을 사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;내용 새로 고침에 대 한 호출에서 &lt;xref:System.Data.DataSet&gt;, 두 조건이 충족 되어야 합니다: 1.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SQL statement should match the one initially used to populate the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">SQL 문을 처음 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 를 채우는 데 사용 되는 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>키<ept id="p1">**</ept> 열 정보가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행은 조정을 한 번만에 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 해당 하는&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;를 지정 하 여는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성은 &lt;xref:System.Data.DataTable&gt;, 하거나 설정 하 여는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성을 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조<bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the specified <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and <bpt id="p4">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 하거나 행을 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정 된 데이터 원본에 맞게 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 및 <bpt id="p4">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">연결 하기 전에 닫혀 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열어 데이터를 검색 한 다음 닫을.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation then adds the rows to the specified destination &lt;xref:System.Data.DataTable&gt; object in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; object if it does not already exist.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;지정된 된 대상에 행을 추가 하는 작업을 다음 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating a &lt;xref:System.Data.DataTable&gt; object, the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation normally creates only column name metadata.</source>
          <target state="translated">만들 때 한 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;작업은 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 합니다 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overload of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; that takes <ph id="ph1">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">오버 로드가 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;생긴다는 <ph id="ph1">`DataTable`</ph> 대로 매개 변수 에서만 첫 번째 결과 가져옵니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use an overload of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; that takes <ph id="ph1">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">오버 로드를 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;생긴다는 <ph id="ph1">`DataSet`</ph> 여러 결과를 얻으려면 매개 변수로.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;여러 번에 같은 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">SQL SELECT 문을 데이터 원본에서 행을 검색 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</source>
          <target state="translated">추가 하거나 행을 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 레코드부터 시작 하 고 지정 된 최대 레코드 수가까지 검색 데이터 원본에 맞게 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; method retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; is called, it is opened to retrieve data, and then it is closed.</source>
          <target state="translated">연결 하기 전에 닫혀 있으면 &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;은 열 데이터를 검색 하 고 닫으면은 호출.&lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; operation then adds the rows to destination &lt;xref:System.Data.DataTable&gt; objects in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; objects if they do not already exist.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;대상에 행을 추가 하는 작업을 다음 &lt;xref:System.Data.DataTable&gt;개체에 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating &lt;xref:System.Data.DataTable&gt; objects, the &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; operation normally creates only column name metadata.</source>
          <target state="translated">만들 때 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;작업은 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data adapter encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">데이터 어댑터를 채우는 동안 중복 된 열을 발견 하는 경우는 &lt;xref:System.Data.DataTable&gt;, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 후속 열에 대 한 이름을 생성 합니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt;, each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;, 각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">채우는 데 사용 된 SELECT 문에서 &lt;xref:System.Data.DataSet&gt;여러 결과 반환 일괄 처리 SQL 문과 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 건너뛰고 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 추가 되지&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt; method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;여러 번에 같은 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; 메서드&lt;/xref:System.Data.Common.DataAdapter.Fill%2A&gt; 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The zero-based record number to start with.</source>
          <target state="translated">시작 하려면&amp;0;부터 시작 레코드 번호입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">검색할 레코드의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to fill from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 원본에서 채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This value does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 값 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> names.</source>
          <target state="translated">추가 하거나 지정된 된 범위에서의 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이름입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A <ph id="ph1">`maxRecords`</ph> 값 0은 시작 레코드 후 검색 된 모든 레코드가 가져옵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</source>
          <target state="translated">경우 <ph id="ph1">`maxRecords`</ph> 보다 크면 남은 행 수가 없으면 오류가 발생 하 고 나머지 행이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the corresponding select command is a statement returning multiple results, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; only applies <ph id="ph1">`maxRecords`</ph> to the first result.</source>
          <target state="translated">해당 select 명령이 여러 결과 반환 하는 문인 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;만 적용 됩니다 <ph id="ph1">`maxRecords`</ph> 첫 번째 결과를.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDbConnection&gt; object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">&lt;xref:System.Data.IDbConnection&gt;SELECT 문과 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;전에 닫은 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열어 데이터를 검색 한 다음 닫습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a command does not return any rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, but no exception is raised.</source>
          <target state="translated">에 테이블이 추가 명령을 모든 행을 반환 하지 않으면는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않지만.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 합니다 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</source>
          <target state="translated">없는 테이블이 생성 된 행을 반환 하지 않는 쿼리에 대 한 선택 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 때문에 선택 쿼리에 대해 생성 된 테이블 생성 되는 첫 번째 테이블에 있기 때문에 "Table" 라는 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>데이터 테이블을 채우는 동안 오류 또는 예외가 발생 하는 경우 오류가 발생 하기 전에 추가 된 행은 데이터 테이블에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분에서는 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as batch SQL statements, be aware of the following:      -   When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">채우는 데 사용 된 SELECT 문에서 &lt;xref:System.Data.DataSet&gt;일괄 처리 SQL 문과 같은 여러 결과가 반환 될 다음에 주의:-SQL 문 일괄 처리에서 여러 결과 처리할 때 <ph id="ph1">`maxRecords`</ph> 첫 번째 결과에 적용 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">장으로 나뉜 결과 (.NET Framework Data Provider for OLE DB만)를 포함 하는 행에도 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">최상위 결과 의해 제한 됩니다 <ph id="ph1">`maxRecords`</ph>, 하지만 모든 자식 행이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If one of the results contains an error, all subsequent results are skipped and not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">-모든 후속 결과 건너뛰고 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 추가 되지 결과 중 하나에 오류가 있는 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using subsequent &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; calls to refresh the contents of the &lt;xref:System.Data.DataSet&gt;, two conditions must be met:      1.</source>
          <target state="translated">다음을 사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;내용 새로 고침에 대 한 호출에서 &lt;xref:System.Data.DataSet&gt;, 두 조건이 충족 되어야 합니다: 1.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SQL statement should match the one initially used to populate the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">SQL 문을 처음 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 를 채우는 데 사용 되는 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>키<ept id="p1">**</ept> 열 정보가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If primary key information is present, any duplicate rows will be reconciled and only appear once in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행 조정 되며 한 번만 사용할 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 해당 하는&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;를 지정 하 여는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성은 &lt;xref:System.Data.DataTable&gt;, 하거나 설정 하 여는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성을 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph3">`maxRecords`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 가리키는 레코드 개수 보다 많은 포함 되지 것입니다 <ph id="ph3">`maxRecords`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the entire result set generated by the query is still returned from the server.</source>
          <target state="translated">하지만, 쿼리에 의해 생성 된 전체 결과 집합은 여전히 서버에서 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The zero-based record number to start with.</source>
          <target state="translated">시작 하려면&amp;0;부터 시작 레코드 번호입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">검색할 레코드의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-or-       The connection is invalid.</source>
          <target state="translated">-또는-연결이 유효 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The connection could not be found.</source>
          <target state="translated">연결을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startRecord</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">startRecord</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxRecords</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxRecords</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> names.</source>
          <target state="translated">추가 하거나 지정된 된 범위에서의 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이름입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A <ph id="ph1">`maxRecords`</ph> 값 0은 시작 레코드 후 검색 된 모든 레코드가 가져옵니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</source>
          <target state="translated">경우 <ph id="ph1">`maxRecords`</ph> 보다 크면 남은 행 수가 없으면 오류가 발생 하 고 나머지 행이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fill method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">Fill 메서드 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDbConnection&gt; object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">&lt;xref:System.Data.IDbConnection&gt;SELECT 문과 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;전에 닫은 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a command does not return any rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, but no exception is raised.</source>
          <target state="translated">에 테이블이 추가 명령을 모든 행을 반환 하지 않으면는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않지만.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 합니다 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">없는 테이블이 생성 된 행을 반환 하지 않는 쿼리에 대 한 선택 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 이후 select 쿼리에 대해 생성 되는 테이블을 이름이 "Table" 생성 되는 첫 번째 테이블에 있기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fill method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">Fill 메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>데이터 테이블을 채우는 동안 오류 또는 예외가 발생 하는 경우 오류가 발생 하기 전에 추가 된 행은 데이터 테이블에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분에서는 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the &lt;xref:System.Data.DataTable&gt; objects returns multiple results, such as a batch SQL statement, be aware of the following:      -   When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">채우는 데 사용 된 SELECT 문에서 &lt;xref:System.Data.DataTable&gt;SQL 문을 일괄 처리에서 다음에 유의 같은 여러 결과 반환 하는 개체: SQL 문 일괄 처리에서 여러 결과 처리할 때- <ph id="ph1">`maxRecords`</ph> 첫 번째 결과에 적용 됩니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">장으로 나뉜 결과 (.NET Framework Data Provider for OLE DB만)를 포함 하는 행에도 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">최상위 결과 의해 제한 됩니다 <ph id="ph1">`maxRecords`</ph>, 하지만 모든 자식 행이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If one of the results contains an error, all subsequent results are skipped.</source>
          <target state="translated">-결과 중 하나에 오류가 있으면 모든 후속 결과 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph3">`maxRecords`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 가리키는 레코드 개수 보다 많은 포함 되지 것입니다 <ph id="ph3">`maxRecords`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the entire resultset generated by the query is still returned from the server.</source>
          <target state="translated">그러나 쿼리에 의해 생성 되는 전체 결과 집합은 여전히 서버에서 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to fill from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 원본에서 채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The zero-based record number to start with.</source>
          <target state="translated">시작 하려면&amp;0;부터 시작 레코드 번호입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">검색할 레코드의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> executed to fill the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 채우기 하기 위해 실행 되는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The number of rows added to or refreshed in the data tables.</source>
          <target state="translated">행의 수에 추가 하거나 데이터 테이블에서 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>-or-       The connection is invalid.</source>
          <target state="translated">-또는-연결이 유효 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The connection could not be found.</source>
          <target state="translated">연결을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startRecord</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">startRecord</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxRecords</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxRecords</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and source table names, command string, and command behavior.</source>
          <target state="translated">추가 하거나 지정된 된 범위에서의 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 데이터 소스에 맞게는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 원본 테이블 이름, 명령 문자열 및 명령 동작입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation then adds the rows to destination &lt;xref:System.Data.DataTable&gt; objects in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; objects if they do not already exist.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;대상에 행을 추가 하는 작업을 다음 &lt;xref:System.Data.DataTable&gt;개체에 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating &lt;xref:System.Data.DataTable&gt; objects, the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; operation normally creates only column name metadata.</source>
          <target state="translated">만들 때 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;작업은 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.   adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       You can use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.   ```</ph>&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;여러 번에 같은 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN의 결과 반환 된 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않습니다</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조<bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; and &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;및 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.NET Framework 데이터에 대 한 공급자만 첫 번째 결과 대 한 스키마 정보를 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The zero-based record number to start with.</source>
          <target state="translated">시작 하려면&amp;0;부터 시작 레코드 번호입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">검색할 레코드의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">SQL SELECT 문을 데이터 원본에서 행을 검색 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startRecord</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">startRecord</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxRecords</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxRecords</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Gets or sets the behavior of the command used to fill the data adapter.</source>
          <target state="translated">데이터 어댑터를 채우는 데 사용 되는 명령의 동작을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the command used to fill the data adapter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 어댑터를 채우는 데 사용 되는 명령입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> named "Table" to the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and configures the schema to match that in the data source based on the specified <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 "Table" 이라는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 데이터 원본의 기반으로 지정 하는 스키마와 일치 하도록 구성 하 고 <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the schema information from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;작업을 추가합니다 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt;, and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;, 다음을 구성 하 고 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;또한 구성 된 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 사용 하&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 여 하나 이상의 기본 키 열이 반환 하는 경우&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;       &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 고유 열이 표시 되지만 경우 고유 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 하지만 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성이 설정 되지 않았습니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 기본 키 열은 사용 기본 키 열과 고유 열이 모두 반환 하는 경우</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information is used during &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to find and replace any rows whose key columns match.</source>
          <target state="translated">기본 키 정보 중에 사용 되 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;찾기 및 바꾸기 키 열이 일치 행.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is not the desired behavior, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; without requesting schema information.</source>
          <target state="translated">이것이 원하는 동작을 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;스키마 정보를 요청 하지 않고.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDbConnection&gt; object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated">&lt;xref:System.Data.IDbConnection&gt;select 명령에서 연관 된 개체는 유효 해야 합니다. 하지만 열 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;전에 닫은 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is left open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 라는 것을 남겨 둘지.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;,.NET Framework Data Provider for SQL Server를 실행 중인 문의 FOR BROWSE 절을 추가 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to insert the schema in.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 스키마를 삽입할 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specify how to insert the schema.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마를 삽입 하는 방법을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>A reference to a collection of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that were added to the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">컬렉션에 대 한 참조 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 추가 된 개체는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Configures the schema of the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> based on the specified <bpt id="p2">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 스키마를 구성 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 <bpt id="p2">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FillSchema method retrieves the schema from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">FillSchema 메서드 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;유효 해야 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before FillSchema is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">FillSchema가 호출 되기 전에 연결이 닫혀 있는 경우 데이터를 검색에 대 한 열은 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before FillSchema is called, it remains open.</source>
          <target state="translated">FillSchema가 호출 되기 전에 연결이 열려 있으면 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>A FillSchema operation returns a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">FillSchema 작업에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 반환합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt;, and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;, 다음을 구성 하 고 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       FillSchema also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; has already been defined for the <ph id="ph1">`DataTable`</ph>, or the <ph id="ph2">`DataTable`</ph> contains data, the <ph id="ph3">`PrimaryKey`</ph> property will not be set.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;FillSchema 또한 구성는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-경우는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;에 대해 이미 정의 <ph id="ph1">`DataTable`</ph>, 또는 <ph id="ph2">`DataTable`</ph> 데이터가 들어는 <ph id="ph3">`PrimaryKey`</ph> 속성을 설정 하지 것입니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">-하나 이상의 기본 키 열에서 반환 되는 경우는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;에 대 한 기본 키 열으로 사용 되는 <ph id="ph1">`DataTable`</ph>.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 고유 열이 표시 되지만 경우 고유 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the <ph id="ph1">`PrimaryKey`</ph> property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 되지만 <ph id="ph1">`PrimaryKey`</ph> 속성이 설정 되지 않았습니다.&lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">-기본 키 열에 대 한 기본 키 열으로 사용 되는 기본 키 열과 고유 열이 모두 반환 하는 경우는 <ph id="ph1">`DataTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>This process may require several round-trips to the server.</source>
          <target state="translated">이 프로세스 서버에 여러 번 왕복 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>FillSchema does not return any rows.</source>
          <target state="translated">FillSchema 모든 행을 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method to add rows to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 행을 추가 하는 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of FillSchema for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 여러 개의 결과 반환 하는 SQL 문을 일괄 처리, 구현의 FillSchema.NET Framework Data provider for OLE DB만 첫 번째 결과 대 한 스키마 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using FillSchema, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">FillSchema를 사용할 때.NET Framework Data Provider for SQL Server를 실행 중인 문의 FOR BROWSE 절을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be filled with the schema from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 데이터 원본에서 스키마로 채워집니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains schema information returned from the data source.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스에서 반환 된 스키마 정보를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and configures the schema to match that in the data source based upon the specified <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and <bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 지정 된 기준으로 데이터 소스 스키마와 일치 하도록 스키마를 구성 하 고 <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 및 <bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the schema information from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;작업을 추가합니다 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt;, and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;, 다음을 구성 하 고 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;또한 구성 된 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 사용 하&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 여 하나 이상의 기본 키 열이 반환 하는 경우&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;       &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 고유 열이 표시 되지만 경우 고유 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 하지만 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성이 설정 되지 않았습니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 기본 키 열은 사용 기본 키 열과 고유 열이 모두 반환 하는 경우</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information is used during &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to find and replace any rows whose key columns match.</source>
          <target state="translated">기본 키 정보 중에 사용 되 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;찾기 및 바꾸기 키 열이 일치 행.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is not the desired behavior, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; without requesting schema information.</source>
          <target state="translated">이것이 원하는 동작을 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;스키마 정보를 요청 하지 않고.&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.   adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.   adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       The &lt;xref:System.Data.IDbConnection&gt; object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.   ```</ph>&lt;xref:System.Data.IDbConnection&gt;select 명령에서 연관 된 개체는 유효 해야 합니다. 하지만 열 필요는 없습니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbConnection&gt; is closed before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbConnection&gt;전에 닫은 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is left open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 라는 것을 남겨 둘지.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;,.NET Framework Data Provider for SQL Server를 실행 중인 문의 FOR BROWSE 절을 추가 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to insert the schema in.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 스키마를 삽입할 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specify how to insert the schema.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마를 삽입 하는 방법을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>A reference to a collection of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that were added to the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">컬렉션에 대 한 참조 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 추가 된 개체는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A source table from which to get the schema could not be found.</source>
          <target state="translated">스키마를 얻을 수 있는 원본 테이블을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Configures the schema of the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> based on the specified <bpt id="p2">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, command string, and <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">지정 된 스키마를 구성 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 <bpt id="p2">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 명령 문자열 및 <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; method retrieves the schema from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;유효 해야 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;작업을 추가합니다 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt;, and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;, 다음을 구성 하 고 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;또한 구성 된 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 사용 하&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 여 하나 이상의 기본 키 열이 반환 하는 경우&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;       &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 고유 열이 표시 되지만 경우 고유 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 하지만 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성이 설정 되지 않았습니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 기본 키 열은 사용 기본 키 열과 고유 열이 모두 반환 하는 경우</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; does not return any rows.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;모든 행을 반환 하지 않습니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method to add rows to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 행을 추가 하는 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;,.NET Framework Data Provider for SQL Server를 실행 중인 문의 FOR BROWSE 절을 추가 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be filled with the schema from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 데이터 원본에서 스키마로 채워집니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">SQL SELECT 문을 데이터 원본에서 행을 검색 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains schema information returned from the data source.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마 정보가 포함 된 개체 데이터 소스에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and configures the schema to match that in the data source based on the specified <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 데이터 원본의 기반으로 지정 하는 스키마와 일치 하도록 구성 하 고 <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; method retrieves the schema from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 를 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;유효 해야 하지만 열려 있이 필요는 없습니다.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;은 호출은 열 데이터를 검색 하려면 다음 닫힙니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;는 호출을 열린 상태로 유지 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;작업을 추가합니다 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt;, and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">그런 다음 열을 추가 &lt;xref:System.Data.DataColumnCollection&gt;의 &lt;xref:System.Data.DataTable&gt;, 다음을 구성 하 고 &lt;xref:System.Data.DataColumn&gt;속성 데이터 원본에 존재 하는 경우:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">설정 해야 &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;및 &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;별도로.&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; &lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;- &lt;xref:System.Data.DataColumn.Unique%2A&gt;&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;또한 구성 된 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;및 &lt;xref:System.Data.DataTable.Constraints%2A&gt;다음 규칙에 따라 속성:-의 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 사용 하&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 여 하나 이상의 기본 키 열이 반환 하는 경우&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;       &lt;/xref:System.Data.DataColumn.Unique%2A&gt; &lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt; &lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">-기본 키 열이 반환 되지 고유 열이 표시 되지만 경우 고유 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 &lt;xref:System.Data.UniqueConstraint&gt;에 추가 되는 &lt;xref:System.Data.ConstraintCollection&gt;, 하지만 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성이 설정 되지 않았습니다.&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.ConstraintCollection&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 기본 키 열으로 기본 키 열은 사용 기본 키 열과 고유 열이 모두 반환 하는 경우</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 &lt;xref:System.Data.ConstraintCollection&gt;선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.&lt;/xref:System.Data.ConstraintCollection&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such situations, &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">이러한 상황에서는 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 새 테이블을 만듭니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.   adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   dataset.Tables.Add("AAA");   adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.   adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; does not return any rows.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();   dataset.Tables.Add("aaa");   adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;모든 행을 반환 하지 않습니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method to add rows to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 행을 추가 하는 메서드&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;의 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; with the &lt;xref:System.Data.MissingSchemaAction&gt; set to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;와 &lt;xref:System.Data.MissingSchemaAction&gt;로 설정 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;,.NET Framework Data Provider for SQL Server를 실행 중인 문의 FOR BROWSE 절을 추가 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be filled with the schema from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 데이터 원본에서 스키마로 채워집니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">SQL SELECT 문을 데이터 원본에서 행을 검색 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contain schema information returned from the data source.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마 정보를 포함 하는 개체 데이터 소스에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from one of the commands in the current batch.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 현재 일괄 처리에서 명령 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The index of the command to retrieve the parameter from.</source>
          <target state="translated">인덱스에서 매개 변수를 검색 하기 위한 명령입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The index of the parameter within the command.</source>
          <target state="translated">명령에 매개 변수의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The adapter does not support batches.</source>
          <target state="translated">어댑터는 일괄 처리를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Returns information about an individual update attempt within a larger batched update.</source>
          <target state="translated">더 큰 일괄 처리 된 업데이트 내에서 개별 업데이트 시도 대 한 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data providers that support batched updating logic must override a series of virtual methods on the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">일괄 처리 업데이트 논리를 지 원하는 데이터 공급자는 일련의 &lt;xref:System.Data.Common.DbDataAdapter&gt;클래스&lt;/xref:System.Data.Common.DbDataAdapter&gt; 의 가상 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`GetBatchedRecordsAffected`</ph> represents one of those virtual methods.</source>
          <target state="translated"><ph id="ph1">`GetBatchedRecordsAffected`</ph>이러한 가상 메서드 중 하나를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DbDataAdapter`</ph> class relies on <ph id="ph2">`GetBatchedRecordsAffected`</ph> to determine the success or failure of individual update attempts within a batch so it can mark each corresponding &lt;xref:System.Data.DataRow&gt; accordingly.</source>
          <target state="translated"><ph id="ph1">`DbDataAdapter`</ph> 클래스가 의존 <ph id="ph2">`GetBatchedRecordsAffected`</ph> 해당 표시는 일괄 처리 내에서 개별 업데이트 시도의 성공 여부를 확인 하려면 &lt;xref:System.Data.DataRow&gt;적절 하 게.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal of the individual command within the batch.</source>
          <target state="translated">일괄 처리 내 개별 명령의&amp;0;부터 시작 하는 열 서 수입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The number of rows affected in the data store by the specified command within the batch.</source>
          <target state="translated">지정된 된 명령을 일괄 처리 내 데이터 저장소에 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; thrown during execution of the specified command.</source>
          <target state="translated">&lt;xref:System.Exception&gt;지정된 된 명령 실행 하는 동안 발생 합니다.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic) if no exception is thrown.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual basic에서) 경우 예외가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Information about an individual update attempt within a larger batched update.</source>
          <target state="translated">더 큰 일괄 처리 된 업데이트 내에서 개별 업데이트 시도 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT 문을 실행할 때 사용자가 설정 된 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contains the parameters set by the user.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자가 매개 변수를 포함 하는 개체를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Initializes batching for the <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">일괄 처리를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The adapter does not support batches.</source>
          <target state="translated">어댑터는 일괄 처리를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Gets or sets a command used to insert new records into the data source.</source>
          <target state="translated">데이터 원본에 새 레코드를 삽입 하는 데 사용 하는 명령을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt; will be automatically generated.</source>
          <target state="translated">동안 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;자동으로 생성 됩니다.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.IDataAdapter.Update*&gt; to insert records in the data source for new rows in the data set.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.IDataAdapter.Update*&gt;데이터 집합의 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.&lt;/xref:System.Data.IDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref uid="langword_csharp_RowUpdated" name="RowUpdated" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event of a .NET Framework data provider.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref uid="langword_csharp_RowUpdated" name="RowUpdated" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .NET Framework 데이터 공급자의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref uid="langword_csharp_RowUpdating" name="RowUpdating" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event of a .NET Framework data provider.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref uid="langword_csharp_RowUpdating" name="RowUpdating" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .NET Framework 데이터 공급자의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Gets or sets a command used to select records in the data source.</source>
          <target state="translated">데이터 원본에서 레코드를 선택 하는 데 사용 하는 명령을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.IDataAdapter.Update*&gt; to select records from data source for placement in the data set.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.IDataAdapter.Update*&gt;데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.&lt;/xref:System.Data.IDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement for deleting records from the data set.</source>
          <target state="translated">데이터 집합에서 레코드를 삭제 하기 위한 SQL 문을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Common.DbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Common.DbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement used to insert new records into the data source.</source>
          <target state="translated">데이터 원본에 새 레코드를 삽입 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Common.DbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Common.DbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합의 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement used to select records in the data source.</source>
          <target state="translated">데이터 원본에서 레코드를 선택 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Common.DbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Common.DbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to select records from data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement used to update records in the data source.</source>
          <target state="translated">데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Common.DbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Common.DbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본 인 새 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Common.DbDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Common.DbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ICloneable&gt;인터페이스.&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.&lt;/xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본 인 새 개체입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Ends batching for the <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">일괄 처리를 종료는 <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>In &lt;xref:System.Data.Common.DbDataAdapter&gt;, this method throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;이 메서드에서 throw &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from &lt;xref:System.Data.Common.DbDataAdapter&gt; override this method to provide support for batches.</source>
          <target state="translated">상속 된 클래스 &lt;xref:System.Data.Common.DbDataAdapter&gt;일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The adapter does not support batches.</source>
          <target state="translated">어댑터는 일괄 처리를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">데이터베이스의 값을 삽입, 업데이트 또는 삭제할 행에서 지정된 된 배열에 각각에 대 한 각 INSERT, UPDATE 또는 DELETE 문을 실행 하 여 업데이트 된 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method, the &lt;xref:System.Data.Common.DbDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 &lt;xref:System.Data.Common.DbDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대해 반복적으로 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;DELETE 문을 INSERT 문과 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 행의 순서로 인해 다른 DELETE 문을 먼저 실행 될 수 있습니다&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;명령문 (예를 들어 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드 예외를 생성 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; then refreshes the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;다음의 값을 사용 하 여 행을 새로 고치는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, the order of execution is as follows:      1.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 실행의 순서는 다음과 같습니다: 1.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.Common.DbDataAdapter&gt; usually has a parameters collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.Common.DbDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.Common.DbDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.Common.DbDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Action taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 입력된 매개 변수는 일반적으로 오류가의 결과 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 를 호출 하기 전에&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects used to update the data source.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>No <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">더 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to use as a source.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 원본으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">데이터베이스의 값을 삽입, 업데이트 또는 지정 된 행을 삭제 각각에 대 한 각 INSERT, UPDATE 또는 DELETE 문을 실행 하 여 업데이트 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the Update method, the &lt;xref:System.Data.Common.DbDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램에서 Update 메서드를 호출 하는 경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 반복적으로 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대 한 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Update might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 업데이트는 INSERT 문과 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 행의 순서로 인해 다른 DELETE 문이 올 DELETE 문의 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;명령문 (예를 들어 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the Update method generates an exception.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 하지 지정 되었는지 여부, 큐브의 Update 메서드에 예외를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Update method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">큐브의 Update 메서드에 대 한 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Update then refreshes the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">업데이트는 다음의 값을 사용 하 여 행을 새로 고치는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using Update, the order of execution is as follows:      1.</source>
          <target state="translated">업데이트를 사용할 경우의 실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>는 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.Common.DbDataAdapter&gt; usually has a parameters collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.Common.DbDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.Common.DbDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.Common.DbDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Action taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 입력된 매개 변수는 일반적으로 오류가의 결과 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling Update.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> 업데이트를 호출 하기 전에.&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">데이터베이스의 값을 삽입, 업데이트 또는 지정 된 행을 삭제 각각에 대 한 각 INSERT, UPDATE 또는 DELETE 문을 실행 하 여 업데이트 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method, the &lt;xref:System.Data.Common.DbDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 &lt;xref:System.Data.Common.DbDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대해 반복적으로 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;DELETE 문을 INSERT 문과 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 행의 순서로 인해 다른 DELETE 문을 먼저 실행 될 수 있습니다&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;명령문 (예를 들어 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드 예외를 생성 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; then refreshes the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;다음의 값을 사용 하 여 행을 새로 고치는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, the order of execution is as follows:      1.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 실행의 순서는 다음과 같습니다: 1.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>는 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.Common.DbDataAdapter&gt; usually has a parameters collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.Common.DbDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.Common.DbDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.Common.DbDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Action taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 입력된 매개 변수는 일반적으로 오류가의 결과 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 를 호출 하기 전에&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>No <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">더 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to use as a source.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 원본으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">데이터베이스의 값을 삽입, 업데이트 또는 삭제할 행의 지정 된 배열에 각각에 대 한 각 INSERT, UPDATE 또는 DELETE 문을 실행 하 여 업데이트 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method, the &lt;xref:System.Data.Common.DbDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 &lt;xref:System.Data.Common.DbDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대해 반복적으로 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;DELETE 문을 INSERT 문과 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 행의 순서로 인해 다른 DELETE 문을 먼저 실행 될 수 있습니다&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;명령문 (예를 들어 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드 예외를 생성 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; then refreshes the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;다음의 값을 사용 하 여 행을 새로 고치는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, the order of execution is as follows:      1.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 실행의 순서는 다음과 같습니다: 1.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>는 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.Common.DbDataAdapter&gt; usually has a parameters collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.Common.DbDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.Common.DbDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.Common.DbDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Action taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 입력된 매개 변수는 일반적으로 오류가의 결과 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 를 호출 하기 전에&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects used to update the data source.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 데이터 소스를 업데이트 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.IDataAdapter.TableMappings*&gt; collection to use.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.TableMappings*&gt;사용할 컬렉션입니다.&lt;/xref:System.Data.IDataAdapter.TableMappings*&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>No <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">더 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to update.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트할 합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>-or-       No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exists to use as a source.</source>
          <target state="translated">-또는-No <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 원본으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> name.</source>
          <target state="translated">데이터베이스의 값을 삽입, 업데이트 또는 삭제할 행에 각각에 대 한 각 INSERT, UPDATE 또는 DELETE 문을 실행 하 여 업데이트 된 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이름입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method, the &lt;xref:System.Data.Common.DbDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 &lt;xref:System.Data.Common.DbDataAdapter&gt;검사 하는 &lt;xref:System.Data.DataRow.RowState%2A&gt;속성을 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 구성 된 인덱스 순서에 따라 각 행에 대해 반복적으로 필요한 INSERT, UPDATE 또는 DELETE 문을 실행 하 고&lt;/xref:System.Data.DataRow.RowState%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;DELETE 문을 INSERT 문과 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 행의 순서로 인해 다른 DELETE 문을 먼저 실행 될 수 있습니다&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 &lt;xref:System.Data.DataSet.GetChanges%2A&gt;명령문의 시퀀스를 제어 해야 할 경우에 (예를 들어 업데이트 하기 전에 삽입).&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드 예외를 생성 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;또는 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph1">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method supports scenarios where the &lt;xref:System.Data.DataSet&gt; contains multiple &lt;xref:System.Data.DataTable&gt; objects whose names differ only by case.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드 시나리오를 지원 합니다. 여기서는 &lt;xref:System.Data.DataSet&gt;여러 개 포함 된 &lt;xref:System.Data.DataTable&gt;개체 이름이 대/소문자만 다른.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple tables with the same name, but different case, exist in a <ph id="ph1">`DataSet`</ph>, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</source>
          <target state="translated">여러 테이블을 이름이 같지만 서로 다른 경우에 존재 하는 경우는 <ph id="ph1">`DataSet`</ph>, &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;해당 테이블을 찾지 대/소문자 구분 비교를 수행 하 고 있는 정확한 일치 항목이 없는 경우 예외를 생성 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet ds = new DataSet();    ds.Tables.Add("aaa");    ds.Tables.Add("AAA");    adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.    adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.       adapter.Update(ds, "Aaa"); // Results in an exception.   ```</ph>       If &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; is called and the &lt;xref:System.Data.DataSet&gt; contains only one &lt;xref:System.Data.DataTable&gt; whose name differs only by case, that &lt;xref:System.Data.DataTable&gt; is updated.</source>
          <target state="translated"><ph id="ph1">```   DataSet ds = new DataSet();    ds.Tables.Add("aaa");    ds.Tables.Add("AAA");    adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.    adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.       adapter.Update(ds, "Aaa"); // Results in an exception.   ```</ph>경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;라고 및 &lt;xref:System.Data.DataSet&gt;하나만 포함 되어 &lt;xref:System.Data.DataTable&gt;이름이만 대/소문자는 &lt;xref:System.Data.DataTable&gt;업데이트 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">이 시나리오에서는 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">다음 C# 코드는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");       adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.   ```</ph>       The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">```   DataSet dataset = new DataSet();    dataset.Tables.Add("aaa");       adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.   ```</ph>&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; then refreshes the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;다음의 값을 사용 하 여 행을 새로 고치는 &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 하는 조정 된 검사 &lt;xref:System.Data.DataSet&gt;행 및 모든 출력 매개 변수는 명령에서 반환 된.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, the order of execution is as follows:      1.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 실행의 순서는 다음과 같습니다: 1.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>는 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the &lt;xref:System.Data.Common.DbDataAdapter&gt; usually has a parameters collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;일반적으로 이와 관련 된 매개 변수 컬렉션을 포함&lt;/xref:System.Data.Common.DbDataAdapter&gt; 하는와 연결 된 각 명령</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.Common.DbDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>참조 하는 &lt;xref:System.Data.DataTable&gt;열 하는 &lt;xref:System.Data.Common.DbDataAdapter&gt;현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 &lt;xref:System.Data.MissingMappingAction&gt;값.&lt;/xref:System.Data.MissingMappingAction&gt;</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Action taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">| 열거형 값 | 수행 작업 |   |-----------------------|------------------|   | <ph id="ph1">`MissingMappingAction.Passthrough`</ph>| 매핑이 없는 있는 경우에 &lt;xref:System.Data.DataSet&gt;원본 열 이름 및 테이블 이름을 사용 합니다. |   | <ph id="ph2">`MissingMappingAction.Ignore`</ph>| A &lt;xref:System.SystemException&gt;생성 됩니다.&lt;/xref:System.SystemException&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">매핑이 명시적으로 설정 된 경우, 입력된 매개 변수는 일반적으로 오류가의 결과 대 한 누락 된 매핑이 있습니다. |   | <ph id="ph1">`MissingMappingAction.Error`</ph>| &lt;xref:System.SystemException&gt;생성 됩니다. |       <ph id="ph2">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph3">`DataSet`</ph>.&lt;/xref:System.SystemException&gt;</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;속성을 <ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 를 호출 하기 전에&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; &lt;xref:System.Data.UpdateStatus&gt;.&lt;/xref:System.Data.UpdateStatus&gt; &lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt; 속성&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; 을 설정 하는 이벤트</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">성공적으로 업데이트 된 행 수는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행 하려고 영향을 받는&amp;0; 개 레코드에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">가져옵니다 또는 일괄 처리 지원을 사용 하지 않도록 설정 하거나 사용 하는 값을 설정 하 고 일괄 처리에서 실행 될 수 있는 명령 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the UpdateBatchSize property to update a data source with changes from a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">UpdateBatchSize 속성을 사용 하 여 데이터 소스에 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 변경 내용으로 업데이트 하려면</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">데이터 공급자가 일괄 처리를 지 원하는 서버에 왕복 횟수를 줄여 응용 프로그램 성능을 향상 시킬 수이 있습니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</source>
          <target state="translated">ADO.NET 2.0에서는이 속성은 SQL Server (SqlClient) 및 Oracle (OracleClient)에 대 한.NET 데이터 공급자에 대 한 지원.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">너무 큰 배치를 실행 하면 성능이 저하 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
          <target state="translated">따라서 응용 프로그램을 구현 하기 전에 최적의 배치 크기 설정을 테스트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.ArgumentOutOfRangeException&gt; will be thrown if the value is set to a number less than zero.</source>
          <target state="translated">&lt;xref:System.ArgumentOutOfRangeException&gt;0 보다 작은 값은 숫자로 설정 되 면 throw 됩니다.&lt;/xref:System.ArgumentOutOfRangeException&gt;</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The number of rows to process per batch.</source>
          <target state="translated">처리할 일괄 처리당 행 수입니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>Value is</source>
          <target state="translated">값은</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">효과</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>There is no limit on the batch size.</source>
          <target state="translated">일괄 처리 크기에는 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Disables batch updating.</source>
          <target state="translated">일괄 처리 업데이트를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Changes are sent using batches of UpdateBatchSize operations at a time.</source>
          <target state="translated">UpdateBatchSize 작업의 일괄 처리를 사용 하 여 한 번에 변경 내용이 보내집니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>When setting this to a value other than 1 ,all the commands associated with the <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> must have their &lt;xref:System.Data.IDbCommand.UpdatedRowSource<bpt id="p2">*</bpt>&gt; property set to <ept id="p2">*</ept><bpt id="p3">*</bpt>None<ept id="p3">*</ept><bpt id="p4">*</bpt> or <ept id="p4">*</ept><bpt id="p5">*</bpt>OutputParameters<ept id="p5">*</ept>*.</source>
          <target state="translated">연결 된 모든 명령을이 값 1이 아닌 값을 설정 하는 경우는 <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있어야 해당 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 속성이로 설정 <ept id="p2">*</ept> <bpt id="p3">*</bpt>None<ept id="p3">*</ept> <bpt id="p4">*</bpt> 또는 <ept id="p4">*</ept> <bpt id="p5">*</bpt>출력 매개 변수<ept id="p5">*</ept>* 합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>An exception will be thrown otherwise.</source>
          <target state="translated">그렇지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Gets or sets a command used to update records in the data source.</source>
          <target state="translated">데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 명령을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt; will be automatically generated.</source>
          <target state="translated">동안 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;자동으로 생성 됩니다.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.IDataAdapter.Update*&gt; to update records in the data source for modified rows in the data set.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.IDataAdapter.Update*&gt;데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.&lt;/xref:System.Data.IDataAdapter.Update*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>