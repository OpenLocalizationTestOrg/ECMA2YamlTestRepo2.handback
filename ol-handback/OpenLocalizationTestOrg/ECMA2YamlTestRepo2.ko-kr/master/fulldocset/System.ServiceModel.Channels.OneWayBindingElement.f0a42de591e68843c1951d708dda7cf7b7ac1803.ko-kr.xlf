<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c4a78fee35cea980db7f0b217a2152164a4345e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.OneWayBindingElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d7951a52ce2962157a81133579485259efbb80</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a68f802315ff87141b51e4597e31acff49ef3029</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables packet routing and the use of one-way methods.</source>
          <target state="translated">패킷 라우팅 및 단방향 메서드를 사용 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable packet routing a <bpt id="p1">*</bpt>one-way conversion<ept id="p1">*</ept> layer is required, which this class provides.</source>
          <target state="translated">패킷 라우팅을 사용 하려면 한 <bpt id="p1">*</bpt>단방향 변환<ept id="p1">*</ept> 계층은 필요한 경우이 클래스를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a binding in the stack of bindings that performs a message-level shape change called <ph id="ph1">`OneWayBindingElement`</ph>.</source>
          <target state="translated">이 클래스는 라는 메시지 수준의 형태 변경을 수행 하는 바인딩 스택에서 바인딩 <ph id="ph1">`OneWayBindingElement`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This shape change can take a &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt; or a &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt; and expose it as a &lt;xref:System.ServiceModel.Channels.IInputChannel&gt;, or conversely it can take a &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt; or a &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt; and expose it as a &lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;.</source>
          <target state="translated">이 형태 변경은 걸릴 수 있습니다는 &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;또는 &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;로 노출 하 고는 &lt;xref:System.ServiceModel.Channels.IInputChannel&gt;는 &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;한 &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt; &lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;.&lt;/xref:System.ServiceModel.Channels.IOutputChannel&gt; 로 노출 하 고&lt;/xref:System.ServiceModel.Channels.IRequestChannel&gt; 또는&lt;/xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt; 수행할 수는 반대로 또는&lt;/xref:System.ServiceModel.Channels.IInputChannel&gt; &lt;/xref:System.ServiceModel.Channels.IRequestChannel&gt; &lt;/xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.</source>
          <target state="translated">사용자 있도록 패킷 라우팅할 수 있는 세션 인식 또는 요청-회신 전송을 통해이 바인딩을 계층화 하 여 사용자 지정 바인딩을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is also useful when you want to expose one-way methods in a more native fashion.</source>
          <target state="translated">이 클래스는 원래의 방식으로 단방향 메서드를 노출 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.</source>
          <target state="translated">이 계층에서 복합 이중, 신뢰할 수 있는 메시징 등과 같은 많은 변환은 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.OneWayBindingElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.OneWayBindingElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the channel pool settings.</source>
          <target state="translated">채널 풀 설정을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.ChannelPoolSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains properties of the channel pool associated with this binding element.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.ChannelPoolSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 바인딩 요소와 연결 된 채널 풀의 속성을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Clones an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스를 복제합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A cloned copy of this instance of this class.</source>
          <target state="translated">이 클래스의이 인스턴스의 복제 된 복사본입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of channels that can be accepted.</source>
          <target state="translated">수락할 수 있는 채널의 최대 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The maximum number of channels that can be accepted.</source>
          <target state="translated">수락할 수 있는 채널의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default value is 10.</source>
          <target state="translated">기본값은 10입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether packet routing is enabled.</source>
          <target state="translated">패킷 라우팅이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class can optionally use a message-level protocol that transforms a <ph id="ph1">`DuplexSessionChannel`</ph><ph id="ph2">/</ph><ph id="ph3">`RequestChannel`</ph><ph id="ph4">/</ph><ph id="ph5">`ReplyChannel`</ph> to a one-way channel and allows the messages from the transformed channel to be routed.</source>
          <target state="translated">이 클래스를 변환 하는 메시지 수준 프로토콜을 선택적으로 사용할 수는 <ph id="ph1">`DuplexSessionChannel`</ph> <ph id="ph2">/</ph> <ph id="ph3">`RequestChannel`</ph> <ph id="ph4">/</ph> <ph id="ph5">`ReplyChannel`</ph> 을 단방향 채널로 변형 된 채널에서 메시지를 라우팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usage of this protocol is controlled by the PacketRoutable property.</source>
          <target state="translated">이 프로토콜의 사용은 PacketRoutable 속성에 의해 제어 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is <ph id="ph1">`true`</ph>, upon <ph id="ph2">`DuplexSessionChannel`</ph> initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = <ph id="ph3">`false`</ph>, signed if security is enabled) that semantically means “you can packet-route this channel”.</source>
          <target state="translated">이 속성이 <ph id="ph1">`true`</ph>, 시 <ph id="ph2">`DuplexSessionChannel`</ph> 초기화 (예를 들어 버퍼링 된 TCP 및 명명 된 파이프)이이 클래스는 메시지 헤더를 추가 (MustUnderstand = <ph id="ph3">`false`</ph>, 보안을 사용 하는 경우 서명 됨) 수 있음 "을 패킷 라우팅할이이 채널"을 의미 체계가 의미 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the acceptor side, when this property is <ph id="ph1">`true`</ph>, this class looks for this header in the first message received on the channel.</source>
          <target state="translated">이 속성은 경우에 수락자 측 <ph id="ph1">`true`</ph>,이 클래스는 채널에서 받은 첫 번째 메시지에서이 헤더를 찾습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this header does not exist, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> faults the channel.</source>
          <target state="translated">이 헤더가 없으면 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 에서 채널 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the header exists, then <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> funnels the new channel into a shared input channel.</source>
          <target state="translated">헤더가 있을 경우 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 새 채널이 공유 입력된 채널에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is <ph id="ph1">`true`</ph>, this header is added to every request to signal that the request can be packet routed.</source>
          <target state="translated">요청-회신 채널 (예: 스트리밍 TCP 또는 HTTP)를 변환할 때이 속성은 <ph id="ph1">`true`</ph>,이 헤더는 요청을 패킷 라우팅할 수 있음을 알리기 위해 모든 요청에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> also verifies that <ph id="ph2">`SendRequest`</ph> returns <ph id="ph3">`null`</ph> and replies with <ph id="ph4">`null`</ph> on the server.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>또한 확인 <ph id="ph2">`SendRequest`</ph> 반환 <ph id="ph3">`null`</ph> 있고 <ph id="ph4">`null`</ph> 서버의 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if packet routing is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>패킷 라우팅이 사용 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns whether the properties of the channel pool that are associated with this binding element should be serialized.</source>
          <target state="translated">이 바인딩 요소와 연결 된 채널 풀의 속성을 serialize 해야 하는지 여부를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the channel pool settings should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>채널 풀 설정을 serialize 해야 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Exports a custom policy assertion that represents the one-way binding element.</source>
          <target state="translated">단방향 바인딩 요소를 나타내는 사용자 지정 정책 어설션을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.</source>
          <target state="translated">이 메서드는 특정 계약에서 공개한 WSDL 정보에 바인딩 관련 문을 쓰며 및에서 사용 하는 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 하 고 바인딩 스택에서이 사용자 지정 바인딩 요소가 있음을 클라이언트에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method takes two parameters: the &lt;xref:System.ServiceModel.Description.MetadataExporter&gt; and &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; objects.</source>
          <target state="translated">이 메서드는 두 개의 매개 변수:는 &lt;xref:System.ServiceModel.Description.MetadataExporter&gt;및 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;개체.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataExporter&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, and &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, 및 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;방법으로 다양 한 범위에서 이미 내보낸 정책 어설션 컬렉션을 확인할.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then use this method to add your own policy assertions to the appropriate collection.</source>
          <target state="translated">그런 다음 해당 컬렉션에 해당 정책 어설션을 추가 하려면이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt; property exposes the &lt;xref:System.ServiceModel.Description.ContractDescription&gt; for the endpoint that is being exported.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;속성 노출 된 &lt;xref:System.ServiceModel.Description.ContractDescription&gt;은 내보낼 끝점에 대 한.&lt;/xref:System.ServiceModel.Description.ContractDescription&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables this method to correctly scope their exported policy assertions.</source>
          <target state="translated">이 올바르게 내보낸된 정책 어설션의 범위를 설정 하려면이 메서드를 통해.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, security attributes in code can add behaviors to the &lt;xref:System.ServiceModel.Description.ContractDescription&gt; that indicate where security policy assertions should be added.</source>
          <target state="translated">코드의 보안 특성에는 동작을 추가할 수는 예를 들어는 &lt;xref:System.ServiceModel.Description.ContractDescription&gt;보안 정책 어설션을 추가할 위치를 나타내는.&lt;/xref:System.ServiceModel.Description.ContractDescription&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an &lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt; interface.</source>
          <target state="translated">클라이언트 검색 하 고 구현 하 여 사용자 지정 바인딩 어설션을 가져올 수 사용자 지정 정책 어설션을 WSDL 정보에 연결 하면는 &lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;인터페이스.&lt;/xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that you can use to modify the exporting process.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내보내기 프로세스를 수정 하는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that you can use to insert your custom policy assertion.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 사용자 지정 정책 어설션을 삽입에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>