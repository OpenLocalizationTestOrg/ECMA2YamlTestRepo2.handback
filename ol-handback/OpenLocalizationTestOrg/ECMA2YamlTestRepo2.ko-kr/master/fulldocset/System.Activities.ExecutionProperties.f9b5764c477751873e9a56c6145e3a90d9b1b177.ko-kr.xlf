<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">893d6eea6ed798ce6777d83ebd7055ac54a2a3c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Activities.ExecutionProperties.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8fea34d03176a788788e43dbaccb8a29c243f4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85322df919adc316883a119b3802918135ddd943</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the collection of properties at a particular scope.</source>
          <target state="translated">특정 범위의 속성 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Through thread local storage (TLS), the CLR maintains an execution context for each thread.</source>
          <target state="translated">CLR은 스레드 로컬 저장소 (TLS)를 통해 각 스레드의 실행 컨텍스트를 유지합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This execution context governs well-known thread properties such as the thread identity, the ambient transaction, and the current permission set as well as user-defined thread properties like named slots.</source>
          <target state="translated">현재 권한 집합과 같은 사용자 정의 스레드 속성 뿐만 아니라 명명 된 슬롯과 및이 실행 컨텍스트는 스레드 id, 앰비언트 트랜잭션 같은 잘 알려진 스레드 속성은 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike programs directly targeting the CLR, workflow programs are hierarchically-scoped trees that execute in a thread-agnostic environment.</source>
          <target state="translated">CLR을 직접 대상으로 하는 프로그램과 달리 워크플로 프로그램은 스레드를 알 수 없는 환경에서 실행 하는 계층적 범위의 트리입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implies that the standard TLS mechanisms cannot directly be used to determine what context is in scope for a given work item.</source>
          <target state="translated">이 표준 TLS 메커니즘 컨텍스트 제공 된 작업 항목에 대 한 범위에 있는지 여부를 직접 사용할 수 없습니다 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, two parallel branches of execution might use different identities yet the scheduler might interleave their execution on the same CLR thread.</source>
          <target state="translated">예를 들어 두 개의 병렬 실행 분기는 서로 다른 id를 사용할 수 있지만 스케줄러는 동일한 CLR 스레드에서 해당 실행을 인터리빙 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Execution properties allow an activity to declare which properties are in scope for its sub-tree as well as provide hooks for setting up and tearing down TLS to properly interoperate with CLR objects.</source>
          <target state="translated">실행 속성 속성을 해당 하위 트리 범위에으로 설정 하 고 적절 한 CLR 개체 상호 작용을 위해 TLS 중지 후크를 제공할 선언 하기 위한 작업을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Registers a new property using the specified name.</source>
          <target state="translated">지정 된 이름을 사용 하 여 새 속성을 등록 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The object that represents the property.</source>
          <target state="translated">속성을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Registers a property using the specified name and child visibility.</source>
          <target state="translated">지정 된 이름 및 자식 표시 유형을 사용 하는 속성을 등록 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The object that represents the property.</source>
          <target state="translated">속성을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A value that determines whether this property is visible to the children of the owning activity.</source>
          <target state="translated">이 속성이 소유 작업의 하위 항목에 표시 되는지 여부를 결정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the nearest property of the given name.</source>
          <target state="translated">지정한 이름의 가장 가까운 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Find finds the nearest visible property using hierarchical scoping.</source>
          <target state="translated">찾기를 사용 하 여 가장 가까운 visible 속성을 찾습니다 계층적 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two properties have the same name, the closest property at the parent scope is returned.</source>
          <target state="translated">두 속성 이름이 동일한 경우에 부모 범위에서 가장 가까운 속성 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The nearest property of the given name.</source>
          <target state="translated">지정한 이름의 가장 가까운 속성입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of properties.</source>
          <target state="translated">속성의 컬렉션을 반복 하는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An enumerator that iterates through the collection of properties.</source>
          <target state="translated">속성의 컬렉션을 반복 하는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there are properties registered at the current scope.</source>
          <target state="translated">현재 범위에서 등록 된 속성이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are properties registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>등록 하는 속성이 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Unregisters the property with the specified name.</source>
          <target state="translated">지정 된 이름의 속성을 등록 취소합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties are automatically unregistered when the activity completes.</source>
          <target state="translated">활동이 완료 된 속성은 자동으로 등록 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to unregister a property before the activity completes.</source>
          <target state="translated">이 메서드는 작업이 완료 되기 전에 속성의 등록을 취소 데 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the property to unregister.</source>
          <target state="translated">등록을 취소할 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property was unregistered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성이 등록; 되지 않은 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of properties.</source>
          <target state="translated">속성의 컬렉션을 반복 하는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An enumerator that iterates through the collection of properties.</source>
          <target state="translated">속성의 컬렉션을 반복 하는 열거자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>