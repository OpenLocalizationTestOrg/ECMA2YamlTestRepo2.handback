<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40e4fcecee6fe3a23c3326a589fc8f2c99afc96b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.UriParser.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c10fd42e22bfc5d456dc179a7b14293082ec45e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e3c5997f6da5d264897579297c5e5dda66442cc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parses a new URI scheme.</source>
          <target state="translated">새 URI 체계를 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is an abstract class.</source>
          <target state="translated">이 클래스는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UriParser class enables you to create parsers for new URI schemes.</source>
          <target state="translated">UriParser 클래스를 사용 하면 새 URI 체계에 대 한 파서를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</source>
          <target state="translated">전체적으로 이러한 파서 쓰거나 파서 (HTTP, FTP 및 네트워크 프로토콜에 따라 다른 체계) 잘 알려진 구성표 중에서 파생 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a completely new parser, inherit from &lt;xref:System.GenericUriParser&gt;.</source>
          <target state="translated">완전히 새로운 구문 분석기를 만들려는 경우 &lt;xref:System.GenericUriParser&gt;.&lt;/xref:System.GenericUriParser&gt; 에서 상속</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a parser that extends a well-known URI scheme, inherit from &lt;xref:System.FtpStyleUriParser&gt;, &lt;xref:System.HttpStyleUriParser&gt;, &lt;xref:System.FileStyleUriParser&gt;, &lt;xref:System.GopherStyleUriParser&gt;, or &lt;xref:System.LdapStyleUriParser&gt;.</source>
          <target state="translated">상속 하는 잘 알려진 URI 체계를 확장 하는 파서를 만들려는 경우 &lt;xref:System.FtpStyleUriParser&gt;, &lt;xref:System.HttpStyleUriParser&gt;, &lt;xref:System.FileStyleUriParser&gt;, &lt;xref:System.GopherStyleUriParser&gt;, 또는 &lt;xref:System.LdapStyleUriParser&gt;.&lt;/xref:System.LdapStyleUriParser&gt; &lt;/xref:System.GopherStyleUriParser&gt; &lt;/xref:System.FileStyleUriParser&gt; &lt;/xref:System.HttpStyleUriParser&gt; &lt;/xref:System.FtpStyleUriParser&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft strongly recommends that you use a parser shipped with the .NET Framework.</source>
          <target state="translated">.NET Framework와 함께 제공 되는 파서를 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</source>
          <target state="translated">자체 파서를 응용 프로그램의 복잡성을 증가 하 고 제공 된 파서와 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Constructs a default URI parser.</source>
          <target state="translated">기본 URI 파서를 생성합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the components from a URI.</source>
          <target state="translated">URI에서 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the GetComponents method to determine the value of various parts of the URI, such as the &lt;xref:System.UriComponents&gt;, &lt;xref:System.UriComponents&gt;, or &lt;xref:System.UriComponents&gt;.</source>
          <target state="translated">GetComponents 메서드를 사용 하 여와 같은 다양 한 부분의 URI의 값을 확인 하 고 &lt;xref:System.UriComponents&gt;, &lt;xref:System.UriComponents&gt;, 또는 &lt;xref:System.UriComponents&gt;.&lt;/xref:System.UriComponents&gt; &lt;/xref:System.UriComponents&gt; &lt;/xref:System.UriComponents&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components are returned in the order that they appear in the URI.</source>
          <target state="translated">구성 요소는 URI에 나타나는 순서 대로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if &lt;xref:System.UriComponents&gt; is specified, it appears first.</source>
          <target state="translated">예를 들어 경우 &lt;xref:System.UriComponents&gt;지정, 가장 먼저 나타납니다.&lt;/xref:System.UriComponents&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The URI to parse.</source>
          <target state="translated">구문 분석할 URI입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.UriComponents&gt; to retrieve from <ph id="ph1">`uri`</ph>.</source>
          <target state="translated">&lt;xref:System.UriComponents&gt;에서 검색할 <ph id="ph1">`uri`</ph>.&lt;/xref:System.UriComponents&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.UriFormat&gt; values that controls how special characters are escaped.</source>
          <target state="translated">중 하나는 &lt;xref:System.UriFormat&gt;방법을 특수 문자를 제어 하는 값은 이스케이프 됩니다.&lt;/xref:System.UriFormat&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A string that contains the components.</source>
          <target state="translated">구성 요소를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initialize the state of the parser and validate the URI.</source>
          <target state="translated">파서 상태를 초기화 하 고 URI의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitializeAndValidate method is called every time a &lt;xref:System.Uri&gt; is instantiated.</source>
          <target state="translated">InitializeAndValidate 메서드가 호출 될 때마다 한 &lt;xref:System.Uri&gt;인스턴스화됩니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The T:System.Uri to validate.</source>
          <target state="translated">유효성을 검사할 T:System.Uri 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Validation errors, if any.</source>
          <target state="translated">유효성 검사 오류가 있는 경우입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> is a base URI for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativeUri</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">결정 여부 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">baseUri</ph> <ept id="p1">&lt;/code&gt;</ept> 에 대 한 기본 URI가 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">relativeUri</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The URI to test.</source>
          <target state="translated">테스트에 대 한 URI입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p2">&lt;/code&gt;</ept> is a base URI for <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">relativeUri</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p2">&lt;/code&gt;</ept> is a base URI for <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">relativeUri</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates whether the parser for a scheme is registered.</source>
          <target state="translated">구성표에 대 한 파서 등록 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The scheme name to check.</source>
          <target state="translated">확인할 체계 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">schemeName</ph><ept id="p2">&lt;/code&gt;</ept> has been registered; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">schemeName</ph> <ept id="p2">&lt;/code&gt;</ept> 등록 않았으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemeName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is null.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">schemeName</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 null입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemeName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">schemeName</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indicates whether a URI is well-formed.</source>
          <target state="translated">URI 형식이 올바른지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsWellFormedOriginalString method will return false if:      -   The string is not correctly escaped per RFC 2396.</source>
          <target state="translated">IsWellFormedOriginalString 메서드 false를 반환 합니다:-문자열 RFC 2396 올바르게 이스케이프 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The string represents an absolute URI that references an implicit file URI.</source>
          <target state="translated">-문자열 URI 암시적 파일을 참조 하는 절대 URI를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The string represents an absolute URI that is missing a forward slash before the path component.</source>
          <target state="translated">-문자열 경로 구성 요소 앞에 슬래시가 없는 절대 URI를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The string contains unescaped backslashes, even if they will be treated as forward slashes.</source>
          <target state="translated">-문자열 이스케이프 백슬래시가 포함 슬래시도 간주 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The URI to check.</source>
          <target state="translated">확인할 URI입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p2">&lt;/code&gt;</ept> is well-formed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">uri</ph> <ept id="p2">&lt;/code&gt;</ept> 제대로 구성 되지 않았으면, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Invoked by a &lt;xref:System.Uri&gt; constructor to get a <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance</source>
          <target state="translated">호출 하 여 한 &lt;xref:System.Uri&gt;를 가져오기 위해 생성자는 <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the same &lt;xref:System.UriParser&gt; instance.</source>
          <target state="translated">기본 구현은 반환 동일한 &lt;xref:System.UriParser&gt;인스턴스.&lt;/xref:System.UriParser&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may need to override this method and return a different &lt;xref:System.UriParser&gt; for each invocation if you are operating in a multithreaded environment.</source>
          <target state="translated">이 메서드를 재정의 하 고 다른 반환 해야 할 수 있습니다 &lt;xref:System.UriParser&gt;다중 스레드 환경에서 작동 하는 경우에 각 호출에 대해.&lt;/xref:System.UriParser&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the constructed &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 생성</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Invoked by the Framework when a <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method is registered.</source>
          <target state="translated">프레임 워크에서 호출 되는 경우는 <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드가 등록 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The scheme that is associated with this <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">과 관련 된 구성표가 <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The port number of the scheme.</source>
          <target state="translated">구성표의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Associates a scheme and port number with a <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">구성표 및 포트 번호와 연결 된 <bpt id="p1">&lt;xref href="System.UriParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`defaultPort`</ph> parameter is set to -1, the Register method registers no default value for the port number.</source>
          <target state="translated">경우는 <ph id="ph1">`defaultPort`</ph> 매개 변수가-1로 설정 된, 레지스터 메서드 등록 하는 포트 번호에 대 한 기본값이 없습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The URI parser to register.</source>
          <target state="translated">등록할 URI 파서입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the scheme that is associated with this parser.</source>
          <target state="translated">이 파서 연관 된 구성표의 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default port number for the specified scheme.</source>
          <target state="translated">지정된 된 스키마에 대 한 기본 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called by &lt;xref:System.Uri&gt; constructors and <ph id="ph1">&amp;lt;</ph>xref:System.Uri.TryCreate%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to resolve a relative URI.</source>
          <target state="translated">에 의해 호출 &lt;xref:System.Uri&gt;생성자 및 <ph id="ph1">&amp;lt;</ph>xref:System.Uri.TryCreate%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 상대 URI를 확인 하려면.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Uri&gt; constructors and &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; use Resolve to construct a URI from <ph id="ph1">`baseUri`</ph> and <ph id="ph2">`relativeUri`</ph>.</source>
          <target state="translated">&lt;xref:System.Uri&gt;생성자 및 &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt;확인에서 URI를 사용 하 여 <ph id="ph1">`baseUri`</ph> 및 <ph id="ph2">`relativeUri`</ph>.&lt;/xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt;&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parsing error occurs, the returned string for the resolved relative &lt;xref:System.Uri&gt; is null.</source>
          <target state="translated">구문 분석 오류가 발생 하며, 확인된 된 상대에 대 한 반환 된 문자열 &lt;xref:System.Uri&gt;null입니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A relative URI.</source>
          <target state="translated">상대 URI입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Errors during the resolve process, if any.</source>
          <target state="translated">있는 경우에 확인 프로세스 동안 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The string of the resolved relative &lt;xref:System.Uri&gt;.</source>
          <target state="translated">확인된 된 상대 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>