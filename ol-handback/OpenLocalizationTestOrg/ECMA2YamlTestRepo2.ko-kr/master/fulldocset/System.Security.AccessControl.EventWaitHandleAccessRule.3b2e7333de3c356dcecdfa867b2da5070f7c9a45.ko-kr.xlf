<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69c31a45043f12369c89714f5fa0fa55324376d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.EventWaitHandleAccessRule.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09f02899fb3f8f0cd1652a7492eef04f297b7384</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6ef83a7aa87f19f8beb96cf2c77be2fb69f8e9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
          <target state="translated">허용 되거나 거부 된 사용자 또는 그룹에 대 한 액세스 권한 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EventWaitHandleAccessRule class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</source>
          <target state="translated">EventWaitHandleAccessRule 클래스에는 명명 된 시스템 이벤트에 대 한 Windows 액세스 제어 보안을 관리 하기 위한.NET Framework가 제공 하는 클래스 집합 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;.</source>
          <target state="translated">이러한 클래스와의 관계는 기본 Windows 액세스 제어 구조에 대해 간략하게 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;.&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Windows access control security is meaningful only for named system events.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 명명 된 시스템 이벤트 Windows 액세스 제어 보안은에 대해서만 의미가 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an &lt;xref:System.Threading.EventWaitHandle&gt; object represents a local event, access control is irrelevant.</source>
          <target state="translated">경우는 &lt;xref:System.Threading.EventWaitHandle&gt;개체가 로컬 이벤트를 나타내는 액세스 제어는 관련이 없습니다.&lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a list of the rules currently applied to a named event, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get an &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object, and then use its &lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt; method to obtain a collection of EventWaitHandleAccessRule objects.</source>
          <target state="translated">명명된 된 이벤트에 현재 적용 된 규칙 목록이 사용는 &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;가져올 메서드를 한 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;개체를 사용 하 여 해당 &lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;메서드 EventWaitHandleAccessRule 개체의 컬렉션을 가져옵니다.&lt;/xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; &lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>EventWaitHandleAccessRule objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
          <target state="translated">EventWaitHandleAccessRule 개체 내부 임의 액세스 제어 목록 (DACL)에서 액세스 제어 항목으로 일대일로 매핑되지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</source>
          <target state="translated">이벤트에 대 한 모든 액세스 규칙 집합이 나타나면 집합은 현재 모든 액세스 제어 항목을 나타내는 데 필요한 규칙의 최소 수를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The underlying access control entries change as you apply and remove rules.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 기본 액세스 제어 항목 변경 적용 하 고 규칙을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
          <target state="translated">규칙의 정보는 액세스 제어 항목의 가장 작은 수를 유지 하기 위해 가능 하면 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
          <target state="translated">따라서 규칙의 현재 목록을 가져오면 유사할 수 있습니다 하지 정확 하 게 사용자가 추가한 모든 규칙의 목록입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use EventWaitHandleAccessRule objects to specify the access rights to allow or deny to a user or group.</source>
          <target state="translated">EventWaitHandleAccessRule 개체를 사용 하 여 액세스 권한을 허용 하거나 거부할 사용자 또는 그룹을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>An EventWaitHandleAccessRule object always represents either allowed access or denied access, never both.</source>
          <target state="translated">개체는 항상 나타냅니다는 EventWaitHandleAccessRule 액세스가 허용 또는 둘 다 하지 액세스가 거부 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To apply a rule to a named system event, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object.</source>
          <target state="translated">명명된 된 시스템 이벤트에는 규칙을 적용 하려면 사용 하 여는 &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;가져올 메서드를는 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;개체입니다.&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; &lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object by using its methods to add the rule, and then use the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to reattach the security object.</source>
          <target state="translated">수정 된 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;추가 규칙을 사용 하 여 해당 메서드를 사용 하 여 개체는 &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;메서드를 보안 개체를 다시 연결 합니다.&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Changes you make to an &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object do not affect the access levels of the named event until you call the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to assign the altered security object to the named event.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 변경 하면는 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;개체를 호출 하기 전에 명명된 된 이벤트의 액세스 수준을 영향을 주지 않습니다는 &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;명명된 된 이벤트에 변경 된 보안 개체를 할당 하는 메서드.&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>EventWaitHandleAccessRule objects are immutable.</source>
          <target state="translated">EventWaitHandleAccessRule 개체는 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security for an event is modified using the methods of the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
          <target state="translated">이벤트에 대 한 보안의 메서드를 사용 하 여 수정 되는 &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;규칙을 추가 하거나 제거 하는 클래스, 이렇게 하면 기본 액세스 제어 항목 수정 됩니다.&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 동기화 개체에 대 한 보안은 Windows 98 또는 Windows Millennium Edition에 대 한 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 또는 액세스 권한으로 규칙이 적용 되는 그룹을 지정 하는 클래스 및 지정 된 액세스 권한을 허용 또는 거부 여부.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To wait on an &lt;xref:System.Threading.EventWaitHandle&gt; (by calling the &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;, &lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt; or &lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt; method), a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; access.</source>
          <target state="translated">대기는 &lt;xref:System.Threading.EventWaitHandle&gt;(호출 하 여는 &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;, &lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;또는 &lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;메서드), 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; &lt;/xref:System.Threading.WaitHandle.WaitAll%2A&gt; &lt;/xref:System.Threading.WaitHandle.WaitAny%2A&gt; &lt;/xref:System.Threading.WaitHandle.WaitOne%2A&gt; &lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an event by calling the &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt; method, or to reset it to the unsignaled state by calling the &lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt; method, a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; access.</source>
          <target state="translated">호출 하 여 이벤트 신호를 보내는 &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;메서드를 호출 하 여 신호를 보내지 않은 상태로 되돌리려면는 &lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt;메서드를 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; &lt;/xref:System.Threading.EventWaitHandle.Reset%2A&gt; &lt;/xref:System.Threading.EventWaitHandle.Set%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an &lt;xref:System.Threading.EventWaitHandle&gt; object and then wait on it by calling the &lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt; method, a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt; and &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt; access.</source>
          <target state="translated">신호를 보내는 &lt;xref:System.Threading.EventWaitHandle&gt;개체를 다음 호출 하 여 대기는 &lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt;메서드를 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt;및 &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleRights&gt; &lt;/xref:System.Threading.WaitHandle.SignalAndWait%2A&gt; &lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The user or group the rule applies to.</source>
          <target state="translated">사용자 또는 규칙 그룹에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Must be of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">형식 이어야 합니다 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 형식으로 <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 변환할 수 있는 <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the rights allowed or denied.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 권한을 지정 하는 값을 허용 또는 거부 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 권한 허용 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph>잘못 된 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> 잘못 된 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> 은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph>형식이 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 아니고과 같은 형식 <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 변환할 수 있는 <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 또는 규칙을 적용할 액세스 권한, 그룹의 이름을 지정 하는 클래스 및 지정 된 액세스 권한을 허용 또는 거부 여부.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To wait on an &lt;xref:System.Threading.EventWaitHandle&gt; (by calling the &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;, &lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt; or &lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt; method), a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; access.</source>
          <target state="translated">대기는 &lt;xref:System.Threading.EventWaitHandle&gt;(호출 하 여는 &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;, &lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;또는 &lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;메서드), 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; &lt;/xref:System.Threading.WaitHandle.WaitAll%2A&gt; &lt;/xref:System.Threading.WaitHandle.WaitAny%2A&gt; &lt;/xref:System.Threading.WaitHandle.WaitOne%2A&gt; &lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an event by calling the &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt; method, or to reset it to the unsignaled state by calling the &lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt; method, a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; access.</source>
          <target state="translated">호출 하 여 이벤트 신호를 보내는 &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;메서드를 호출 하 여 신호를 보내지 않은 상태로 되돌리려면는 &lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt;메서드를 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt; &lt;/xref:System.Threading.EventWaitHandle.Reset%2A&gt; &lt;/xref:System.Threading.EventWaitHandle.Set%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an &lt;xref:System.Threading.EventWaitHandle&gt; object and then wait on it by calling the &lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt; method, a user must have &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt; and &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt; access.</source>
          <target state="translated">신호를 보내는 &lt;xref:System.Threading.EventWaitHandle&gt;개체를 다음 호출 하 여 대기는 &lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt;메서드를 사용자에 게 있어야 &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt;및 &lt;xref:System.Security.AccessControl.EventWaitHandleRights&gt;액세스.&lt;/xref:System.Security.AccessControl.EventWaitHandleRights&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleRights&gt; &lt;/xref:System.Threading.WaitHandle.SignalAndWait%2A&gt; &lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is equivalent to creating an &lt;xref:System.Security.Principal.NTAccount&gt; object, by passing <ph id="ph1">`identity`</ph> to the &lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt; constructor, and passing the newly created &lt;xref:System.Security.Principal.NTAccount&gt; object to the &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29&gt; constructor.</source>
          <target state="translated">이 생성자는 만들기는 &lt;xref:System.Security.Principal.NTAccount&gt;개체를 전달 하 여 <ph id="ph1">`identity`</ph> 에 &lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt;생성자 및 새로 만든 전달 &lt;xref:System.Security.Principal.NTAccount&gt;개체는 &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;생성자.&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29&gt; &lt;/xref:System.Security.Principal.NTAccount&gt; &lt;/xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt; &lt;/xref:System.Security.Principal.NTAccount&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the user or group the rule applies to.</source>
          <target state="translated">사용자 또는 그룹의 이름 규칙에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the rights allowed or denied.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 권한을 지정 하는 값을 허용 또는 거부 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 권한 허용 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph>잘못 된 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> 잘못 된 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph>0입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is a zero-length string.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> 은 길이가&amp;0; 인 문자열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is longer than 512 characters.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> 512 자 보다 깁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the rights allowed or denied by the access rule.</source>
          <target state="translated">액세스 규칙에 따라 허용 되거나 거부 권한을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; objects are immutable.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;개체는 변경할 수 없습니다.&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a new access rule representing a different user, different rights, or a different &lt;xref:System.Security.AccessControl.AccessControlType&gt;, but you cannot modify an existing access rule.</source>
          <target state="translated">다른 사용자, 서로 다른 권한을 또는 다른를 나타내는 새 액세스 규칙을 만들 수 있습니다 &lt;xref:System.Security.AccessControl.AccessControlType&gt;, 있지만 기존 액세스 규칙을 수정할 수 없습니다.&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating the rights allowed or denied by the access rule.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값 된 권한을 나타내는 허용 또는 액세스 규칙에 의해 거부 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>