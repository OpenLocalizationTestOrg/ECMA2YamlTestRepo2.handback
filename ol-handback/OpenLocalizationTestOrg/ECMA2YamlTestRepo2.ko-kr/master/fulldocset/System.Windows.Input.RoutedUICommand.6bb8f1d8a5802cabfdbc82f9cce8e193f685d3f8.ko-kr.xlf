<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8990d6035a0c9fba2ec05068f49c27d1f1b2308b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.RoutedUICommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b038c000de5489afbbe564ef0f872e35b7dc1c2b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">771c7a735de65f02d691a53401a817978c77ec9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines an &lt;xref:System.Windows.Input.ICommand&gt; that is routed through the element tree and contains a text property.</source>
          <target state="translated">정의 &lt;xref:System.Windows.Input.ICommand&gt;요소 트리를 통해 라우팅됩니다 하 고 텍스트 속성을 포함 합니다.&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between a RoutedUICommand and &lt;xref:System.Windows.Input.RoutedCommand&gt; is that RoutedUICommand includes a &lt;xref:System.Windows.Input.RoutedUICommand.Text%2A&gt; property.</source>
          <target state="translated">RoutedUICommand 사이의 차이 및 &lt;xref:System.Windows.Input.RoutedCommand&gt;은 RoutedUICommand 포함 하는 한 &lt;xref:System.Windows.Input.RoutedUICommand.Text%2A&gt;속성.&lt;/xref:System.Windows.Input.RoutedUICommand.Text%2A&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt; and &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; methods on a &lt;xref:System.Windows.Input.RoutedCommand&gt; do not contain the command logic for the command, as is the case with a typical &lt;xref:System.Windows.Input.ICommand&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;및 &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; &lt;xref:System.Windows.Input.RoutedCommand&gt;에 일반적인 &lt;xref:System.Windows.Input.ICommand&gt;.&lt;/xref:System.Windows.Input.ICommand&gt; 경우 처럼 명령에 대 한 명령 논리가 포함 되어 있지 않으면&lt;/xref:System.Windows.Input.RoutedCommand&gt; 를 메서드&lt;/xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; &lt;/xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods raise events that traverse the element tree looking for an object with a &lt;xref:System.Windows.Input.CommandBinding&gt;.</source>
          <target state="translated">이러한 메서드는 개체에 &lt;xref:System.Windows.Input.CommandBinding&gt;.&lt;/xref:System.Windows.Input.CommandBinding&gt; 찾는 요소 트리를 탐색 하는 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handlers attached to the &lt;xref:System.Windows.Input.CommandBinding&gt; contain the command logic.</source>
          <target state="translated">에 연결 된 이벤트 처리기는 &lt;xref:System.Windows.Input.CommandBinding&gt;명령 논리를 포함 합니다.&lt;/xref:System.Windows.Input.CommandBinding&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt; method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events.</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;발생 시키는 메서드는 &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;및 &lt;xref:System.Windows.Input.CommandManager.Executed&gt;이벤트.&lt;/xref:System.Windows.Input.CommandManager.Executed&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; &lt;/xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events.</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;발생 시키는 메서드는 &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;및 &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;이벤트.&lt;/xref:System.Windows.Input.CommandManager.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; &lt;/xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_RoutedUICommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="predefinedCommandName"/&gt;   - or -   &lt;object property="predefinedClassName.predefinedCommandName"/&gt;   - or -   &lt;object property="{x:Static customClassName.customCommandName}"/&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_RoutedUICommand"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>predefinedClassName<ept id="p3">*</ept>    One of the predefined command classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_RoutedUICommand"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object property="predefinedCommandName"/&gt;   - or -   &lt;object property="predefinedClassName.predefinedCommandName"/&gt;   - or -   &lt;object property="{x:Static customClassName.customCommandName}"/&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_RoutedUICommand"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>predefinedClassName<ept id="p3">*</ept> 미리 정의 된 명령 클래스 중 하나입니다.      </target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept>    One of the predefined commands.</source>
          <target state="translated"><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept> 미리 정의 된 명령 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>prefix<ept id="p1">*</ept>    The <ph id="ph1">`xlmns`</ph> prefix that maps <bpt id="p2">*</bpt>customClassName<ept id="p2">*</ept>.<bpt id="p3">*</bpt>customCommandName<ept id="p3">*</ept> to the <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> class.</source>
          <target state="translated"><bpt id="p1">*</bpt>접두사<ept id="p1">*</ept> 는 <ph id="ph1">`xlmns`</ph> 매핑되는 접두사 <bpt id="p2">*</bpt>customClassName<ept id="p2">*</ept>.<bpt id="p3">*</bpt> customCommandName<ept id="p3">*</ept> 에 <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept>    A custom class that contains the custom command.</source>
          <target state="translated"><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept> 사용자 지정 명령을 포함 하는 사용자 지정 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept>    A custom command.</source>
          <target state="translated"><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept> 사용자 지정 명령입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, using the specified descriptive text, declared name, and owner type.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스, 이름 및 소유자 유형을 선언 합니다. 지정된 된 설명 텍스트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Descriptive text for the command.</source>
          <target state="translated">명령에 대 한 설명 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The declared name of the command for serialization.</source>
          <target state="translated">Serialization에 대 한 명령의 선언 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The type that is registering the command.</source>
          <target state="translated">명령을 등록 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, using the specified descriptive text, declared name, owner type, and input gestures.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedUICommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스, 지정 된 설명 텍스트, 선언 된 이름, 소유자 유형 및 입력된 제스처를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Descriptive text for the command.</source>
          <target state="translated">명령에 대 한 설명 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The declared name of the command for serialization.</source>
          <target state="translated">Serialization에 대 한 명령의 선언 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The type that is registering the command.</source>
          <target state="translated">명령을 등록 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A collection of gestures to associate with the command.</source>
          <target state="translated">명령을 사용 하 여 연결 하는 제스처의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the text that describes this command.</source>
          <target state="translated">이 명령에 설명 하는 텍스트를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The text that describes the command.</source>
          <target state="translated">텍스트 명령을 설명입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>