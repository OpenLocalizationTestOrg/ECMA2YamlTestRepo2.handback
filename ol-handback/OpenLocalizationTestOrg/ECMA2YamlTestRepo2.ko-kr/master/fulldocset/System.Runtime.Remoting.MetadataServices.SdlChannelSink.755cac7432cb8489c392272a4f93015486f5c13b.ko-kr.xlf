<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b7524d9d415d82fd63e272f9700decfeaa2138b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.MetadataServices.SdlChannelSink.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cae9eac910660dda6f23bdc4e8757997d814ca64</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2806d3b4176db3a588a9636819c4fc8a3b71453f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.</source>
          <target state="translated">서버에 대 한 구현을 서버에 WSDL 웹 서비스 설명 언어 ()을 동적으로 생성 하는 채널 싱크를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SdlChannelSink is used to create WSDL in situations where the URL ends with the string "?wsdl".</source>
          <target state="translated">SdlChannelSink ´ â WSDL URL 문자열로 끝나는 경우에 "? wsdl"입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the channel configuration properties that can be specified for this channel sink.</source>
          <target state="translated">다음 표에서 채널이 채널 싱크에 지정할 수 있는 구성 속성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first two properties combine to control the WSDL publication of objects published by the application domain.</source>
          <target state="translated">처음 두 속성은 응용 프로그램 도메인에 의해 게시 된 개체의 WSDL 게시를 제어 하는 결합 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph> is specified for the first property, no WSDL is returned, regardless of the second property.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph> 없습니다 WSDL은 두 번째 속성에 관계 없이 반환 된 첫 번째 속성에 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The default is <ph id="ph1">`true`</ph>.) Otherwise, the second controls whether the global metadata object URI is permitted to respond.</source>
          <target state="translated">(기본값은 <ph id="ph1">`true`</ph>.) 그렇지 않으면 두 번째 전역 메타 데이터 개체 URI 응답 하도록 허용 되는지 여부를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The default is <ph id="ph1">`false`</ph>.)      |Property|Description|   |--------------|-----------------|   |<ph id="ph2">`metadataEnabled`</ph>|A Boolean value that specifies whether to honor requests that end in "?wsdl" if this sink is in the channel sink chain.</source>
          <target state="translated">(기본값은 <ph id="ph1">`false`</ph>.)      | 속성 | 설명 |   |--------------|-----------------|   | <ph id="ph2">`metadataEnabled`</ph>| 로 끝나는 요청을 허용 여부를 지정 하는 부울 값 "? wsdl"이이 싱크 채널 싱크 체인에 있는 경우.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default setting is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본 설정은 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, the sink throws an exception in all cases where metadata is requested for any object in the application domain.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph>, 싱크 응용 프로그램 도메인의 모든 개체에 대 한 메타 데이터를 요청한 하는 모든 경우에 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|   |<ph id="ph1">`remoteApplicationMetadataEnabled`</ph>|A Boolean value that specifies whether to honor requests for the object URI "RemoteApplicationMetadata?wsdl", which returns WSDL that describes all objects that are published by the application domain.</source>
          <target state="translated">이 속성은.NET Framework 버전 1.1의 다음 플랫폼에 의해서만 지원: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군. |   | <ph id="ph1">`remoteApplicationMetadataEnabled`</ph>| URI 개체에 대 한 요청을 허용 여부를 지정 하는 부울 값 "RemoteApplicationMetadata? wsdl", 응용 프로그램 도메인에 의해 게시 된 모든 개체를 설명 하는 WSDL을 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, then any request to "RemoteApplicationMetadata.rem" throws an exception.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph>, "RemoteApplicationMetadata.rem"에 대 한 요청이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other "?wsdl" requests for particular object URIs are honored.</source>
          <target state="translated">다른 모든 "? wsdl" 특정 개체 Uri에 대 한 요청에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, the global metadata request is honored.</source>
          <target state="translated">경우 <ph id="ph1">`true`</ph>, 전역 메타 데이터 요청이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default setting is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 설정은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|</source>
          <target state="translated">이 속성은.NET Framework 버전 1.1의 다음 플랫폼에 의해서만 지원: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군. |</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates the channel that will receive the messages serialized by the new instance of <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스에서 직렬화 할 메시지를 받을 채널 나타냅니다 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The next sink in the sink chain.</source>
          <target state="translated">싱크 체인의 다음 싱크입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Requests processing from the current sink of the response from a method call that was sent asynchronously.</source>
          <target state="translated">비동기적으로 전송 하는 메서드 호출에서 응답이 현재 싱크에서 처리 하도록 요청 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">서버 전송 싱크에 돌아가도록 싱크 스택.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">요청 측을 생성 하 고 필요한 응답 측에서 현재 싱크와 관련 된 정보입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">응답 메시지입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The headers to add to the return message heading to the client.</source>
          <target state="translated">클라이언트에 반환 메시지 머리글에 추가할 헤더입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream heading back to the transport sink.</source>
          <target state="translated">전송 싱크에 다시 향하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">반환 된 &lt;xref:System.IO.Stream&gt;serialize 되는 제공 된 응답 메시지에.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method is called when a response stream needs to be created.</source>
          <target state="translated">현재 메서드는 응답 스트림에 작성 해야 하는 경우 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">서버 전송 싱크에 돌아가도록 싱크 스택.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">요청 측을 생성 하 고 필요한 응답 측에서 현재 싱크와 관련 된 정보입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The response message to serialize.</source>
          <target state="translated">직렬화 하는 데 사용 되는 응답 메시지입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The headers to put in the response stream to the client.</source>
          <target state="translated">클라이언트에 응답 스트림에서 추가 헤더입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;serialize 되는 제공 된 응답 메시지에.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">다음 가져옵니다 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 싱크 체인에 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">다음 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 싱크 체인에 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requests message processing from the current sink.</source>
          <target state="translated">현재 싱크에서 처리 하는 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy's job is to convert a method call that is invoked on it into a message object.</source>
          <target state="translated">프록시의 역할은 메시지 개체에 대해 호출 되는 메서드 호출을 변환 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Message object, which implements the &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; interface, is passed from the client end to the server end by invoking &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on message sink objects.</source>
          <target state="translated">구현 하는 메시지 개체는 &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;인터페이스를 호출 하 여 서버 쪽에 클라이언트 쪽에서 전달 &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;메시지 싱크 개체에서.&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message sinks are chained together, which means that every message sink is responsible for calling &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on the next message sink after it has performed its work.</source>
          <target state="translated">즉, 모든 메시지 싱크는 호출 메시지 싱크 함께 연결 &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;해당 작업을 수행한 후 다음 메시지 싱크에서에.&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</source>
          <target state="translated">예를 들어,는 동기화 관련 메시지 싱크 잠금이 획득 또는 해제 및 다운스트림 메시지 싱크에 위임 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the formatter channel sink gets a message that needs to be sent over the channel, it calls &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;, passing the message as a parameter.</source>
          <target state="translated">포맷터가 채널 싱크 보내야 하는 채널을 통해 호출 하는 메시지를 가져옵니다 때 &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;, 메시지를 매개 변수로 전달 합니다.&lt;/xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatter sink then creates the transport header array and calls &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt; on the formatter sink.</source>
          <target state="translated">포맷터 싱크는 다음 전송 헤더 배열과 호출 만듭니다 &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;포맷터 싱크에.&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink.</source>
          <target state="translated">이 호출은 싱크 체인으로 전달 되 고 싱크는 포맷터 싱크로 다시 전달 되는 요청 스트림을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>After this call returns, the message is serialized, &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt; is called on the first chain in the sink chain, and the message is passed to the channel sinks.</source>
          <target state="translated">이 호출이 반환, 메시지를 serialize &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;싱크 체인에서 첫 번째 체인에서 호출 되는 메시지 채널 싱크에 전달 됩니다.&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</source>
          <target state="translated">채널 싱크 후 메시지가 표시 될, 스트림에 데이터를 쓸, 헤더 배열에 헤더를 추가 및 다음 싱크에 대 한 호출을 전달 하기 전에 싱크 스택에서에 추가 되도록 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</source>
          <target state="translated">호출 체인의 끝에 있는 전송 싱크에 도달 하면 전송 싱크가 헤더를 보내고 프로세스 속도가 반대로 바뀝니다 서버로 채널을 통해 메시지를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink.</source>
          <target state="translated">메시지가 서버 쪽에 도달 하면 전송 싱크가 헤더 및 serialize 된 스트림에서 메시지 가져오고 포맷터 싱크에 도달할 때까지 싱크 체인을 통해 전달 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.</source>
          <target state="translated">포맷터 싱크는 다음 메시지를 deserialize 하 고 원격을 사용할 수 있는 메시지는 메서드 호출으로 설정 되어 있으며 해당 서버 개체를 호출에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A stack of channel sinks that called the current sink.</source>
          <target state="translated">채널 싱크에서 현재 싱크를 호출한.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The message that contains the request.</source>
          <target state="translated">요청을 포함 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The headers that are retrieved from the incoming message from the client.</source>
          <target state="translated">클라이언트에서 들어오는 메시지에서 검색 된 헤더입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The stream that needs to be processed and passed on to the deserialization sink.</source>
          <target state="translated">처리 하 고 deserialization 싱크로 전달 해야 하는 스트림.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the response message.</source>
          <target state="translated">이 메서드가 반환 될 때를 포함 한 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응답 메시지를 보유 하는 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the headers to add to return message heading to the client.</source>
          <target state="translated">이 메서드가 반환 될 때를 포함 한 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클라이언트에 반환 되는 메시지 머리글에 추가할 헤더를 보유 하는 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a &lt;xref:System.IO.Stream&gt; that is heading to the transport sink.</source>
          <target state="translated">이 메서드가 반환 될 때를 포함 한 &lt;xref:System.IO.Stream&gt;전송 싱크에 머리글 즉.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> status value that provides information about how the message was processed.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지를 처리 하는 방법에 대 한 정보를 제공 하는 상태 값입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.IDictionary&gt;현재 채널 싱크에 대 한 속성.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">A &lt;xref:System.Collections.IDictionary&gt;현재 채널 싱크에 대 한 속성.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>