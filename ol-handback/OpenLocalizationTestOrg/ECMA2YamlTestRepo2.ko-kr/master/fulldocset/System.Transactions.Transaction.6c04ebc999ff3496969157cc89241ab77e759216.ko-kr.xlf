<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ced48c8d5d0f7dd424160950e131c9d580b5721</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.Transaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4eb013f0f227a4fe0bffe5d593e123b8a4bd839e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5cf89252844805604385470e7e18ee37838defc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a transaction.</source>
          <target state="translated">트랜잭션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Transactions&gt; namespace provides both an explicit programming model based on the Transaction class, as well as an implicit programming model using the &lt;xref:System.Transactions.TransactionScope&gt; class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated">&lt;xref:System.Transactions&gt;모두는 명시적인 프로그래밍 모델을 사용 하는 암시적 프로그래밍 모델 뿐 아니라 트랜잭션 클래스에 기반을 제공 하는 네임 스페이스는 &lt;xref:System.Transactions.TransactionScope&gt;트랜잭션을 관리 하는 자동으로 인프라에 의해 클래스.&lt;/xref:System.Transactions.TransactionScope&gt; &lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is highly recommended that you use the easier implicit model for development.</source>
          <target state="translated">개발을 위한 편리한 암시적 모델을 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get started, please see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">시작 하려면를 참조 하십시오는 <bpt id="p1">[</bpt>구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>.</source>
          <target state="translated">트랜잭션 응용 프로그램 작성 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>트랜잭션 응용 작성<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transaction class contains methods used by developers implementing resource managers for enlistment.</source>
          <target state="translated">트랜잭션 클래스 인리스트먼트에 대 한 리소스 관리자를 구현 하는 개발자가 사용 되는 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also provides functionalities for cloning a transaction and controlling the current transaction context.</source>
          <target state="translated">또한 트랜잭션을 복제 하 고 현재 트랜잭션 컨텍스트를 제어 하기 위한 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain the current transaction, if one is set, using the static &lt;xref:System.Transactions.Transaction.Current%2A&gt; property.</source>
          <target state="translated">정적을 사용 하 여, 설정 된 경우 현재 트랜잭션을 가져올 수 있습니다 &lt;xref:System.Transactions.Transaction.Current%2A&gt;속성.&lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creates a clone of the transaction.</source>
          <target state="translated">트랜잭션의 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones are created to pass transactions.</source>
          <target state="translated">트랜잭션을 전달 하기 위해 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might not want to pass a &lt;xref:System.Transactions.CommittableTransaction&gt; to other applications, because you do not want others to commit your transaction.</source>
          <target state="translated">예를 들어 전달 하려는 하지는 &lt;xref:System.Transactions.CommittableTransaction&gt;다른 응용 프로그램에 다른 사용자가 트랜잭션을 않으려면 때문에.&lt;/xref:System.Transactions.CommittableTransaction&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you try to marshal or serialize a transaction, a clone is created for you automatically.</source>
          <target state="translated">마샬링하거나 트랜잭션을 serialize 하려고 하면 복제본을 자동으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a copy of the current transaction object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 트랜잭션 개체의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the ambient transaction.</source>
          <target state="translated">앰비언트 트랜잭션을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on ambient transactions, please see the "Managing transaction flow using TransactionScopeOption" section of the <bpt id="p1">[</bpt>Implementing an Implicit Transaction using Transaction Scope<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">앰비언트 트랜잭션에 대 한 자세한 내용은 "TransactionScopeOption를 사용 하 여 트랜잭션 흐름을 관리 합니다." 섹션을 참조 하십시오는 <bpt id="p1">[</bpt>암시적 트랜잭션은 트랜잭션 범위를 사용 하 여 구현<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can set the ambient transaction using this property, you should use the &lt;xref:System.Transactions.TransactionScope&gt; object to manipulate the ambient transaction whenever possible.</source>
          <target state="translated">이 속성을 사용 하 여 앰비언트 트랜잭션의 설정할 수는 있지만 사용 해야는 &lt;xref:System.Transactions.TransactionScope&gt;앰비언트 트랜잭션이 가능 하면 항상를 조작 하는 개체입니다.&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is thread static.</source>
          <target state="translated">이 속성은 정적 스레드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the ambient transaction using this property inside a &lt;xref:System.Transactions.TransactionScope&gt; an &lt;xref:System.InvalidOperationException&gt; is thrown when &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; is called, and the previous ambient transaction value is restored.</source>
          <target state="translated">이 속성 내를 사용 하 여 앰비언트 트랜잭션을 변경 하는 경우는 &lt;xref:System.Transactions.TransactionScope&gt;는 &lt;xref:System.InvalidOperationException&gt;경우 throw 되 &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;호출 됩니다 이전 앰비언트 트랜잭션을 값이 복원.&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the current transaction.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 트랜잭션을 설명 하는 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates a dependent clone of the transaction.</source>
          <target state="translated">트랜잭션이 종속 클론을 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A dependent transaction is a transaction whose outcome depends on the outcome of the transaction from which it was cloned.</source>
          <target state="translated">종속 트랜잭션이 해당 결과가 복제 된 트랜잭션의 결과에 종속 되는 트랜잭션을입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`cloneoption`</ph> parameter controls what kind of dependent transaction to create.</source>
          <target state="translated"><ph id="ph1">`cloneoption`</ph> 매개 변수를 만드는 종속 트랜잭션의 종류를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a dependent transaction is created with &lt;xref:System.Transactions.DependentCloneOption&gt;, it blocks the commit process of the transaction until the transaction times out, or &lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt; is called on the &lt;xref:System.Transactions.DependentTransaction&gt;.</source>
          <target state="translated">종속 트랜잭션이 &lt;xref:System.Transactions.DependentCloneOption&gt;커밋 프로세스는 제한 시간이 초과 될 때까지 트랜잭션 또는 &lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt; &lt;xref:System.Transactions.DependentTransaction&gt;.&lt;/xref:System.Transactions.DependentTransaction&gt; 호출&lt;/xref:System.Transactions.DependentTransaction.Complete%2A&gt; 차단,&lt;/xref:System.Transactions.DependentCloneOption&gt; 만들어진 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is created with &lt;xref:System.Transactions.DependentCloneOption&gt;, it automatically aborts the transaction if &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; is called before &lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt; is called on the &lt;xref:System.Transactions.DependentTransaction&gt;.</source>
          <target state="translated">로 생성 하는 경우 &lt;xref:System.Transactions.DependentCloneOption&gt;, 경우 트랜잭션이 자동으로 중단 &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; &lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt; &lt;xref:System.Transactions.DependentTransaction&gt;.&lt;/xref:System.Transactions.DependentTransaction&gt; 호출&lt;/xref:System.Transactions.DependentTransaction.Complete%2A&gt; 전에 호출 됩니다&lt;/xref:System.Transactions.CommittableTransaction.Commit%2A&gt; &lt;/xref:System.Transactions.DependentCloneOption&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.DependentCloneOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that controls what kind of dependent transaction to create.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.DependentCloneOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 만들려는 종속 된 트랜잭션의 종류를 제어 하는 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.DependentTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the dependent clone.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.DependentTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 종속 복제를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the resources that are held by the object.</source>
          <target state="translated">개체에서 보유 하는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the ambient transaction by setting &lt;xref:System.Transactions.Transaction.Current%2A&gt; inside a &lt;xref:System.Transactions.TransactionScope&gt; an &lt;xref:System.InvalidOperationException&gt; is thrown when &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; is called, and the previous ambient transaction value is restored.</source>
          <target state="translated">설정 하 여 앰비언트 트랜잭션을 변경 하는 경우 &lt;xref:System.Transactions.Transaction.Current%2A&gt;내는 &lt;xref:System.Transactions.TransactionScope&gt;는 &lt;xref:System.InvalidOperationException&gt;경우 throw 되 &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;호출 이전 앰비언트 트랜잭션을 값이 복원.&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Transactions.TransactionScope&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enlists a durable resource manager that supports two phase commit to participate in a transaction.</source>
          <target state="translated">트랜잭션에 참여&amp;2; 단계 커밋을 지 원하는 영구 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource managers with a durable enlistment must be able to perform recovery if they experience a failure.</source>
          <target state="translated">지속적인 인 리스트 먼 있는 리소스 관리자는 오류가 발생할 경우 복구를 수행할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">복구에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>복구 수행<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on volatile and durable resources, as well as how to enlist a resource, see <bpt id="p1">[</bpt>Implementing A Resource Manager<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>.</source>
          <target state="translated">휘발성 및 지속적인 리소스: 리소스를 참여 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>A 리소스 관리자 구현<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how a resource manager responds to commit notification and prepare the commit in two-phase commit, see <bpt id="p1">[</bpt>Committing A Transaction In Single-Phase and Multi-Phase<ept id="p1">](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>.</source>
          <target state="translated">알림 커밋하고&amp;2; 단계 커밋을 준비 하는 리소스 관리자가 응답 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>커밋하는 트랜잭션에서 단일 단계 및 다중 단계<ept id="p1">](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource managers enlisted for participation in a transaction through this method receive two phase commit notifications that correspond to the methods defined on the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface.</source>
          <target state="translated">이 메서드를 통해 트랜잭션에 참여 한 리소스 관리자에 정의 된 메서드에 해당 하는&amp;2; 단계 커밋 알림을 수신는 &lt;xref:System.Transactions.IEnlistmentNotification&gt;인터페이스.&lt;/xref:System.Transactions.IEnlistmentNotification&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</source>
          <target state="translated">리소스 관리자 오류 사이 유지 하거나 다시 부팅 해야 하는 리소스 관리자에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that implements the <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface to receive two phase commit notifications.</source>
          <target state="translated">구현 하는 개체는 <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를&amp;2; 단계 커밋 알림을 수신할 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the resource manager wants to perform additional work during the prepare phase.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리자가 준비 단계 추가 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that describes the enlistment.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참여를 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.</source>
          <target state="translated">트랜잭션에 참여할 수 있는 단일 단계 커밋 최적화를 지 원하는 영구 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource managers with a durable enlistment must be able to perform recovery if they experience a failure.</source>
          <target state="translated">지속적인 인 리스트 먼 있는 리소스 관리자는 오류가 발생할 경우 복구를 수행할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">복구에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>복구 수행<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on volatile and durable resources, as well as how to enlist a resource, see <bpt id="p1">[</bpt>Implementing A Resource Manager<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>.</source>
          <target state="translated">휘발성 및 지속적인 리소스: 리소스를 참여 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>A 리소스 관리자 구현<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should note that even when your resource manager implementation enlists with this method, it is not guaranteed that it receives a single phase commit.</source>
          <target state="translated">리소스 관리자 구현에이 방법으로 인 리스트 먼 트를 하는 경우에 해당 하지 않을 단일 단계 커밋 받는다고 점에 유의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager can still send two phase commit notifications instead.</source>
          <target state="translated">트랜잭션 관리자&amp;2; 단계 커밋 알림을 대신 보낼 여전히 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the single phase commit optimization, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">단일 단계 커밋 최적화에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</source>
          <target state="translated">리소스 관리자 오류 사이 유지 하거나 다시 부팅 해야 하는 리소스 관리자에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An object that implements the <bpt id="p1">&lt;xref href="System.Transactions.ISinglePhaseNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that must be able to receive single phase commit and two phase commit notifications.</source>
          <target state="translated">구현 하는 개체는 <bpt id="p1">&lt;xref href="System.Transactions.ISinglePhaseNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 단일 단계 커밋 및&amp;2; 단계 커밋 알림을 받을 수 있어야 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the resource manager wants to perform additional work during the prepare phase.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리자가 준비 단계 추가 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that describes the enlistment.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참여를 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</source>
          <target state="translated">승격할 수 있는 단일 단계 참여 (PSPE)를 통해 내부 트랜잭션이 있는 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enlistments in a transaction are volatile; that is, they do not survive the failure of the participant.</source>
          <target state="translated">트랜잭션에서 일시적입니다. 즉, 참가자의 오류를 남아 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, this method only suggests the transaction manager to escalate control, but the escalation itself is not guaranteed.</source>
          <target state="translated">또한이 메서드는 제안 된 컨트롤을 제기 하기 위해 트랜잭션 관리자 있지만 에스컬레이션 자체를 보장할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If escalation fails, the user is not notified and the transaction is rolled back.</source>
          <target state="translated">에스컬레이션이 실패 하면 사용자가 알림을 받지 하 고 트랜잭션이 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter <ph id="ph1">`promotableSinglePhaseNotification`</ph> is used to communicate to the transaction manager the outcome of attempting to commit the resource manager's internal transaction.</source>
          <target state="translated">매개 변수 <ph id="ph1">`promotableSinglePhaseNotification`</ph> 리소스 관리자의 내부 트랜잭션을 커밋하려고 시도의 결과를 트랜잭션 관리자 통신에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If inconsistent data is reported, the transaction manager throws an exception.</source>
          <target state="translated">데이터 불일치를 보고 하면 트랜잭션 관리자 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an &lt;xref:System.Transactions.TransactionStatus&gt; outcome is reported, the transaction manager looks for the outcome notification in its own internal enlistment and ignores the reported response.</source>
          <target state="translated">경우는 &lt;xref:System.Transactions.TransactionStatus&gt;, 결과가 보고 되는 트랜잭션 관리자에서 자체 내부 인 리스트 먼 트 결과 알림을 찾아서 보고 된 응답을 무시 합니다.&lt;/xref:System.Transactions.TransactionStatus&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on enlistments and escalation of a transaction, please see <bpt id="p1">[</bpt>Transaction Management Escalation<ept id="p1">](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept>.</source>
          <target state="translated">참여와의 트랜잭션 에스컬레이션에 대 한 자세한 내용은 참조 하십시오 <bpt id="p1">[</bpt>트랜잭션 관리 에스컬레이션<ept id="p1">](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on PSPE, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">PSPE에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph1">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>하지만 참고<ept id="p1">**</ept> 이 방법은 사용 하 여 &lt;xref:System.Security.Permissions.SecurityAction&gt;신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 <ph id="ph1">`FullTrust`</ph> 사용 권한 집합입니다.&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface implemented by the participant.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참가자가 구현한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.SinglePhaseEnlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface implementation that describes the enlistment.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.SinglePhaseEnlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스 구현을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</source>
          <target state="translated">승격할 수 있는 단일 단계 참여 (PSPE)를 통해 내부 트랜잭션이 있는 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value specified for the <ph id="ph1">`promoterType`</ph> parameter is <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph>, the transaction <bpt id="p1">**</bpt>must<ept id="p1">**</ept> be promoted by MSDTC and the <ph id="ph3">`byte[]`</ph> returned from the <ph id="ph4">`IPromotableSinglePhaseNotification.Promote`</ph> method <bpt id="p2">**</bpt>must<ept id="p2">**</ept> be an MSDTC transaction propagation token.</source>
          <target state="translated">에 대 한 지정 된 값의 <ph id="ph1">`promoterType`</ph> 매개 변수는 <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph>, 트랜잭션이 <bpt id="p1">**</bpt>해야<ept id="p1">**</ept> MSDTC에 의해 승격 및 <ph id="ph3">`byte[]`</ph> 에서 반환 된는 <ph id="ph4">`IPromotableSinglePhaseNotification.Promote`</ph> 메서드 <bpt id="p2">**</bpt>해야<ept id="p2">**</ept> MSDTC 트랜잭션 전파 토큰 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value specified for the <ph id="ph1">`promoterType`</ph> parameter is <bpt id="p1">**</bpt>not<ept id="p1">**</ept><ph id="ph2">`TransactionInterop.PromoterTypeDTC`</ph>, the transaction will not be promoted by MSDTC, but rather by the caller’s implementation of <ph id="ph3">`IPromotableSinglePhaseNotification`</ph>.</source>
          <target state="translated">에 대 한 지정 된 값은 <ph id="ph1">`promoterType`</ph> 매개 변수는 <bpt id="p1">**</bpt>하지<ept id="p1">**</ept><ph id="ph2">`TransactionInterop.PromoterTypeDTC`</ph>, MSDTC를 아니라 호출자의 구현에 의해 대신 트랜잭션이 승격 되지 것입니다 <ph id="ph3">`IPromotableSinglePhaseNotification`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this call is successful, there is a set of subsequent operations on the transaction that will return a <ph id="ph1">`TransactionPromotionException`</ph>.</source>
          <target state="translated">후속 작업에서 반환 되는 트랜잭션 집합이 없는이 호출에 성공한 경우는 <ph id="ph1">`TransactionPromotionException`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations are:      -   <ph id="ph1">`Transaction.EnlistDurable`</ph><ph id="ph2">      -   </ph><ph id="ph3">`TransactionInterop.GetDtcTransaction`</ph><ph id="ph4">      -   </ph><ph id="ph5">`TransactionInterop.GetExportCookie`</ph><ph id="ph6">      -   </ph><ph id="ph7">`TransctionInterop.GetTransmitterPropagationToken`</ph>      -   Serialization of a Transaction object</source>
          <target state="translated">이러한 작업은:- <ph id="ph1">`Transaction.EnlistDurable`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`TransactionInterop.GetDtcTransaction`</ph> <ph id="ph4">      -   </ph> <ph id="ph5">`TransactionInterop.GetExportCookie`</ph> <ph id="ph6">      -   </ph> <ph id="ph7">`TransctionInterop.GetTransmitterPropagationToken`</ph> -트랜잭션 개체의 Serialization</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface implemented by the participant.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참가자가 구현한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The type of the distributed transaction processor.</source>
          <target state="translated">분산된 된 트랜잭션 프로세서의 형식입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.SinglePhaseEnlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface implementation that describes the enlistment.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.SinglePhaseEnlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스 구현을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Enlists a volatile resource manager that supports two phase commit to participate in a transaction.</source>
          <target state="translated">트랜잭션에 참여 하는 두 단계 커밋 지원 일시적 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating.</source>
          <target state="translated">일시적 리소스 관리자 참여 된 트랜잭션을 완료 하는 오류를 복구할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain a durable enlistment in a transaction, use the &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; method.</source>
          <target state="translated">트랜잭션에서 영속적 참여 항목을 가져오려면는 &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;메서드.&lt;/xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource managers enlisted for participation in a transaction through this method receive two phase commit notifications that correspond to the methods defined on the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface.</source>
          <target state="translated">이 메서드를 통해 트랜잭션에 참여 한 리소스 관리자에 정의 된 메서드에 해당 하는&amp;2; 단계 커밋 알림을 수신는 &lt;xref:System.Transactions.IEnlistmentNotification&gt;인터페이스.&lt;/xref:System.Transactions.IEnlistmentNotification&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An object that implements the <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface to receive two-phase commit notifications.</source>
          <target state="translated">구현 하는 개체는 <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스&amp;2; 단계 커밋 알림을 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the resource manager wants to perform additional work during the prepare phase.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리자가 준비 단계 추가 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that describes the enlistment.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참여를 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.</source>
          <target state="translated">트랜잭션에 참여할 수 있는 단일 단계 커밋 최적화를 지 원하는 volatile 리소스 관리자를 등록 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating.</source>
          <target state="translated">일시적 리소스 관리자 참여 된 트랜잭션을 완료 하는 오류를 복구할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain a durable enlistment in a transaction, use the &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; method.</source>
          <target state="translated">트랜잭션에서 영속적 참여 항목을 가져오려면는 &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;메서드.&lt;/xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on volatile and durable resources, as well as how to enlist a resource, see <bpt id="p1">[</bpt>Implementing A Resource Manager<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>.</source>
          <target state="translated">휘발성 및 지속적인 리소스: 리소스를 참여 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>A 리소스 관리자 구현<ept id="p1">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how a resource manager responds to commit notification and prepare the commit, see <bpt id="p1">[</bpt>Committing A Transaction In Single-Phase and Multi-Phase<ept id="p1">](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>.</source>
          <target state="translated">리소스 관리자가 준비 및 커밋 알림에 응답 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>커밋하는 트랜잭션에서 단일 단계 및 다중 단계<ept id="p1">](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should note that even when your resource manager implementation enlists with this method, it is not guaranteed that it receives a single phase commit.</source>
          <target state="translated">리소스 관리자 구현에이 방법으로 인 리스트 먼 트를 하는 경우에 해당 하지 않을 단일 단계 커밋 받는다고 점에 유의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager can still send two phase commit notifications instead.</source>
          <target state="translated">트랜잭션 관리자&amp;2; 단계 커밋 알림을 대신 보낼 여전히 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the single phase commit optimization, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">단일 단계 커밋 최적화에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림<ept id="p1">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An object that implements the <bpt id="p1">&lt;xref href="System.Transactions.ISinglePhaseNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that must be able to receive single phase commit and two phase commit notifications.</source>
          <target state="translated">구현 하는 개체는 <bpt id="p1">&lt;xref href="System.Transactions.ISinglePhaseNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 단일 단계 커밋 및&amp;2; 단계 커밋 알림을 받을 수 있어야 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the resource manager wants to perform additional work during the prepare phase.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리자가 준비 단계 추가 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that describes the enlistment.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참여를 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Determines whether this transaction and the specified object are equal.</source>
          <target state="translated">이 트랜잭션이 지정된 된 개체가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> and this transaction are identical; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> 이 트랜잭션이 되 고, 그렇지 않으면 동일 하 고 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스에 대 한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32 비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the  <ph id="ph1">`byte[]`</ph> returned by the <ph id="ph2">`Promote`</ph> method when the transaction is promoted.</source>
          <target state="translated">가져옵니다는 <ph id="ph1">`byte[]`</ph> 에서 반환 되는 <ph id="ph2">`Promote`</ph> 트랜잭션을 승격할 때 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has the side effect of causing promotion of the transaction if it is not already promoted.</source>
          <target state="translated">이 메서드는 영향을 주는 경우 승격 되지 않아 트랜잭션의 승격이 발생 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the returned <ph id="ph1">`byte[]`</ph> is defined by the value of the <ph id="ph2">`Transation.PromoterType`</ph> property.</source>
          <target state="translated">반환 된 형식 <ph id="ph1">`byte[]`</ph> 값에 의해 정의 <ph id="ph2">`Transation.PromoterType`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the <ph id="ph1">`Transaction.PromoterType`</ph> property is <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph> or <ph id="ph3">`Guid.Empty`</ph>, then the <ph id="ph4">`byte[]`</ph> returned by this method is an MSDTC transmitter propagation token.</source>
          <target state="translated">경우의 값은 <ph id="ph1">`Transaction.PromoterType`</ph> 속성은 <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph> 또는 <ph id="ph3">`Guid.Empty`</ph>, 하면 <ph id="ph4">`byte[]`</ph> 이 메서드에서 반환 된 MSDTC 전송기 전파 토큰입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other value for the <ph id="ph1">`Transaction.PromoterType`</ph> property specifies a format that is defined by the caller of <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> that specified the property type value.</source>
          <target state="translated">에 대 한 다른 모든 값은 <ph id="ph1">`Transaction.PromoterType`</ph> 속성의 호출자에 의해 정의 되는 형식을 지정 <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> 속성 형식 값을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to interpret the promoted token in this latter case, you will need to consult the documentation for the code that made the <ph id="ph1">`EnlistPromotableSinglePhase`</ph> call.</source>
          <target state="translated">확장 된 해석 하기 위해서는 후자의 경우, 토큰 해야 합니다 적용 하는 코드에 대 한 설명서를 참조 하십시오.는 <ph id="ph1">`EnlistPromotableSinglePhase`</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The  <ph id="ph1">`byte[]`</ph> returned by the <ph id="ph2">`Promote`</ph> method when the transaction is promoted.</source>
          <target state="translated"><ph id="ph1">`byte[]`</ph> 에서 반환 되는 <ph id="ph2">`Promote`</ph> 트랜잭션을 승격할 때 메서드.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets the isolation level of the transaction.</source>
          <target state="translated">트랜잭션 격리 수준을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.</source>
          <target state="translated">트랜잭션 격리 수준을 완료 되는 다른 트랜잭션이 트랜잭션 전에 휘발성 데이터에 갖는 액세스 수준이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about isolation levels, see the documentation for the &lt;xref:System.Transactions.IsolationLevel&gt; enumeration.</source>
          <target state="translated">격리 수준에 대 한 자세한 내용은 참조에 대 한 설명서는 &lt;xref:System.Transactions.IsolationLevel&gt;열거형.&lt;/xref:System.Transactions.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Transactions.IsolationLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates the isolation level of the transaction.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Transactions.IsolationLevel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션의 격리 수준을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Tests whether two specified <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances are equivalent.</source>
          <target state="translated">두 <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that is to the left of the equality operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 같음 연산자의 왼쪽에 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that is to the right of the equality operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 같음 연산자의 오른쪽에 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether two <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances are not equal.</source>
          <target state="translated">지정 하는 값을 반환 합니다. 두 <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스가 다른 지 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that is to the left of the inequality operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 같지 않음 연산자의 왼쪽에 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that is to the right of the inequality operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Transaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 같지 않음 연산자의 오른쪽에 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원 됨]       트랜잭션에 참여 2 단계 커밋을 지 원하는 영구 리소스 관리자 등록 및 승격 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</source>
          <target state="translated">리소스 관리자 오류 사이 유지 하거나 다시 부팅 해야 하는 리소스 관리자에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.</source>
          <target state="translated">내부 리소스 관리자에 게 분산 되지 않은 트랜잭션에 대 한 커밋 대리자 역할을 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An object that implements the <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface to receive two phase commit notifications.</source>
          <target state="translated">구현 하는 개체는 <bpt id="p1">&lt;xref href="System.Transactions.IEnlistmentNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를&amp;2; 단계 커밋 알림을 수신할 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the resource manager wants to perform additional work during the prepare phase.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.EnlistmentOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리자가 준비 단계 추가 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원 됨]       트랜잭션에 참여 2 단계 커밋을 지 원하는 영구 리소스 관리자 등록 및 승격 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Uniquely identifies the format of the <ph id="ph1">`byte[]`</ph> returned by the Promote method when the transaction is promoted.</source>
          <target state="translated">형식을 고유 하 게 식별 된 <ph id="ph1">`byte[]`</ph> 트랜잭션을 승격할 때 확장 메서드가 반환한 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the transaction has not yet been promoted and does not yet have a promotable single phase enlistment, the value of this property will be <ph id="ph1">`Guid.Empty`</ph>.</source>
          <target state="translated">이 속성의 값이 됩니다 트랜잭션이 승격 되지 않으며 아직 승격할 수 있는 단일 단계 참여 아직 없는 경우 <ph id="ph1">`Guid.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the transaction has been or will be promoted to MSDTC, then the value of this property will be <ph id="ph1">`TransactionInterop.PromoterTypeDtc`</ph>.</source>
          <target state="translated">이 속성의 값이 됩니다 경우 MSDTC를로 승격 된다는 또는 이었던 트랜잭션이 <ph id="ph1">`TransactionInterop.PromoterTypeDtc`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the transaction has been or will be promoted by a non-MSDTC promoter, the value of this property will be the value specified to an earlier call to <ph id="ph1">`Transaction.EnlistPromotableSinglePhase`</ph>.</source>
          <target state="translated">트랜잭션이 변경 되었거나 비 MSDTC 프로모터를 통해 승격을 경우이 속성의 값에 대 한 이전 호출에 지정 된 값 됩니다 <ph id="ph1">`Transaction.EnlistPromotableSinglePhase`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A guid that uniquely identifies the format of the <ph id="ph1">`byte[]`</ph> returned by the Promote method when the transaction is promoted.</source>
          <target state="translated">형식을 고유 하 게 식별 하는 guid는 <ph id="ph1">`byte[]`</ph> 트랜잭션을 승격할 때 확장 메서드가 반환한 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Rolls back (aborts) the transaction.</source>
          <target state="translated">롤백 (중단) 트랜잭션이 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any copy of a transaction object can initiate the rollback of the transaction by calling this method.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 개체의 모든 복사본은 트랜잭션의 롤백을 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the original transaction object, which is a &lt;xref:System.Transactions.CommittableTransaction&gt; object, can be used to initiate an attempt to commit the transaction.</source>
          <target state="translated">만 원본 트랜잭션 개체 이며이 &lt;xref:System.Transactions.CommittableTransaction&gt;개체, 트랜잭션을 커밋하는 시도를 시작할 사용할 수 있습니다.&lt;/xref:System.Transactions.CommittableTransaction&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown when this method is called after the outcome of the transaction has already been determined.</source>
          <target state="translated">트랜잭션 결과 이미 확인 한 후이 메서드를 호출할 때 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Rolls back (aborts) the transaction.</source>
          <target state="translated">롤백 (중단) 트랜잭션이 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>An explanation of why a rollback occurred.</source>
          <target state="translated">롤백이 발생 한 이유에 대해 설명 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Sets the distributed transaction identifier generated by the non-MSDTC promoter.</source>
          <target state="translated">비 MSDTC 프로모터를 통해 생성 된 분산된 트랜잭션 식별자를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can only be called successfully while the <ph id="ph1">`IPromotableSinglePhaseNotification.Promote`</ph> method is being processed.</source>
          <target state="translated">이 메서드를 성공적으로 호출할 수만 동안는 <ph id="ph1">`IPromotableSinglePhaseNotification.Promote`</ph> 메서드를 처리 하는 중입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called at any other time, a <ph id="ph1">`TransactionException`</ph> is thrown.</source>
          <target state="translated">언제 든 지,이 메서드를 호출 하면는 <ph id="ph1">`TransactionException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified value of the <ph id="ph1">`promotableNotification`</ph> parameter must be the same object that was originally specified to the <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> invocation.</source>
          <target state="translated">지정된 된 값은 <ph id="ph1">`promotableNotification`</ph> 에 원래 지정 된 동일한 개체 여야 합니다. 매개 변수는 <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is not the case, then an <ph id="ph1">`InvalidOperationException`</ph> is thrown.</source>
          <target state="translated">이 경우, 아닌 경우 아니라면 <ph id="ph1">`InvalidOperationException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface implemented by the participant.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.IPromotableSinglePhaseNotification"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 참가자가 구현한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The identifier for the transaction used by the distributed transaction manager.</source>
          <target state="translated">분산된 트랜잭션 관리자에서 사용 하는 트랜잭션에 대 한 식별자입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the data required to serialize this transaction.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 트랜잭션을 직렬화 하는 데 필요한 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to populate with data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터로 채울 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The destination (see &lt;xref:System.Runtime.Serialization.StreamingContext&gt; ) for this serialization.</source>
          <target state="translated">대상 (참조 &lt;xref:System.Runtime.Serialization.StreamingContext&gt;)이이 serialization에 대 한.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Indicates that the transaction is completed.</source>
          <target state="translated">트랜잭션이 완료 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register for this event instead of using a volatile enlistment to get outcome information for transactions.</source>
          <target state="translated">이 이벤트의 트랜잭션에 대 한 결과 정보를 얻으려면 volatile 인 리스트 먼 트를 사용 하는 대신 등록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter passed to the &lt;xref:System.Transactions.TransactionCompletedEventHandler&gt; delegate is a &lt;xref:System.Transactions.Transaction&gt; instance.</source>
          <target state="translated">에 전달 된 매개 변수는 &lt;xref:System.Transactions.TransactionCompletedEventHandler&gt;대리자는는 &lt;xref:System.Transactions.Transaction&gt;인스턴스.&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions.TransactionCompletedEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then query the &lt;xref:System.Transactions.Transaction.TransactionInformation%2A&gt; property of the specific instance to get an instance of &lt;xref:System.Transactions.TransactionInformation&gt;, whose &lt;xref:System.Transactions.TransactionInformation.Status%2A&gt; property contains the status of a transaction with either the &lt;xref:System.Transactions.TransactionStatus&gt; or &lt;xref:System.Transactions.TransactionStatus&gt; value.</source>
          <target state="translated">쿼리할 수 있습니다는 &lt;xref:System.Transactions.Transaction.TransactionInformation%2A&gt;속성의 인스턴스를 특정 인스턴스의 &lt;xref:System.Transactions.TransactionInformation&gt;, 해당 &lt;xref:System.Transactions.TransactionInformation.Status%2A&gt;사용 하 여 트랜잭션 상태를 포함 하는 속성의 &lt;xref:System.Transactions.TransactionStatus&gt;또는 &lt;xref:System.Transactions.TransactionStatus&gt;값.&lt;/xref:System.Transactions.TransactionStatus&gt; &lt;/xref:System.Transactions.TransactionStatus&gt; &lt;/xref:System.Transactions.TransactionInformation.Status%2A&gt; &lt;/xref:System.Transactions.TransactionInformation&gt; &lt;/xref:System.Transactions.Transaction.TransactionInformation%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept> Signing up for this event negatively affects the performance of the transaction it is attached to.</source>
          <target state="translated"><bpt id="p1">**</bpt>주의<ept id="p1">**</ept> 부정적인이 이벤트에 등록에 연결 된 트랜잭션 성능에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An attempt to subscribe this event on a transaction that has been disposed.</source>
          <target state="translated">삭제 된 트랜잭션에 대해이 이벤트 등록 하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Retrieves additional information about a transaction.</source>
          <target state="translated">트랜잭션에 대 한 추가 정보를 검색합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains additional information about the transaction.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.TransactionInformation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션에 대 한 추가 정보가 들어 있는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>