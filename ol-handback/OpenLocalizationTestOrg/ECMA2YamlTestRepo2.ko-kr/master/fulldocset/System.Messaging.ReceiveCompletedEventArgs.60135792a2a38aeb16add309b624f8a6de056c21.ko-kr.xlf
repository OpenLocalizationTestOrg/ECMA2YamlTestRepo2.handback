<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6286214f6dd764856a6a5e33d6ea7cdd27fde784</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.ReceiveCompletedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dba98a386b4347e90043626df6b7e00802e5d07</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e81bc0145a0385c0692a12bd075c45b272e54fd3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue.ReceiveCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 데이터를 제공는 <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue.ReceiveCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</source>
          <target state="translated">비동기 수신 작업 이벤트 처리기가 호출 경우이 클래스의 인스턴스는 처리기로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing.</source>
          <target state="translated">이벤트 알림을 사용 하 여 큐에서 메시지를 비동기적으로 받을 메시지를 처리 하는 메서드를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your code must call &lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt; to begin the asynchronous processing.</source>
          <target state="translated">코드를 호출 해야 &lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;여 비동기 처리를 시작 합니다.&lt;/xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message is received, your application is notified through the &lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt; event.</source>
          <target state="translated">통해 메시지를 받을 때 응용 프로그램에 알립니다는 &lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;이벤트.&lt;/xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of ReceiveCompletedEventArgs is passed into the event delegate that calls your event handler.</source>
          <target state="translated">ReceiveCompletedEventArgs의 인스턴스는 이벤트 처리기를 호출 하는 이벤트 대리자에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data associated with the &lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt; event is contained in the delegate's &lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt; parameter.</source>
          <target state="translated">와 연결 된 데이터는 &lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;이벤트는 대리자에 포함 된 &lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;매개 변수.&lt;/xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt; &lt;/xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to provide notification of event completion: event notification and callbacks.</source>
          <target state="translated">이벤트 완료를 제공 하는 방법은 두 가지: 이벤트 알림과 콜백 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReceiveCompletedEventArgs is used only with event notification.</source>
          <target state="translated">ReceiveCompletedEventArgs는 이벤트 알림을 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</source>
          <target state="translated">콜백 및 이벤트 알림을 비교 내용은 "이벤트 vs을 참조 하십시오. 참조 "하십시오입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReceiveCompletedEventArgs provides access to the message that initiated the end of the asynchronous receive operation, through the &lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt; member.</source>
          <target state="translated">ReceiveCompletedEventArgs 액세스할를 통해 수신 작업, 비동기의 끝을 초기화 하는 메시지에는 &lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;멤버.&lt;/xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an alternate access to the message, and behaves much the same as a call to &lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">메시지에 액세스 하는 다른 이며 &lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt;.&lt;/xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt; 에 대 한 호출 거의 동일 하 게 작동</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the result of the asynchronous operation requested.</source>
          <target state="translated">요청 하는 비동기 작업의 결과 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>AsyncResult identifies ongoing or completed asynchronous operations.</source>
          <target state="translated">AsyncResult 진행 중이거나 완료 된 비동기 작업을 식별합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt; to access the message associated with the completed operation.</source>
          <target state="translated">속성을 완료 하려면 몇 가지 잠재적인 비동기 작업 중 어떤 진단에 도움이 되는 데이터를 포함 하 고 이벤트 처리기에 전달 되 면 활성화 &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;완료 된 작업과 관련 된 메시지에 액세스 합니다.&lt;/xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call &lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;, a &lt;xref:System.IAsyncResult&gt; is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</source>
          <target state="translated">호출 하는 경우 &lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;, &lt;xref:System.IAsyncResult&gt;메시지를 있는 경우에 검색 되지 않은 작업이 완료 되지 않았으므로 하는 경우에 즉시 반환 됩니다.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncResult indicates the state of the asynchronous operation.</source>
          <target state="translated">AsyncResult 비동기 작업의 상태를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt; creates the object, which is modified throughout the operation until &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt; completes it.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;작업을 &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;합니다. 완료 될&lt;/xref:System.Messaging.MessageQueue.EndReceive%2A&gt; 때까지 전체에서 수정 되는 개체를 만듭니다.&lt;/xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IAsyncResult&gt; that contains the data associated with the receive operation.</source>
          <target state="translated">A &lt;xref:System.IAsyncResult&gt;수신 작업과 연결 된 데이터를 포함 하.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the message associated with the asynchronous receive operation.</source>
          <target state="translated">작업을 수신 하는 관련 된 비동기 메시지 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Message property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.</source>
          <target state="translated">메시지 속성을 통해 비동기의 끝을 초기화 하는 메시지를 검색 하기 위한 작업을 수신 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt; is called the first time the Message property is read, so it is not necessary to call &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt; prior to getting the value of this property.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt;호출 되지 않도록 메시지 속성은 읽기, 처음으로 라고 &lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;이 속성의 값을 가져오기 전에.&lt;/xref:System.Messaging.MessageQueue.EndReceive%2A&gt;&lt;/xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the end result of the asynchronous receive operation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 끝을 나타내는 수신 작업의 비동기 결과입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The Message could not be retrieved.</source>
          <target state="translated">메시지를 검색할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The time-out on the asynchronous operation might have expired.</source>
          <target state="translated">비동기 작업에 대 한 제한 시간이 만료 된 것 같습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>