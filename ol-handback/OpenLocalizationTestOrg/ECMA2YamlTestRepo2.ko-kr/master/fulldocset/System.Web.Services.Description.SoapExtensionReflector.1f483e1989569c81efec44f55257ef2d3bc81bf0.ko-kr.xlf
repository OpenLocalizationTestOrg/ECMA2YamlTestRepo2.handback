<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9252ac29edceca5101b626ee7e5dd0ce3754845</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.Description.SoapExtensionReflector.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">baca97127b869ca667397ee787a4128af16ef4b8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd8011e6f64052c40d273d46e661e7b5091446da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a common interface and functionality for classes to add SOAP extension information to a <bpt id="p1">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object on a per-method basis.</source>
          <target state="translated">공통 인터페이스와 클래스에 SOAP 확장 정보를 추가 하는 기능 제공는 <bpt id="p1">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드 당 기준 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the <bpt id="p1">&lt;xref href="System.Web.Services.Description.SoapExtensionReflector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class</source>
          <target state="translated">인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Services.Description.SoapExtensionReflector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Generates service-specific description information that gets placed in a <bpt id="p1">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object corresponding to a binding.</source>
          <target state="translated">에 배치 되는 서비스 관련 설명 정보를 생성 한 <bpt id="p1">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets or sets the instance of a class derived from the abstract <bpt id="p1">&lt;xref href="System.Web.Services.Description.ProtocolReflector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that invokes the &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt; method.</source>
          <target state="translated">추상에서 파생 된 클래스의 인스턴스를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Web.Services.Description.ProtocolReflector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출 하는 클래스는 &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt;메서드.&lt;/xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you implement a class that is derived from the &lt;xref:System.Web.Services.Description.SoapExtensionReflector&gt;<ph id="ph1">`abstract`</ph> class, you do not need to implement a class that is derived from &lt;xref:System.Web.Services.Description.ProtocolReflector&gt; to invoke the &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A&gt; method or to set the ReflectionContext property.</source>
          <target state="translated">&lt;xref:System.Web.Services.Description.SoapExtensionReflector&gt;에서 파생 된 클래스를 구현 하는 경우 <ph id="ph1">`abstract`</ph> 클래스 않아도에서 파생 된 클래스를 구현 하 &lt;xref:System.Web.Services.Description.ProtocolReflector&gt;를 호출 하는 &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A&gt;메서드 또는 ReflectionContext 속성을 설정 합니다.&lt;/xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A&gt; &lt;/xref:System.Web.Services.Description.ProtocolReflector&gt;&lt;/xref:System.Web.Services.Description.SoapExtensionReflector&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The instance of a class derived from the abstract <bpt id="p1">&lt;xref href="System.Web.Services.Description.ProtocolReflector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that invokes the &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt; method.</source>
          <target state="translated">Abstract에서 파생 된 클래스의 인스턴스 <bpt id="p1">&lt;xref href="System.Web.Services.Description.ProtocolReflector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출 하는 클래스는 &lt;xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt;메서드.&lt;/xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod*&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Abstract" name="Abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method that a derived class must implement to add SOAP extension information to a <bpt id="p2">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object on a per-method basis.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Abstract" name="Abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>SOAP 확장 정보를 추가 하려면 파생된 클래스를 구현 해야 하는 메서드는 <bpt id="p2">&lt;xref href="System.Web.Services.Description.ServiceDescription"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 메서드 당 기준 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>TheReflectMethodmethod is called for each Web method that belongs to a binding that the &lt;xref:System.Web.Services.Description.ServiceDescription&gt;represents.</source>
          <target state="translated">TheReflectMethodmethod 바인딩을에 속하는 각 웹 메서드에 대해 호출 됩니다는 &lt;xref:System.Web.Services.Description.ServiceDescription&gt;나타냅니다.&lt;/xref:System.Web.Services.Description.ServiceDescription&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReflectMethod method does not use the Web method directly.</source>
          <target state="translated">ReflectMethod 메서드 웹 메서드를 직접 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SOAP extension information gets added for all Web methods in a binding reflected from a Web service class.</source>
          <target state="translated">SOAP 확장 정보는 웹 서비스 클래스에서 반영 되는 바인딩의 모든 웹 메서드에 대 한 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementation of the ReflectMethod can generate information like operation binding, <ph id="ph1">`abstract`</ph> operation, and messages.</source>
          <target state="translated">ReflectMethod 구현의 작업 바인딩과 같은 정보를 생성할 수 <ph id="ph1">`abstract`</ph> 작업 및 메시지입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>