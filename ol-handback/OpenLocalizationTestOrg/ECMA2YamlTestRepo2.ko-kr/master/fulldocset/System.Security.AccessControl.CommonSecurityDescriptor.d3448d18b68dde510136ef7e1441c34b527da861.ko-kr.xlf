<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e0f5d39fc1393baa9d1627f221838bea604e70d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.CommonSecurityDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdc7edea3dd5a9bf44c3860132baabd5c64ffa58</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8ffcfdc4136594562da64cc5ee160cb2b47f552</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a security descriptor.</source>
          <target state="translated">보안 설명자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</source>
          <target state="translated">보안 설명자에 소유자, 주 그룹, 임의 액세스 제어 목록 (DACL) 및는 액세스 제어 목록 SACL (시스템)에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified <bpt id="p2">&lt;xref href="System.Security.AccessControl.RawSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 위치에서 클래스 <bpt id="p2">&lt;xref href="System.Security.AccessControl.RawSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;개체가 만들어질 포함 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.&lt;/xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자 컨테이너 개체에 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자는 디렉터리 개체와 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.RawSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object from which to create the new <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.RawSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 만들려는 새 <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 보안 설명자 정의 언어 (SDDL) 문자열에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;개체가 만들어질 포함 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.&lt;/xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자 컨테이너 개체에 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자는 디렉터리 개체와 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The SDDL string from which to create the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">만들 새 SDDL 문자열 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified array of byte values.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바이트 값의 지정된 된 배열에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;개체가 만들어질 포함 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.&lt;/xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자 컨테이너 개체에 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자는 디렉터리 개체와 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The array of byte values from which to create the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새를 만들 수 있는 바이트 값 배열 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The offset in the <ph id="ph1">`binaryForm`</ph> array at which to begin copying.</source>
          <target state="translated">오프셋의 <ph id="ph1">`binaryForm`</ph> 복사를 시작 하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified information.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스에서 지정 된 정보입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;개체가 만들어질 포함 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.&lt;/xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자 컨테이너 개체에 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>새 보안 설명자는 디렉터리 개체와 연결 된 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Flags that specify behavior of the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 동작을 지정 하는 플래그 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The owner for the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 소유자 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The primary group for the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 주 그룹 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The System Access Control List (SACL) for the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">액세스 제어 목록 SACL (시스템)에서 새 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Discretionary Access Control List (DACL) for the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 임의 액세스 제어 목록 (DACL) <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*&gt; property for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance and sets the <bpt id="p2">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> flag.</source>
          <target state="translated">설정 된 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*&gt;이 대 한 속성 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스는 <bpt id="p2">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 플래그.&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor for the &lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt; uses the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; and &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; properties for this &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt;를 사용 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;하 고 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;이 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor&gt; 에 대 한 속성&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; &lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; &lt;/xref:System.Security.AccessControl.DiscretionaryAcl&gt; 에 대 한 생성자</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The revision level of the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.DiscretionaryAcl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새의 수정 수준을 <bpt id="p1">&lt;xref href="System.Security.AccessControl.DiscretionaryAcl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The number of Access Control Entries (ACEs) this <bpt id="p1">&lt;xref href="System.Security.AccessControl.DiscretionaryAcl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">액세스 제어 항목 (Ace)의 수가 <bpt id="p1">&lt;xref href="System.Security.AccessControl.DiscretionaryAcl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This number is to be used only as a hint.</source>
          <target state="translated">이 숫자는 힌트로 사용 될 것입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*&gt; property for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance and sets the <bpt id="p2">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> flag.</source>
          <target state="translated">설정 된 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*&gt;이 대 한 속성 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스는 <bpt id="p2">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 플래그.&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor for the &lt;xref:System.Security.AccessControl.SystemAcl&gt; uses the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; and &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; properties for this &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.SystemAcl&gt;를 사용 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;하 고 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;이 &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor&gt; 에 대 한 속성&lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; &lt;/xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; &lt;/xref:System.Security.AccessControl.SystemAcl&gt; 에 대 한 생성자</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The revision level of the new <bpt id="p1">&lt;xref href="System.Security.AccessControl.SystemAcl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새의 수정 수준을 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SystemAcl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets values that specify behavior of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">동작을 지정 하는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One or more values of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration combined with a logical OR operation.</source>
          <target state="translated">하나 이상의 값은 <bpt id="p1">&lt;xref href="System.Security.AccessControl.ControlFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 논리적 OR 연산으로 결합 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the discretionary access control list (DACL) for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 임의 액세스 제어 목록 (DACL)를 가져오거나 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The DACL contains access rules.</source>
          <target state="translated">DACL은 액세스 규칙을 포함합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`null`</ph>, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`null`</ph>, 모든 권한 (AEFA) DACL에 추가 되 고 모든 단일 액세스 제어 항목 (ACE).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The DACL for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 DACL <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets the primary group for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 주 그룹을 가져오거나 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The primary group for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 주 그룹 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value that specifies whether the object associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is a container object.</source>
          <target state="translated">이 관련 된 개체가 있는지 여부를 지정 하는 부울 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 컨테이너 개체입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object associated with this <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is a container object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 관련 된 개체가 있으면 <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 컨테이너 개체 이면, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is in canonical order.</source>
          <target state="translated">임의 액세스 제어 목록 (DACL) 관련 된이 있는지 여부를 지정 하는 부울 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 정식 순서로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the DACL associated with this <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is in canonical order; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 연결 된 DACL <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 정식 순서 대로 개체는 그렇지 않은 경우 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value that specifies whether the object associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is a directory object.</source>
          <target state="translated">이 관련 된 개체가 있는지 여부를 지정 하는 부울 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 디렉터리 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object associated with this <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is a directory object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체와 연결 된 경우 <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 디렉터리 개체 이면, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is in canonical order.</source>
          <target state="translated">액세스 제어 목록 SACL (시스템) 관련 된이 있는지 여부를 지정 하는 부울 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 정식 순서로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the SACL associated with this <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is in canonical order; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 연결 된 SACL <bpt id="p2">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 정식 순서 대로 개체는 그렇지 않은 경우 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the owner of the object associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 연결 되는 개체의 소유자를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The owner of the object associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 연결 되는 개체의 소유자 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">연결 된이 지정 된 보안 식별자에서 임의 액세스 제어 목록 (DACL)에 대 한 모든 액세스 규칙을 제거 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">잘못 보안 주체에 대 한 액세스를 허용할를 방지 하려면 응용 프로그램 확인 해야 허용의 존재 여부에 대 한 모든 사용자 (ACE) 액세스 (AEFA) 액세스 제어 항목 전체 및 DACL을 수정 하기 전에 제거 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The security identifier for which to remove access rules.</source>
          <target state="translated">액세스 규칙을 제거 하는 보안 식별자입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">연결 된이 지정 된 보안 식별자에서의 액세스 제어 목록 SACL (시스템)에 대 한 모든 감사 규칙 제거 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The security identifier for which to remove audit rules.</source>
          <target state="translated">감사 규칙을 제거 하는 보안 식별자입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">임의 액세스 제어 목록 (DACL)이 연결에 대 한 상속 보호를 설정 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>DACLs that are protected do not inherit access rules from parent containers.</source>
          <target state="translated">Dacl 보호 되는 부모 컨테이너에서 액세스 규칙을 상속 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to protect the DACL from inheritance.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>상속에서 DACL을 보호 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to keep inherited access rules in the DACL; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to remove inherited access rules from the DACL.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>상속 된; DACL에서 액세스 규칙을 변경 하지 않으려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> DACL에서 상속 된 액세스 규칙을 제거 하려면.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the inheritance protection for the System Access Control List (SACL) associated with this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 관련 된 액세스 제어 목록 SACL (시스템)에 대 한 상속 보호를 설정 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>SACLs that are protected do not inherit audit rules from parent containers.</source>
          <target state="translated">Sacl 보호 되는 부모 컨테이너에서 감사 규칙을 상속 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to protect the SACL from inheritance.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>상속에서 SACL을 보호 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to keep inherited audit rules in the SACL; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to remove inherited audit rules from the SACL.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>SACL;에서 상속 된 감사 규칙을 유지 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> SACL에서 상속 된 감사 규칙을 제거 하려면.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets the System Access Control List (SACL) for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 액세스 제어 목록 SACL (시스템)를 가져오거나 <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The SACL contains audit rules.</source>
          <target state="translated">SACL 감사 규칙을 포함합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The SACL for this <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 SACL <bpt id="p1">&lt;xref href="System.Security.AccessControl.CommonSecurityDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>