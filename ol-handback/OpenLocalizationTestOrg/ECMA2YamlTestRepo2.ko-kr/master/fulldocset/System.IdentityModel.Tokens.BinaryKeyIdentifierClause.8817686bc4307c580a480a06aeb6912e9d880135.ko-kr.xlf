<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f17a2e09bd7502b63e4af215a62d5f6485de4c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.BinaryKeyIdentifierClause.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d9b548a84810fbfb9f51b2a91b342eb5d8d6d99</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3992a27c76a964b91fd4b1ccd1cc2119b080fdff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
          <target state="translated">이진 데이터를 기반으로 하는 키 식별자 절에 대 한 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">일반적으로 BinaryKeyIdentifierClause 이외로 사용, 사용자 지정 보안 토큰 서비스를 만들 때 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">보안 토큰 서비스에서 보안 토큰을 반환할 때 발급 된 보안 토큰 연결 되 고 연결 되지 않은 보안 토큰에 대 한 참조를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
          <target state="translated">연결 된 참조는 SOAP 메시지의 보안 헤더에 포함 된 보안 토큰을 연결 되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함 되지 않은 보안 토큰입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">일반적으로 이러한 참조는 발급 된 보안 토큰의 신뢰성을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정 된 키 식별자 절 형식, 이진 데이터 및 이진 데이터가 복제 되어야 하는지 여부를 나타내는 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">키 식별자 절 형식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">값을 설정 하는 &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;속성.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;키 식별자를 나타내는 이진 데이터가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone the array passed into the <ph id="ph1">`identificationData`</ph> parameter; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>로 전달 된 배열을 복제 하려면는 <ph id="ph1">`identificationData`</ph> 매개 변수, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>길이가&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정 된 키 식별자 절 형식, 이진 데이터, 이진 데이터가 복제 되어야 하는지 여부, nonce 및 키 길이 나타내는 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated">경우는 <ph id="ph1">`derivationNonce`</ph> 및 <ph id="ph2">`derivationLength`</ph> 토큰의 직접 보안 키 대신 유추 된 파생된 키가 사용, 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">로 전달 된 값에 관계 없이 <ph id="ph1">`cloneBuffer`</ph> 매개 변수는 &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;메서드는 항상에 전달 된 배열의 복제본을 반환는 <ph id="ph2">`identificationData`</ph> 매개 변수.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">키 식별자 절 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">값을 설정 하는 &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;속성.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;키 식별자를 나타내는 이진 데이터가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sets the binary data that is returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method.</source>
          <target state="translated">반환 되는 이진 데이터는 &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;메서드.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone the array passed into the <ph id="ph1">`identificationData`</ph> parameter; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>로 전달 된 배열을 복제 하려면는 <ph id="ph1">`identificationData`</ph> 매개 변수, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that was used to create a derived key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;파생된 키를 만드는 데 사용 된 nonce를 포함 하는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sets the value that is returned by the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt; method.</source>
          <target state="translated">반환 되는 값을 설정 하는 &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;메서드.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">파생된 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt; property.</source>
          <target state="translated">값을 설정 하는 &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;속성.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>길이가&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">키 식별자를 나타내는 이진 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the GetBuffer method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">생성자에 전달 된 값에 관계 없이 <ph id="ph1">`cloneBuffer`</ph> 매개 변수를 GetBuffer 메서드를 생성자에 전달 된 배열의 복제본을 항상 반환 <ph id="ph2">`identificationData`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;키 식별자를 나타내는 이진 데이터가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">키 식별자를 나타내는 이진 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array returned by the GetRawBuffer method is a clone of the constructor's <ph id="ph1">`identificationData`</ph> parameter when the value passed into the <ph id="ph2">`cloneBuffer`</ph> is <ph id="ph3">`true`</ph>; otherwise it is same array.</source>
          <target state="translated">GetRawBuffer 메서드에 의해 반환 된 배열에는 생성자의 복제본 <ph id="ph1">`identificationData`</ph> 에 전달 되는 값 매개 변수는 <ph id="ph2">`cloneBuffer`</ph> 은 <ph id="ph3">`true`</ph>; 그렇지 않으면 동일한 배열입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the constructor's <ph id="ph1">`identificationData`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;메서드를 생성자에 전달 된 배열의 복제본을 항상 반환 <ph id="ph1">`identificationData`</ph> 매개 변수.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;키 식별자를 나타내는 이진 데이터가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
          <target state="translated">현재 인스턴스에 대 한 이진 데이터에 지정된 된 이진 데이터와 일치 하는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; to compare to.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;비교할.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p2"> &lt;/code&gt;</ept>is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">data</ph> <ept id="p2"> &lt;/code&gt;</ept>에서 반환 된 이진 데이터와 동일는 &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;메서드, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">이 인스턴스에 대 한 키 식별자가 지정 된 키 식별자 절과 동일한 지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">keyIdentifierClause</ph><ept id="p2">&lt;/code&gt;</ept> is of type <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method is identical for the <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">keyIdentifierClause</ph><ept id="p4">&lt;/code&gt;</ept> parameter and the current instance; otherwise, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">keyIdentifierClause</ph> <ept id="p2">&lt;/code&gt;</ept> 유형의 <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 및에서 반환 된 이진 데이터는 &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;에 대 한 동일는 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">keyIdentifierClause</ph> <ept id="p4">&lt;/code&gt;</ept> 매개 변수와 현재 인스턴스에; 그렇지 않으면 <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
          <target state="translated">현재 인스턴스에 대 한 이진 데이터와 같은지 여부 지정된 된 오프셋에 지정된 된 이진 데이터를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; to compare to.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;비교할.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The index in the array at which the comparison starts.</source>
          <target state="translated">비교가 시작 되는 배열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the binary data in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p2"> &lt;/code&gt;</ept>parameter starting at the index specified in the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method (starting at index zero); otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 있는 이진 데이터는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">data</ph> <ept id="p2"> &lt;/code&gt;</ept>에 지정 된 인덱스에서 시작 하는 매개 변수는 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p3">&lt;/code&gt;</ept> 매개 변수에서 반환 된 이진 데이터는는 &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;메서드 (인덱스&amp;0;부터 시작)입니다; 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>