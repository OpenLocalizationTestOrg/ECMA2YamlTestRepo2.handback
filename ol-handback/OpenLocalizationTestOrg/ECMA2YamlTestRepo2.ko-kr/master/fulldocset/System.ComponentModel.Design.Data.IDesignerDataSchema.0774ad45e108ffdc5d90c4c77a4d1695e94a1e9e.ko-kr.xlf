<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37f01f0b7d2e6cd8673a6227896338039bee68ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Data.IDesignerDataSchema.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a00f827e6ec36624a092f3011142872040a977fd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">617a0405aee3b29b75dee853e00d53ef7ef51445</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods for retrieving data-store schema information.</source>
          <target state="translated">데이터 저장소 스키마 정보를 검색 하기 위한 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that implement the IDesignerDataSchema interface retrieve schema information from a data store and return it to the user interface, typically to populate UI elements that enable the user to specify the data-store object that they  want to work with.</source>
          <target state="translated">IDesignerDataSchema 인터페이스를 구현 하는 클래스는 데이터 저장소에서 스키마 정보를 검색 하 고 사용자 지정 작업에 사용할 데이터 저장소 개체를 사용할 수 있는 UI 요소를 채우는 데 일반적으로 사용자 인터페이스로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDesignerDataSchema interface provides two methods: the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A&gt; method, which returns the requested schema objects, and the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt; method, which indicates whether a specified data-schema object is supported by the data store.</source>
          <target state="translated">IDesignerDataSchema 인터페이스에서는 두 가지 방법:는 &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A&gt;요청 된 스키마 개체를 반환 하 고 &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt;메서드를 지정 된 데이터 스키마 개체를 데이터 저장소에서 지원 되는지 여부를 나타냅니다.&lt;/xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt; &lt;/xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets a collection of specified schema items.</source>
          <target state="translated">지정 된 스키마 항목의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetSchemaItems method returns a collection of all the specified schema objects in the data store.</source>
          <target state="translated">GetSchemaItems 메서드는 데이터 저장소에 있는 모든 지정 된 스키마 개체의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class for the list of schema objects supported by the .NET Framework.</source>
          <target state="translated">참조는 &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt;목록에 대 한.NET Framework에서 지 원하는 스키마 개체의 클래스.&lt;/xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional schema objects can be added to the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class by creating a derived type.</source>
          <target state="translated">추가 스키마 개체에 추가할 수는 &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt;클래스를 파생된 형식을 만들거나 여.&lt;/xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data store does not support the requested schema object, the GetSchemaItems method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">GetSchemaItems 메서드를 반환 해야 하는 경우 데이터 저장소는 요청된 된 스키마 개체를 지원 하지 않습니다, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt; method to determine whether a data store supports the requested schema object before calling the GetSchemaItems method, to avoid returning <ph id="ph1">`null`</ph> to your application.</source>
          <target state="translated">사용할 수는 &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt;데이터 저장소 반환 되지 않도록 하려면 GetSchemaItems 메서드를 호출 하기 전에 요청된 된 스키마 개체를 지원 하는지 여부를 확인할 수 있는 방법은 <ph id="ph1">`null`</ph> 응용 프로그램에.&lt;/xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data store supports the requested object, but does not contain any instances, the GetSchemaItems method should return an empty collection.</source>
          <target state="translated">데이터 저장소에서 요청 된 개체를 지원 하지만 모든 인스턴스를 포함 하지 않습니다, GetSchemaItems 메서드는 빈 컬렉션을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The schema objects to return.</source>
          <target state="translated">반환할 스키마 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A collection of schema objects of the specified type.</source>
          <target state="translated">지정 된 형식의 스키마 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the data store contains the specified data-schema object.</source>
          <target state="translated">데이터 저장소에서 지정 된 데이터 스키마 개체에 포함 되는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SupportsSchemaClass method indicates whether the data store supports a specified data-schema object.</source>
          <target state="translated">SupportsSchemaClass 메서드는 데이터 저장소에 지정 된 데이터 스키마 개체를 지원 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data store does not support the specified object, the SupportsSchemaClass method should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">SupportsSchemaClass 메서드를 반환 해야 하는 경우 데이터 저장소는 지정된 된 개체를 지원 하지 않습니다, <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add tests for additional data-schema objects by deriving from the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt;클래스&lt;/xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; 에서 파생 하 여 추가 데이터 스키마 개체에 대 한 테스트를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The schema objects to return.</source>
          <target state="translated">반환할 스키마 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data store supports the specified data-schema object; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터 저장소에 지정 된 데이터 스키마 개체; 지 원하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>