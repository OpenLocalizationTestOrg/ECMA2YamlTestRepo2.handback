<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93e1f3b7c542d5a537cb5062d78c840225288c06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SamlDoNotCacheCondition.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e00e7764f1bfad983678bd39b5d93c5f9899895a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f85c5ad266d7d41996fbf2a6054e220f86971161</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</source>
          <target state="translated">SAML 어설션의 유효성을 평가할 때 고려해 야 하는 조건을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;보안 토큰 SAML 어설션과 SAML 어설션의 유효성을 평가할 때 고려해 야 하는 조건의 집합을 사용 하 여 클레임을 지정 합니다.&lt;/xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SamlDoNotCacheCondition class represents one of the conditions defined by the SAML specification and it asserts that the SAML assertion must not be cached.</source>
          <target state="translated">SAML 어설션이 캐시 되지 않아야 어설션 합니다 SamlDoNotCacheCondition 클래스 SAML 사양에 정의 된 조건 중 하나를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify this condition for a SAML assertion, add the SamlDoNotCacheCondition class to the collection returned by the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A&gt; property.</source>
          <target state="translated">SAML 어설션에 대 한이 상태를 지정 하려면 SamlDoNotCacheCondition 클래스에서 반환 된 컬렉션에 추가 &lt;xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A&gt;속성.&lt;/xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When the SamlDoNotCacheCondition is added as a condition to a &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security token that is issued by a security token service for the <ph id="ph2">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client, a <ph id="ph3">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client does cache the security token.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 때 the SamlDoNotCacheCondition 조건으로 추가 되는 &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;에 대 한 보안 토큰 서비스에서 발급 된 보안 토큰은 <ph id="ph2">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 클라이언트는 <ph id="ph3">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 클라이언트는 보안 토큰을 캐시 합니다.&lt;/xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the client does not inspect the contents of the issued token, the token is cached.</source>
          <target state="translated">클라이언트는 발급된 된 토큰의 내용을 검사 하지 않습니다, 때문에 토큰이 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client is token agnostic for issued tokens type and processes it the returned issued token as an opaque XML element.</source>
          <target state="translated">클라이언트는 발급 된 토큰 형식에 대 한 토큰을 알 수 하 고 반환 된 발급 토큰 불투명 한 XML 요소로 처리 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> security never caches the received issued token on the service side; it only caches the claims that are extracted from it during the token authentication process.</source>
          <target state="translated">그러나 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 보안을 캐시 하지 받은 서비스 측의 토큰 발급; 토큰 인증 프로세스 중에서 추출 된 클레임만 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlDoNotCacheCondition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlDoNotCacheCondition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 생성자는 &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the properties of this instance are read-only.</source>
          <target state="translated">이 인스턴스의 속성이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make this instance of the &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt; class read-only, call the &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt; method.</source>
          <target state="translated">이 인스턴스를는 &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;클래스 읽기 전용 호출은 &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt;메서드.&lt;/xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt; &lt;/xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the properties of this instance are read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 인스턴스의 속성이 읽기 전용 이면 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Causes this instance to be read-only.</source>
          <target state="translated">이 인스턴스를 읽기 전용으로 설정 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the MakeReadOnly method is called, the &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt; property is set to <ph id="ph1">`true`</ph> and properties of this instance can no longer be set.</source>
          <target state="translated">MakeReadOnly 메서드를 호출 하는 경우는 &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;속성이 <ph id="ph1">`true`</ph> 이 인스턴스의 속성을 더 이상 설정할 수 없습니다.&lt;/xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Reads the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from the specified XML reader.</source>
          <target state="translated">읽고는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소에서 지정된 된 XML 판독기입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method does note set any properties.</source>
          <target state="translated">메서드는 참고 ReadXml 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlDictionaryReader&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SAML 사양에 정의 된 SAML 권한 부여 설명에서 XML 요소를 읽을 수입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that reads the <bpt id="p2">&lt;xref uid="langword_csharp_KeyInfo" name="KeyInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> clause of the digital signature.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 읽는 <bpt id="p2">&lt;xref uid="langword_csharp_KeyInfo" name="KeyInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 디지털 서명의 절.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 결정 하는 디지털 서명을 만든 보안 토큰입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> does not point to a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>가리키지 않습니다는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element into the specified XML serializer.</source>
          <target state="translated">기록 된 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소를 지정된 된 XML serializer에 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteXml method to write the current &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt; instance into a <ph id="ph1">`&lt;saml:DoNotCacheCondition&gt;`</ph> element.</source>
          <target state="translated">WriteXml 메서드를 사용 하 여 현재 쓰기 &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;인스턴스는 <ph id="ph1">`&lt;saml:DoNotCacheCondition&gt;`</ph> 요소.&lt;/xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlDictionaryWriter&gt; to write the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlDictionaryWriter&gt;작성 하는 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;saml:DoNotCacheCondition&amp;gt;" name="&amp;lt;saml:DoNotCacheCondition&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is capable of writing XML elements in a SAML assertion.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SamlSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 SAML 어설션에 XML 요소를에서 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is capable of writing <bpt id="p2">&lt;xref uid="langword_csharp_KeyInfo" name="KeyInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> clauses.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 쓸 수 있는 즉 <bpt id="p2">&lt;xref uid="langword_csharp_KeyInfo" name="KeyInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 절.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>