<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd3c2b574e567c4d4baed6a3d400ff9c6bc88af0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Configuration.ComUdtElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9b9cda3596386c6ccbf0783dad95de071f38d04</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7f3df85b49e0b7d4b6e57f55cfff931bf4a48cd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a User Defined Type (UDT) that is to be included in the service contract.</source>
          <target state="translated">서비스 계약에 포함 될 수 있는 사용자 정의 형식 (UDT)을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The COM+ integration runtime creates services by inspecting the type library.</source>
          <target state="translated">COM + 통합 런타임에서 형식 라이브러리를 검사 하 여 서비스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a COM+ component contains methods that pass a <ph id="ph1">`VARIANT`</ph>, the system cannot determine the actual types to be passed prior to runtime.</source>
          <target state="translated">COM + 구성 요소에서 전달 하는 메서드를 포함 하는 경우는 <ph id="ph1">`VARIANT`</ph>, 시스템 런타임 전에 전달 될 실제 형식을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, when you attempt to pass a User Defined Type (UDT) within a <ph id="ph1">`VARIANT`</ph>, it fails because it is not a known type for serialization.</source>
          <target state="translated">내에서 사용자 정의 형식 (UDT)를 전달 하려고 시도 따라서는 <ph id="ph1">`VARIANT`</ph>, 알려진된 serialization 형식이 아니므로 실패 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.</source>
          <target state="translated">이 문제를 피하기 적절 한 서비스 계약에 알려진된 형식으로 포함 될 수 있도록 구성 파일에는 Udt를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.</source>
          <target state="translated">이렇게 하려면 UDT와 계약, 즉,는 원래 COM 인터페이스를 사용 하는 고유 하 게 식별 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example demonstrates adding two specific UDTs to the &lt;<ph id="ph1">`userDefinedTypes`</ph>&gt; section of the configuration file for this purpose.</source>
          <target state="translated">다음 예제에서는 추가에 특정 Udt 두 개는 <ph id="ph1">`userDefinedTypes`</ph>&gt;이 목적을 위해 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id="p2">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id="p1">]</ept>       The attributes of the &lt;<ph id="ph1">`userDefinedType`</ph>&gt; element are defined as follows:      -   <ph id="ph2">`typeName`</ph>: an optional attribute that provides the readable type name.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XpsCreate #XpsCreateAddPkgContent<ept id="p2">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept> <ept id="p1">]</ept> 의 특성은 <ph id="ph1">`userDefinedType`</ph>&gt; 요소는 다음과 같이 정의 됩니다:- <ph id="ph2">`typeName`</ph>: 읽을 수 있는 형식 이름을 제공 하는 선택적 특성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not used by the runtime but helps a reader to distinguish the types.</source>
          <target state="translated">이 런타임에서 사용 되지 않지만, 판독기에서 형식을 구별할 때 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`typeLibID`</ph>: a GUID string that specifies the registered type library that defines the type.</source>
          <target state="translated">- <ph id="ph1">`typeLibID`</ph>: 형식을 정의 하는 등록 된 형식 라이브러리를 지정 하는 GUID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`typeLibVersion`</ph>: a string that specifies the type library version that defines the type.</source>
          <target state="translated">- <ph id="ph1">`typeLibVersion`</ph>: 형식을 정의 하는 형식 라이브러리 버전을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`typeDefID`</ph>: a GUID string that specifies the specific UDT type within the registered type library.</source>
          <target state="translated">- <ph id="ph1">`typeDefID`</ph>: 등록된 된 형식 라이브러리에 있는 특정 UDT 형식을 지정 하는 GUID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the service is initialized, the COM+ integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.</source>
          <target state="translated">서비스가 초기화 될 때 COM + 통합 런타임은 지정 된 형식을 찾아 지정된 된 계약에 대 한 알려진된 형식 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.ComUdtElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.ComUdtElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.ComUdtElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified GUID string.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.ComUdtElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 GUID 문자열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A GUID string that identifies the specific UDT type within the registered type library.</source>
          <target state="translated">등록된 된 형식 라이브러리에 있는 특정 UDT 형식을 식별 하는 GUID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the readable type name.</source>
          <target state="translated">읽기 가능한 형식 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The readable type name.</source>
          <target state="translated">읽을 수 있는 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets a GUID string that identifies the specific UDT type within the registered type library.</source>
          <target state="translated">등록된 된 형식 라이브러리에 있는 특정 UDT 형식을 식별 하는 GUID 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The specific UDT type within the registered type library.</source>
          <target state="translated">등록된 된 형식 라이브러리에 있는 특정 UDT 형식을 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets a GUID string that identifies the registered type library that defines the type.</source>
          <target state="translated">형식을 정의 하는 등록 된 형식 라이브러리를 식별 하는 GUID 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The registered type library that defines the type.</source>
          <target state="translated">형식을 정의 하는 등록 된 형식 라이브러리입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that identifies the type library version that defines the type.</source>
          <target state="translated">유형을 정의 하는 형식 라이브러리 버전을 식별 하는 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type library version that defines the type.</source>
          <target state="translated">형식을 정의 하는 형식 라이브러리 버전</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>