<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6ed90a0fe823038e51bc4fe9b35414188e6b49a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.ComponentModel.Compiler.TypeProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80abea9844956a8824cccd78c731b0a17c84d894</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2e281bd53d3487828b72c5d073774b3a5c74629</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An implementation of <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.ITypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that acts as a container of types within the indicated assemblies and code compile units.</source>
          <target state="translated">구현 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.ITypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨테이너 역할을 지정 된 어셈블리와 코드 내에서 형식의 컴파일 단위입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       This &lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt; implementation, in addition to handling compiled assemblies (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; and &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt; methods), can handle types that have not been compiled yet (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;).</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>이 &lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;처리 뿐만 아니라 구현, 컴파일된 어셈블리 (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; 및 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;메서드), 아직 컴파일되지 않은 형식을 처리할 수 있습니다 (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;).&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The limited implementation of &lt;xref:System.Type?displayProperty=fullName&gt; is returned for types referenced using &lt;xref:System.CodeDom.CodeCompileUnit&gt;.</source>
          <target state="translated">&lt;xref:System.Type?displayProperty=fullName&gt;형식 참조를 사용 하 여 &lt;xref:System.CodeDom.CodeCompileUnit&gt;.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; 에 대 한 반환 되&lt;/xref:System.Type?displayProperty=fullName&gt; 는 제한 된 구현이</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  TypeProvider only returns public types from referenced assemblies, and both public and non-public types from local assemblies.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; TypeProvider 로컬 어셈블리에서 public 및 public이 아닌 형식 및 참조 된 어셈블리에서 public 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The encapsulated &lt;xref:System.IServiceProvider&gt; for this instance.</source>
          <target state="translated">캡슐화 된 &lt;xref:System.IServiceProvider&gt;이 인스턴스에 대 한.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adds an already-loaded assembly.</source>
          <target state="translated">이미 로드 된 어셈블리를 추가합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to load the assembly, and <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> includes the types from this assembly for dispensing when &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; is called.</source>
          <target state="translated">호출자의 어셈블리를 로드 해야 하 고 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 어셈블리의 형식이 포함 되는 경우 분배 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;호출 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type.Assembly*&gt; to add a reference for.</source>
          <target state="translated">&lt;xref:System.Type.Assembly*&gt;참조 &gt;for를 추가 하려면&lt;/xref:System.Type.Assembly*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph>가 null 참조 (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adds a reference to the &lt;xref:System.Type.Assembly<bpt id="p1">*</bpt>&gt; to the internal list. This assembly is used for the &lt;xref:System.Type&gt; lookup in the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType<ept id="p1">*</ept>&gt; method.</source>
          <target state="translated">에 대 한 참조 추가 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 내부 목록에 있습니다. 이 어셈블리에 사용 되는 &lt;xref:System.Type&gt;의 조회는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The path of the &lt;xref:System.Type.Assembly*&gt; to add.</source>
          <target state="translated">&lt;xref:System.Type.Assembly*&gt;추가할&lt;/xref:System.Type.Assembly*&gt; 경로</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>가 null 참조 (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adds a reference to the <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the internal list.</source>
          <target state="translated">에 대 한 참조 추가 <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내부 목록에 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used for the &lt;xref:System.Type&gt; lookup in the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; method.</source>
          <target state="translated">이 <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 사용 되는 &lt;xref:System.Type&gt;의 조회는 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;메서드.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>가 null 참조 (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is already referenced in this instance.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>이 인스턴스에서 이미 참조 되었습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</source>
          <target state="translated">대리자 매개 변수 및 하나의 반환 값은 어셈블리를 반환 하는 메서드를 표시 이름 지정된 된 형식에 속해 있는 해당 참조를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</source>
          <target state="translated">하나의 매개 변수 및 어셈블리를 반환 하는 한 반환 값을 사용 하 여 메서드를 참조 하는 대리자에는 지정된 된 형식에 속하는 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">어셈블리의 표시 이름 지정된 된 형식의 선언 된 어셈블리를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type whose assembly name to get.</source>
          <target state="translated">어셈블리 이름이 있는 가져올 형식입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">어셈블리에 지정된 된 형식의 선언 된 어셈블리의 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides a string array that contains the names for the specified &lt;xref:System.Enum&gt; in indexed order.</source>
          <target state="translated">지정 된 이름을 포함 하는 문자열 배열을 제공 &lt;xref:System.Enum&gt;인덱싱된 순서 대로.&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type to obtain the names from.</source>
          <target state="translated">이름을 가져올 형식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The names for the specified &lt;xref:System.Enum&gt; in indexed order.</source>
          <target state="translated">지정 된 이름은 &lt;xref:System.Enum&gt;인덱싱된 순서 대로.&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph>가 null 참조 (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph> Is not an <ph id="ph2">&lt;xref:System.Enum&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph>않습니다는 <ph id="ph2">&lt;xref:System.Enum&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of an &lt;xref:System.EventHandler&gt;, given a reference to an &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Type&gt;의 &lt;xref:System.EventHandler&gt;, &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; 에 대 한 참조를 지정 된&lt;/xref:System.EventHandler&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo&gt; to obtain the &lt;xref:System.EventHandler&gt; type of.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo&gt;얻으려고는 &lt;xref:System.EventHandler&gt;유형의.&lt;/xref:System.EventHandler&gt; &lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of an &lt;xref:System.EventHandler&gt;, given a reference to an &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;의 &lt;xref:System.EventHandler&gt;, &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; 에 대 한 참조를 지정 된&lt;/xref:System.EventHandler&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventInfo&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;eventInfo&lt;/code&gt;</ph>가 null 참조 (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Object&gt; that provides the designated service &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;지정된 된 서비스 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 를 제공 하는&lt;/xref:System.Object&gt; 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the encapsulated &lt;xref:System.IServiceProvider&gt; associated with this instance is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) then a null reference (<ph id="ph2">`Nothing`</ph>) is returned.</source>
          <target state="translated">경우 캡슐화 된 &lt;xref:System.IServiceProvider&gt;이 인스턴스와 연결 된가 null 참조 (<ph id="ph1">`Nothing`</ph> Visual basic에서) 이면 null 참조 (<ph id="ph2">`Nothing`</ph>)이 반환 됩니다.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The service &lt;xref:System.Type&gt; that the &lt;xref:System.Object&gt; is to provide.</source>
          <target state="translated">서비스 &lt;xref:System.Type&gt;하는 &lt;xref:System.Object&gt;제공 하는 것입니다.&lt;/xref:System.Object&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that provides the designated service &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;지정된 된 서비스 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 를 제공합니다 하는&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the type from the set of assemblies added to the <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference<ept id="p2">*</ept>&gt;, or &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.</source>
          <target state="translated">집합에 추가 된 어셈블리의 형식을 가져옵니다는 <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 사용 하 여 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt;, &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;, 또는 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (Visual Basic <ph id="ph1">`Nothing`</ph>) is returned.</source>
          <target state="translated">이름을 어셈블리 캐시와이 인스턴스의 컴파일된 단위에서 확인할 수 없는 경우 null 참조 (Visual Basic <ph id="ph1">`Nothing`</ph>)이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoking this overload is the same as invoking the two parameter overloads with the value of the parameter <ph id="ph1">`throwOnError`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 오버 로드를 호출 하는 것과 같습니다 매개 변수의 값을 가진 두 개의 매개 변수 오버 로드를 호출 <ph id="ph1">`throwOnError`</ph> 로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The type name.</source>
          <target state="translated">형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The requested &lt;xref:System.Type&gt;.</source>
          <target state="translated">요청 된 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the type from the set of assemblies added to the <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference<ept id="p2">*</ept>&gt;, or &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.</source>
          <target state="translated">집합에 추가 된 어셈블리의 형식을 가져옵니다는 <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 사용 하 여 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt;, &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;, 또는 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (<ph id="ph1">`Nothing`</ph>) is returned; in the case that <ph id="ph2">`throwOnError`</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">이름을 어셈블리 캐시와이 인스턴스의 컴파일된 단위에서 확인할 수 없는 경우 null 참조 (<ph id="ph1">`Nothing`</ph>)를 반환 합니다; 경우에는 <ph id="ph2">`throwOnError`</ph> 은 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type name.</source>
          <target state="translated">형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A value that indicates whether to throw an exception if <ph id="ph1">`name`</ph> is not resolvable.</source>
          <target state="translated">예외를 throw 하는 경우 여부를 나타내는 값 <ph id="ph1">`name`</ph> 를 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The requested &lt;xref:System.Type&gt;.</source>
          <target state="translated">요청 된 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not resolvable and <ph id="ph2">&lt;code&gt;throwOnError&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>확인할 수 없습니다 및 <ph id="ph2">&lt;code&gt;throwOnError&lt;/code&gt;</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates an array that contains each &lt;xref:System.Type&gt; known to this instance.</source>
          <target state="translated">각 들어 있는 배열을 만들어 &lt;xref:System.Type&gt;이 인스턴스에 알려진.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An array that contains each &lt;xref:System.Type&gt; known to this instance.</source>
          <target state="translated">각 포함 된 배열을 &lt;xref:System.Type&gt;이 인스턴스에 알려진.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Any &lt;xref:System.Type&gt; fails to load.</source>
          <target state="translated">모든 &lt;xref:System.Type&gt;로드 되지 않습니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Indicates whether one type can be safely assigned to another type.</source>
          <target state="translated">다른 형식에 한 종류를 안전 하 게 지정할 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Type&gt; of the assignment.</source>
          <target state="translated">대상 &lt;xref:System.Type&gt;할당의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The source &lt;xref:System.Type&gt; of the assignment.</source>
          <target state="translated">소스 &lt;xref:System.Type&gt;할당의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the assignment can be safely made; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>할당; 안전 하 게 설정할 수 없으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indicates whether a &lt;xref:System.Type&gt; is of type &lt;xref:System.Enum&gt; .</source>
          <target state="translated">나타냅니다 &lt;xref:System.Type&gt; &lt;xref:System.Enum&gt;.&lt;/xref:System.Enum&gt; 유형의&lt;/xref:System.Type&gt; 여부</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to be tested.</source>
          <target state="translated">&lt;xref:System.Type&gt;테스트할.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Type&gt; is an &lt;xref:System.Enum&gt; ; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Type&gt;은 &lt;xref:System.Enum&gt;고, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Enum&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Indicates whether a &lt;xref:System.Type&gt; is a derived class of another &lt;xref:System.Type&gt; .</source>
          <target state="translated">나타냅니다 &lt;xref:System.Type&gt;다른 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 파생된 클래스 인지&lt;/xref:System.Type&gt; 여부</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; being tested as a derived class.</source>
          <target state="translated">&lt;xref:System.Type&gt;파생된 클래스도 테스트&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; being tested as the class.</source>
          <target state="translated">&lt;xref:System.Type&gt;클래스로 테스트할&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the tested relationship is true; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>테스트 관계가 true; 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a value that determines whether the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 값을 반환 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The property to resolve.</source>
          <target state="translated">확인할 속성입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The instance in which the specified property is declared.</source>
          <target state="translated">지정된 된 속성 선언 된 인스턴스.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 속성이 대상에서 지원 되는 경우 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 하나의 반환 값 및 매개 변수를 사용 하 여 메서드를 참조 하는 대리자를 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 하나의 반환 값 및 매개 변수를 사용 하 여 메서드를 참조 하는 대리자 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets a value that represents the locally defined &lt;xref:System.Reflection.Assembly&gt; for this instance.</source>
          <target state="translated">로컬로 정의 나타내는 값을 가져옵니다 &lt;xref:System.Reflection.Assembly&gt;이 인스턴스에 대 한.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The locally defined &lt;xref:System.Reflection.Assembly&gt; for this instance.</source>
          <target state="translated">로컬로 정의 된 &lt;xref:System.Reflection.Assembly&gt;이 인스턴스에 대 한.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets a collection of all assemblies referenced by the &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 에서 참조 하는 모든 어셈블리의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A collection of all assemblies referenced by the &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 에서 참조 하는 모든 어셈블리의 컬렉션</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Updates the <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reference associated with this instance.</source>
          <target state="translated">업데이트는 <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 인스턴스와 연결 된 참조입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;이 메서드가 호출 되 면 발생 합니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to refresh with.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 갱신 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventHandler&gt; to delegate this event to.</source>
          <target state="translated">&lt;xref:System.EventHandler&gt;이 이벤트를 위임할 수 있습니다.&lt;/xref:System.EventHandler&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This instance already references the subject <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 인스턴스가 주체를 이미 참조 <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Removes all references to the subject &lt;xref:System.Reflection.Assembly&gt; from this instance.</source>
          <target state="translated">주체에 대 한 모든 참조가 제거 &lt;xref:System.Reflection.Assembly&gt;이 인스턴스에서.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;이 메서드가 호출 되 면 발생 합니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; to remove from this instance.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;이 인스턴스에서 제거할.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Removes a path-based &lt;xref:System.Reflection.Assembly&gt; reference from this instance.</source>
          <target state="translated">경로 기반 제거 &lt;xref:System.Reflection.Assembly&gt;이 인스턴스에서 참조.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;이 메서드가 호출 되 면 발생 합니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The path of the &lt;xref:System.Reflection.Assembly&gt; to be removed.</source>
          <target state="translated">경로 &lt;xref:System.Reflection.Assembly&gt;제거할.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Removes all references to the subject <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from this instance.</source>
          <target state="translated">주체에 대 한 모든 참조가 제거 <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 인스턴스에서 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;이 메서드가 호출 되 면 발생 합니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Sets the value of the local &lt;xref:System.Reflection.Assembly&gt; to the referenced &lt;xref:System.Reflection.Assembly&gt; .</source>
          <target state="translated">로컬 &lt;xref:System.Reflection.Assembly&gt;참조 &lt;xref:System.Reflection.Assembly&gt;.&lt;/xref:System.Reflection.Assembly&gt; &lt;/xref:System.Reflection.Assembly&gt; 의 값을 설정</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;이 메서드가 호출 되 면 발생 합니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call SetLocalAssembly before you call &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt; otherwise it has no affect on the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;그렇지 않으면 아무런 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt; 효과가&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt; 호출 하기 전에 SetLocalAssembly 호출</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; used to set this value</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;이 값을 설정 하는 데 사용&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.IDictionary&gt; of load error exceptions keyed by the &lt;xref:System.Object&gt; that causes the &lt;xref:System.Exception&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;키가 &lt;xref:System.Object&gt;있는 &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; 되도록&lt;/xref:System.Object&gt; 지정 된 로드 오류 예외의&lt;/xref:System.Collections.IDictionary&gt; 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>An updated, detached &lt;xref:System.Collections.IDictionary&gt; is created at each reference to this property.</source>
          <target state="translated">업데이트 되 고 분리 &lt;xref:System.Collections.IDictionary&gt;이 속성에 대 한 각 참조에 만들어집니다.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; of load error exceptions keyed by the &lt;xref:System.Object&gt; that causes the &lt;xref:System.Exception&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;키가 &lt;xref:System.Object&gt;있는 &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; 되도록&lt;/xref:System.Object&gt; 지정 된 로드 오류 예외의&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Occurs when the collection &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt; is modified.</source>
          <target state="translated">발생 경우 컬렉션 &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt;수정 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Occurs when the collection of defined types is modified.</source>
          <target state="translated">정의 된 형식의 컬렉션이 수정 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>