<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d903f938c89963412efb236e62b42d749720777</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.IEnlistmentNotification.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b936d9a511a4ea4bd8f25dee73412bf2426f9b0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5e5d536ae2ecf7b9e7654fe123129a98e57fafa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">참여할 때 트랜잭션 관리자에 대 한&amp;2; 단계 커밋 알림 콜백을 제공 하는 리소스 관리자를 구현 해야 하는 인터페이스에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</source>
          <target state="translated">리소스 관리자가 트랜잭션에 참여할 수 순서로 트랜잭션 관리자를 통해 트랜잭션에 참여 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Transactions.Transaction&gt; class defines a set of methods whose names begin with <ph id="ph1">`Enlist`</ph> that provide this functionality.</source>
          <target state="translated">&lt;xref:System.Transactions.Transaction&gt;클래스 이름이로 시작 하는 메서드 집합을 정의 <ph id="ph1">`Enlist`</ph> 이 기능을 제공 합니다.&lt;/xref:System.Transactions.Transaction&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The different <ph id="ph1">`Enlist`</ph> methods correspond to the different types of enlistment that a resource maanger may have.</source>
          <target state="translated">서로 다른 <ph id="ph1">`Enlist`</ph> 메서드는 리소스 관리자가 있을 수 있는 인 리스트 먼 트의 다른 형식에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">이 클래스는 참여할 때 트랜잭션 관리자에 대 한&amp;2; 단계 커밋 알림 콜백을 제공 하는 리소스 관리자를 구현 해야 하는 인터페이스를 설명 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each resource manager's implementation of the IEnlistmentNotification interface, you should enlist it using the &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt; method or the &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; method of the &lt;xref:System.Transactions.Transaction&gt; class, depending on whether your resource is volatile or durable.</source>
          <target state="translated">IEnlistmentNotification 인터페이스의 각 리소스 관리자 구현에 대 한 사용 하 여 등록 해야 하는 &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;메서드 또는 &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;의 메서드는 &lt;xref:System.Transactions.Transaction&gt;일시적 또는 지 속성에 리소스 인지에 따라 클래스.&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions.Transaction.EnlistDurable%2A&gt; &lt;/xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on enlistment and 2PC, see <bpt id="p1">[</bpt>Enlisting Resources as Participants in a Transaction<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Committing a Transaction in Single-Phase and Multi-Phase<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> respectively.</source>
          <target state="translated">인 리스트 먼 트 및 2PC에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>트랜잭션에서 참가자 인 리스트 먼 트 리소스<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>단일 단계 및 다중 단계에서 트랜잭션 커밋<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> 각각.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</source>
          <target state="translated">트랜잭션 관리자&amp;2; 단계 커밋 프로토콜의 각 단계에서 다음과 같은 방법으로 참여 한 개체를에 알립니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Method|Description|   |------------|-----------------|   |&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.|   |&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.|   |&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).|   |&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.|      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should be aware that notifications might not be sent sequentially, or in a particular order.</source>
          <target state="translated">| 메서드 | 설명 |   |------------|-----------------|   | &lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;| 참여 한 개체의이 메서드에 콜백으로 사용는 트랜잭션 관리자가는 트랜잭션의 첫 번째 단계는 트랜잭션 관리자가 트랜잭션을 커밋할 수 있는 여부 참가 하는 경우. |   | &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;| 이 메서드는 참여 한 개체의 경우으로 사용 됩니다 콜백을 트랜잭션 관리자가 트랜잭션 두 번째 단계 트랜잭션이 커밋됩니다. |   | &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;| 이 메서드는 참여 한 개체의 콜백으로 사용는 트랜잭션 관리자가 트랜잭션의 두 번째 단계 (즉, 롤백됩니다) 트랜잭션이 중단 되는 경우. |   | &lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;| 참여 한 개체의이 메서드에 콜백으로 사용는 트랜잭션 관리자가 트랜잭션의 두 번째 단계는 트랜잭션이 확실 하지 않은 경우. |      &gt; <ph id="ph1">[!NOTE]</ph> &gt; 알아야 할 특정 순서 대로 순차적으로 또는 알림을 전송 하지 않을 수 있습니다.&lt;/xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt; &lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; &lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt; &lt;/xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being committed.</source>
          <target state="translated">알립니다 참여 한 트랜잭션이 커밋되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</source>
          <target state="translated">트랜잭션 관리자는 모든 참가자가 트랜잭션을 커밋하는 지시할 때 커밋의 두 번째 단계는 참여 한 개체의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the <ph id="ph1">`enlistment`</ph> parameter.</source>
          <target state="translated">트랜잭션을 완료 하 고 다음 TM 호출 하 여 완료 되었음을 알립니다 하는 데 필요한 작업을 수행한 리소스 관리자는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;에서 메서드는 <ph id="ph1">`enlistment`</ph> 매개 변수.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the Commit call.</source>
          <target state="translated">리소스 관리자가, 영속적 참여 하지만 호출 하 여 응답 하지 않는 경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드, 트랜잭션 관리자는 리소스 관리자의 호출이 완료 받았는지 있는지 확인 해야 합니다.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">따라서 트랜잭션 관리자에 대 한 응답 대기 및 관련 정보가이 거래를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;은 호출 되지 정보의이 부분을 무기한 보관 됩니다 메모리에 또는 시스템 수준 리소스에.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">따라서 리소스를 회수할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">분산 트랜잭션에서이 수는 MSDTC 로그가 가득 MSDTC 프로세스를 중단 하는 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">관리 하는 트랜잭션의 경우 &lt;xref:System.Transactions&gt;,이 인해 리소스 관리자의 프로세스의 메모리 소비량에 점진적으로 지속적으로 증가 합니다.&lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">따라서 호출 하는 데 중요는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드 리소스 관리자 작업을 완료 한 후에 준비 작업.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션 관리자에 대 한 응답을 보내는 데 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that the status of a transaction is in doubt.</source>
          <target state="translated">참여 한 트랜잭션이 상태가 확실 하지 않은 개체를 알립니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</source>
          <target state="translated">이 메서드는 트랜잭션 관리자가 단일 지속형 리소스를 단일 단계 커밋 작업을 호출 하 고 지속적인 리소스 연결을 트랜잭션 결과 가져오기 전에 손실 된 후 일시적 리소스에 대해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that point, the transaction outcome cannot be safely determined.</source>
          <target state="translated">해당 시점에 트랜잭션 결과 안전 하 게 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As InDoubt is considered to be a final state for a transaction, you should not call &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt; or &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; after calling InDoubt.</source>
          <target state="translated">호출 하지 않아야으로 InDoubt 트랜잭션에 대 한 최종 상태로 간주, &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;또는 &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;InDoubt를 호출한 후.&lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; &lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일시적 리소스에 대 한이 메서드의 구현 영향을 받는 데이터에 대해 이해 하는 복구 또는 제약 작업을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must also call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the on the <ph id="ph1">`enlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">도 호출 해야는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;에서 메서드는에 <ph id="ph1">`enlistment`</ph> 의 작업 완료 될 때 매개 변수.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the InDoubt call.</source>
          <target state="translated">리소스 관리자가, 영속적 참여 하지만 호출 하 여 응답 하지 않는 경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드, 트랜잭션 관리자는 리소스 관리자 InDoubt 호출 받았는지 있는지 확인 해야 합니다.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">따라서 트랜잭션 관리자에 대 한 응답 대기 및 관련 정보가이 거래를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;은 호출 되지 정보의이 부분을 무기한 보관 됩니다 메모리에 또는 시스템 수준 리소스에.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">따라서 리소스를 회수할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">분산 트랜잭션에서이 수는 MSDTC 로그가 가득 MSDTC 프로세스를 중단 하는 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">관리 하는 트랜잭션의 경우 &lt;xref:System.Transactions&gt;,이 인해 리소스 관리자의 프로세스의 메모리 소비량에 점진적으로 지속적으로 증가 합니다.&lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">따라서 호출 하는 데 중요는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드 리소스 관리자 작업을 완료 한 후에 준비 작업.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션 관리자에 대 한 응답을 보내는 데 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being prepared for commitment.</source>
          <target state="translated">참여 한 트랜잭션이 커밋 준비를 하 고 개체를 알립니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</source>
          <target state="translated">트랜잭션 관리자는이 메서드를 호출 참여 한 리소스의 관리자 커밋의 1 단계 묻는 메시지가 나타나면 참가자가 트랜잭션을 커밋할 수 있는 여부.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are implementing a durable resource manager, you should log your prepare record during this phase.</source>
          <target state="translated">로깅해야 영구 리소스 관리자를 구현 하는 경우에이 단계 동안 레코드를 준비 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The record should contain all the necessary information to perform recovery.</source>
          <target state="translated">레코드 복구를 수행 하는 데 필요한 모든 정보를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the &lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt; property, which is passed to the transaction manager in the &lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt; method during recovery.</source>
          <target state="translated">여기에는 &lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;속성에서 트랜잭션 관리자에 전달 되는 &lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt;복구 하는 동안 메서드.&lt;/xref:System.Transactions.TransactionManager.Reenlist%2A&gt; &lt;/xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">복구에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>복구 수행<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your resource manager should complete all work that must be finished before calling the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; method of the <ph id="ph1">`preparingEnlistment`</ph> parameter to indicate its vote for commitment.</source>
          <target state="translated">리소스 관리자 호출 하기 전에 완료 해야 하는 모든 작업을 완료 된 &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;의 메서드는 <ph id="ph1">`preparingEnlistment`</ph> 커밋 결정을 나타내는 매개 변수를.&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</source>
          <target state="translated">이 프로세스를 완료 커밋, 롤백 또는 의심 스러운에서 모든 2 단계 알림을 받기 전에 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because phase 2 notifications can happen inline on the same thread that called the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; method in phase 1.</source>
          <target state="translated">2 단계 알림을 인라인 호출 하는 동일한 스레드에서 발생할 수 있으므로이는 &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;메서드 1 단계에서.&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>As such, you should not do any work after the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</source>
          <target state="translated">따라서 해야 모든 작업 후의 &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;2 단계 알림을 받기 전에 끝내 야 기대할 수 있는 호출 (예를 들어 잠금 해제).&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also call the method of the <ph id="ph1">`preparingEnlistment`</ph> parameter to indicate a vote for rollback.</source>
          <target state="translated">메서드를 호출할 수도 있습니다는 <ph id="ph1">`preparingEnlistment`</ph> 롤백에 대 한 투표를 나타내기 위해 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method of the <ph id="ph1">`preparingEnlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">호출 해야이 메서드의 구현이에 참여 하지 않고 원하는 개체를 단순히 관찰 하 고 트랜잭션이 진행 상황에 반응 하는 경우는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;의 메서드는 <ph id="ph1">`preparingEnlistment`</ph> 의 작업 완료 될 때 매개 변수.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>By doing so, your resource manager would not receive any phase 2 notification.</source>
          <target state="translated">이렇게 하면 리소스 관리자 게 2 단계 알림을 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.PreparingEnlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.PreparingEnlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션 관리자에 대 한 응답을 보내는 데 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being rolled back (aborted).</source>
          <target state="translated">참여 한 트랜잭션이 롤백되고 개체에 알립니다 (중단).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</source>
          <target state="translated">트랜잭션 관리자 트랜잭션이 롤백되고 ()으로 인해 중단 된 하나 이상의 트랜잭션 참가자가 트랜잭션을 커밋할 수 없을 때 참여 한 개체의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the <ph id="ph1">`enlistment`</ph> parameter.</source>
          <target state="translated">트랜잭션을 완료 하 고 다음 TM 호출 하 여 완료 되었음을 알립니다 하는 데 필요한 작업을 수행한 리소스 관리자는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;에서 메서드는 <ph id="ph1">`enlistment`</ph> 매개 변수.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the Rollback call.</source>
          <target state="translated">리소스 관리자가, 영속적 참여 하지만 호출 하 여 응답 하지 않는 경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드, 트랜잭션 관리자는 리소스 관리자 롤백 호출을 받았는지 있는지 확인 해야 합니다.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">따라서 트랜잭션 관리자에 대 한 응답 대기 및 관련 정보가이 거래를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">경우 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;은 호출 되지 정보의이 부분을 무기한 보관 됩니다 메모리에 또는 시스템 수준 리소스에.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">따라서 리소스를 회수할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">분산 트랜잭션에서이 수는 MSDTC 로그가 가득 MSDTC 프로세스를 중단 하는 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">관리 하는 트랜잭션의 경우 &lt;xref:System.Transactions&gt;,이 인해 리소스 관리자의 프로세스의 메모리 소비량에 점진적으로 지속적으로 증가 합니다.&lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">따라서 호출 하는 데 중요는 &lt;xref:System.Transactions.Enlistment.Done%2A&gt;메서드 리소스 관리자 작업을 완료 한 후에 준비 작업.&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션 관리자에 대 한 응답을 보내는 데 사용 되는 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>