<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0614c66219eaa02b51dfb8c870c69a0a274dcea2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.Formatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">215a10c258c1974b9d52d0724d7a559ed6008839</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebee4c4f4c4d887d6a6c102829c7db864c9f4408</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base functionality for the common language runtime serialization formatters.</source>
          <target state="translated">런타임 serialization 포맷터 공용 언어에 대 한 기본 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatter is the <ph id="ph1">`abstract`</ph> base class for all runtime serialization formatters, and provides some helper methods for implementing the &lt;xref:System.Runtime.Serialization.IFormatter&gt; interface.</source>
          <target state="translated">포맷터가는 <ph id="ph1">`abstract`</ph> 구현 하기 위한 몇 가지 도우미 메서드를 제공 하 고 모든 런타임 serialization 포맷터에 대 한 기본 클래스는 &lt;xref:System.Runtime.Serialization.IFormatter&gt;인터페이스.&lt;/xref:System.Runtime.Serialization.IFormatter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Formatter also manages queuing objects for serialization and generating IDs on a per-object basis.</source>
          <target state="translated">포맷터는 또한 serialization 및 각 개체 별로에서 Id가 생성에 대 한 큐 개체를 관리합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a &lt;xref:System.Collections.Queue&gt; for objects to serialize and a &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; to generate IDs for them.</source>
          <target state="translated">만듭니다는 &lt;xref:System.Collections.Queue&gt;serialize 하는 개체에 대 한 및 &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;Id를 생성 하려면.&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; performs lookups for types from the type names passed during deserialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;역직렬화 하는 동안 전달 된 형식 이름에서 형식에 대 한 조회를 수행 합니다.&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; is set, a default is used.</source>
          <target state="translated">하지 않으면 &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;가 설정 된 기본값이 사용 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우는 &lt;xref:System.Runtime.Serialization.StreamingContext&gt;현재 serialization에 사용 합니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; is an indication of either the source of the bits being deserialized or the destination of the bits being serialized.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;는 역직렬화 되는 비트의 소스 또는 serialize 되는 비트의 대상 중 하나를 나타냅니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>It has no impact on default serialization, but is passed as an argument to &lt;xref:System.Runtime.Serialization.ISerializable&gt; and &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.</source>
          <target state="translated">기본 serialization 중에 아무런 영향을 주지가 했지만 &lt;xref:System.Runtime.Serialization.ISerializable&gt;및 &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt; 에 대 한 인수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;현재 serialization에 사용 합니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 개체의 그래프를 원래 해당 스트림으로 serialize 된 그래프와 동일한 만들기를 만들 때 포맷터에 연결 된 스트림을 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The stream to deserialize.</source>
          <target state="translated">역직렬화 할 스트림입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph of objects.</source>
          <target state="translated">개체의 deserialize 된 그래프의 최상위 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the next object to serialize, from the formatter's internal work queue.</source>
          <target state="translated">포맷터의 내부 작업 큐에서 직렬화 하는 데 다음 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are returned in a first in first out order based on how they were passed to &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.</source>
          <target state="translated">첫 번째 주문을 &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt; 에 전달 된 방법에 따라 첫 번째에서 개체가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ID of the object is put into the <ph id="ph1">`objID`</ph> parameter and the object is returned from the function.</source>
          <target state="translated">개체의 ID에 배치 되는 <ph id="ph1">`objID`</ph> 매개 변수 개체가 함수에서 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The ID assigned to the current object during serialization.</source>
          <target state="translated">직렬화 하는 동안 현재 개체에 할당 된 ID입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The next object to serialize.</source>
          <target state="translated">직렬화 하는 데 사용 되는 다음 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The next object retrieved from the work queue did not have an assigned ID.</source>
          <target state="translated">작업 큐에서 검색 된 다음 개체에 할당 된 ID가 않았습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Contains the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">포함 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; maintains a list of the objects that have been identified and the IDs that they were given.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;식별 된 개체와 지정 된 Id의 목록을 유지 관리 합니다.&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Contains a <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the objects left to serialize.</source>
          <target state="translated">포함 된 <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> serialize 할 개체 왼쪽의 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects scheduled for serialization with the &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt; method are pushed on the queue.</source>
          <target state="translated">사용 하는 serialization에 대 한 예약 된 개체는 &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;메서드는 큐에 푸시됩니다.&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Schedules an object for later serialization.</source>
          <target state="translated">이후 serialization에 대 한 개체를 예약합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schedule obtains an ID for the object and puts it on the queue for later serialization if this is a new object ID.</source>
          <target state="translated">일정 개체에 대 한 ID를 가져오고 새 개체 id입니다.가 경우 이후 serialization에 대 한 큐에 넣습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schedule is a work queue of objects to serialize, and is held inside the formatter.</source>
          <target state="translated">일정은 serialize 할 개체의 작업 큐 포맷터 안에 유지 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is already on the work queue, it will not be added a second time, but an exception will not be thrown either.</source>
          <target state="translated">작업 큐에 개체가 이미를 두 번째로 추가 되지 않습니다 되지만 예외가 throw 되지 않습니다 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object to schedule for serialization.</source>
          <target state="translated">Serialization에 대 한 일정을 사용 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The object ID assigned to the object.</source>
          <target state="translated">개체에 할당 된 개체 ID입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 지정된 된 루트를 사용 하 여 개체의 그래프를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The stream to which the objects are serialized.</source>
          <target state="translated">개체가 serialize 되는 스트림.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object at the root of the graph to serialize.</source>
          <target state="translated">직렬화 하는 데 그래프의 루트에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Runtime.Serialization.SurrogateSelector&gt; to look up implementations of &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; that control the serialization of a particular type.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Runtime.Serialization.SurrogateSelector&gt;구현의 조회할 &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;특정 형식의 serialization을 제어 하는.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.SurrogateSelector&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object type has a matching surrogate, then serialization and deserialization are handed off to the surrogate even if the type implements the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">개체 형식에 일치 하는 서로게이트 경우 serialization 및 deserialization에 넘겨집니다 서로게이트 형식에서 구현 하는 경우에는 &lt;xref:System.Runtime.Serialization.ISerializable&gt;인터페이스.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an array to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 배열 포맷터에 이미 연결 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The array to write.</source>
          <target state="translated">쓸 배열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the array.</source>
          <target state="translated">이름 배열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of elements that the array holds.</source>
          <target state="translated">배열 저장 하는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 부울 값을 포맷터에 이미 연결 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 8 비트 부호 없는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 유니코드 문자를 포맷터에 이미 연결 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.DateTime&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 한 &lt;xref:System.DateTime&gt;값을 포맷터에 이미 연결 된 스트림에.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.Decimal&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 한 &lt;xref:System.Decimal&gt;값을 포맷터에 이미 연결 된 스트림에.&lt;/xref:System.Decimal&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 배정밀도 부동 소수점 숫자 포맷터에 이미 연결 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 16 비트 부호 있는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit signed integer to the stream.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 32 비트 부호 있는 정수를 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit signed integer to the stream.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 64 비트 부호 있는 정수를 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Inspects the type of data received, and calls the appropriate <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method to perform the write to the stream already attached to the formatter.</source>
          <target state="translated">받은 데이터 형식을 검사 하 고 적절 한 호출 <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드 포맷터에 이미 연결 된 스트림에 쓰기를 수행 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this method properly, all the <ph id="ph1">`Write`</ph> methods (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; method, and so on) should have the appropriate functionality.</source>
          <target state="translated">이 메서드를 제대로 사용 하려면 모든는 <ph id="ph1">`Write`</ph> 메서드 (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt; 메서드를 &lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt;메서드를 &lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt;메서드와 등)는 적절 한 기능을 가집니다.&lt;/xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the member to serialize.</source>
          <target state="translated">Serialize 할 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The object to write to the stream attached to the formatter.</source>
          <target state="translated">포맷터에 연결 된 스트림에 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an object reference to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 대 한 개체 참조를 씁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schedules the object with the graph walker to handle the work.</source>
          <target state="translated">개체 그래프 워커 작업 처리를 예약 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The object reference to write.</source>
          <target state="translated">쓸 개체 참조입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The type of object the reference points to.</source>
          <target state="translated">참조에서 가리키는 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 8 비트 부호 있는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 단 정밀도 부동 소수점 숫자를 씁니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.TimeSpan&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 한 &lt;xref:System.TimeSpan&gt;값을 포맷터에 이미 연결 된 스트림에.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 16 비트 부호 없는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 32 비트 부호 없는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 포맷터에 이미 연결 된 스트림에 64 비트 부호 없는 정수를 씁니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 형식의 값을 포맷터에 이미 연결 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The object representing the value type.</source>
          <target state="translated">값 형식을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the value type.</source>
          <target state="translated">&lt;xref:System.Type&gt;값 형식의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>