<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97b8f0e925aa738f8cee4da0329367baf7c6407e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Application.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8644d15999491c42666c18a9a656c8cd589889fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b75537628da94f6b326c9ea337d189d986f59a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">캡슐화 된 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application is a class that encapsulates <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application-specific functionality, including the following:      -   <bpt id="p1">**</bpt>Application Lifetime<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt;, &lt;xref:System.Windows.Application.Current%2A&gt;, &lt;xref:System.Windows.Application.Deactivated&gt;, &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;, &lt;xref:System.Windows.Application.Exit&gt;, &lt;xref:System.Windows.Application.Run%2A&gt;, &lt;xref:System.Windows.Application.SessionEnding&gt;, &lt;xref:System.Windows.Application.Shutdown%2A&gt;, &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;, &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">응용 프로그램은 캡슐화 하는 클래스 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 을 다음을 비롯 한 응용 프로그램 관련 기능:- <bpt id="p1">**</bpt>응용 프로그램 수명<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt;, &lt;xref:System.Windows.Application.Current%2A&gt; &lt;xref:System.Windows.Application.Deactivated&gt;, &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;xref:System.Windows.Application.Exit&gt;, &lt;xref:System.Windows.Application.Run%2A&gt; &lt;xref:System.Windows.Application.SessionEnding&gt; &lt;xref:System.Windows.Application.Shutdown%2A&gt;, &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.SessionEnding&gt; ,&lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;/xref:System.Windows.Application.Deactivated&gt; &lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Application-Scope Window, Property, and Resource Management<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt;, &lt;xref:System.Windows.Application.GetContentStream%2A&gt;, &lt;xref:System.Windows.Application.GetResourceStream%2A&gt;, &lt;xref:System.Windows.Application.LoadComponent%2A&gt;, &lt;xref:System.Windows.Application.MainWindow%2A&gt;, &lt;xref:System.Windows.Application.Properties%2A&gt;, &lt;xref:System.Windows.Application.Resources%2A&gt;, &lt;xref:System.Windows.Application.StartupUri%2A&gt;, &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">- <bpt id="p1">**</bpt>응용 프로그램 범위 창, 속성 및 리소스 관리<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt;, &lt;xref:System.Windows.Application.GetContentStream%2A&gt; &lt;xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;xref:System.Windows.Application.LoadComponent%2A&gt;, &lt;xref:System.Windows.Application.MainWindow%2A&gt; &lt;xref:System.Windows.Application.Properties%2A&gt;, &lt;xref:System.Windows.Application.Resources%2A&gt; &lt;xref:System.Windows.Application.StartupUri%2A&gt;, &lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt; &lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.Properties%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.LoadComponent%2A&gt; ,&lt;/xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;/xref:System.Windows.Application.GetContentStream%2A&gt; &lt;/xref:System.Windows.Application.FindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Command-Line Parameter and Exit Code Processing<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">- <bpt id="p1">**</bpt>명령줄 매개 변수 및 종료 코드 처리<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt; &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Exit?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Startup?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.</source>
          <target state="translated">-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.&lt;/xref:System.Windows.Application.GetCookie%2A&gt;&lt;/xref:System.Windows.Application.SetCookie%2A&gt;&lt;/xref:System.Windows.Application.NavigationFailed&gt;&lt;/xref:System.Windows.Application.NavigationStopped&gt;&lt;/xref:System.Windows.Application.NavigationProgress&gt;&lt;/xref:System.Windows.Application.Navigating&gt;&lt;/xref:System.Windows.Application.Navigated&gt;&lt;/xref:System.Windows.Application.LoadCompleted&gt;&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application implements the singleton pattern to provide shared access to its window, property, and resource scope services.</source>
          <target state="translated">응용 프로그램의 창, 속성 및 리소스 범위 서비스에 대 한 공유 액세스를 제공 하는 singleton 패턴을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, only one instance of the Application class can be created per &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 당 응용 프로그램 클래스의 인스턴스 하나만 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement an Application using markup, markup and code-behind, or code.</source>
          <target state="translated">태그, 태그 및 코드 숨김 또는 코드를 사용 하 여 응용 프로그램을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Application is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an <ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph2">`ApplicationDefinition`</ph> item.</source>
          <target state="translated">응용 프로그램 구현 하는 경우, 태그와 함께 태그 파일을 구성 해야 태그 또는 태그 및 코드 숨김, 여부는 <ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph2">`ApplicationDefinition`</ph> 항목입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A standalone application does not require an Application object; it is possible to implement a custom <ph id="ph2">`static`</ph> entry point method (<ph id="ph3">`Main`</ph>) that opens a window without creating an instance of Application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 독립 실행형 응용 프로그램 응용 프로그램 개체를 필요 하지 않습니다; 사용자 지정 수 <ph id="ph2">`static`</ph> 진입점 메서드 (<ph id="ph3">`Main`</ph>) 응용 프로그램의 인스턴스를 만들지 않고 창이 열립니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph> require an Application object.</source>
          <target state="translated">그러나 <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램 개체에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one instance of the &lt;xref:System.Windows.Application&gt; class can be created per &lt;xref:System.AppDomain&gt;, to ensure shared access to a single set of application-scope window, property, and resource data.</source>
          <target state="translated">인스턴스가 하나만 &lt;xref:System.Windows.Application&gt;당 클래스를 만들 수 있습니다 &lt;xref:System.AppDomain&gt;, 응용 프로그램 범위 창, 속성 및 리소스 데이터의 단일 집합에 대 한 공유 액세스 되도록 합니다.&lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the default constructor of the &lt;xref:System.Windows.Application&gt; class detects whether the instance being initialized is the first instance in an &lt;xref:System.AppDomain&gt;; if it is not, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">따라서의 기본 생성자는 &lt;xref:System.Windows.Application&gt;클래스 초기화 되 고 인스턴스가에서 첫 번째 인스턴스가 있는지 여부를 검색 한 &lt;xref:System.AppDomain&gt;정상이 아닌 경우는 &lt;xref:System.InvalidOperationException&gt;throw 됩니다.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Application&gt; object for the current &lt;xref:System.AppDomain&gt; is exposed from the static &lt;xref:System.Windows.Application.Current%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;현재에 대 한 개체 &lt;xref:System.AppDomain&gt;정적에서 노출 &lt;xref:System.Windows.Application.Current%2A&gt;속성.&lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More than one instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class is created per <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">인스턴스가 둘 이상는 <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 당 클래스를 만들 <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Occurs when an application becomes the foreground application.</source>
          <target state="translated">응용 프로그램은 전경 응용 프로그램이 됩니다 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:      -   An application opens its first window.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 하나 이상의 열려 있는 창이 응용 프로그램을 활성화 (포그라운드로 됨) 창 중 하나는 활성화 된 경우 처음으로 응용 프로그램이 시작 된 이후 또는 창이 활성화 될 때 응용 프로그램이 활성 상태인 동안: 프로그램이 경우:-응용 프로그램의 첫 번째 창을 엽니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user switches to the application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">-사용자가 ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 응용 프로그램으로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user clicks the taskbar button for one of the windows in an application.</source>
          <target state="translated">-사용자가 응용 프로그램의 창 중 하나에 대 한 작업 표시줄 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that need to detect when they activate can handle the Activated event.</source>
          <target state="translated">활성화 되는 시기를 검색 하는 응용 프로그램 Activated 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application's behavior or state depends on its activation state, it can handle both Activated and &lt;xref:System.Windows.Application.Deactivated&gt; events to determine which activation state it's in.</source>
          <target state="translated">응용 프로그램의 동작 또는 상태는 정품 인증 상태에 따라 달라 지, Activated 및 &lt;xref:System.Windows.Application.Deactivated&gt;를 정품 인증을 확인 하는 이벤트의 기능 상태&lt;/xref:System.Windows.Application.Deactivated&gt; 를 모두 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an application becomes active, Activated will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</source>
          <target state="translated">응용 프로그램 활성화 되 면 Activated 응용 프로그램이 활성 상태인 동안 응용 프로그램 내에서 개수 창이 활성화 될에 관계 없이 응용 프로그램이 비활성화 될 때까지 다시 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Activated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">활성화 발생 하지 않습니다 <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재에 대 한 개체 <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Application&gt; is a per-&lt;xref:System.AppDomain&gt; singleton type that implements the static Current property to provide shared access to the &lt;xref:System.Windows.Application&gt; instance for the current &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;이 당-&lt;xref:System.AppDomain&gt; &lt;xref:System.Windows.Application&gt;현재 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 에 대 한 인스턴스&lt;/xref:System.Windows.Application&gt; 를 공유 액세스를 제공 하도록 현재 정적 속성을 구현 하는 단일 유형&lt;/xref:System.AppDomain&gt;&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This design guarantees that state managed by &lt;xref:System.Windows.Application&gt;, including shared resources and state, is available from a single, shared location.</source>
          <target state="translated">이 디자인 하 여 관리 되는 상태에서는 &lt;xref:System.Windows.Application&gt;, 공유 리소스 및 상태를 포함 하 여, 하나의 공유 위치에서 제공 됩니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재에 대 한 개체 <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application stops being the foreground application.</source>
          <target state="translated">응용 프로그램 포그라운드 응용 프로그램이 중지 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:      -   Switches to another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> (포그라운드 응용 프로그램이 중지 됨)를 비활성화 하는 하나 이상의 열려 있는 창이 응용 프로그램 사용자가 다음을 수행 하는 경우:-ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 다른 응용 프로그램으로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Clicks the taskbar button for a window in another application.</source>
          <target state="translated">-다른 응용 프로그램의 창에 대 한 작업 표시줄 단추를 클릭합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that need to detect deactivation can handle the Deactivated event.</source>
          <target state="translated">비활성화를 검색 하는 응용 프로그램 Deactivated 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application's behavior or state depends on its activation state, it can handle both Deactivated and &lt;xref:System.Windows.Application.Activated&gt; events to determine which state it's in.</source>
          <target state="translated">두 Deactivated를 처리할 수 있는 응용 프로그램의 동작 또는 상태는 정품 인증 상태에 따라 달라 지, 및 &lt;xref:System.Windows.Application.Activated&gt;는 상태를 확인할 수 인치&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deactivated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">비활성화에 대 한 끝나면 <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Occurs when an exception is thrown by an application but not handled.</source>
          <target state="translated">예외는 응용 프로그램에서 throw 되었지만 처리 되지 않은 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 처리 되지 않은 예외를 catch 하 고 예외 (올은 예외를 보고할 수) 대화 상자에서 사용자에 게 알려줍니다 자동으로 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle DispatcherUnhandledException.</source>
          <target state="translated">그러나 응용 프로그램을 사용자 지정 되지 않은 예외를 중앙된 위치에서 처리를 수행 하는 경우 DispatcherUnhandledException를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>DispatcherUnhandledException is raised by an &lt;xref:System.Windows.Application&gt; for each exception that is unhandled by code running on the main UI thread.</source>
          <target state="translated">DispatcherUnhandledException는에 의해 발생 한 &lt;xref:System.Windows.Application&gt;주 UI 스레드에서 실행 되는 코드에서 처리 되지 않은 각 예외에 대 한.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is not handled on either a background <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread (a thread with its own &lt;xref:System.Windows.Threading.Dispatcher&gt;) or a background worker thread (a thread without a &lt;xref:System.Windows.Threading.Dispatcher&gt;), the exception is not forwarded to the main <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">예외가 처리 되지 않은 경우에 배경 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> 스레드 (자체로 스레드 &lt;xref:System.Windows.Threading.Dispatcher&gt;) 또는 백그라운드 작업자 스레드 (없는 스레드는 &lt;xref:System.Windows.Threading.Dispatcher&gt;), 예외 주에 게 전달 되지 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, DispatcherUnhandledException is not raised.</source>
          <target state="translated">따라서 DispatcherUnhandledException 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these circumstances, you will need to write code to do the following:      1.</source>
          <target state="translated">이러한 경우에는 다음을 수행 하는 코드를 작성 해야 합니다. 1.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle exceptions on the background thread.</source>
          <target state="translated">백그라운드 스레드에서 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dispatch those exceptions to the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">이러한 예외를 주 디스패치 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rethrow them on the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread without handling them to allow DispatcherUnhandledException to be raised.</source>
          <target state="translated">주 다시 throw 할 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드를 거듭제곱할 DispatcherUnhandledException을 허용 하도록 처리 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Threading Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> overview.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>스레딩 모델<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 개요입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DispatcherUnhandledException event handler is passed a &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt; argument that contains contextual information regarding the exception, including:      -   The exception (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;).</source>
          <target state="translated">DispatcherUnhandledException 이벤트 처리기에 전달 되는 &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;인수는 예외에 대 한 컨텍스트 정보를 포함 하는 포함 하 여:-예외 (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;).&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Windows.Threading.Dispatcher&gt; from which it originated (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;).</source>
          <target state="translated">- &lt;xref:System.Windows.Threading.Dispatcher&gt;예외가 시작 된 (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;).&lt;/xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this information to determine whether an exception is recoverable or not.</source>
          <target state="translated">예외를 복구할 수 있는지 여부를 확인 하려면이 정보를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A recoverable exception might be a &lt;xref:System.IO.FileNotFoundException&gt;, for example, while an unrecoverable exception might be a &lt;xref:System.StackOverflowException&gt;, for example.</source>
          <target state="translated">복구 가능한 예외는 &lt;xref:System.IO.FileNotFoundException&gt;, 예를 들어 복구할 수 없는 예외 수 있지만 한 &lt;xref:System.StackOverflowException&gt;, 예를 들어.&lt;/xref:System.StackOverflowException&gt; &lt;/xref:System.IO.FileNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you process an unhandled exception from DispatcherUnhandledException, and you don't want <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> to continue processing it, you need to set the &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt; property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">DispatcherUnhandledException에서 처리 되지 않은 예외를 처리 하지 않으려면 시점과 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 설정 해야 처리를 계속 하려면는 &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;속성을 <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the other events that &lt;xref:System.Windows.Application&gt; raises, DispatcherUnhandledException does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</source>
          <target state="translated">다른 이벤트와 달리는 &lt;xref:System.Windows.Application&gt;DispatcherUnhandledException 발생 시키고 일치 하는 보호 된 가상 구현 (OnDispatcherUnhandledException)가 없습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, classes that derive from &lt;xref:System.Windows.Application&gt; must always register an event handler with DispatcherUnhandledException to process unhandled exceptions.</source>
          <target state="translated">따라서 클래스에서 파생 되는 &lt;xref:System.Windows.Application&gt;DispatcherUnhandledException 처리 되지 않은 예외를 처리 하는 이벤트 처리기 등록 항상 해야 합니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs just before an application shuts down, and cannot be canceled.</source>
          <target state="translated">응용 프로그램을 종료 하 고 취소할 수 없습니다 직전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can shut down for either of the following reasons:      -   The &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the &lt;xref:System.Windows.Application&gt; object is called, either explicitly or as determined by the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property.</source>
          <target state="translated">다음 이유 중 하나에 대 한 응용 프로그램이 종료 수:- &lt;xref:System.Windows.Application.Shutdown%2A&gt;의 메서드는 &lt;xref:System.Windows.Application&gt;의해 명시적으로 또는 결정 된 대로 개체 호출 됩니다는 &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;속성.&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The user ends the session by logging off or shutting down.</source>
          <target state="translated">-사용자 로그 오프 하거나 종료 하는 세션을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can detect when application shutdown occurs by handling the Exit event, and perform any additional processing as required.</source>
          <target state="translated">종료 이벤트를 처리 하 여 응용 프로그램이 종료 하는 경우이 감지할 수 있으며 필요에 따라 추가 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle Exit to inspect or change the application exit code when you don't need to call &lt;xref:System.Windows.Application.Shutdown%2A&gt; explicitly.</source>
          <target state="translated">검사 하거나를 호출할 필요 하지 않을 때 응용 프로그램 종료 코드를 변경 하려면 종료를 처리할 수도 있습니다 &lt;xref:System.Windows.Application.Shutdown%2A&gt;명시적으로.&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exit code is exposed from the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property of the &lt;xref:System.Windows.ExitEventArgs&gt; argument that's passed to the Exit event handler.</source>
          <target state="translated">종료 코드에서 노출 되는 &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;속성은 &lt;xref:System.Windows.ExitEventArgs&gt;종료 이벤트 처리기에 전달 되는 인수.&lt;/xref:System.Windows.ExitEventArgs&gt; &lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application stops running, the exit code is passed to the operating system for subsequent processing.</source>
          <target state="translated">응용 프로그램 실행을 중지, 종료 코드 후속 처리에 대 한 운영 체제에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application handles the &lt;xref:System.Windows.Application.SessionEnding&gt; event and subsequently cancels it, Exit is not raised and the application continues running in accordance with the shutdown mode.</source>
          <target state="translated">응용 프로그램에서 처리 하는 경우는 &lt;xref:System.Windows.Application.SessionEnding&gt;이벤트 이후에, 종료는 발생 하지 않습니다 취소 및 응용 프로그램에서에서 계속 실행 종료 모드에 따라 및.&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exit code can be set from an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>, although the value is ignored.</source>
          <target state="translated">종료 코드에서 설정할 수 있습니다는 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>있지만 값이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, Exit is raised in the following circumstances:      -   An <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is navigated away from.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, 다음과 같은 상황에서 발생 하는 종료:- <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> 에서 멀리 이동 하 게 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   In <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>, when the tab that is hosting the <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is closed.</source>
          <target state="translated">-에 <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>때 호스팅하는 탭은 <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> 닫힙니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When the browser is closed.</source>
          <target state="translated">-브라우저 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all cases, the value of the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property is ignored.</source>
          <target state="translated">모든 경우의 값에는 &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;속성은 무시 됩니다.&lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Searches for a <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> resource, such as a <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with the specified key, and throws an exception if the requested resource is not found (see <bpt id="p3">[</bpt>XAML Resources<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">검색 한 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> 리소스와 같은 <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 지정 된 키와 throw 요청 된 리소스가 없는 경우 예외 (참조 <bpt id="p3">[</bpt>XAML 리소스<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>FindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 FindResource 먼저 보입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">응용 프로그램 범위 리소스 관리 &lt;xref:System.Windows.Application&gt;에서 노출 하 고는 &lt;xref:System.Windows.Application.Resources%2A&gt;속성.&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified resource is not found in the set of application-scope resources, FindResource then next searches the system resources.</source>
          <target state="translated">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 FindResource 그런 다음 다음 검색 시스템 리소스입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">노출 된 &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, 및 &lt;xref:System.Windows.SystemParameters&gt;형식을 각각 정적 속성으로.&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use FindResource to acquire them, these types also expose resource key properties that are designed to be passed to FindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">FindResource을 얻으려고를 사용 하려면 이러한 형식은 속성을 노출 리소스 키 FindResource;를 전달 하도록 디자인 된 예를 들어 &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because FindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">FindResource 개체를 반환 하므로 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;를 찾을 수 없는 키에 대 한이 메서드를 호출 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want to handle exceptions that result from calling FindResource, call &lt;xref:System.Windows.Application.TryFindResource%2A&gt; instead; &lt;xref:System.Windows.Application.TryFindResource%2A&gt; returns a <ph id="ph1">`null`</ph> reference when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">호출 FindResource 여에서 발생 하는 예외를 처리 하지 않을 경우 &lt;xref:System.Windows.Application.TryFindResource%2A&gt;대신 호출 합니다. &lt;xref:System.Windows.Application.TryFindResource%2A&gt;반환는 <ph id="ph1">`null`</ph> 참조할 때 요청 된 리소스를 찾을 수 없으면 예외를 throw 하지 않습니다.&lt;/xref:System.Windows.Application.TryFindResource%2A&gt; &lt;/xref:System.Windows.Application.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">찾을 리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">요청 된 리소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">현재 요청의 없으면는 <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The resource cannot be found.</source>
          <target state="translated">리소스를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> content has been loaded if the desired fragment is in different content.</source>
          <target state="translated">응용 프로그램의 탐색기 콘텐츠 조각 탐색을 시작할 때 발생 원하는 조각이 되었거나 현재 콘텐츠에 원본 뒤 탐색 즉시 발생 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 다른 콘텐츠에 있으면 경우 콘텐츠가 로드 됨.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a content data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">지정 된에 있는 콘텐츠 데이터 파일에 대 한 리소스 스트림을 반환 &lt;xref:System.Uri&gt;(참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The relative &lt;xref:System.Uri&gt; that maps to a loose resource.</source>
          <target state="translated">상대 &lt;xref:System.Uri&gt;느슨한 리소스에 매핑되는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a content data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 에 있는 콘텐츠 데이터 파일이 들어 있는</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If a loose resource is not found, null is returned.</source>
          <target state="translated">느슨한 리소스가 없는 경우 null이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetContentStream null입니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is an absolute &lt;xref:System.Uri&gt;.</source>
          <target state="translated">&lt;xref:System.Uri&gt;즉 GetContentStream에 전달 된가 절대 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; &lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">에 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 로 지정 된 위치에 대 한 쿠키를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetCookie retrieves a cookie for the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">GetCookie &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 지정된에 대 한 쿠키를 검색합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cookie can't be retrieved, a &lt;xref:System.ComponentModel.Win32Exception&gt; is thrown.</source>
          <target state="translated">쿠키를 검색할 수 없는 경우는 &lt;xref:System.ComponentModel.Win32Exception&gt;throw 됩니다.&lt;/xref:System.ComponentModel.Win32Exception&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to write the code to parse the cookie string into a list of name/value pairs.</source>
          <target state="translated">이름/값 쌍의 목록 쿠키 문자열 구문 분석 하는 코드를 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">쿠키에 대 한 개요 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>탐색 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which a cookie was created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;쿠키가 만들어진 위치를 지정 하는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value, if the cookie exists; otherwise, a <bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">A &lt;xref:System.String&gt;값을 쿠키가 있으면; 그렇지 않으면는 <bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> throw 됩니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by GetCookie) if a problem occurs when attempting to retrieve the specified cookie.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> 에서 오류가 발생 한는 <bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수 (GetCookie 라고 함)를 지정된 된 쿠키를 검색할 때 문제가 발생 한 경우.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">원본 사이트의 데이터 파일에 지정 된 위치에 대 한 리소스 스트림을 반환 &lt;xref:System.Uri&gt;(참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to a loose resource at the site of origin.</source>
          <target state="translated">&lt;xref:System.Uri&gt;느슨한 원본 사이트에 리소스에 매핑되는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 에 있는 원본 사이트의 데이터 파일에 대 한 리소스 스트림이 포함 된</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the loose resource is not found, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned.</source>
          <target state="translated">느슨한 리소스가 없으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetRemoteStream null입니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://siteoforigin:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetRemoteStream는 상대적이 지 않고이 아니라 절대 주소 또는 <ph id="ph1">`pack://siteoforigin:,,,/`</ph> 양식.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a resource data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">지정 된 위치에서 있는 리소스 데이터 파일에 대 한 리소스 스트림을 반환 &lt;xref:System.Uri&gt;(참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not thread safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to an embedded resource.</source>
          <target state="translated">&lt;xref:System.Uri&gt;포함된 된 리소스에 매핑되는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for resource data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 에 있는 리소스 데이터 파일에 대 한 리소스 스트림이 포함 된</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetResourceStream null입니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://application:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetResourceStream는 상대적이 지 않고이 아니라 절대 주소 또는 <ph id="ph1">`pack://application:,,,/`</ph> 양식.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream cannot be found.</source>
          <target state="translated">&lt;xref:System.Uri&gt;에 전달 되는 GetResourceStream를 찾을 수 없습니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</source>
          <target state="translated">응용 프로그램의 탐색기에서 탐색 된 콘텐츠 로드 된 구문 분석 및 렌더링 되기 시작할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Listen for events on the navigated content such as the &lt;xref:System.Windows.FrameworkElement.Loaded&gt;event on &lt;xref:System.Windows.Controls.Page&gt; before you access properties of the navigated content.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;와 같은 이벤트 탐색된 된 콘텐츠를 수신 대기는 &lt;xref:System.Windows.FrameworkElement.Loaded&gt;에 이벤트 &lt;xref:System.Windows.Controls.Page&gt;탐색된 된 콘텐츠의 속성에 액세스 하기 전에.&lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>, and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">로드는 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 있는 지정 된 파일에 <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>의 루트 요소에 지정 된 개체의 인스턴스로 변환 하 고는 <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly convert the return value to the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">반환 값의 루트 요소와 동일한 형식으로 명시적으로 변환 해야 합니다는 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (로 구성 된는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;상대에 매핑되는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An instance of the root element specified by the XAML file loaded.</source>
          <target state="translated">XAML 파일에 지정 된 루트 요소는 인스턴스를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The file is not a <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">파일이 아닙니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">로드 한 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 있는 지정 된 파일에 <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> 의 루트 요소에 지정 된 개체의 인스턴스로 변환 하 고는 <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (로 구성 된는 <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 <bpt id="p1">[</bpt>WPF 응용 프로그램 리소스, 내용 및 데이터 파일<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An object of the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">루트 요소와 동일한 형식의 개체는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;상대에 매핑되는 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is of a type that does not match the root element of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>루트 요소와 일치 하지 않는 형식의 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the main window of the application.</source>
          <target state="translated">응용 프로그램의 주 창을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>MainWindow is automatically set with a reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated in the &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">MainWindow는 자동으로 첫 번째 &lt;xref:System.Windows.Window&gt; &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 에서 인스턴스화할 수 있는 개체&lt;/xref:System.Windows.Window&gt; 에 대 한 참조 설정</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a different main window by setting MainWindow assigning another &lt;xref:System.Windows.Application.Windows%2A&gt; object to the MainWindow property.</source>
          <target state="translated">다른 주 창을 다른 할당 MainWindow를 설정 하 여 지정할 수 있습니다 &lt;xref:System.Windows.Application.Windows%2A&gt;MainWindow 속성에는 개체입니다.&lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object is set to &lt;xref:System.Windows.ShutdownMode&gt;, closing the main window causes the application to shut down.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;속성의는 &lt;xref:System.Windows.Application&gt;개체로 설정 되어 &lt;xref:System.Windows.ShutdownMode&gt;, 주 창을 닫으면 응용 프로그램을 종료 합니다.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to set the MainWindow property from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>, if an application's main window is not the window that is produced by setting the &lt;xref:System.Windows.Application.StartupUri%2A&gt; property in <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">MainWindow 속성을 설정 하는 것이 불가능 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>응용 프로그램의 주 창 설정 하 여 생성 되는 창이 아닌 경우, 고 &lt;xref:System.Windows.Application.StartupUri%2A&gt;에서 속성 <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>.&lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two limitations of the <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> approach are:      -   You can specify either a <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Window&gt; or a <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Navigation.NavigationWindow&gt; as the main window.</source>
          <target state="translated">두 가지 제한 된 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 접근 방식이 됩니다:-하나만 지정할 수 있습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-만 &lt;xref:System.Windows.Window&gt;또는 <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-만 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;주 창으로.&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You must set the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of the window you specify, otherwise it won't be shown.</source>
          <target state="translated">-설정 해야 합니다는 &lt;xref:System.Windows.UIElement.Visibility%2A&gt;지정할 속성 창, 그렇지 않으면 표시 되지 않게 합니다.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated is also added as the first item to the &lt;xref:System.Windows.Application.Windows%2A&gt; collection.</source>
          <target state="translated">첫 번째에 대 한 참조 &lt;xref:System.Windows.Window&gt;개체를 인스턴스화할 수에 첫 번째 항목으로 추가 됩니다는 &lt;xref:System.Windows.Application.Windows%2A&gt;컬렉션.&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MainWindow is subsequently set with a reference to a different &lt;xref:System.Windows.Window&gt;, the position of the item with the reference to the main window will change, while the order of items in &lt;xref:System.Windows.Application.Windows%2A&gt; remains the same.</source>
          <target state="translated">MainWindow 다른에 대 한 참조도 설정한 경우 &lt;xref:System.Windows.Window&gt;에 있는 항목의 순서는 동안 주 창에 대 한 참조 항목의 위치가 변경 됩니다 &lt;xref:System.Windows.Application.Windows%2A&gt;그대로 유지 됩니다.&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, always use MainWindow to refer to the main window instead of the first item in &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">따라서 항상 사용 하 여 MainWindow &lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt; 첫 번째 항목 대신 주 창 참조</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the main window is a &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, and you need specific access to &lt;xref:System.Windows.Navigation.NavigationWindow&gt; members, you will need to cast the value of MainWindow to &lt;xref:System.Windows.Navigation.NavigationWindow&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 주 창이 없으면는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, &lt;xref:System.Windows.Navigation.NavigationWindow&gt;조정 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;.&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 으로 값을 캐스팅 해야 합니다 멤버에&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 대 한 특정 액세스 해야 하 고&lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&gt;&gt;이 속성은 작성 된 스레드에서 에서만 사용할 수는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is designated as the main application window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 주 응용 프로그램 창으로 지정 된 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>MainWindow is set from an application that's hosted in a browser, such as an <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">와 같은 브라우저에서 호스팅되는 응용 프로그램에서 MainWindow 설정 되어 있는 <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</source>
          <target state="translated">아직 완전히 로드 되지 않았지만 응용 프로그램의 탐색기에서 탐색 중인 콘텐츠를 찾으면 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Occurs when a new navigation is requested by a navigator in the application.</source>
          <target state="translated">새 탐색 탐색기 응용 프로그램에서 요청 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</source>
          <target state="translated">응용 프로그램의 탐색기는 요청한 콘텐츠를 탐색 하는 동안 오류가 발생 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</source>
          <target state="translated">탐색기 탐색 진행 정보를 제공 하도록 응용 프로그램에서 관리 되는 다운로드 하는 동안에 주기적으로 발생 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Occurs when the <bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</source>
          <target state="translated">발생 경우는 <bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 탐색 요청 될 경우에 탐색기가 현재 탐색 진행 중인 동안 또는 응용 프로그램의 탐색기의 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">탐색기 중 하나는 &lt;xref:System.Windows.Navigation.NavigationWindow&gt;나 &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; 는</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnActivated raises the &lt;xref:System.Windows.Application.Activated&gt; event.</source>
          <target state="translated">OnActivated 발생는 &lt;xref:System.Windows.Application.Activated&gt;이벤트.&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnActivated.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnActivated를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnActivated in the base class if &lt;xref:System.Windows.Application.Activated&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnActivated 기본 클래스에 &lt;xref:System.Windows.Application.Activated&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnDeactivated raises the &lt;xref:System.Windows.Application.Deactivated&gt; event.</source>
          <target state="translated">OnDeactivated 발생는 &lt;xref:System.Windows.Application.Deactivated&gt;이벤트.&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnDeactivated.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnDeactivated를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnDeactivated in the base class if &lt;xref:System.Windows.Application.Deactivated&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnDeactivated 기본 클래스에 &lt;xref:System.Windows.Application.Deactivated&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnExit raises the &lt;xref:System.Windows.Application.Exit&gt; event.</source>
          <target state="translated">OnExit 발생는 &lt;xref:System.Windows.Application.Exit&gt;이벤트.&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override the OnExit method.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnExit 메서드를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnExit in the base class if &lt;xref:System.Windows.Application.Exit&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnExit 기본 클래스에 &lt;xref:System.Windows.Application.Exit&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnFragmentNavigation raises the &lt;xref:System.Windows.Application.FragmentNavigation&gt; event.</source>
          <target state="translated">OnFragmentNavigation 발생는 &lt;xref:System.Windows.Application.FragmentNavigation&gt;이벤트.&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnFragmentNavigation.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnFragmentNavigation를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnFragmentNavigation in the base class if &lt;xref:System.Windows.Application.FragmentNavigation&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnFragmentNavigation 기본 클래스에 &lt;xref:System.Windows.Application.FragmentNavigation&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnLoadCompleted raises the &lt;xref:System.Windows.Application.LoadCompleted&gt; event.</source>
          <target state="translated">OnLoadCompleted 발생는 &lt;xref:System.Windows.Application.LoadCompleted&gt;이벤트.&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnLoadCompleted.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnLoadCompleted를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnLoadCompleted in the base class if &lt;xref:System.Windows.Application.LoadCompleted&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnLoadCompleted 기본 클래스에 &lt;xref:System.Windows.Application.LoadCompleted&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnNavigated raises the &lt;xref:System.Windows.Application.Navigated&gt; event.</source>
          <target state="translated">OnNavigated 발생는 &lt;xref:System.Windows.Application.Navigated&gt;이벤트.&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigated.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnNavigated를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnNavigated in the base class if &lt;xref:System.Windows.Application.Navigated&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnNavigated 기본 클래스에 &lt;xref:System.Windows.Application.Navigated&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnNavigating raises the &lt;xref:System.Windows.Application.Navigating&gt; event.</source>
          <target state="translated">OnNavigating 발생는 &lt;xref:System.Windows.Application.Navigating&gt;이벤트.&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigating.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnNavigating를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnNavigating in the base class if &lt;xref:System.Windows.Application.Navigating&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnNavigating 기본 클래스에 &lt;xref:System.Windows.Application.Navigating&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnNavigationFailed raises the &lt;xref:System.Windows.Application.NavigationFailed&gt; event.</source>
          <target state="translated">OnNavigationFailed 발생는 &lt;xref:System.Windows.Application.NavigationFailed&gt;이벤트.&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationFailed.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnNavigationFailed를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnNavigationFailed in the base class if &lt;xref:System.Windows.Application.NavigationFailed&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnNavigationFailed 기본 클래스에 &lt;xref:System.Windows.Application.NavigationFailed&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnNavigationProgress raises the &lt;xref:System.Windows.Application.NavigationProgress&gt; event.</source>
          <target state="translated">OnNavigationProgress 발생는 &lt;xref:System.Windows.Application.NavigationProgress&gt;이벤트.&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationProgress.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnNavigationProgress를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must explicitly call OnNavigationProgress in the base class if &lt;xref:System.Windows.Application.NavigationProgress&gt; needs to be raised.</source>
          <target state="translated">경우 재정의 된 메서드가 기본 클래스에 명시적으로 OnNavigationProgress 호출 해야 &lt;xref:System.Windows.Application.NavigationProgress&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnNavigationStopped raises the &lt;xref:System.Windows.Application.NavigationStopped&gt; event.</source>
          <target state="translated">OnNavigationStopped 발생는 &lt;xref:System.Windows.Application.NavigationStopped&gt;이벤트.&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationStopped.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnNavigationStopped를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnNavigationStopped in the base class if &lt;xref:System.Windows.Application.NavigationStopped&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnNavigationStopped 기본 클래스에 &lt;xref:System.Windows.Application.NavigationStopped&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnSessionEnding raises the &lt;xref:System.Windows.Application.SessionEnding&gt; event.</source>
          <target state="translated">OnSessionEnding 발생는 &lt;xref:System.Windows.Application.SessionEnding&gt;이벤트.&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnSessionEnding.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnSessionEnding를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnSessionEnding in the base class if &lt;xref:System.Windows.Application.SessionEnding&gt; needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnSessionEnding 기본 클래스에 &lt;xref:System.Windows.Application.SessionEnding&gt;발생 해야 합니다.&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnStartup raises the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">OnStartup 발생는 &lt;xref:System.Windows.Application.Startup&gt;이벤트.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnStartup.</source>
          <target state="translated">파생 되는 형식을 &lt;xref:System.Windows.Application&gt;OnStartup를 재정의할 수 있습니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnStartup in the base class if the &lt;xref:System.Windows.Application.Startup&gt; event needs to be raised.</source>
          <target state="translated">재정의 된 메서드를 호출 해야 OnStartup 기본 클래스에는 &lt;xref:System.Windows.Application.Startup&gt;이벤트 발생 해야 합니다.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Gets a collection of application-scope properties.</source>
          <target state="translated">응용 프로그램 범위의 속성 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Application&gt; exposes a dictionary via Properties which you can use to store application-scope properties.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;응용 프로그램 범위의 속성을 저장 하는 데 사용할 수 있는 속성을 통해 사전을 노출 합니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to share state amongst all code in an &lt;xref:System.AppDomain&gt; in a thread-safe fashion, without the need to write your own state code.</source>
          <target state="translated">모든 코드에서 상태를 공유할 수 있습니다는 &lt;xref:System.AppDomain&gt;고유한 상태 코드를 작성할 필요 없이 스레드로부터 안전한 방식입니다.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties stored in Properties must be converted to the appropriate type returned.</source>
          <target state="translated">속성에 저장 된 속성을 반환 하는 적절 한 형식으로 변환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>TheProperties property is thread safe and is available from any thread.</source>
          <target state="translated">TheProperties 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; that contains the application-scope properties.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;응용 프로그램 범위의 속성을 포함 하는.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">가져오거나는 &lt;xref:System.Reflection.Assembly&gt;에서 팩을 제공 하는 <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> 의 리소스에 대 한는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; method.</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 리소스가 반환 되는 값으로 식별 되는 항목 어셈블리와 관련 하 여 실행 시 확인 되는 &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;메서드.&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entry assembly is the assembly that is returned by &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; and could be the following:      -   The executable assembly in the default application domain.</source>
          <target state="translated">진입 어셈블리에서 반환 되는 어셈블리는 &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;다음 될 수 있습니다.-기본 응용 프로그램 도메인에서 실행 가능한 어셈블리.&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The first assembly to be executed by calling &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt; 를 호출 하 여 실행할 첫 번째 어셈블리</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following cases, however, a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly cannot get a reference to the entry assembly:      -   An unmanaged (native) application hosts the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly.</source>
          <target state="translated">그러나 다음과 같은 경우에는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 어셈블리 항목 어셈블리에 대 한 참조를 가져올 수 없습니다:-는 (네이티브) 응용 프로그램에서 호스트를 관리 되지 않는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A managed application hosts the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly by loading it into a new application domain using a method other than &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">-관리 되는 응용 프로그램 호스트는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 이외의 메서드를 사용 하 여 새 응용 프로그램 도메인 &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt; 에 로드 하 여 어셈블리</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both of these cases, &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns <ph id="ph1">`null`</ph>, and the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly's resources cannot be resolved.</source>
          <target state="translated">이러한 경우 모두 &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;반환 <ph id="ph1">`null`</ph>, 및 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 어셈블리의 리소스를 확인할 수 없습니다.&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, ResourceAssembly can be set, once only, with a reference to the assembly that should be used to resolve resources.</source>
          <target state="translated">이러한 경우 ResourceAssembly 설정할 수 있습니다, 한 번만 리소스를 확인 하는 데 사용 해야 하는 어셈블리에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>ResourceAssembly can only be set once because it is unlikely that the resource assembly will change after the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly is loaded.</source>
          <target state="translated">ResourceAssembly 시키면 한 번의 리소스 어셈블리가 후 변경 될 가능성이 없기 때문에 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 어셈블리는 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ResourceAssembly cannot be set when a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly can discover the entry assembly—that is, when &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns a reference to an assembly rather than <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ResourceAssembly을 설정할 수 없습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 어셈블리 항목 어셈블리를 검색할 수 있습니다-즉, &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;어셈블리에 대 한 참조를 반환 하지 않고 <ph id="ph3">`null`</ph>.&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>ResourceAssembly is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ResourceAssembly는.NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">에 대 한 참조는 &lt;xref:System.Reflection.Assembly&gt;에서 팩을 제공 하는 <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> 의 리소스에 대 한는 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application has an entry assembly, or ResourceAssembly has already been set.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램에는 입력 어셈블리 또는 ResourceAssembly 이미 설정 되었습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of application-scope resources, such as styles and brushes.</source>
          <target state="translated">스타일 및 브러시 등의 응용 프로그램 범위 리소스의 컬렉션을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Resources property can be used to share resources across the windows and elements of an application.</source>
          <target state="translated">Windows 및 응용 프로그램의 요소 간에 리소스를 공유 하려면 리소스 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the Resources property is included in the resource lookup path, which is traversed in the following order:      1.</source>
          <target state="translated">또한 리소스 속성은 다음과 같은 순서로 트래버스 리소스 조회 경로에 포함: 1입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements      2.</source>
          <target state="translated">요소 2입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows      3.</source>
          <target state="translated">Windows 3입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources      4.</source>
          <target state="translated">4 리소스가 없습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>System       Consequently, <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements can bind to application-scope resources.</source>
          <target state="translated">시스템 따라서 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> 요소는 응용 프로그램 범위 리소스에 바인딩될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</source>
          <target state="translated">또한, 리소스 변경, 리소스 시스템 해당 요소 되도록 해당 리소스에 바인딩되는 속성의 변경 내용을 반영 하도록 자동으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-scope resources provide a simple way to support a consistent theme across your application.</source>
          <target state="translated">응용 프로그램 범위 리소스 응용 프로그램 전체에서 일관 된 테마를 지원 하는 간단한 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can easily create a theme in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> by using the <ph id="ph2">`Application.Resources`</ph> tag.</source>
          <target state="translated">에 테마를 쉽게 만들 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 를 사용 하 여는 <ph id="ph2">`Application.Resources`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one &lt;xref:System.Windows.ResourceDictionary&gt; instance for each theme.</source>
          <target state="translated">그러나 응용 프로그램이 많은 테마 요소를 포함할 수도 있는 여러 테마를 지원 하기 쉬울 수 있습니다 하나를 사용 하 여 관리 &lt;xref:System.Windows.ResourceDictionary&gt;각 테마에 대 한 인스턴스.&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this way, a new theme can be applied by setting the Resources property to the appropriate &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">이러한 방식으로 새 테마에 적절 한 &lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt; 리소스 속성을 설정 하 여 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two considerations to make when using Resources.</source>
          <target state="translated">리소스를 사용 하 여 때 두 가지 고려 사항이 있습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the dictionary <bpt id="p1">*</bpt>key<ept id="p1">*</ept> is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</source>
          <target state="translated">먼저, 사전 <bpt id="p1">*</bpt>키<ept id="p1">*</ept> 은 개체를 설정 하 고 (참고는 문자열을 사용 하는 경우 키가 대/소문자 구분) 속성 값을 가져올 경우 정확히 동일한 개체 인스턴스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Second, the dictionary <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is an object, so you will need to convert the value to the desired type when getting a property value.</source>
          <target state="translated">두 번째, 사전 <bpt id="p1">*</bpt>값<ept id="p1">*</ept> 개체 이므로 속성 값을 가져올 때 값을 원하는 형식으로 변환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources is thread safe and is available from any thread.</source>
          <target state="translated">리소스는 스레드로부터 안전 하며 모든 스레드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains zero or more application-scope resources.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&amp;0; 개 이상의 응용 프로그램 범위 리소스를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">시작 된 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; is called to start a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;시작 하기 위해 호출 됩니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램입니다.&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you define your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, &lt;xref:System.Windows.Application.Run%2A&gt; will be called implicitly.</source>
          <target state="translated">정의 하는 경우 프로그램 &lt;xref:System.Windows.Application&gt;태그 또는 태그 및 코드 숨김을 사용 하 여 &lt;xref:System.Windows.Application.Run%2A&gt;암시적으로 호출 됩니다.&lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you define your &lt;xref:System.Windows.Application&gt; using code, you will need to explicitly call &lt;xref:System.Windows.Application.Run%2A&gt;.</source>
          <target state="translated">그러나 &lt;xref:System.Windows.Application&gt;코드를 사용 하는 명시적으로 호출 해야 &lt;xref:System.Windows.Application.Run%2A&gt;.&lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application&gt; 정의 하는 경우</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Windows.Application.Run%2A&gt; is called, &lt;xref:System.Windows.Application&gt; attaches a new &lt;xref:System.Windows.Threading.Dispatcher&gt; instance to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">때 &lt;xref:System.Windows.Application.Run%2A&gt;를 호출할 &lt;xref:System.Windows.Application&gt;새 연결 &lt;xref:System.Windows.Threading.Dispatcher&gt;인스턴스는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 스레드.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object's &lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt; method is called, which starts a message pump to process windows messages.</source>
          <target state="translated">다음으로 &lt;xref:System.Windows.Threading.Dispatcher&gt;개체의 &lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt;windows 메시지를 처리 하는 메시지 펌프를 시작 하는 메서드 호출 됩니다.&lt;/xref:System.Windows.Threading.Dispatcher.Run%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object calls the &lt;xref:System.Windows.Application&gt; object's the &lt;xref:System.Windows.Application.OnStartup%2A&gt; method to raise the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">마지막으로 &lt;xref:System.Windows.Threading.Dispatcher&gt;호출 개체는 &lt;xref:System.Windows.Application&gt;개체의는 &lt;xref:System.Windows.Application.OnStartup%2A&gt;를 발생 시키는 메서드는 &lt;xref:System.Windows.Application.Startup&gt;이벤트.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.OnStartup%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the application execution model has been established by the time you handle &lt;xref:System.Windows.Application.Startup&gt;, at which point the application is considered to be running.</source>
          <target state="translated">따라서 응용 프로그램 실행 모델 이미 처리할 때 설정 되었으며 &lt;xref:System.Windows.Application.Startup&gt;, 이때 응용 프로그램에 실행 되 고 간주 됩니다.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application stops running when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called; the value of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property determines when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called, and whether it happens automatically or you need to explicitly call it.</source>
          <target state="translated">응용 프로그램의 경우 실행이 중지 &lt;xref:System.Windows.Application.Shutdown%2A&gt;버전이 호출 됩니다; 값은 &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;속성 시기를 결정 합니다. &lt;xref:System.Windows.Application.Shutdown%2A&gt;호출 되 고 호출 합니다. 자동으로 수행 됨 또는 명시적으로 해야 하는지 여부&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; can be called only from the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;만들어진 스레드에서만에서 호출할 수는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, &lt;xref:System.Windows.Application.Run%2A&gt; cannot be called from a <ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">또한 &lt;xref:System.Windows.Application.Run%2A&gt;에서 호출할 수 없습니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>.&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;응용 프로그램이 종료 될 때 운영 체제에 반환 되는 응용 프로그램 종료 코드.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">기본적으로 종료 코드 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Run is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">실행 브라우저에서 호스팅되는 응용 프로그램에서 호출 됩니다 (예를 들어 한 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application and opens the specified window.</source>
          <target state="translated">시작 된 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램 지정 된 창이 열립니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload extends the &lt;xref:System.Windows.Application.Run%2A&gt; method to open the specified window after an application starts running.</source>
          <target state="translated">이 오버 로드 확장는 &lt;xref:System.Windows.Application.Run%2A&gt;메서드를 실행 중인 응용 프로그램이 시작 된 후 지정 된 창을 엽니다.&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you define a code &lt;xref:System.Windows.Application&gt; that opens a window when it starts running, you explicitly call Run.</source>
          <target state="translated">코드를 정의 하는 경우 &lt;xref:System.Windows.Application&gt;하는 창을 엽니다.이 실행을 시작한 경우, 실행을 명시적으로 호출 합니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:      -   Declaratively, by setting &lt;xref:System.Windows.Application.StartupUri%2A&gt;.</source>
          <target state="translated">만들면 사용자 &lt;xref:System.Windows.Application&gt;태그 또는 태그 및 관련 코드를 사용 하 여 자동으로 창을 열 수 있습니다는 다음 방법 중 하나를 사용 하는 동안:- &lt;xref:System.Windows.Application.StartupUri%2A&gt;.&lt;/xref:System.Windows.Application.StartupUri%2A&gt; 를 설정 하 여 선언적&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Programmatically, by handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">-프로그래밍 방식으로 &lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; 처리</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that opens automatically when an application starts.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램이 시작 될 때 자동으로 열립니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;응용 프로그램이 종료 될 때 운영 체제에 반환 되는 응용 프로그램 종료 코드.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">기본적으로 종료 코드 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run*&gt; is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run*&gt;브라우저에서 호스팅되는 응용 프로그램에서 호출 됩니다 (예를 들어 한 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Occurs when the user ends the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session by logging off or shutting down the operating system.</source>
          <target state="translated">사용자가 종료 될 때 발생는 <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> 세션 로그 오프 하거나 운영 체제를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, an application shuts down when the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session ends, which occurs when a user logs off or shuts down.</source>
          <target state="translated">기본적으로 응용 프로그램이 종료 될 때는 <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> 세션을 끝낼은 사용자가 로그 오프 하거나 종료 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this happens, <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph> asks each open application to shut down.</source>
          <target state="translated">이 경우 <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph> 를 종료 하려면 각 열려 있는 응용 프로그램을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it is possible that an application may not be ready to shut down when this occurs.</source>
          <target state="translated">그러나 있기 응용 프로그램이 발생 하는 때를 종료할 준비가 되어 있지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</source>
          <target state="translated">예를 들어 응용 프로그램 또는 장기 실행 작업 중에 일관성이 없는 상태에 있는 데이터가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</source>
          <target state="translated">이러한 상황에서 세션 종료를 방지 하는 것이 바람직 수 있으며 사용자가 세션을 종료 여부를 결정 하는 옵션을 허용 하는 것이 더 효율적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can detect when a session ends by handling the SessionEnding event.</source>
          <target state="translated">SessionEnding 이벤트를 처리 하 여 세션이 끝날 때를 감지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application needs to prevent the session from ending, the &lt;xref:System.Windows.SessionEndingCancelEventArgs&gt; argument that is passed to the event handler exposes the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; that you set to <ph id="ph1">`true`</ph> (the default value is <ph id="ph2">`false`</ph>).</source>
          <target state="translated">응용 프로그램 세션 종료 하지 못하도록 해야 하는 경우는 &lt;xref:System.Windows.SessionEndingCancelEventArgs&gt;노출 하는 이벤트 처리기에 전달 되는 인수는 &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;로 설정 하는 <ph id="ph1">`true`</ph> (기본값은 <ph id="ph2">`false`</ph>).&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>If SessionEnding is unhandled, or is handled without being cancelled, &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called and the &lt;xref:System.Windows.Application.Exit&gt; event is raised.</source>
          <target state="translated">SessionEnding 처리 되지 않은 또는 취소 하지 않고 처리 되는 경우 &lt;xref:System.Windows.Application.Shutdown%2A&gt;호출 되 고 &lt;xref:System.Windows.Application.Exit&gt;이벤트가 발생 합니다.&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain more information about why the session is ending, an application can inspect &lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;, which is one of the &lt;xref:System.Windows.ReasonSessionEnding&gt; values (&lt;xref:System.Windows.ReasonSessionEnding&gt; and &lt;xref:System.Windows.ReasonSessionEnding&gt;).</source>
          <target state="translated">세션이 종료 되는 이유는 방법에 대 한 자세한 정보를 얻으려면 응용 프로그램을 검사할 수 &lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;, 중 하나인는 &lt;xref:System.Windows.ReasonSessionEnding&gt;값 (&lt;xref:System.Windows.ReasonSessionEnding&gt; 및 &lt;xref:System.Windows.ReasonSessionEnding&gt;).&lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>SessionEnding is not raised by console applications.</source>
          <target state="translated">SessionEnding 콘솔 응용 프로그램에서 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>SessionEnding is raised only on the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">만드는 스레드는에 발생 하는 SessionEnding는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>SessionEnding is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">에 대 한 끝나면 SessionEnding <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Creates a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">에 &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; 로 지정 된 위치에 대 한 쿠키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</source>
          <target state="translated">쿠키는 응용 프로그램에서 클라이언트 컴퓨터에 응용 프로그램 세션 (세션 쿠키) 중 또는 응용 프로그램 세션 (영구 쿠키) 간에 저장 될 수 있는 데이터의 일부를 임의로.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create both types of cookies by calling SetCookie.</source>
          <target state="translated">SetCookie를 호출 하 여 두 종류의 쿠키를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cookie data typically takes the form of a name/value pair in the following format:       <ph id="ph1">`Name=Value`</ph>       You pass a string of this format to SetCookie, along with the &lt;xref:System.Uri&gt; of the location for which the cookie should be set (typically, the application domain).</source>
          <target state="translated">쿠키 데이터 형식에서 이름/값 쌍 형식의 일반적으로 가집니다: <ph id="ph1">`Name=Value`</ph> SetCookie,이 형식의 문자열와 함께 전달는 &lt;xref:System.Uri&gt;쿠키를 설정 해야 하는 위치 (일반적으로 응용 프로그램 도메인).&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to SetCookie includes an expiry date.</source>
          <target state="translated">쿠키는 세션 쿠키 또는 영구 쿠키 인지 SetCookie로 전달 하는 쿠키 문자열이 만료 날짜를 포함 하는 여부에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string for a session cookie does not include an expiry date.</source>
          <target state="translated">세션 쿠키에 대 한 문자열에서 한 만료 날짜를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string for a persistent cookie does, and must be in the following format:       <ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph>       Persistent cookies are stored in the current <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> installation's Temporary Internet Files folder until they expire, in which case they are deleted.</source>
          <target state="translated">영구 쿠키의 문자열에는 다음과 같은 형식 이어야 합니다: <ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph> 영구 쿠키는 현재에서 저장 된 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> 설치의 임시 인터넷 파일 폴더 만료 될 때까지,이 경우 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</source>
          <target state="translated">만료 날짜가 과거 날짜/시간 값으로 설정 하 여 응용 프로그램에서 영구 쿠키를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">쿠키에 대 한 개요 <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>탐색 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which the cookie should be created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;쿠키를 생성 해야 하는 위치를 지정 하는.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; that contains the cookie data.</source>
          <target state="translated">&lt;xref:System.String&gt;쿠키 데이터를 포함 하.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by SetCookie) if a problem occurs when attempting to create the specified cookie.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> 에서 오류가 발생 한는 <bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수 (SetCookie 라고 함) 지정된 된 쿠키를 만들려고 할 때 문제가 발생 한 경우.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Shuts down an application.</source>
          <target state="translated">응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>When Shutdown is called, an application stops running.</source>
          <target state="translated">시스템 종료를 호출할 때 응용 프로그램 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to detect when an application is about to stop running, to perform any appropriate processing.</source>
          <target state="translated">처리할 수는 &lt;xref:System.Windows.Application.Exit&gt;응용 프로그램은 적절 한 처리를 수행 하 고, 실행이 중지 시기를 감지 하는 이벤트입니다.&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shutdown is implicitly called by <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> in the following situations:      -   When &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">종료 암시적으로 호출한 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 다음과 같은 경우:- &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;를 &lt;xref:System.Windows.ShutdownMode&gt;.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">- &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;를 &lt;xref:System.Windows.ShutdownMode&gt;.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When a user ends a session and the &lt;xref:System.Windows.Application.SessionEnding&gt; event is either unhandled, or handled without cancellation.</source>
          <target state="translated">사용자 세션을 종료 하는-및 &lt;xref:System.Windows.Application.SessionEnding&gt;이벤트, 처리 되지 않은 또는 취소 없이 처리 된.&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Shutdown explicitly causes an application to shut down, regardless of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; setting.</source>
          <target state="translated">시스템 종료를 명시적으로 호출 하면 종료 될 경우에 응용 프로그램에 관계 없이 &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;설정.&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;, you must call Shutdown to shut down an application.</source>
          <target state="translated">그러나 경우 &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;로 설정 된 &lt;xref:System.Windows.ShutdownMode&gt;, 응용 프로그램을 종료 하기 위해 종료를 호출 해야 합니다.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When Shutdown is called, the application will shut down irrespective of whether the &lt;xref:System.Windows.Window.Closing&gt; event of any open windows is canceled.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 때 종료 호출 되 면 여부에 관계 없이 응용 프로그램이 종료 됩니다는 &lt;xref:System.Windows.Window.Closing&gt;이벤트의 열려 있는 창 모두 취소 됩니다.&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Shuts down an application that returns the specified exit code to the operating system.</source>
          <target state="translated">운영 체제에 지정된 된 종료 코드를 반환 하는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to set an exit code.</source>
          <target state="translated">처리할 수는 &lt;xref:System.Windows.Application.Exit&gt;이벤트가 종료 코드를 설정 합니다.&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you explicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt;, and you handle &lt;xref:System.Windows.Application.Exit&gt; only to set an exit code, you can call Shutdown instead.</source>
          <target state="translated">그러나 명시적으로 호출 &lt;xref:System.Windows.Application.Shutdown%2A&gt;, 처리할 &lt;xref:System.Windows.Application.Exit&gt;설정에서 종료 코드를 호출 하면 종료 대신만.&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An integer exit code for an application.</source>
          <target state="translated">응용 프로그램에 대 한 정수 종료 코드입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The default exit code is 0.</source>
          <target state="translated">기본 종료 코드가 0입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Gets or sets the condition that causes the &lt;xref:System.Windows.Application.Shutdown*&gt; method to be called.</source>
          <target state="translated">원인이 되는 조건을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Application.Shutdown*&gt;호출 될 메서드입니다.&lt;/xref:System.Windows.Application.Shutdown*&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications stop running only when the &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the Application is called.</source>
          <target state="translated">응용 프로그램의 경우에만 실행이 중지 된 &lt;xref:System.Windows.Application.Shutdown%2A&gt;응용 프로그램의 메서드가 호출 됩니다.&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shut down can occur implicitly or explicitly, as specified by the value of the ShutdownMode property.</source>
          <target state="translated">시스템 종료 되었으면 ShutdownMode 속성의 값에 지정 된 대로 명시적으로 또는 암시적으로 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set ShutdownMode to &lt;xref:System.Windows.ShutdownMode&gt;, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> implicitly calls &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the last window in an application closes, even if any currently instantiated windows are set as the main window (see &lt;xref:System.Windows.Application.MainWindow%2A&gt;).</source>
          <target state="translated">되었으면 ShutdownMode를 설정한 경우 &lt;xref:System.Windows.ShutdownMode&gt;, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 암시적으로 호출 &lt;xref:System.Windows.Application.Shutdown%2A&gt;응용 프로그램의 마지막 창의 닫을 때, 현재 인스턴스화된 창이 주 창으로 설정 된 경우에 (참조 &lt;xref:System.Windows.Application.MainWindow%2A&gt;).&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ShutdownMode of &lt;xref:System.Windows.ShutdownMode&gt; causes <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>to implicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the &lt;xref:System.Windows.Application.MainWindow%2A&gt; closes, even if other windows are currently open.</source>
          <target state="translated">되었으면 ShutdownMode &lt;xref:System.Windows.ShutdownMode&gt;하면 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>암시적으로 호출 하려면 &lt;xref:System.Windows.Application.Shutdown%2A&gt;때는 &lt;xref:System.Windows.Application.MainWindow%2A&gt;다른 창이 현재 열려 있는 경우에 닫힙니다.&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</source>
          <target state="translated">일부 응용 프로그램의 수명 때 주 창 또는 마지막 창이 닫혀 또는 데이터에 종속 되지 않을 수 있습니다 windows에 종속 전혀 아닐 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>For these scenarios you need to set the ShutdownMode property to &lt;xref:System.Windows.ShutdownMode&gt;, which requires an explicit &lt;xref:System.Windows.Application.Shutdown%2A&gt; method call to stop the application.</source>
          <target state="translated">이러한 시나리오에 대 한 되었으면 ShutdownMode 속성을 설정 해야 &lt;xref:System.Windows.ShutdownMode&gt;, 명시적 필요 &lt;xref:System.Windows.Application.Shutdown%2A&gt;메서드를 호출 하는 응용 프로그램을 중지 합니다.&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the application continues running in the background.</source>
          <target state="translated">그렇지 않으면 응용 프로그램이 백그라운드에서 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>ShutdownMode can be configured declaratively from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> or programmatically from code.</source>
          <target state="translated">되었으면 ShutdownMode를 선언적으로 구성할 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> 또는 코드에서 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">이 속성은 작성 된 스레드에서 에서만 사용할 수는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Windows.Application.Run*&gt; method of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is called.</source>
          <target state="translated">발생 경우는 &lt;xref:System.Windows.Application.Run*&gt;의 메서드는 <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 호출 합니다.&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application may perform a variety of initialization tasks when it starts up, including:      -   Processing command-line parameters.</source>
          <target state="translated">일반적인 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 응용 프로그램은 시작 시를 포함 하 여 다양 한 초기화 작업을 수행할 수 있습니다.-명령줄 매개 변수를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Opening the main window.</source>
          <target state="translated">-주 창 열기</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Initializing application-scope resources.</source>
          <target state="translated">응용 프로그램 범위 리소스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Initializing application-scope properties.</source>
          <target state="translated">-응용 프로그램 범위의 속성을 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can declaratively specify the main window and application-scope resources using <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> (&lt;xref:System.Windows.Application.StartupUri%2A&gt; and &lt;xref:System.Windows.Application.Resources%2A&gt;, respectively).</source>
          <target state="translated">주 창 및 사용 하 여 응용 프로그램 범위 리소스를 선언적으로 지정할 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> (&lt;xref:System.Windows.Application.StartupUri%2A&gt; 및 &lt;xref:System.Windows.Application.Resources%2A&gt;각각).&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</source>
          <target state="translated">그러나 경우에 따라 리소스 또는 응용 프로그램의 주 창 수만 결정 되는 프로그래밍 방식으로 런타임에 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, application-scope properties and command-line parameters can only be used programmatically.</source>
          <target state="translated">또한 응용 프로그램 범위의 속성 및 명령줄 매개 변수 에서만 사용할 수 있습니다 프로그래밍 방식으로.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Programmatic initialization can be performed by handling the Startup event, including the following:      -   Acquire and process command-line parameters, which are available from the &lt;xref:System.Windows.StartupEventArgs.Args%2A&gt; property of the &lt;xref:System.Windows.StartupEventArgs&gt; class that is passed to the Startup event handler.</source>
          <target state="translated">다음을 포함 한 시작 이벤트를 처리 하 여 프로그래밍 방식으로 초기화를 수행할 수:-가져오고에서 사용할 수 있는 명령줄 매개 변수를 처리는 &lt;xref:System.Windows.StartupEventArgs.Args%2A&gt;의 속성은 &lt;xref:System.Windows.StartupEventArgs&gt;Startup 이벤트 처리기에 전달 되는 클래스입니다.&lt;/xref:System.Windows.StartupEventArgs&gt; &lt;/xref:System.Windows.StartupEventArgs.Args%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Initialize application-scope resources by using the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">-사용 하 여 응용 프로그램 범위 리소스를 초기화 합니다.는 &lt;xref:System.Windows.Application.Resources%2A&gt;속성.&lt;/xref:System.Windows.Application.Resources%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Initialize application-scope properties by using the &lt;xref:System.Windows.Application.Properties%2A&gt; property.</source>
          <target state="translated">-를 사용 하 여 응용 프로그램 범위의 속성을 초기화 합니다.는 &lt;xref:System.Windows.Application.Properties%2A&gt;속성.&lt;/xref:System.Windows.Application.Properties%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Instantiate and show one (or more) windows.</source>
          <target state="translated">-인스턴스화하고 (일부) 창을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Command-line parameters can also be acquired by calling the static &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; method of the &lt;xref:System.Environment&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 정적을 호출 하 여 명령줄 매개 변수를 가져올 수도 있습니다 &lt;xref:System.Environment.GetCommandLineArgs%2A&gt;의 메서드는 &lt;xref:System.Environment&gt;개체입니다.&lt;/xref:System.Environment&gt; &lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; requires full trust to execute.</source>
          <target state="translated">그러나 &lt;xref:System.Environment.GetCommandLineArgs%2A&gt;실행 되려면 완전 신뢰가 필요 합니다.&lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set &lt;xref:System.Windows.Application.StartupUri%2A&gt; using <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>, the main window that is created is not available from either the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property or the &lt;xref:System.Windows.Application.Windows%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object until after the Startup event is processed.</source>
          <target state="translated">설정 하는 경우 &lt;xref:System.Windows.Application.StartupUri%2A&gt;를 사용 하 여 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>, 만든 주 창에서 사용할 수 없는 &lt;xref:System.Windows.Application.MainWindow%2A&gt;속성 또는 &lt;xref:System.Windows.Application.Windows%2A&gt;속성의는 &lt;xref:System.Windows.Application&gt;시작 이벤트를 처리 한 후 될 때까지 개체.&lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need access to the main window during startup, you need to manually create a new window object from your Startup event handler.</source>
          <target state="translated">시작 하는 동안 주 창에 대 한 액세스를 해야 할 경우 Startup 이벤트 처리기에서 새 창 개체를 수동으로 만들 해야 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your application uses &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; to specify a credential policy, you need to set &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; after Startup is raised; otherwise, <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> sets it to a default internal policy directly after the Startup event has been raised.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 응용 프로그램을 사용 하는 경우 &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;자격 증명 정책을 지정 하려면 설정 해야 &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;시작이 고, 그렇지 않으면 발생 한 후 <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> 설정 된 기본 내부 정책에 직접 시작 이벤트가 발생 한 후.&lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; &lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command-line arguments that are passed to the Startup event handler are not the same as the <ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph> query string parameters that are passed to an <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">Startup 이벤트 처리기에 전달 되는 명령줄 인수가와 동일 하지 않습니다는 <ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph> 쿼리에 전달 되는 문자열 매개 변수는 <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that is automatically shown when an application starts.</source>
          <target state="translated">가져오거나는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램이 시작 될 때 자동으로 표시 되는 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use StartupUri to automatically load a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource when an application starts.</source>
          <target state="translated">StartupUri을 사용 하 여 자동으로 로드 한 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 리소스 응용 프로그램이 시작 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the types of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the StartupUri.</source>
          <target state="translated">다음 표에서 유형의 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 로드할 수 있는 리소스, 열리는 창 유형 및 이러한 리소스 StartupUri로 설정할 수 있는 응용 프로그램 종류입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Type|Window|Application type|   |----------|------------|----------------------|   |&lt;xref:System.Windows.Window&gt;|&lt;xref:System.Windows.Window&gt;|Standalone only|   |&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone only|   |&lt;xref:System.Windows.Controls.Page&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Controls.UserControl&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Documents.FlowDocument&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Navigation.PageFunction%601&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|       Typically, you set the StartupUri property declaratively in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">| 형식 | 창 | 응용 프로그램 종류 |   |----------|------------|----------------------|   | &lt;xref:System.Windows.Window&gt;| &lt;xref:System.Windows.Window&gt;| 독립 실행형만 |   | &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| 독립 실행형만 |   | &lt;xref:System.Windows.Controls.Page&gt;| &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| 독립 실행형/브라우저에서 호스팅되 |   | &lt;xref:System.Windows.Controls.UserControl&gt;| &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| 독립 실행형/브라우저에서 호스팅되 |   | &lt;xref:System.Windows.Documents.FlowDocument&gt;| &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| 독립 실행형/브라우저에서 호스팅되 |   | &lt;xref:System.Windows.Navigation.PageFunction%601&gt;| &lt;xref:System.Windows.Navigation.NavigationWindow&gt;| 독립 실행형/브라우저에서 호스팅되 |       일반적으로 속성을 설정 하면 StartupUri에 선언적으로 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.PageFunction%601&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Documents.FlowDocument&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.UserControl&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can set StartupUri programmatically, such as from a &lt;xref:System.Windows.Application.Startup&gt; event handler, which is useful if for applications that can only load the necessary <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources at run time.</source>
          <target state="translated">그러나 StartupUri를 프로그래밍 방식으로 설정할 수으로 &lt;xref:System.Windows.Application.Startup&gt;필요한을 로드 하는 응용 프로그램에 있는 경우에 이벤트 처리기 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 런타임 시 리소스.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application might wait until run time to load its resources if the name of the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is stored in a configuration file.</source>
          <target state="translated">예를 들어 응용 프로그램 수를 기다릴 경우 해당 리소스를 로드 하의 이름을 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 리소스 구성 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you set StartupUri declaratively or programmatically, the corresponding <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is not loaded until after the &lt;xref:System.Windows.Application.Startup&gt; event is handled.</source>
          <target state="translated">StartupUri를 선언적으로 설정 하는지 여부 또는 해당 프로그래밍 방식으로 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 될 때까지 리소스 로드 되지 않은 후는 &lt;xref:System.Windows.Application.Startup&gt;이벤트를 처리 합니다.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you won't have access to the resulting window from either the &lt;xref:System.Windows.Application.Windows%2A&gt; property or the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property when handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">따라서 액세스할 수 없습니다 결과 창에 중 하 나와는 &lt;xref:System.Windows.Application.Windows%2A&gt;속성 또는 &lt;xref:System.Windows.Application.MainWindow%2A&gt;속성 &lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; 를 처리 하는 경우&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that refers to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that automatically opens when an application starts.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;참조 하는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 응용 프로그램이 시작 될 때 자동으로 열립니다.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>StartupUri is set with a value of null.</source>
          <target state="translated">StartupUri는 null 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified ambient property is available in the current scope.</source>
          <target state="translated">현재 범위에서 지정된 된 앰비언트 속성을 사용할 수 있는지 여부에 대 한 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Application&gt; instance is cast to an &lt;xref:System.Windows.Markup.IQueryAmbient&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Windows.Application&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Windows.Markup.IQueryAmbient&gt;인터페이스.&lt;/xref:System.Windows.Markup.IQueryAmbient&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The name of the requested ambient property.</source>
          <target state="translated">요청된 된 앰비언트 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested ambient property is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요청 된 앰비언트 속성을 사용할 수 있습니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Searches for the specified resource.</source>
          <target state="translated">지정된 된 리소스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>TryFindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 TryFindResource 먼저 보입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">응용 프로그램 범위 리소스 관리 &lt;xref:System.Windows.Application&gt;에서 노출 하 고는 &lt;xref:System.Windows.Application.Resources%2A&gt;속성.&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified resource is not found in the set of application-scope resources, TryFindResource then next searches the system resources.</source>
          <target state="translated">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 TryFindResource 그런 다음 다음 검색 시스템 리소스입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">노출 된 &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, 및 &lt;xref:System.Windows.SystemParameters&gt;형식을 각각 정적 속성으로.&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use TryFindResource to acquire them, these types also expose resource key properties that are designed to be passed to TryFindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">TryFindResource을 얻으려고를 사용 하려면 이러한 형식은 속성을 노출 리소스 키 TryFindResource;를 전달 하도록 디자인 된 예를 들어 &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because TryFindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">TryFindResource 개체를 반환 하므로 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">찾을 리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">요청 된 리소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a null reference is returned.</source>
          <target state="translated">요청된 된 항목이 없을 경우 null 참조가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Gets the instantiated windows in an application.</source>
          <target state="translated">응용 프로그램의 인스턴스화된 창을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically added to Windows as soon as a window is instantiated on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread; windows that are created by worker threads are not added.</source>
          <target state="translated">A &lt;xref:System.Windows.Window&gt;참조가 창이 인스턴스화됩니다 되는 즉시 자동으로 Windows에 추가 됩니다는 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> 스레드; windows 스레드는 추가 작업자에 의해 만들어진.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically removed after its &lt;xref:System.Windows.Window.Closing&gt; event has been handled and before its &lt;xref:System.Windows.Window.Closed&gt; event is raised.</source>
          <target state="translated">A &lt;xref:System.Windows.Window&gt;참조 한 후 자동으로 제거 됩니다 해당 &lt;xref:System.Windows.Window.Closing&gt;이벤트를 처리 하기 전에 해당 &lt;xref:System.Windows.Window.Closed&gt;이벤트가 발생 합니다.&lt;/xref:System.Windows.Window.Closed&gt; &lt;/xref:System.Windows.Window.Closing&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the first item added to the Windows property becomes the &lt;xref:System.Windows.Application.MainWindow%2A&gt;.</source>
          <target state="translated">기본적으로 Windows 속성에 추가 된 첫 번째 항목이 됩니다 &lt;xref:System.Windows.Application.MainWindow%2A&gt;.&lt;/xref:System.Windows.Application.MainWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">이 속성은 작성 된 스레드에서 에서만 사용할 수는 &lt;xref:System.Windows.Application&gt;개체입니다.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains references to all window objects in the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재의 모든 창 개체에 대 한 참조를 포함 하는 <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>