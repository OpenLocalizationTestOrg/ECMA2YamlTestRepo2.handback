<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">604c597dce3808ae8224132a164ed09ec4040cd3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._MethodInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78f0a936fcb95fa9b62bda6c4b4e5ffd849f57cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae9b5b8d5074801c427afe36bd1d318699322cc4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">public 멤버를 노출는 <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 비관리 코드에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 인터페이스는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">vtable 순서를 유지 하는이 인터페이스는 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;클래스 관리 되지 않는 COM 개체에서 액세스할 수 있는 멤버.&lt;/xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Attributes*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.Attributes*&gt;속성.&lt;/xref:System.Reflection.MethodBase.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt; property gets the attributes associated with this method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;속성이이 메서드와 연결 된 특성을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodAttributes&gt; values.</source>
          <target state="translated">중 하나는 &lt;xref:System.Reflection.MethodAttributes&gt;값.&lt;/xref:System.Reflection.MethodAttributes&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt;속성.&lt;/xref:System.Reflection.MethodBase.CallingConvention*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt; property gets a value indicating the calling conventions for this method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;속성이이 메서드에 대 한 호출 규칙을 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.CallingConventions&gt; values.</source>
          <target state="translated">중 하나는 &lt;xref:System.Reflection.CallingConventions&gt;값.&lt;/xref:System.Reflection.CallingConventions&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;이 멤버를 선언 하는 클래스 속성을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the class that declares this member.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 멤버를 선언 하는 클래스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.Equals*&gt;메서드.&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;메서드 확인 여부를 지정 된 &lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 같은지&lt;/xref:System.Object&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 와 비교할 개체&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 지정 된 &lt;xref:System.Object&gt;현재 같은지 &lt;xref:System.Object&gt;, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodInfo.GetBaseDefinition*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodInfo.GetBaseDefinition*&gt;메서드.&lt;/xref:System.Reflection.MethodInfo.GetBaseDefinition*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodInfo.GetBaseDefinition%2A&gt; method returns the &lt;xref:System.Reflection.MethodInfo&gt; object for the method on the direct or indirect base class in which the method represented by this instance was first declared.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo.GetBaseDefinition%2A&gt;메서드가 반환 되는 &lt;xref:System.Reflection.MethodInfo&gt;선언 된이 인스턴스가 나타내는 메서드가 처음 직접 또는 간접 기본 클래스 메서드에 대 한 개체입니다.&lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Reflection.MethodInfo.GetBaseDefinition%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object for the first implementation of this method.</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodInfo&gt;이 메서드의 첫 번째 구현에 대 한 개체입니다.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;메서드 모든 사용자 지정 특성을 포함 하는 배열을 반환 합니다.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</source>
          <target state="translated">모든 사용자 지정 특성을 포함 하는 배열 또는 정의 된 특성이 없는 경우 (0) 요소가 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;메서드는 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 으로 식별 된 사용자 지정 특성의 배열을 반환합니다 합니다.&lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">이 형식에 할당할 수 있는 특성만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">이 멤버에 적용 하는 사용자 지정 특성의 배열 또는 특성이 적용 된 경우 (0) 요소의 개수가&amp;0; 인 배열.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.GetHashCode*&gt;메서드.&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;메서드는 특정 형식에 대 한 해시 함수 역할을 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;해시 알고리즘 및 데이터 해시 테이블 같은 구조에 적합 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">현재 인스턴스에 대 한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">이름 집합을 해당 디스패치 식별자 집합에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An array of names to be mapped.</source>
          <target state="translated">매핑할 이름의 배열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The count of the names to be mapped.</source>
          <target state="translated">매핑할 이름의 수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">이름을 해석할 로캘 컨텍스트.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
          <target state="translated">이름에 해당 하는 식별자를 받는 호출자가 할당 한 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;메서드.&lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt; member returns the &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;멤버를 반환 하는 &lt;xref:System.Reflection.MethodImplAttributes&gt;플래그.&lt;/xref:System.Reflection.MethodImplAttributes&gt; &lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodImplAttributes&gt; values.</source>
          <target state="translated">중 하나는 &lt;xref:System.Reflection.MethodImplAttributes&gt;값.&lt;/xref:System.Reflection.MethodImplAttributes&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetParameters*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.GetParameters*&gt;메서드.&lt;/xref:System.Reflection.MethodBase.GetParameters*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt; method gets the parameters of the specified method or constructor.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;메서드는 지정 된 메서드 또는 생성자의 매개 변수를 가져옵니다.&lt;/xref:System.Reflection.MethodBase.GetParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing information that matches the signature of the method (or constructor) reflected by this instance.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Reflection.ParameterInfo&gt;메서드 (또는 생성자)의 시그니처와 일치 하는 정보가 들어 있는이 인스턴스에 의해 리플렉션된.&lt;/xref:System.Reflection.ParameterInfo&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Type.GetType*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Type.GetType*&gt;메서드.&lt;/xref:System.Type.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Type.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">&lt;xref:System.Type.GetType%2A&gt;메서드는 현재 인스턴스의 형식을 가져옵니다.&lt;/xref:System.Type.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A &lt;xref:System.Type&gt;개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">인터페이스에 대 한 형식 정보를 가져오는 데 사용할 수 있는 개체에 대 한 형식 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">반환할 형식 정보입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">형식 정보에 대 한 로캘 식별자입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A pointer to the requested type information object.</source>
          <target state="translated">요청 된 형식 정보 개체에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">개체 (0 또는 1)를 제공 하는 형식 정보 인터페이스의 수를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">이 메서드가 반환 될 때 개체에서 제공 하는 형식 정보 인터페이스의 수를 받는 위치에 대 한 포인터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.Invoke*&gt;메서드.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the method or constructor represented by this object, using the specified parameters.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;메서드 또는 생성자를 지정된 된 매개 변수를 사용 하 여이 개체가 나타내는 메서드를 호출 합니다.&lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">이 메서드를 만든 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An argument list for the invoked method or constructor.</source>
          <target state="translated">호출 된 메서드 또는 생성자는 인수 목록입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</source>
          <target state="translated">이것이 메서드 또는 실행 될 생성자의 매개 변수와 동일한 번호, 순서 및 형식을 사용 하 여 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If there are no parameters, <ph id="ph1">`parameters`</ph> should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">매개 변수가 없으면 경우 <ph id="ph1">`parameters`</ph> 해야 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the method or constructor represented by this instance takes a <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</source>
          <target state="translated">이 인스턴스를 사용 하는 메서드 또는 생성자로 표시 하는 경우는 <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 매개 변수 (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual basic에서), 특수 특성이 메서드 또는이 함수를 사용 하 여 생성자를 호출 하려면 해당 매개 변수에 대해 필요 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">값이 명시적으로 초기화 되지 않은이 배열에 있는 개체에 해당 개체 유형에 대 한 기본 값이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For reference type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">참조 형식 요소의 경우이 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For value type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">값 형식 요소의 경우이 값은 0, 0.0 또는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>특정 요소 형식에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">생성자와 관련 된 클래스의 인스턴스.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.Invoke*&gt;메서드.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; object with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt; object.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;이 리플렉션된 생성자를 호출 하는 메서드 &lt;xref:System.Reflection.ConstructorInfo&gt;는 지정 된 제약 조건 하에서 지정 된 인수를 가진 개체가 &lt;xref:System.Reflection.Binder&gt;개체입니다.&lt;/xref:System.Reflection.Binder&gt; &lt;/xref:System.Reflection.ConstructorInfo&gt; &lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">이 메서드를 만든 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩 형식을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성 집합을 정의 하 고 바인딩, 인수 형식의 강제 변환 및 멤버 리플렉션을 사용 하 여 호출 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">형식의 배열 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 수, 순서 및이 생성자의 제약 조건에 대 한 매개 변수의 형식이 일치 하는 데 사용 <ph id="ph1">`binder`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in <ph id="ph1">`Object[] parameters = new Object[0]`</ph>.</source>
          <target state="translated">이 생성자에 매개 변수가 필요 하지 않으면 하는 경우에서 같이 요소 개수가&amp;0; 인 배열을 전달 <ph id="ph1">`Object[] parameters = new Object[0]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">값이 명시적으로 초기화 되지 않은이 배열에 있는 개체에 해당 개체 유형에 대 한 기본 값이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For reference type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">참조 형식 요소의 경우이 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For value type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">값 형식 요소의 경우이 값은 0, 0.0 또는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>특정 요소 형식에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; object used to govern the coercion of types.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;형식의 강제 변환을 제어 하는 데 사용 되는 개체입니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">이것이 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;현재 스레드가 사용 됩니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">생성자와 관련 된 클래스의 인스턴스.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">개체에서 노출 하는 메서드와 속성에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::Invoke`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An identifier for the member.</source>
          <target state="translated">멤버에 대 한 식별자입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">인수를 해석할 로캘 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">호출의 컨텍스트를 설명 하는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">인수의 배열, 명명 된 인수 및 배열에 있는 요소 수에 대 한 수에 대 한 인수 Dispid의 배열에 포함 된 구조체에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A pointer to the location where the result will be stored.</source>
          <target state="translated">결과 저장할 위치에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">예외 정보를 포함 하는 구조에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">오류가 있는 첫 번째 인수의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsAbstract*&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt; property gets a value indicating whether the method is abstract.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;속성 메서드가 추상 인지를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is abstract; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메서드가 추상; 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt; property gets a value indicating whether this method can be called by other classes in the same assembly</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;속성 동일한 어셈블리의 다른 클래스에서이 메서드를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다&lt;/xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method can be called by other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>동일한 어셈블리의 다른 클래스에서이 메서드를 호출할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsConstructor*&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt; property gets a value indicating whether the method is a constructor.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;속성 메서드는 생성자 인지를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is a constructor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드는 생성자; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; member indicates whether one or more instances of the <ph id="ph1">`attributeType`</ph> parameter are applied to this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;멤버를 나타냅니다 여부의 하나 이상의 인스턴스는 <ph id="ph1">`attributeType`</ph> 매개 변수는이 멤버에 적용 됩니다.&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which the custom attributes are applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 사용자 지정 특성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instance of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> parameter is applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하나 또는 더 많은 인스턴스의 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수는이 멤버에 적용 되 고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamily*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsFamily*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsFamily*&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt; property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;속성 클래스의 멤버와 해당 파생된 클래스의 멤버에만이 메서드에 액세스할 수 있는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsFamily%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>클래스에 대 한 액세스; 파생된 된 클래스의 멤버와 클래스 자체의 멤버로 제한 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;속성이이 메서드는 클래스 자체의 멤버만 호출할 수 있습니다 및 동일한 어셈블리에 있는 경우 파생 클래스 여부를 나타내는 값을 가져옵니다&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드에 대 한 액세스가 동일한 어셈블리;에 있는 파생 된 클래스의 멤버 및 멤버 클래스 자체의 제한 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;속성 어디에 있든와 동일한 어셈블리의 모든 클래스에서 파생된 클래스에서이 메서드를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드에 대 한 액세스가 클래스 자체의 멤버로 제한 이면 멤버의 파생 클래스는 아무 곳에 나 되 고 동일한 어셈블리의 다른 클래스의 멤버 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFinal*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsFinal*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsFinal*&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt; property gets a value indicating whether this method is <ph id="ph1">`final`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;속성이이 메서드는 지 여부를 나타내는 값을 가져옵니다 <ph id="ph1">`final`</ph>.&lt;/xref:System.Reflection.MethodBase.IsFinal%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드가 <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsHideBySig*&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt; property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;속성 파생된 클래스에서 동일한 시그니처가 있는 동일한 이름의 멤버만 숨겨져 있는지 여부를 나타내는 값을 가져옵니다&lt;/xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is hidden by signature; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>멤버 시그니처로 숨김 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsPrivate*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt; property gets a value indicating whether this member is private.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;속성이이 구성원 전용인 지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to other members of the class itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드에 액세스 하려면 자체; 클래스의 다른 멤버를 제한 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPublic*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsPublic*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsPublic*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt; property gets a value indicating whether this method is public.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;속성이이 메서드가 공용 인지를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is public; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드는 공용; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt; property gets a value indicating whether this method has a special name.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;속성이이 메서드 이름이 특수 한지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method has a special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드 이름이 특별 한 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsStatic*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsStatic*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsStatic*&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`static`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;속성 메서드가 인지를 나타내는 값을 가져옵니다 <ph id="ph1">`static`</ph>.&lt;/xref:System.Reflection.MethodBase.IsStatic%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드가 <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt;속성.&lt;/xref:System.Reflection.MethodBase.IsVirtual*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`virtual`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;속성 메서드가 인지를 나타내는 값을 가져옵니다 <ph id="ph1">`virtual`</ph>.&lt;/xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 메서드가 <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.MemberType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.MemberType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating the type of the member — method, constructor, event, and so on.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;속성 get는 &lt;xref:System.Reflection.MemberTypes&gt;멤버의 유형을 나타내는 값-메서드, 생성자, 이벤트, 등에.&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.MemberInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating the type of member.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 멤버의 유형을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt;속성.&lt;/xref:System.Reflection.MethodBase.MethodHandle*&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt; property gets a handle to the internal metadata representation of a method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;속성 메서드의 내부 메타 데이터 표현에 대 한 핸들을 가져옵니다.&lt;/xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.RuntimeMethodHandle&gt; object.</source>
          <target state="translated">A &lt;xref:System.RuntimeMethodHandle&gt;개체입니다.&lt;/xref:System.RuntimeMethodHandle&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.Name*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;속성의 현재 멤버의 이름을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object containing the name of this member.</source>
          <target state="translated">A &lt;xref:System.String&gt;이 멤버의 이름을 포함 하는 개체입니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this <ph id="ph1">`MemberInfo`</ph> object.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;속성이를 얻는 데 사용 된 클래스 개체를 가져옵니다 <ph id="ph1">`MemberInfo`</ph> 개체입니다.&lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that was used to obtain this <bpt id="p2">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 얻는 데 사용 된 개체 <bpt id="p2">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodInfo.ReturnType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodInfo.ReturnType*&gt;속성.&lt;/xref:System.Reflection.MethodInfo.ReturnType*&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodInfo.ReturnType%2A&gt; property gets the return type of this method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo.ReturnType%2A&gt;속성에는이 메서드의 반환 형식을 가져옵니다.&lt;/xref:System.Reflection.MethodInfo.ReturnType%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The return type of this method.</source>
          <target state="translated">이 메서드의 반환 형식입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*&gt;속성.&lt;/xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A&gt; property gets the custom attributes for the return type.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A&gt;속성 반환 형식에 대 한 사용자 지정 특성을 가져옵니다.&lt;/xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the custom attributes for the return type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 반환 형식에 대 한 사용자 지정 특성을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.ToString*&gt;메서드.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 를 나타내는 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>