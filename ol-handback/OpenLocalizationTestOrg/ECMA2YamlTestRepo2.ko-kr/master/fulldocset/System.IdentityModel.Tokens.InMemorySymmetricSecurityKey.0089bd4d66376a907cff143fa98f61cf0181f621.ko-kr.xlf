<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f05d409b8397d1076bcc9c0f7ce4eeda2e3165c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be3ae5111660ed0b43b5abbf928f94eb61ecb8df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db1e756c8c4e1dc9f7015eafc50b3f33cc2a8e61</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</source>
          <target state="translated">대칭 알고리즘을 사용 하 여 생성 되 고 로컬 컴퓨터의 메모리에만 저장 되는 키를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this class is only used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">일반적으로이 클래스는 대칭 키를 사용 하 여 XML을 변형 하는 인프라에서만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified symmetric key.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 대칭 키를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the symmetric key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;대칭 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph>길이가&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified symmetric key and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 대칭 키 및 이진 데이터가 복제 되어야 하는지 여부를 나타내는 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the symmetric key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;대칭 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone the array passed into the <ph id="ph1">`symmetricKey`</ph> parameter; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>로 전달 된 배열을 복제 하려면는 <ph id="ph1">`symmetricKey`</ph> 매개 변수, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;symmetricKey&lt;/code&gt;</ph>길이가&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Decrypts the specified encrypted key.</source>
          <target state="translated">지정한 암호화 된 키를 해독합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the static fields of the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">정적 필드를 사용 하 여는 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;알고리즘을 지정 하려면 클래스.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm that was used to encrypt the key.</source>
          <target state="translated">키를 암호화 하는 데 사용 된 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the encrypted key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;암호화 된 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the decrypted key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;암호 해독 된 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Encrypts the specified key.</source>
          <target state="translated">지정된 된 키를 암호화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the static fields of the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">정적 필드를 사용 하 여는 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;알고리즘을 지정 하려면 클래스.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm to encrypt the key with.</source>
          <target state="translated">사용 하 여 키를 암호화 하는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the encrypted key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;암호화 된 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">현재 키에 대 한 지정 된 암호화 알고리즘 및 매개 변수를 사용 하 여 파생된 키를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt; field.</source>
          <target state="translated">P-sha1 암호화 알고리즘을 지정 하려면 사용 된 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;필드.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">파생된 키를 생성 하는 데 사용할 암호화 알고리즘을 나타내는 URI입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;암호화 알고리즘에 대 한 레이블 매개 변수를 포함 하는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that is used to create a derived key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;파생된 키를 만드는 데 사용 되는 nonce를 포함 하는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">파생된 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">이때 파생된 키가이 메서드에서 반환 되는 바이트 배열에 있는 위치입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the derived key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;파생된 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The supported algorithms is <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지원 되는 알고리즘은 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">암호화 지정된 된 암호화 알고리즘을 사용 하 여 텍스트를 해독 하는 변형 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the fields that represent decryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">해독 알고리즘을 나타내는 필드를 사용 하 여는 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;알고리즘을 지정 하려면 클래스.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">암호화 된 XML을와 같은 암호화 텍스트를 해독 하는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;초기화 벡터를 포함 하는 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 지정된 된 알고리즘에 대 한.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the decryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 해독 변환을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">지정된 된 암호화 알고리즘을 사용 하 여 XML을 암호화 하는 변환을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the fields that represent encryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">암호화 알고리즘을 나타내는 필드를 사용 하 여는 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;알고리즘을 지정 하려면 클래스.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">XML을 암호화 하는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;초기화 벡터를 포함 하는 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 지정된 된 알고리즘에 대 한.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the encryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 암호화 변환을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">초기화 벡터의 비트에서 크기를 가져옵니다 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 지정된 된 암호화 알고리즘에 필요한 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the fields that represent encryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">암호화 알고리즘을 나타내는 필드를 사용 하 여는 &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;알고리즘을 지정 하려면 클래스.&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm to get the size of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">암호화 알고리즘을 초기화 벡터 크기를 가져옵니다 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the cryptographic algorithm specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">초기화 벡터의 비트에서 크기 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)에 지정 된 암호화 알고리즘에 필요한는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">algorithm</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">지정 된 키 지정된 해시 알고리즘의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">인스턴스를 가져올 키 지정된 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the keyed hash algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 키 지정된 해시 알고리즘을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The supported algorithms is <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지원 되는 알고리즘은 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">지정된 된 대칭 알고리즘의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">인스턴스를 가져올 대칭 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the symmetric algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대칭 알고리즘을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph>지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>,  <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, and <bpt id="p8">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept></source>
          <target state="translated">The supported algorithms are <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>,  <bpt id="p4">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, and<bpt id="p8">&lt;xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the bytes that represent the symmetric key.</source>
          <target state="translated">대칭 키를 나타내는 바이트 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the symmetric key.</source>
          <target state="translated">배열을 &lt;xref:System.Byte&gt;대칭 키가 들어 있는.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</source>
          <target state="translated">지정된 된 알고리즘에서 비대칭 키를 사용 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm.</source>
          <target state="translated">암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the specified algorithm uses asymmetric keys; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 알고리즘은 비대칭 키를 사용 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified algorithm is supported by this class.</source>
          <target state="translated">지정 된 알고리즘이이 클래스에서 지원 되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symmetric algorithms that are supported by this class are the algorithms represented by the following fields:      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption&gt;      -   &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap&gt;</source>
          <target state="translated">이 클래스에서 지원 되는 대칭 알고리즘에는 다음 필드가 나타내는 알고리즘입니다.- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption&gt;- &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm.</source>
          <target state="translated">암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the specified algorithm is supported by this class; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 알고리즘은이 클래스;에서 지원 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified algorithm uses symmetric keys.</source>
          <target state="translated">지정된 된 알고리즘에서 대칭 키를 사용 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm.</source>
          <target state="translated">암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the specified algorithm uses symmetric keys; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 알고리즘은 대칭 키를 사용 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the size, in bits, of the key.</source>
          <target state="translated">비트 키의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the key.</source>
          <target state="translated">비트 키의 크기입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>