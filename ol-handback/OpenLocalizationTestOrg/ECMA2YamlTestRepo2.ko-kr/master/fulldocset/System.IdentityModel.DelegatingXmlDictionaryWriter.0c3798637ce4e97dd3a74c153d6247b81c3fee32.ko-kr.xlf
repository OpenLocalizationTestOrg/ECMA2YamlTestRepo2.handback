<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3a95c5fa4f0f5e2501df7d83b7fc4db61be768f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.DelegatingXmlDictionaryWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfe9410cbd47ae2b292c13aa93e503a1ef36b1cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d050743acac50e70a92679296cbfb46dc2ec1f2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A class that wraps a specified writer and delegates all &lt;xref:System.Xml.XmlDictionaryWriter&gt; calls to the wrapped writer.</source>
          <target state="translated">지정 된 작성기를 래핑하고 모든을 위임 하는 클래스 &lt;xref:System.Xml.XmlDictionaryWriter&gt;래핑된 기록기에 대 한 호출.&lt;/xref:System.Xml.XmlDictionaryWriter&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The writer that is wrapped can be accessed through the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt; property.</source>
          <target state="translated">래핑된 기록기를 통해 액세스할 수는 &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;속성.&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt; method to set the wrapped writer and initialize the property.</source>
          <target state="translated">호출 된 &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;래핑된 기록기를 설정 하 고 속성을 초기화 하는 메서드.&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt; method to set an &lt;xref:System.Xml.XmlWriter&gt; to which non-canonical XML will be echoed.</source>
          <target state="translated">호출할 수 있습니다는 &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;설정 하는 메서드는 &lt;xref:System.Xml.XmlWriter&gt;정식이 아닌 XML에 반영 됩니다.&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.DelegatingXmlDictionaryWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.DelegatingXmlDictionaryWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns a value indicating if the reader is capable of Canonicalization.</source>
          <target state="translated">되 면 판독기가 정형화의 수를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>true if the reader is capable of Canonicalization; otherwise, false.</source>
          <target state="translated">판독기 정형화; 수 있는 경우 true 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Closes the underlying stream.</source>
          <target state="translated">기본 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Stops the canonicalization started by the matching &lt;xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt; call.</source>
          <target state="translated">일치 하는 의해 시작 된 정형화를 중지 &lt;xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt;호출.&lt;/xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Flushes the underlying stream.</source>
          <target state="translated">내부 스트림도 플러시합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes this instance with the specified inner writer.</source>
          <target state="translated">지정된 된 내부 작성기로이 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sets the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt; property to the writer specified by the <ph id="ph1">`innerWriter`</ph> parameter.</source>
          <target state="translated">설정 된 &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;속성으로 지정 된 작성기에는 <ph id="ph1">`innerWriter`</ph> 매개 변수.&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The writer that is to be wrapped by this instance.</source>
          <target state="translated">이 인스턴스에서 래핑할는 기록기입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes this instance with a writer to which all calls will be echoed and that will write non-canonical XML.</source>
          <target state="translated">초기화 하는 모든 호출이 표시 되 면 고 작성기와이 인스턴스의 정식이 아닌 XML을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A writer to which all calls will be echoed.</source>
          <target state="translated">모든 호출은 에코 해야 기록기입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, calls are not echoed.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 호출 표시 되 면 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Get the wrapped writer.</source>
          <target state="translated">래핑된 기록기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Xml.XmlDictionaryWriter&gt;.</source>
          <target state="translated">에 &lt;xref:System.Xml.XmlDictionaryWriter&gt;.&lt;/xref:System.Xml.XmlDictionaryWriter&gt; 반환</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">네임 스페이스 URI에 대 한 현재 네임 스페이스 범위에 정의 된 가장 비슷한 접두사를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">네임 스페이스 URI 접두사를 가진 찾으려고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The matching prefix or null if no matching namespace URI is found in the current scope.</source>
          <target state="translated">일치 하는 접두사 또는 null 경우 일치 하는 네임 스페이스 URI는 현재 범위에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the start of canonicalization.</source>
          <target state="translated">정형화의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any write operation following this will canonicalize the data          and will write it to the given stream.</source>
          <target state="translated">따르는 쓰기 작업이는 데이터를 정형화에서 지정 된 스트림에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Stream to which the canonical stream should be written.</source>
          <target state="translated">정식 스트림에 기록 될 스트림.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value indicates if comments written should be canonicalized as well.</source>
          <target state="translated">주석이 정식화 될 경우 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set of prefixes that needs to be included into the canonical stream.</source>
          <target state="translated">정식 스트림에 포함 하는 접두사의 집합입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The prefixes are defined at the first element that is written to the canonical stream.</source>
          <target state="translated">접두사는 정식 스트림에 작성 된 첫 번째 요소에서 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">지정된 된 바이너리 바이트 base&amp;64;로 인코딩하고 결과 텍스트를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>writes out a CDATA block containing the specified text.</source>
          <target state="translated">지정된 된 텍스트를 포함 하는 CDATA 블록으로 작성 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">CDATA 블록 내에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">지정된 된 유니코드 문자 값에 대 한 문자 엔터티가 생성이 되도록합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">문자 엔터티를 생성할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 한 번에 한 버퍼씩을 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트를 포함 하는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Writes out a comment containing the specified text.</source>
          <target state="translated">지정된 된 텍스트를 포함 하는 주석으로 작성 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Text to place inside the comment.</source>
          <target state="translated">주석 내에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">지정한 이름 및 선택적 특성이 있는 DOCTYPE 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE의 이름입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This must be non-empty.</source>
          <target state="translated">이 비어 있지 않은 여야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</source>
          <target state="translated">Null이 아닌 경우 기록 공개 "pubid" "sysid" pubid 및 sysid 지정된 된 인수 값으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</source>
          <target state="translated">Pubid null 이므로 sysid null이 아닌 경우 시스템 "sysid" sysid이 인수의 값으로 바뀌는 씁니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">Null이 아닌 경우 기록 [subset] 여기서 하위 집합이 인수의 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.</source>
          <target state="translated">이전 System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) 호출을 닫습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">모든 열린 요소 또는 특성 및 작성기를 시작 상태로 설정 닫습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 닫고 해당 네임 스페이스 범위를 팝 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Writes out an entity reference as name.</source>
          <target state="translated">이름으로 엔터티 참조를 작성합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
          <target state="translated">엔터티 참조의 이름입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 닫고 해당 네임 스페이스 범위를 팝 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;.</source>
          <target state="translated">처리 명령 이름 및 텍스트 사이 공백 두고 같이 작성: <ph id="ph1">&amp;amp;</ph>lt;? 이름 텍스트? <ph id="ph2">&amp;amp;</ph>gt;.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction.</source>
          <target state="translated">처리 명령의 이름입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">처리 명령에 포함할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Writes raw markup manually from a string.</source>
          <target state="translated">문자열에서 직접 원시 태그를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>String containing the text to write.</source>
          <target state="translated">쓸 텍스트를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 원시 태그를 직접 작성 문자 버퍼에서 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트를 포함 하는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정 된 로컬 이름과 네임 스페이스 URI 사용 하 여 특성의 시작을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임 스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">네임 스페이스 URI는 특성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 버전이 "1.0" 인 XML 선언을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 버전 "1.0"과 독립형 특성을 사용 하 여 XML 선언을 씁니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If true, it writes "standalone=yes"; if false, it writes "standalone=no".</source>
          <target state="translated">True 이면 기록 "독립 실행형 = yes"; false 이면 기록 "독립 실행형 = 아니요"입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 시작 태그를 작성 하 고 주어진된 네임 스페이스 및 접두사와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The namespace prefix of the element.</source>
          <target state="translated">요소의 네임 스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">네임 스페이스는 요소와 연결 하는 URI입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 작성기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Xml.WriteState&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.WriteState&gt;.&lt;/xref:System.Xml.WriteState&gt; 를 반환합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Writes the given text content.</source>
          <target state="translated">주어진된 텍스트 콘텐츠를 씁니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The text to write.</source>
          <target state="translated">쓸 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">생성 하 고 작성 서로게이트 문자 엔터티 서로게이트 문자 쌍에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The low surrogate.</source>
          <target state="translated">하위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">0xDC00 0xDFFF 사이 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The high surrogate.</source>
          <target state="translated">상위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">0xd800 0xDBFF 사이 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Writes out the given white space.</source>
          <target state="translated">주어진된 공백을 작성합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The string of white space characters.</source>
          <target state="translated">공백 문자의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Writes an attribute as a xml attribute with the prefix 'xml:'.</source>
          <target state="translated">특성 접두사와 함께 xml 특성으로 작성 ' xml:'.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Localname of the attribute.</source>
          <target state="translated">특성의 Localname입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Attribute value.</source>
          <target state="translated">특성 값입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Writes an xmlns namespace declaration.</source>
          <target state="translated">네임 스페이스 선언 xmlns를 씁니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The prefix of the namespace declaration.</source>
          <target state="translated">접두사는 네임 스페이스 선언입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The namespace Uri itself.</source>
          <target state="translated">네임 스페이스 자체는 Uri입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>