<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1756cb392cf75827aed67a2c1411f494a569f96f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Http.HttpContent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2769a785c5371df0fa031235b444571b052ccf8b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc619630c315d2d1226d2fb6d7dc287de871321e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A base class representing an HTTP entity body and content headers.</source>
          <target state="translated">HTTP 엔터티 본문 및 콘텐츠 헤더를 나타내는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">HTTP 콘텐츠도 제공 하는 스트림 개체에 바이트 및 복사본의 스트림으로 직렬화는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the stream object passed as the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;개체 변수로 전달 된 스트림 개체에 기록 된 모든 내용을 다음 완료 됩니다는 <ph id="ph1">`stream`</ph> 매개 변수.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">대상 스트림입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">HTTP 콘텐츠도 제공 하는 스트림 개체에 바이트 및 복사본의 스트림으로 직렬화는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the stream object passed as the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;개체 변수로 전달 된 스트림 개체에 기록 된 모든 내용을 다음 완료 됩니다는 <ph id="ph1">`stream`</ph> 매개 변수.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">대상 스트림입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">(채널 바인딩 토큰 예를 들어) 전송 하는 방법에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory stream as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 HTTP 콘텐츠를 메모리 스트림으로 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the memory stream.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;콘텐츠의 모든 메모리 스트림에 기록 된 개체가 완성 합니다.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the memory stream that that represents the HTTP content.</source>
          <target state="translated">작업이 완료 되 면는 &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;반환 된 작업 개체에 포함 된 HTTP 콘텐츠를 나타내는 메모리 스트림을.&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned stream can then be used to read the content using various stream APIs.</source>
          <target state="translated">그런 다음 반환된 된 스트림의 다양 한 스트림 Api를 사용 하 여 콘텐츠를 읽는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateContentReadStreamAsync method buffers the content to a memory stream.</source>
          <target state="translated">CreateContentReadStreamAsync 메서드를 메모리 스트림으로 콘텐츠를 버퍼링합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can override this behavior if there is a better way to retrieve the content as stream.</source>
          <target state="translated">파생된 클래스는 콘텐츠를 스트림으로 검색 하는 좋은 방법이 없는 경우이 동작을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a byte array or a string could use a more efficient method way such as wrapping a read-only &lt;xref:System.IO.MemoryStream&gt; around the bytes or string.)</source>
          <target state="translated">예를 들어 바이트 배열 또는 문자열 사용 하 여 수는 읽기 전용 배치 등 더욱 효율적인 메서드 방법 &lt;xref:System.IO.MemoryStream&gt;바이트 또는 문자열입니다.)&lt;/xref:System.IO.MemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources and disposes of the managed resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스와 관리 되는 리소스를 삭제 하는 릴리스는 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 삭제 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.When the <ph id="ph4">`disposing`</ph> parameter is <ph id="ph5">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.HttpContent&gt; references.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 와 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다. 경우는 <ph id="ph4">`disposing`</ph> 매개 변수는 <ph id="ph5">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Net.Http.HttpContent&gt;참조.&lt;/xref:System.Net.Http.HttpContent&gt;&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the HTTP content headers as defined in RFC 2616.</source>
          <target state="translated">RFC 2616에 정의 된 HTTP 콘텐츠 헤더를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The content headers as defined in RFC 2616.</source>
          <target state="translated">RFC 2616에 정의 된 대로 콘텐츠 헤더입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory buffer as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 HTTP 콘텐츠를 메모리 버퍼를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after all of the content has been serialized to the memory buffer.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task&gt;메모리 버퍼에 serialize 된 모든 콘텐츠 개체 완성 합니다.&lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>After content is serialized to a memory buffer, calls to one of the  &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt; methods will copy the content of the memory buffer to the target stream.</source>
          <target state="translated">메모리 버퍼에 콘텐츠가 serialize 후 중 하나를 호출 하는 &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;메서드 대상 스트림에 메모리 버퍼의 내용을 복사 합니다.&lt;/xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory buffer as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 HTTP 콘텐츠를 메모리 버퍼를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after all of the content has been serialized to the memory buffer.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task&gt;메모리 버퍼에 serialize 된 모든 콘텐츠 개체 완성 합니다.&lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>After content is serialized to a memory buffer, calls to one of the  &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt; methods will copy the content of the memory buffer to the target stream.</source>
          <target state="translated">메모리 버퍼에 콘텐츠가 serialize 후 중 하나를 호출 하는 &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;메서드 대상 스트림에 메모리 버퍼의 내용을 복사 합니다.&lt;/xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the content exceeds the value  passed in the <ph id="ph1">`maxBufferSize`</ph> parameter , an exception is thrown.</source>
          <target state="translated">전달 된 값을 초과 하는 콘텐츠는 <ph id="ph1">`maxBufferSize`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, of the buffer to use.</source>
          <target state="translated">사용할 버퍼의 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a byte array as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 HTTP 콘텐츠를 바이트 배열로 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written as a byte array.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;모든 콘텐츠를 바이트 배열로 기록 된 개체가 완성 합니다.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the byte array with the HTTP content.</source>
          <target state="translated">작업이 완료 되 면는 &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;반환 된 작업 개체의 속성을 HTTP 내용 사용 하 여 바이트 배열을 포함 합니다.&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</source>
          <target state="translated">HTTP 콘텐츠를 직렬화 하 고 반환 콘텐츠에 해당 하는 비동기 작업을 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the stream that represents content has been read.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;개체가 나타내는 콘텐츠를 읽고 나면 스트림의 모든 된 후 완료 됩니다.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the stream that that represents the HTTP content.</source>
          <target state="translated">작업이 완료 되 면는 &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;반환 된 작업 개체의 속성을 나타내는 HTTP 콘텐츠 스트림을 포함 합니다.&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned stream can then be used to read the content using various stream APIs.</source>
          <target state="translated">그런 다음 반환된 된 스트림의 다양 한 스트림 Api를 사용 하 여 콘텐츠를 읽는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a string as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 HTTP 콘텐츠를 문자열로 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written as a string.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;모든 콘텐츠를 문자열로 기록 된 개체가 완성 합니다.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the string with the HTTP content.</source>
          <target state="translated">작업이 완료 되 면는 &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;반환 된 작업 개체의 속성을 HTTP 콘텐츠를 사용 하 여 문자열을 포함 합니다.&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 스트림에 HTTP 콘텐츠를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been serialized to the stream object passed in the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;모든 콘텐츠가 전달 된 스트림 개체에 serialize 된 개체 완성 합니다는 <ph id="ph1">`stream`</ph> 매개 변수.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">대상 스트림입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">(채널 바인딩 토큰 예를 들어) 전송 하는 방법에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Determines whether the HTTP content has a valid length in bytes.</source>
          <target state="translated">HTTP 콘텐츠 길이 (바이트)에서에 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TryComputeLength method gives a HTTP content the ability to calculate the content length.</source>
          <target state="translated">TryComputeLength 메서드 콘텐츠 길이 계산 하는 HTTP 콘텐츠를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">쉽게 콘텐츠 길이 계산할 수 있는 콘텐츠 형식에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">콘텐츠 길이 수 없거나 비용이 많이 드는 (해야 직렬화는 비용이 많이 들 수 하거나 많은 양의 메모리를 할당할 수 있는 전체 콘텐츠를 버퍼링 하는 시스템) 컴퓨팅,이 메서드가 반환할 수 있습니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`false`</ph>,이 청크 분할된 전송 필요 없거나 서버에 전송 되기 전에 콘텐츠 버퍼링 해야 되 의미 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The length in bytes of the HTTP content.</source>
          <target state="translated">HTTP 콘텐츠의 길이 (바이트)에서입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p2">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">length</ph> <ept id="p2">&lt;/code&gt;</ept> 올바르면, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>