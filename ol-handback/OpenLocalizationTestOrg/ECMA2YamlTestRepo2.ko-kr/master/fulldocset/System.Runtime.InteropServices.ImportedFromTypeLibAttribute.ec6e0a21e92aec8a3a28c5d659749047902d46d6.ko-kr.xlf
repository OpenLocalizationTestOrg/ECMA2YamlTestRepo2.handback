<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0a08a0c426c1f0c06109546d99e3ef5609c3234</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.ImportedFromTypeLibAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6956d7333e1110ea11ddea4376ddd4ecc4a45e99</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dde9f9bdcce8680b9cea816706b1c601472b4ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that the types defined within an assembly were originally defined in a type library.</source>
          <target state="translated">어셈블리 내에서 정의 된 형식을 원래 형식 라이브러리에 정의 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply this attribute to assemblies, although the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> typically applies it for you when it a type library.</source>
          <target state="translated">하지만 어셈블리에이 특성을 적용할 수는 <bpt id="p1">[</bpt>Tlbimp.exe (형식 라이브러리 가져오기)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 일반적으로을 적용 때 그 형식 라이브러리.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The primary use of the attribute is to capture the original source of the type information.</source>
          <target state="translated">특성의 주된 용도 원본 유형 정보를 캡처할 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can import A.tlb as an interop assembly called A.dll and have assembly B.dll reference A.dll.</source>
          <target state="translated">예를 들어 A.tlb A.dll를 호출 하는 interop 어셈블리로 가져오고 B.dll 참조 A.dll 어셈블리가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you export B.dll to B.tlb, this attribute causes the references in B.tlb that point to A.dll to point instead to A.tlb.</source>
          <target state="translated">B.tlb를 B.dll를 내보낼 때이 특성 A.tlb 대신 가리키도록 A.dll를 가리키는 B.tlb에서 참조를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This should not be confused with the &lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;, which specifies that an individual type is implemented in COM.</source>
          <target state="translated">이 혼동 해서는 안 된 &lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;개별 유형의 COM.에서 구현 되는 지정 하 고,&lt;/xref:System.Runtime.InteropServices.ComImportAttribute&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ImportedFromTypeLibAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the name of the original type library file.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ImportedFromTypeLibAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 원본 형식 라이브러리 파일의 이름으로 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The location of the original type library file.</source>
          <target state="translated">원본 형식 라이브러리 파일의 위치입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the name of the original type library file.</source>
          <target state="translated">원본 형식 라이브러리 파일의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the original type library file.</source>
          <target state="translated">원본 형식 라이브러리 파일의 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>