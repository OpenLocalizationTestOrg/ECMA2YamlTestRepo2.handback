<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8a3ea9bdf538d3ace1045b173033513a8ad6f53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._PropertyInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f203743d96d87a8ffdc26e3b3357e38f9bf3f988</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85fe6fc90bd4d5b9890bee112cd611515c03e2c7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">public 멤버를 노출는 <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 비관리 코드에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 인터페이스는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">vtable 순서를 유지 하는이 인터페이스는 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;클래스 관리 되지 않는 COM 개체에서 액세스할 수 있는 멤버.&lt;/xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.Attributes*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.Attributes*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.Attributes%2A&gt; property gets the attributes of this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.Attributes%2A&gt;속성이이 속성의 특성을 가져옵니다.&lt;/xref:System.Reflection.PropertyInfo.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The attributes of this property.</source>
          <target state="translated">이 속성의 특성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanRead*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.CanRead*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.CanRead*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.CanRead%2A&gt; property gets a value indicating whether the property can be read.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.CanRead%2A&gt;속성 속성을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.PropertyInfo.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property can be read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성을 읽을 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanWrite*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.CanWrite*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.CanWrite*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.CanWrite%2A&gt; property gets a value indicating whether the property can be written to.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.CanWrite%2A&gt;속성에 속성을 쓸 수 있는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.PropertyInfo.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property can be written to; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성;에 쓸 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;이 멤버를 선언 하는 클래스 속성을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the class that declares this member.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 멤버를 선언 하는 클래스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.Equals*&gt;메서드.&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;메서드 확인 여부를 지정 된 &lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 같은지&lt;/xref:System.Object&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 와 비교할 개체&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 지정 된 &lt;xref:System.Object&gt;현재 같은지 &lt;xref:System.Object&gt;, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetAccessors*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, and other accessors of the property reflected by the current instance.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;공용 리플렉션하는 요소의 배열을 반환 <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, 및 현재 인스턴스에서 리플렉션된 속성의 기타 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MethodInfo&gt; objects that reflect the public <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.MethodInfo&gt;공용 반영 하는 개체 <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 기타 접근자 속성의 접근자 발견 되 면 현재 인스턴스에 의해 반영;이 메서드 (0) 요소의 개수가&amp;0; 인 배열을 반환 하는 그렇지 않은 경우.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetAccessors*&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public and, if specified, non-public <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, and other accessors of the property reflected by the current instance.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;공용 리플렉션하는 요소의 배열을 반환 하 고, 지정 된 public이 아닌 경우 <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, 및 현재 인스턴스에서 리플렉션된 속성의 기타 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include non-public methods in the returned <bpt id="p2">&lt;xref uid="langword_csharp_MethodInfo" name="MethodInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> array; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>반환 된 public이 아닌 메서드를 포함 하도록 <bpt id="p2">&lt;xref uid="langword_csharp_MethodInfo" name="MethodInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 배열; 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MethodInfo&gt; objects whose elements reflect the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.MethodInfo&gt;리플렉션하는 요소의 개체는 <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 현재 인스턴스에서 리플렉션된 속성의 기타 접근자.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this array contains public and non-public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and other accessors.</source>
          <target state="translated">경우는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>,이 배열에 public 및 public이 아닌 <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>, 및 기타 접근자입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this array contains only public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and other accessors.</source>
          <target state="translated">경우 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>,이 배열에만 공개 <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>, 및 기타 접근자입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</source>
          <target state="translated">지정 된 표시 유형으로 된 접근자 발견 되 면이 메서드는 (0) 요소의 개수가&amp;0; 인 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;메서드 모든 사용자 지정 특성을 포함 하는 배열을 반환 합니다.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
          <target state="translated">true; 특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</source>
          <target state="translated">모든 사용자 지정 특성을 포함 하는 배열 또는 정의 된 특성이 없는 경우 요소가 없는 배열입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;메서드는 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 으로 식별 된 사용자 지정 특성의 배열을 반환합니다 합니다.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">이 형식에 할당할 수 있는 특성만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
          <target state="translated">true; 특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">이 멤버에 적용 하는 사용자 지정 특성의 배열 또는 특성이 적용 된 경우 (0) 요소의 개수가&amp;0; 인 배열.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod*&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public <ph id="ph1">`get`</ph> accessor for this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;메서드가 public 반환 <ph id="ph1">`get`</ph> 이 속성에 대 한 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the public <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor for this property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public or does not exist.</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodInfo&gt;공용을 나타내는 개체 <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 속성에 대 한 접근자 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우는 <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 접근자가 public이 아니거나 존재 하지 않는.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod*&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public or non-public <ph id="ph1">`get`</ph> accessor for this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;public 또는 non-public 메서드가 반환 <ph id="ph1">`get`</ph> 이 속성에 대 한 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return a non-public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>public이 아닌 반환할 <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 접근자, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor for this property, if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodInfo&gt;나타내는 개체는 <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 속성에 대 하는 경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the <bpt id="p4">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> accessor is non-public, or if <bpt id="p5">&lt;code&gt;</bpt><ph id="ph2">nonPublic</ph><ept id="p5">&lt;/code&gt;</ept> is <bpt id="p6">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> but no <bpt id="p7">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept> accessors exist.</source>
          <target state="translated">Or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the <bpt id="p4">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> accessor is non-public, or if <bpt id="p5">&lt;code&gt;</bpt><ph id="ph2">nonPublic</ph><ept id="p5">&lt;/code&gt;</ept> is <bpt id="p6">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> but no <bpt id="p7">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept> accessors exist.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.GetHashCode*&gt;메서드.&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;메서드는 특정 형식에 대 한 해시 함수 역할을 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;해시 알고리즘 및 데이터 해시 테이블 같은 구조에 적합 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">현재 인스턴스에 대 한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">이름 집합을 해당 디스패치 식별자 집합에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An array of names to be mapped.</source>
          <target state="translated">매핑할 이름의 배열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The count of the names to be mapped.</source>
          <target state="translated">매핑할 이름의 수입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">이름을 해석할 로캘 컨텍스트.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
          <target state="translated">이름에 해당 하는 식별자를 받는 호출자가 할당 한 배열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetIndexParameters*&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt; method returns an array of all the index parameters for the property</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt;메서드는 속성에 대 한 모든 인덱스 매개 변수 배열을 반환합니다 합니다.&lt;/xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing the parameters for the indexes.</source>
          <target state="translated">형식의 배열 &lt;xref:System.Reflection.ParameterInfo&gt;인덱스에 대 한 매개 변수가 포함 된.&lt;/xref:System.Reflection.ParameterInfo&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod*&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the public <ph id="ph1">`set`</ph> accessor for this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;메서드가 public 반환 <ph id="ph1">`set`</ph> 이 속성에 대 한 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for this property if the <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor is public, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> accessor is not public.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo&gt;나타내는 개체는 <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 속성에 대 한 메서드 경우는 <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 접근자가 public 인 또는 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 경우는 <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 접근자가 public이 아닙니다.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod*&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the <ph id="ph1">`set`</ph> accessor for this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;메서드가 반환 되는 <ph id="ph1">`set`</ph> 이 속성에 대 한 접근자.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return a non-public accessor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>public이 아닌 접근자를 반환 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
          <target state="translated">다음 표에 있는 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">의미</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for this property.</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodInfo&gt;나타내는 개체는 <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 속성에 대 한 메서드.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor is public.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 접근자는 public입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 접근자는 public이 아닙니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but the property is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 했으나이 속성은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">nonPublic</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 접근자는 public이 아닙니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-or-       There is no <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">-또는-는 없는 <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 접근자입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.GetType*&gt;메서드.&lt;/xref:System.Object.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">&lt;xref:System.Object.GetType%2A&gt;메서드는 현재 인스턴스의 형식을 가져옵니다.&lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A &lt;xref:System.Type&gt;개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">인터페이스에 대 한 형식 정보를 가져오는 데 사용할 수 있는 개체에 대 한 형식 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">반환할 형식 정보입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">형식 정보에 대 한 로캘 식별자입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A pointer to the requested type information object.</source>
          <target state="translated">요청 된 형식 정보 개체에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">개체 (0 또는 1)를 제공 하는 형식 정보 인터페이스의 수를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">이 메서드가 반환 될 때 개체에서 제공 하는 형식 정보 인터페이스의 수를 받는 위치에 대 한 포인터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetValue*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns a literal value associated with the property by a compiler.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt;메서드 컴파일러에서 속성과 연결한 리터럴 값을 반환 합니다.&lt;/xref:System.Reflection.PropertyInfo.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
          <target state="translated">개체 속성 값이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
          <target state="translated">인덱싱된 속성에 대 한 선택적 인덱스 값입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
          <target state="translated">이 값은 이어야 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인덱싱되지 않은 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The property value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">에 대 한 속성 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.GetValue*&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns the value of a property having the specified binding, index, and &lt;xref:System.Globalization.CultureInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt;지정 된 바인딩, 인덱스 및 &lt;xref:System.Globalization.CultureInfo&gt;.&lt;/xref:System.Globalization.CultureInfo&gt; 있는 속성의 값을 반환 하는 메서드&lt;/xref:System.Reflection.PropertyInfo.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
          <target state="translated">개체 속성 값이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The invocation attribute.</source>
          <target state="translated">호출 특성입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This must be a bit flag from <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</source>
          <target state="translated">This must be a bit flag from <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">적합 한 호출 특성을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If a static member will be invoked, the <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag of <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> must be set.</source>
          <target state="translated">정적 멤버를 호출 하는 경우는 <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 플래그가 <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <bpt id="p1">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects through reflection.</source>
          <target state="translated">바인딩, 인수 강제 변환 하는 개체 형식, 멤버 호출 및 검색 <bpt id="p1">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 리플렉션을 통해 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the default binder is used.</source>
          <target state="translated">경우 <ph id="ph1">`binder`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 기본 바인더가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
          <target state="translated">인덱싱된 속성에 대 한 선택적 인덱스 값입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
          <target state="translated">이 값은 이어야 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인덱싱되지 않은 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the culture for which the resource will be localized.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 리소스 지역화할 수 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Note that if the resource is not localized for this culture, the <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method will be called successively in search of a match.</source>
          <target state="translated">경우에 리소스가이 문화권에 대 한 지역화 되지 않으면, <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 않으면 메서드를 연속적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is obtained from the <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">이 값이 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 가져온는 <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The property value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">에 대 한 속성 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">개체에서 노출 하는 메서드와 속성에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::Invoke`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An identifier of a member.</source>
          <target state="translated">멤버의 식별자입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">인수를 해석할 로캘 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">호출의 컨텍스트를 설명 하는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">인수의 배열, 명명 된 인수 및 배열에 있는 요소 수에 대 한 수에 대 한 인수 Dispid의 배열에 포함 된 구조체에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A pointer to the location where the result will be stored.</source>
          <target state="translated">결과 저장할 위치에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">예외 정보를 포함 하는 구조에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">오류가 있는 첫 번째 인수의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instance of the <ph id="ph1">`attributeType`</ph> parameter is applied to this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;메서드 나타냅니다 하나 또는의 더 많은 인스턴스는 <ph id="ph1">`attributeType`</ph> 매개 변수가이 멤버에 적용 된.&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object to which the custom attributes are applied.</source>
          <target state="translated">&lt;xref:System.Type&gt;개체를 사용자 지정 특성이 적용 됩니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
          <target state="translated">true; 특성을 찾기 위해이 멤버의 상속 체인을 검색 하려면 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instances of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> parameter are applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우의 하나 이상의 인스턴스는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수는이 멤버에 적용 되 고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.IsSpecialName*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.IsSpecialName*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt; property sets a value indicating whether the property is the special name.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt;속성의 이름이 특수 한지 여부를 나타내는 값을 설정 하는 속성입니다.&lt;/xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property is the special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 속성은 특수 한 이름이; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.MemberType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.MemberType*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is a property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.MemberType%2A&gt;속성 get는 &lt;xref:System.Reflection.MemberTypes&gt;이 멤버가 속성 임을 나타내는 값입니다.&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.PropertyInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating that this member is a property.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 멤버가 속성 임을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.Name*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;속성의 현재 멤버의 이름을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object containing the name of this member.</source>
          <target state="translated">A &lt;xref:System.String&gt;이 멤버의 이름을 포함 하는 개체입니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.PropertyType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.PropertyType*&gt;속성.&lt;/xref:System.Reflection.PropertyInfo.PropertyType*&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.PropertyType%2A&gt; property gets the type of this property.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.PropertyType%2A&gt;속성이이 속성의 형식을 가져옵니다.&lt;/xref:System.Reflection.PropertyInfo.PropertyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The type of this property.</source>
          <target state="translated">이 속성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this &lt;xref:System.Reflection.MemberInfo&gt; object.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;속성이를 얻는 데 사용 된 클래스 개체를 가져옵니다 &lt;xref:System.Reflection.MemberInfo&gt;개체입니다.&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.</source>
          <target state="translated">&lt;xref:System.Type&gt;이 통해 개체 &lt;xref:System.Reflection.MemberInfo&gt;개체를 가져온.&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.SetValue*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt; method sets the value of the property with optional index values for index properties.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt;메서드 인덱스 속성에 대 한 선택적 인덱스 값이 있는 속성의 값을 설정 합니다.&lt;/xref:System.Reflection.PropertyInfo.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The object whose property value will be set.</source>
          <target state="translated">속성 값이 설정 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The new value for this property.</source>
          <target state="translated">이 속성에 대 한 새 값입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
          <target state="translated">인덱싱된 속성에 대 한 선택적 인덱스 값입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
          <target state="translated">이 값은 이어야 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인덱싱되지 않은 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.SetValue*&gt;메서드.&lt;/xref:System.Reflection.FieldInfo.SetValue*&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt; method sets the property value for the given object to the given value.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt;메서드는 지정된 된 값에 지정된 된 개체에 대 한 속성 값을 설정 합니다.&lt;/xref:System.Reflection.FieldInfo.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
          <target state="translated">개체 속성 값이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The new value for this property.</source>
          <target state="translated">이 속성에 대 한 새 값입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The invocation attribute.</source>
          <target state="translated">호출 특성입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This must be a bit flag from <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</source>
          <target state="translated">This must be a bit flag from <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">적합 한 호출 특성을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If a static member will be invoked, the <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag of <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> must be set.</source>
          <target state="translated">정적 멤버를 호출 하는 경우는 <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 플래그가 <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of &lt;xref:System.Reflection.MemberInfo&gt; objects through reflection.</source>
          <target state="translated">바인딩, 인수 강제 변환 하는 개체 형식, 멤버 호출 및 검색 &lt;xref:System.Reflection.MemberInfo&gt;리플렉션을 통해.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the default binder is used.</source>
          <target state="translated">경우 <ph id="ph1">`binder`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 기본 바인더가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
          <target state="translated">인덱싱된 속성에 대 한 선택적 인덱스 값입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
          <target state="translated">이 값은 이어야 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인덱싱되지 않은 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Globalization.CultureInfo&gt; object that represents the culture for which the resource will be localized.</source>
          <target state="translated">&lt;xref:System.Globalization.CultureInfo&gt;리소스는 지역화 된 문화권을 나타내는 개체입니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Note that if the resource is not localized for this culture, the <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method will be called successively in search of a match.</source>
          <target state="translated">경우에 리소스가이 문화권에 대 한 지역화 되지 않으면, <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 않으면 메서드를 연속적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is obtained from the <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">이 값이 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 가져온는 <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.ToString*&gt;메서드.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 를 나타내는 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>