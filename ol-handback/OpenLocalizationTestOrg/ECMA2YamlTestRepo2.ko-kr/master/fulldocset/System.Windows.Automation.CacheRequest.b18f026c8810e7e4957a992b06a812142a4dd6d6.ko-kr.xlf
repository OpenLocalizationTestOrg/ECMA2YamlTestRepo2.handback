<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84c3d7d4c280a2b23703d42a924b395aab3769f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.CacheRequest.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f15895a5e3b8ed7015d243f2dc2d98d3cb84ca8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">541bba44f3b4c91de53ab59e1d9c4416afdf7506</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies properties and patterns that the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> framework caches when an <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is obtained.</source>
          <target state="translated">속성을 지정 하는 패턴 및는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 때 프레임 워크에서 캐시는 <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가져옵니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving properties and patterns through <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> requires cross-process calls that can slow down performance.</source>
          <target state="translated">속성 및 패턴을 통해 검색 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 성능이 느려질 수 있다는 크로스 프로세스 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</source>
          <target state="translated">속성 값 및 일괄 처리 작업의 패턴을 캐시 하 여 응용 프로그램의 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new cache request by calling the class constructor.</source>
          <target state="translated">클래스 생성자를 호출 하 여 새 캐시 요청을 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The request is populated by repeated calls to the &lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt; method.</source>
          <target state="translated">요청 호출을 반복된 하 여 채워집니다는 &lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;메서드.&lt;/xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a single CacheRequest can be active.</source>
          <target state="translated">단일 CacheRequest만 활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to activate a request:      -   Call &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; on the request.</source>
          <target state="translated">요청을 활성화 하는 방법은 두 가지가:-호출 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;요청에.&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This pushes the request onto the stack, and the request is popped when the object is disposed.</source>
          <target state="translated">요청 하 여 스택에 푸시하고 개체가 삭제 될 때 요청이 팝 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure disposal even if an exception is raised, use the return value from &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">개체를 삭제 하려면 예외가 발생 하는 경우에, 반환 값을 사용 하 여 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;내에서 한 <ph id="ph1">`using`</ph> 블록 (<ph id="ph2">`Using`</ph> 에 <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Put the request onto the internal stack by calling &lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;.</source>
          <target state="translated">-요청 저장 내부 스택으로 &lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;.&lt;/xref:System.Windows.Automation.CacheRequest.Push%2A&gt; 를 호출 하 여</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the topmost request on the stack is active, and it must be the next one removed from the stack by &lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;.</source>
          <target state="translated">스택의 맨 위의 요청만 활성 상태 이며 다음 순서의 &lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;.&lt;/xref:System.Windows.Automation.CacheRequest.Pop%2A&gt; 스택에서 제거 있어야</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Popping the request deactivates it.</source>
          <target state="translated">요청 팝 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> elements obtained while the request is active will have cached values for the properties and patterns specified.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>요청이 활성 상태인 동안 가져온 요소는 속성 및 지정 된 패턴에 대 한 값 캐싱되어 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Windows.Automation.CacheRequest&gt; is created, the &lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt; identifier is added as a default property to cache.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Automation.CacheRequest&gt;만들어지면는 &lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;식별자는 기본 속성으로 캐시에 추가 됩니다.&lt;/xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt; &lt;/xref:System.Windows.Automation.CacheRequest&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sets this <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as the active specification for the items that are returned when an <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is requested on the same thread.</source>
          <target state="translated">가이 설정 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때 반환 되는 항목에 대 한 현재 설정으로는 <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 동일한 스레드에 대해 요청 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this method is usually preferable to using &lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt; and &lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt; as a means of activating the &lt;xref:System.Windows.Automation.CacheRequest&gt;.</source>
          <target state="translated">이 메서드를 사용 하 &lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;고 &lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt; &lt;xref:System.Windows.Automation.CacheRequest&gt;.&lt;/xref:System.Windows.Automation.CacheRequest&gt; 를 활성화 하는 방법으로&lt;/xref:System.Windows.Automation.CacheRequest.Pop%2A&gt; &lt;/xref:System.Windows.Automation.CacheRequest.Push%2A&gt; 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object is pushed onto the stack when Activate is called, and then popped off when it is disposed.</source>
          <target state="translated">개체는 활성화를 호출 하 고 삭제 될 때 팝 됩니다 때 스택으로 푸시됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure disposal, place the return value within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">개체를 삭제 하려면 내에서 반환 값을 배치는 <ph id="ph1">`using`</ph> 블록 (<ph id="ph2">`Using`</ph> 에 <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object that can be used to dispose the <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">삭제 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier to this <bpt id="p2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 추가 <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationPattern"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식별자를이 <bpt id="p2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a pattern that is already in the cache request has no effect.</source>
          <target state="translated">캐시 요청에 이미 있는 패턴을 추가 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An identifier specifying a pattern to cache.</source>
          <target state="translated">캐시할 패턴을 지정 하는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is active.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 활성화 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier to this <bpt id="p2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 추가 <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식별자를이 <bpt id="p2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Windows.Automation.CacheRequest&gt; is created, the &lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt; identifier is added as a default property to cache.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Automation.CacheRequest&gt;만들어지면는 &lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;식별자는 기본 속성으로 캐시에 추가 됩니다.&lt;/xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt; &lt;/xref:System.Windows.Automation.CacheRequest&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a property that is already in the cache request has no effect.</source>
          <target state="translated">캐시 요청에 이미 있는 속성에 추가 하는 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An identifier specifying a property value to cache.</source>
          <target state="translated">캐시 속성 값을 지정 하는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is active.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 활성화 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether returned elements should contain full references to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>, or only cached information.</source>
          <target state="translated">반환 되는 요소 내부에 대 한 전체 참조를 포함할지 여부를 지정 하는 값을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>, 아니면 캐시 된 정보입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Automation.AutomationElementMode&gt; is the default value, and specifies that returned elements contain a full reference to the underlying <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.AutomationElementMode&gt;반환 되는 요소 내부에 대 한 전체 참조를 포함 하도록 지정 하 고 값은 기본값 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.&lt;/xref:System.Windows.Automation.AutomationElementMode&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Automation.AutomationElementMode&gt; specifies that the returned elements have no reference to the underlying <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>, and contain only cached information.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.AutomationElementMode&gt;반환 되는 요소 내부에 대 한 참조를 갖도록 지정 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>, 캐시 된 정보만 포함 하 고 있습니다.&lt;/xref:System.Windows.Automation.AutomationElementMode&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain operations on elements, including &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;, &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;, and &lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;, require a full reference; attempting to perform these on an element that has none results in an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">포함 하 여 요소에서 특정 작업 &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;, &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;, 및 &lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;, 전체 참조를 사용 해야 하는 이러한에서 수행 하는 &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; none가 있는 요소가 결과&lt;/xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using &lt;xref:System.Windows.Automation.AutomationElementMode&gt; can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Windows.Automation.AutomationElementMode&gt;것 처럼 속성에만 필요할 경우 더 효과적일 수 있습니다 전체 참조를 설정 합니다.&lt;/xref:System.Windows.Automation.AutomationElementMode&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElementMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the returned elements have a full reference to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>; otherwise <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElementMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElementMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>반환 되는 요소 내부에 대 한 전체 참조 있으면 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>고, 그렇지 않으면 <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElementMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates a copy of this <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 파일의 복사본을 만듭니다 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A modifiable copy of the current object.</source>
          <target state="translated">현재 개체의 수정 가능한 복사본입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is active on the current thread.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 스레드에서 활성화 된에 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The active <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">활성 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Removes the active <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the internal stack for the current thread.</source>
          <target state="translated">활성 제거 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 스레드에 대 한 내부 스택에서 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the currently active request can be removed using the Pop method.</source>
          <target state="translated">Pop 메서드를 사용 하 여 현재 활성 상태인 요청이 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to remove a request that is not the current one results in an exception.</source>
          <target state="translated">현재 하나의 결과 예외가 되지 않은 요청을 제거 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are nesting cache requests, it is preferable to use &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; to place the request on the stack.</source>
          <target state="translated">캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;스택에 요청이 배치 하려면.&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that you can use &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">사용할 수 있는 이유는 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;내에서 한 <ph id="ph1">`using`</ph> 블록 (<ph id="ph2">`Using`</ph> 에 <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</source>
          <target state="translated">스택에 밀어 넣은 마지막 트랜잭션이 되지 않은 캐시 요청을 제거 하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Places the <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the internal state stack, making it the active request on the current thread.</source>
          <target state="translated">위치는 <bpt id="p1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내부 상태 스택에 있어서 현재 스레드의 활성 요청 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple &lt;xref:System.Windows.Automation.CacheRequest&gt; objects can be placed onto the state stack.</source>
          <target state="translated">여러 &lt;xref:System.Windows.Automation.CacheRequest&gt;상태 스택으로 개체를 배치할 수 있습니다.&lt;/xref:System.Windows.Automation.CacheRequest&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cache requests must be removed from the stack in the order they were pushed on; otherwise, an &lt;xref:System.InvalidOperationException&gt; exception is raised.</source>
          <target state="translated">캐시 요청은 푸시된; 순서로 스택에서 제거 해야 합니다. 그렇지 않은 경우는 &lt;xref:System.InvalidOperationException&gt;예외가 발생 합니다.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are nesting cache requests, it is preferable to use &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; to place the request on the stack.</source>
          <target state="translated">캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;스택에 요청이 배치 하려면.&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that you can use &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt; within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">사용할 수 있는 이유는 &lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;내에서 한 <ph id="ph1">`using`</ph> 블록 (<ph id="ph2">`Using`</ph> 에 <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.&lt;/xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a value specifying the view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree to use when caching.</source>
          <target state="translated">뷰를 지정 하는 값을 가져오거나 설정 합니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리를 캐시할 때 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on views of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree, see <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">뷰에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리 참조 <bpt id="p1">[</bpt>UI 자동화 트리 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree.</source>
          <target state="translated">보기는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The default view is <bpt id="p1">&lt;xref href="System.Windows.Automation.Automation.ControlViewCondition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본 보기는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Automation.ControlViewCondition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</source>
          <target state="translated">하위 트리의 루트에 대해서만 또는 해당 자식 또는 하위 항목에 대 한 캐싱을 수행 여부를 지정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which &lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt; or &lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt; is called.</source>
          <target state="translated">캐시 범위는 개체를 기준으로 페치 대상 개체와 관계 없이 &lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;또는 &lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;호출 됩니다.&lt;/xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example.</source>
          <target state="translated">예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>One or more of <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">One or more of <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the property to <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성을 설정 하려고 했습니다 <bpt id="p1">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.Automation.TreeScope"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>