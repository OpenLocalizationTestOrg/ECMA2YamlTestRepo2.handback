<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de339cdf9ad01efe8cdc4fe19e484723bba4ba57</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.IconConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ea3b1e79db905ee4174fd37ddc2d3263a77e05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65fffdcfbd144032ceebd0dadaa24afb3c27e944</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converts an <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object from one data type to another.</source>
          <target state="translated">변환 된 <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 형식에서 개체를 다른 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Access this class through the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 클래스를 통해 액세스는 <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Determines whether this <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can convert an instance of a specified type to an <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using the specified context.</source>
          <target state="translated">결정 여부이 <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 형식의 인스턴스를 변환할 수는 <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 지정된 된 컨텍스트를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`sourceType`</ph> is equal to a byte array.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 경우에만 <ph id="ph2">`sourceType`</ph> 바이트 배열로 같습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a format context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식 컨텍스트를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that specifies the type you want to convert from.</source>
          <target state="translated">A &lt;xref:System.Type&gt;변환할 원본 형식을 지정 하는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can perform the conversion; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 메서드가 반환 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 <bpt id="p2">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 변환을 수행할 수, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Determines whether this <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can convert an <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to an instance of a specified type, using the specified context.</source>
          <target state="translated">결정 여부이 <bpt id="p1">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변환할 수는 <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스로 지정 된 형식의 지정된 된 컨텍스트를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`destinationType`</ph> is equal to a byte array or string.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 경우에만 <ph id="ph2">`destinationType`</ph> 은 바이트 배열 또는 문자열과 같습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a format context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식 컨텍스트를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that specifies the type you want to convert to.</source>
          <target state="translated">A &lt;xref:System.Type&gt;를 변환할 형식을 지정 하는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can perform the conversion; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 메서드가 반환 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 <bpt id="p2">&lt;xref href="System.Drawing.IconConverter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 변환을 수행할 수, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Converts a specified object to an <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 개체를 변환는 <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a format context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식 컨텍스트를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; that holds information about a specific culture.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;특정 문화권에 대 한 정보를 보유 하는.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be converted.</source>
          <target state="translated">&lt;xref:System.Object&gt;변환 될 수 있습니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If this method succeeds, it returns the <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that it created by converting the specified object.</source>
          <target state="translated">이 메서드가 성공 하면 반환는 <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 개체를 변환 하 여 만든 것입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, it throws an exception.</source>
          <target state="translated">그렇지 않으면 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The conversion could not be performed.</source>
          <target state="translated">변환을 수행할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Converts an <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (or an object that can be cast to an <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>) to a specified type.</source>
          <target state="translated">변환는 <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (또는으로 캐스팅 될 수 있는 개체는 <bpt id="p2">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>)를 지정 된 형식입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation calls the &lt;xref:System.Object.ToString%2A&gt; method on the object if the object is valid and if the destination type is <ph id="ph1">`string`</ph>.</source>
          <target state="translated">기본 구현 호출은 &lt;xref:System.Object.ToString%2A&gt;개체의 메서드는 개체가 올바른지와 대상 형식이 <ph id="ph1">`string`</ph>.&lt;/xref:System.Object.ToString%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method cannot convert to the destination type, it throws a &lt;xref:System.NotSupportedException&gt; exception.</source>
          <target state="translated">이 메서드가 대상 형식으로 변환할 수 없는 경우 throw 한 &lt;xref:System.NotSupportedException&gt;예외.&lt;/xref:System.NotSupportedException&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a format context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식 컨텍스트를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; object that specifies formatting conventions used by a particular culture.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;특정 문화권에서 사용 되는 형식 지정 규칙을 지정 하는 개체입니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This object should be of type icon or some type that can be cast to <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 개체가 유형 아이콘 또는으로 캐스팅 될 수 있는 형식 이어야 합니다 <bpt id="p1">&lt;xref href="System.Drawing.Icon"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The type to convert the icon to.</source>
          <target state="translated">아이콘을 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method returns the converted object.</source>
          <target state="translated">이 메서드는 변환 된 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The conversion could not be performed.</source>
          <target state="translated">변환을 수행할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>