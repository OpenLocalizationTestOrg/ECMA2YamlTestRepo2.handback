<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd2de60957597fc64503ab480c05cdaad433c204</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.RegularExpressions.RegexCompilationInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5441fef14229c47fbeee50740e0e82c35b0bf193</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913e1b9ded78168cfd751f3b1f6aacb961897285</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</source>
          <target state="translated">독립 실행형 어셈블리에 정규식을 컴파일하는 데 사용 되는 정규식에 대 한 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An array of RegexCompilationInfo objects is passed to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method to provide information about each regular expression to be included in the assembly.</source>
          <target state="translated">RegexCompilationInfo 개체의 배열에 전달 되는 &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;메서드는 어셈블리에 포함 시킬 각 정규식에 대 한 정보를 제공 합니다.&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each compiled regular expression that is included in the assembly is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">어셈블리에 포함 된 각 컴파일된 정규식은 &lt;xref:System.Text.RegularExpressions.Regex&gt;.&lt;/xref:System.Text.RegularExpressions.Regex&gt; 에서 파생 된 클래스도 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</source>
          <target state="translated">RegexCompilationInfo 형식의 속성은 정규식의 클래스 이름, 정규화 된 이름 (즉, 해당 네임 스페이스 및 해당 형식 이름), 정규식 패턴, (예: 여부 정규식은 대/소문자 구분), 추가 옵션 및 정규식 엔진이 일치 항목을 검색 해야 기간을 지정 하는 시간 제한 간격을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.</source>
          <target state="translated">오버 로드 된 클래스 생성자를 호출 하 여 RegexCompilationInfo 개체를 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains information about a regular expression to be included in an assembly.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리에 포함 될 수 있는 정규식에 대 한 정보를 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;클래스&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; 의 속성에 직접 해당 하는 RegexCompilationInfo 생성자의 각 매개 변수</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id="ph1">`options`</ph>.</source>
          <target state="translated">지정 하지 않아야 따라서 &lt;xref:System.Text.RegularExpressions.RegexOptions&gt;의 다음 값 중 하나로 <ph id="ph1">`options`</ph>.&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">경우 <ph id="ph1">`ispublic`</ph> 은 <ph id="ph2">`true`</ph>, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">경우 <ph id="ph1">`ispublic`</ph> 은 <ph id="ph2">`false`</ph>의 컴파일된 정규식 제공 <ph id="ph3">`internal`</ph> (C#에서) 또는 <ph id="ph4">`Friend`</ph> (Visual Basic)에서는 내게 필요한 옵션입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">컴파일할 정규식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">정규식을 컴파일할 때 사용할 정규식 옵션입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">컴파일된 정규식을 나타내는 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">새 형식을 속해 있는 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일된 정규식을 공개적으로 표시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어셈블리에 포함 되도록 지정 된 시간 제한 값이 정규식에 대 한 정보를 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each parameter of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt; constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt; &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;클래스&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; 의 속성에 해당 하는 생성자를 직접&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt; 의 각 매개 변수</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id="ph1">`options`</ph>.</source>
          <target state="translated">지정 하지 않아야 따라서 &lt;xref:System.Text.RegularExpressions.RegexOptions&gt;의 다음 값 중 하나로 <ph id="ph1">`options`</ph>.&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">경우 <ph id="ph1">`ispublic`</ph> 은 <ph id="ph2">`true`</ph>, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">경우 <ph id="ph1">`ispublic`</ph> 은 <ph id="ph2">`false`</ph>의 컴파일된 정규식 제공 <ph id="ph3">`internal`</ph> (C#에서) 또는 <ph id="ph4">`Friend`</ph> (Visual Basic)에서는 내게 필요한 옵션입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`matchTimeout`</ph> parameter defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated"><ph id="ph1">`matchTimeout`</ph> 매개 변수는 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.</source>
          <target state="translated">이 값은 컴파일된 정규식 개체에서 작업 시간이 초과 정규식 엔진은 throw 전에 단일 일치 작업을 실행할 시간의 대략적인 크기를 나타냅니다는 &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;다음 타이밍 검사 중 발생 한 예외.&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about the time-out value, see the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt; property.</source>
          <target state="translated">시간 제한 값에 대 한 자세한 내용은 참조는 &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;속성.&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to this constructor overload.</source>
          <target state="translated">정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 &lt;xref:System.TimeSpan&gt;이 생성자 오버 로드에 새 시간 제한 간격을 나타내는 값입니다.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">컴파일할 정규식입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">정규식을 컴파일할 때 사용할 정규식 옵션입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">컴파일된 정규식을 나타내는 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">새 형식을 속해 있는 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일된 정규식을 공개적으로 표시 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default time-out interval for the regular expression.</source>
          <target state="translated">정규식에 대 한 기본 제한 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;matchTimeout&lt;/code&gt;</ph> is negative, zero, or greater than approximately 24 days.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;matchTimeout&lt;/code&gt;</ph>가 음수, 0, 약 24 일 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</source>
          <target state="translated">컴파일된 정규식을 공개적으로 표시할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the IsPublic property is <ph id="ph1">`false`</ph>, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</source>
          <target state="translated">IsPublic 속성이 <ph id="ph1">`false`</ph>, 클래스를 포함 하는 어셈블리에서 실행 되는 코드를 통해서만 현재 인스턴스에 의해 정의 된 정규식 클래스를 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt; method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그러나 때문에 &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt;만 컴파일된 정규식을 포함 하 고 여기에 코드 추가를 허용 하지 않는 한 어셈블리를 생성 하는 메서드,이 속성의 값을 할당할 수 없는 이유는 일반적으로 <ph id="ph1">`false`</ph>.&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the regular expression has public visibility; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>정규식을 공개적으로 표시할; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the regular expression's default time-out interval.</source>
          <target state="translated">정규식의 기본 시간 제한 간격을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MatchTimeout property defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated">MatchTimeout 속성 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.</source>
          <target state="translated">이 값은 컴파일된 정규식을 작업 시간이 초과 하 고 정규식 엔진은 throw 하기 전에 단일 일치 작업을 실행할 수 있는 시간의 대략적인 크기를 나타냅니다는 &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;다음 타이밍 검사 중 발생 한 예외.&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to the compiled regular expression's class constructor.</source>
          <target state="translated">정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 &lt;xref:System.TimeSpan&gt;컴파일된 정규식의 클래스 생성자에 새 시간 제한 간격을 나타내는 값입니다.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign a default time-out value to a &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; object in any of the following ways:      -   By calling the &lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt; method and providing the string representation of a &lt;xref:System.TimeSpan&gt; value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</source>
          <target state="translated">기본 제한 시간 값을 할당할 수 있습니다는 &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;다음 방법 중 하나에서 개체:-를 호출 하 여는 &lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt;메서드와의 문자열 표현을 제공 하는 &lt;xref:System.TimeSpan&gt;"REGEX_DEFAULT_MATCH_TIMEOUT" 속성에 대 한 값.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt; &lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   By calling the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt; constructor and providing a value for the <ph id="ph1">`matchTimeout`</ph> parameter.</source>
          <target state="translated">-호출는 &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;생성자 및에 대 한 값을 제공 하는 <ph id="ph1">`matchTimeout`</ph> 매개 변수.&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   By setting the value of this property.</source>
          <target state="translated">이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a reasonable time-out interval, consider the following factors:      -   The length and complexity of the regular expression pattern.</source>
          <target state="translated">적절 한 시간 제한 간격을 설정 하려면 다음 요소를 고려:-길이 및 복잡 한 정규식 패턴입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Longer and more complex regular expressions require more time than shorter and simpler ones.</source>
          <target state="translated">길고 복잡 한 정규식 짧고 간단 것 보다 더 많은 시간이 필요합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The expected machine load.</source>
          <target state="translated">-예상된 컴퓨터 로드 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Processing takes more time on systems with high CPU and memory utilization.</source>
          <target state="translated">처리는 높은 CPU 및 메모리 사용률 있는 시스템에서 많은 시간이 소요 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default maximum time interval that can elapse in a pattern-matching operation before a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; is thrown, or <ph id="ph1">&amp;lt;</ph>xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> if time-outs are disabled.</source>
          <target state="translated">되기 전에 패턴 일치 작업에서 경과 될 수 있는 기본 최대 시간 간격을 &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;throw 되며, 또는 <ph id="ph1">&amp;lt;</ph>xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 시간 제한이 해제 되어 있는 경우.&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the type that represents the compiled regular expression.</source>
          <target state="translated">컴파일된 정규식을 나타내는 형식의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;클래스는 컴파일된 정규식을 &lt;xref:System.Text.RegularExpressions.Regex&gt;.&lt;/xref:System.Text.RegularExpressions.Regex&gt; 에서 파생 된 클래스로 표현 됨을 정의 하는 데 사용&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Name property defines the class name of the regular expression type, and the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt; and Name properties together define its fully qualified name.</source>
          <target state="translated">Name 속성 정의 정규식 종류의 클래스 이름 및 &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;및 이름 속성의 정규화 된 이름을 정의 합니다.&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the new type.</source>
          <target state="translated">새로운 유형의 이름입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성의 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value for this property is an empty string.</source>
          <target state="translated">이 속성의 값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace to which the new type belongs.</source>
          <target state="translated">새 형식을 속해 있는 네임 스페이스를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;클래스는 컴파일된 정규식을 &lt;xref:System.Text.RegularExpressions.Regex&gt;.&lt;/xref:System.Text.RegularExpressions.Regex&gt; 에서 파생 된 클래스로 표현 됨을 정의 하는 데 사용&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt; properties together define its fully qualified name.</source>
          <target state="translated">Namespace 속성은 컴파일된 정규식 형식과 Namespace를 포함 하는 네임 스페이스를 정의 하 고 &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;속성의 정규화 된 이름을 정의 합니다.&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The namespace of the new type.</source>
          <target state="translated">새로운 유형의 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성의 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets the options to use when compiling the regular expression.</source>
          <target state="translated">정규식을 컴파일할 때 사용할 옵션을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you do not have to specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of this property.</source>
          <target state="translated">지정할 필요가 없습니다 따라서 &lt;xref:System.Text.RegularExpressions.RegexOptions&gt;이 속성의 값 중 하나로.&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is present, the &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; option is ignored.</source>
          <target state="translated">가 존재 하는 경우는 &lt;xref:System.Text.RegularExpressions.RegexOptions&gt;옵션은 무시 됩니다.&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the regular expression to compile.</source>
          <target state="translated">컴파일할 정규식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Pattern property can contain any valid regular expression.</source>
          <target state="translated">패턴 속성에 유효한 모든 정규식 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method throws an &lt;xref:System.ArgumentException&gt;.</source>
          <target state="translated">패턴 속성의 값이 올바른 구문의 정규식 패턴을 &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; &lt;xref:System.ArgumentException&gt;.&lt;/xref:System.ArgumentException&gt; 를 throw 하는 메서드&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; 를 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">컴파일할 정규식입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성의 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>