<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0259ef4f13fcc4196d38f305bdc2270f95e3db81</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.SemaphoreSecurity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c903acbcd304b645ea02a85f4ec14974635cb827</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c80c78a8872dae0397f235a8e9c0abfade528c63</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the Windows access control security for a named semaphore.</source>
          <target state="translated">명명 된 세마포 Windows 액세스 제어 보안을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A SemaphoreSecurity object specifies access rights for a named system semaphore, and also specifies how access attempts are audited.</source>
          <target state="translated">SemaphoreSecurity 개체는 명명 된 시스템 세마포에 대 한 액세스 권한을 지정 하 고 또한 액세스 시도 감사 하는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access rights to the semaphore are expressed as rules, with each access rule represented by a &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt; object.</source>
          <target state="translated">세마포에 대 한 액세스 권한을 규칙 각 액세스 규칙으로 표시 됩니다는 &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;개체입니다.&lt;/xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each auditing rule is represented by a &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt; object.</source>
          <target state="translated">각 감사 규칙으로 표시 됩니다는 &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;개체입니다.&lt;/xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">각 보안 개체에 최대 한 임의 액세스 제어 목록 (DACL)가 최대 하나의 시스템 액세스 제어 목록 SACL ()는 액세스 시도 감사를 지정 하 고 보안된 개체 액세스를 제어 하는 기본 Windows 보안 시스템을 미러링합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">DACL과 SACL는 액세스 및 사용자 및 그룹에 대 한 감사를 지정 하는 액세스 제어 항목 (ACE)의 목록을 정렬 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt; or &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt; object might represent more than one ACE.</source>
          <target state="translated">A &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;또는 &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;개체는 둘 이상의 ACE를 나타낼 수 있습니다.&lt;/xref:System.Security.AccessControl.SemaphoreAuditRule&gt; &lt;/xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A &lt;xref:System.Threading.Semaphore&gt; object can represent a local semaphore or a named system semaphore.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; A &lt;xref:System.Threading.Semaphore&gt;로컬 세마포가 또는 명명된 된 시스템 세마포 개체를 나타낼 수 있습니다.&lt;/xref:System.Threading.Semaphore&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows access control security is meaningful only for named system semaphores.</source>
          <target state="translated">Windows 액세스 제어 보안은 명명 된 시스템 세마포에 대해서만 의미가 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SemaphoreSecurity, &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;, and &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt; classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">SemaphoreSecurity &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;, 및 &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;클래스 Acl 및 Ace의 구현 세부 정보를 숨깁니다.&lt;/xref:System.Security.AccessControl.SemaphoreAuditRule&gt; &lt;/xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">17 다양 한 ACE 유형 및 상속 및 액세스 권한의 전파를 올바르게 유지 관리의 복잡성을 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These objects are also designed to prevent the following common access control errors:      -   Creating a security descriptor with a null DACL.</source>
          <target state="translated">또한 이러한 개체는 다음과 같은 일반적인 액세스 제어 오류를 방지 하도록 설계:-null DACL을 사용 하 여 보안 설명자 만들기.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">DACL에 null 참조를 모든 사용자를 서비스 거부 공격을 잠재적으로 만드는 개체에 액세스 규칙을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new SemaphoreSecurity object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">새 SemaphoreSecurity 개체는 항상 빈 DACL에서 모든 사용자에 대 한 모든 액세스를 거부로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Violating the canonical ordering of ACEs.</source>
          <target state="translated">-Ace의 정식 순서 위반입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">DACL 목록의 ACE가 정식 순서 대로 유지 되지 않을, 사용자가 실수로에 부여 될 수 액세스 보안된 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">예를 들어, 거부 된 액세스 권한은 항상 액세스 권한이 허용된 하기 전에 나타나야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>SemaphoreSecurity objects maintain the correct order internally.</source>
          <target state="translated">SemaphoreSecurity 개체는 내부적으로 올바른 순서를 유지합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">리소스 관리자 컨트롤 에서만 있어야 하 고 보안 설명자 플래그를 조작 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Creating invalid combinations of ACE flags.</source>
          <target state="translated">-만들기 ACE 플래그의 잘못 된 조합입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Manipulating inherited ACEs.</source>
          <target state="translated">-상속 된 Ace를 조작 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">상속 및 전파 리소스 관리자의 액세스 및 감사 규칙을 적용 한 변경 내용에 대 한 응답에 의해 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">-Acl에 의미 없는 Ace를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:      -   Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">보안 개체를.NET에서 지원 되지 않습니다 유일한 기능은 다음과 같은 응용 프로그램 개발자의 과반수가 피해 야 하는 위험한 작업:-리소스 관리자가 정상적으로 수행 되는 하위 수준 작업입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">-추가 또는 정식 순서를 유지 하지 않는 방법으로 액세스 제어 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To modify Windows access control security for a named semaphore, use the &lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt; method to get the SemaphoreSecurity object.</source>
          <target state="translated">명명 된 세마포 Windows 액세스 제어 보안을 수정 하려면 사용 하 여는 &lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt;메서드 SemaphoreSecurity 개체를 가져옵니다.&lt;/xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the security object by adding and removing rules, and then use the &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt; method to reattach it.</source>
          <target state="translated">추가 하 고 규칙을 제거 하 여 보안 개체를 수정 하 고 &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt;합니다. 다시 연결 하는 메서드&lt;/xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt; 를 사용 합니다</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Changes you make to a SemaphoreSecurity object do not affect the access levels of the named semaphore until you call the &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt; method to assign the altered security object to the named semaphore.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; SemaphoreSecurity 개체에 변경 되지 않습니다 명명 된 세마포의 액세스 수준을 호출 하기 전에 &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt;명명 된 세마포에 변경 된 보안 개체를 할당 하는 메서드.&lt;/xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To copy access control security from one semaphore to another, use the &lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt; method to get a SemaphoreSecurity object representing the access and audit rules for the first semaphore, then use the &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt; method, or a constructor that accepts a SemaphoreSecurity object, to assign those rules to the second semaphore.</source>
          <target state="translated">세마포에서 액세스 제어 보안을 다른 위치로 복사를 사용 하 여는 &lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt;첫 번째 세마포에 대 한 액세스 및 감사 규칙을 나타내는 SemaphoreSecurity 개체를 사용 하 여 다음 메서드는 &lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt;메서드나 SemaphoreSecurity 개체를 이러한 규칙을 두 번째 세마포 할당을 허용 하는 생성자입니다.&lt;/xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the &lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt; method to set access rules for a named semaphore, and the &lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt; method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">보안 설명자 정의 언어 (SDDL)에 투자 사용자가 사용할 수는 &lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;명명된 된 세마포에 대 한 액세스 규칙을 설정 하는 메서드 및 &lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;메서드 SDDL 형식의 액세스 규칙을 나타내는 문자열입니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not recommended for new development.</source>
          <target state="translated">새로운 개발에는 권장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 동기화 개체에 대 한 보안은 Windows 98 또는 Windows Millennium Edition에 대 한 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with default values.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 기본값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">새 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;개체는 항상 모든 사용자에 대 한 모든 액세스를 거부 하는 빈 임의 액세스 목록 (DACL)으로 시작 합니다.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">이 클래스는 Windows 98 또는 Windows Millennium Edition에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified sections of the access control security rules from the system semaphore with the specified name.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 섹션에서 지정 된 이름의 시스템 세마포에 대 한 액세스 제어 보안 규칙의 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor allows you to obtain the access control security for a named system semaphore without first creating a &lt;xref:System.Threading.Semaphore&gt; object.</source>
          <target state="translated">이 생성자를 사용 하면 먼저 만들지 않고 명명 된 시스템 세마포에 대 한 액세스 제어 보안을 가져올 수 있습니다는 &lt;xref:System.Threading.Semaphore&gt;개체입니다.&lt;/xref:System.Threading.Semaphore&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caution must be exercised when working with named system objects.</source>
          <target state="translated">명명 된 시스템 개체로 작업할 때 주의가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a system object named <ph id="ph1">`name`</ph> that is not a semaphore, its control access security might be retrieved.</source>
          <target state="translated">명명 된 시스템 개체 인지 여부 <ph id="ph1">`name`</ph> 세마포 즉, 액세스 제어 보안이 검색 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The name of the system semaphore whose access control security rules are to be retrieved.</source>
          <target state="translated">해당 액세스 제어 보안 규칙을 검색할 수는 시스템 세마포의 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlSections"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flags specifying the sections to retrieve.</source>
          <target state="translated">조합을 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlSections"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색할 섹션을 지정 하는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">이 클래스는 Windows 98 또는 Windows Millennium Edition에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the enumeration that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rights.</source>
          <target state="translated">열거형을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 액세스 권한을 나타내는 데 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">A &lt;xref:System.Type&gt;나타내는 개체는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">지정 된 액세스 권한, 액세스 제어 및 플래그가 지정된 된 사용자에 대 한 새 액세스 제어 규칙을 만듭니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to create access control rules is to use the constructors of the &lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt; class.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;클래스&lt;/xref:System.Security.AccessControl.SemaphoreAccessRule&gt; 의 생성자를 사용 하는 액세스 제어 규칙을 작성 하는 권장된 방법</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 상속 및 전파 플래그는 명명 된 세마포에 대 한 의미가, 없지만 불필요 하 게 복잡 유지 관리, 규칙의 예를 들어 호환 될 수 있는 규칙의 조합에 영향을 주어 때문에 권장 되지 않습니다 권한을 지정할 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식별 하는 사용자 또는 규칙 그룹에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 액세스 권한을 허용 하거나 거부할를 지정 하는 값을 정수로 캐스팅 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">명명 된 세마포는 계층이 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">명명 된 세마포는 계층이 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">명명 된 세마포는 계층이 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 권한 허용 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified rights for the specified user.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 사용자에 대 한 지정된 된 권한을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, 또는 <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> 잘못 된 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> 은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>형식이 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 아니고과 같은 형식 <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 변환할 수 있는 <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rules.</source>
          <target state="translated">형식을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 액세스 규칙을 나타내는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rules.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;속성과 액세스 규칙을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 액세스 규칙을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A &lt;xref:System.Type&gt;나타내는 개체는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Searches for a matching rule with which the new rule can be merged.</source>
          <target state="translated">새 규칙을 병합할 수는 일치 하는 규칙을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">검색 된 항목이 없는 경우 새 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddAccessRule method searches for rules with the same user or group and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAccessRule 메서드를 사용 하 여 동일한 사용자 또는 그룹 및 동일한 규칙에 대 한 검색 &lt;xref:System.Security.AccessControl.AccessControlType&gt;으로 <ph id="ph1">`rule`</ph>.&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">발견 되 면 <ph id="ph1">`rule`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 권한에 <ph id="ph1">`rule`</ph> 기존 규칙과 함께 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The access control rule to add.</source>
          <target state="translated">액세스 제어 규칙 추가입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">새 규칙을 병합할 수는 감사 규칙을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">검색 된 항목이 없는 경우 새 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddAuditRule method searches for rules with the same user or group as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAuditRule 메서드 같은 사용자 또는 그룹을 사용 하 여 규칙에 대 한 검색 <ph id="ph1">`rule`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">발견 되 면 <ph id="ph1">`rule`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 플래그에 <ph id="ph1">`rule`</ph> 기존 규칙에 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The audit rule to add.</source>
          <target state="translated">추가 된 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">이 규칙에 의해 지정 된 사용자가 검색을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">규칙을 적용할 감사, 액세스 권한 및 감사 규칙을 트리거할 결과 사용자 지정 하는 새 감사 규칙을 만듭니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to create audit rules is to use the constructors of the &lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt; class.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;클래스&lt;/xref:System.Security.AccessControl.SemaphoreAuditRule&gt; 의 생성자를 사용 하는 감사 규칙을 만드는 권장된 방법을</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 상속 및 전파 플래그는 명명 된 세마포에 대 한 의미가, 없지만 권한을 지정할 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">이 권장 되지 않습니다을 불필요 하 게 복잡 유지 관리, 규칙의 예를 들어 호환 될 수 있는 규칙의 조합에 영향을 주어 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식별 하는 사용자 또는 규칙 그룹에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 감사 하려면 액세스 권한을 지정 하는 값을 정수로 캐스팅 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">계층이 없으므로 때문에 명명 된 대기 핸들에 대 한 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">계층이 없으므로 때문에 명명 된 대기 핸들에 대 한 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">계층이 없으므로 때문에 명명 된 대기 핸들에 대 한 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specify whether to audit successful access, failed access, or both.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 성공한 액세스, 실패 한 액세스 또는 둘 다 감사 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified audit rule for the specified user.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 사용자에 대 한 지정 된 감사 규칙을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The return type of the method is the base class, <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">메서드의 반환 형식이 기본 클래스 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 하지만 파생 클래스로 반환 값을 안전 하 게 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, 또는 <ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph> 잘못 된 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> 은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>형식이 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 아니고과 같은 형식 <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 변환할 수 있는 <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent audit rules.</source>
          <target state="translated">형식을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 감사 규칙을 나타내는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent audit rights.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;속성 및 감사 권한을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 감사 규칙을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A &lt;xref:System.Type&gt;나타내는 개체는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">동일한 사용자와 액세스 제어 규칙으로 검색 하 고 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (허용 또는 거부) 이러한 규칙이 없으면 지정된 된 액세스 규칙에 포함 된 권한으로 지정된 된 규칙 및 호환 상속 및 전파 플래그;에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; is searched for a rule that has the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">현재 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;된 동일한 사용자와 동일한 규칙에 대 한 검색 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값 <ph id="ph1">`rule`</ph>.&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그러한 규칙이 아무 작업도 및 메서드 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 해당 상속 및 호환성 플래그에 지정 된 플래그와의 호환성에 대 한 확인 <ph id="ph1">`rule`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">호환 가능한 규칙이 아무 작업도 및 메서드 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">에 지정 된 호환 플래그와 함께 규칙이 없으면 권한은 <ph id="ph1">`rule`</ph> 호환 되는 규칙에서 제거 됩니다 메서드에서 반환 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">경우 <ph id="ph1">`rule`</ph> 아무 작업도 수행 해당 권리에 대해, 호환 되는 규칙에 포함 되지 않은 권한을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; object.</source>
          <target state="translated">현재에서 전체 규칙을 제거할 모든 권리를 호환 되는 규칙에서 제거 하면 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;개체입니다.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for semaphore access rules, by creating them with the &lt;xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 세마포 액세스 규칙에 대 한 상속 및 전파 플래그를 만들어 지정할 수는 있지만 &lt;xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A&gt;메서드를 권장 되지 않습니다.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">상속 및 전파 한 의미가 없으며 명명 된 세마포에 대 한 액세스 규칙의 유지 관리 보다 복잡 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 하 고 <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 검색 및 일치 하는 규칙을 하는 경우 상속 및 전파 플래그 집합을 찾을와 호환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">발견 하는 경우 호환 되는 규칙에서 제거할 수 있는 권한을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호환 되는 규칙이 없으면; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Searches for all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">사용자가 제어 규칙을 액세스 하는 모든 검색 및 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (허용 또는 거부) 지정 된 규칙 및 경우 제거 합니다 해당 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; object is searched for rules that have the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">현재 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;개체가 동일한 사용자와 동일한 규칙에 대 한 검색 됩니다 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값 <ph id="ph1">`rule`</ph>.&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">지정한 모든 권한은 <ph id="ph1">`rule`</ph> 이 검색을 수행할 때 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용자 지정 하 고 <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 을 찾으려고 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">이 규칙에 지정 된 모든 권한은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">지정 된과 정확히 일치 하는 액세스 제어 규칙에 대 한 검색 규칙 및 경우 제거 합니다 것입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">정확히 일치 하는 규칙을 제거할 <ph id="ph1">`rule`</ph> 모든 세부 정보에 플래그를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other rules with the same user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; are not affected.</source>
          <target state="translated">동일한 사용자와 다른 규칙 및 &lt;xref:System.Security.AccessControl.AccessControlType&gt;영향을 받지 않습니다.&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 규칙을 나타내는 하나 이상의 기본 액세스 제어 항목 (ACE) 및 이러한 항목은 분할 되거나 사용자에 대 한 액세스 보안 규칙을 수정 하는 경우 필요에 따라 조합 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAccessRuleSpecific method cannot remove it.</source>
          <target state="translated">따라서 규칙 추가 될 때 특정 폼에 더 이상 존재 하 고이 경우 RemoveAccessRuleSpecific 메서드는 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">감사 제어 규칙을 사용자 지정된 규칙와 동일한 사용자와 호환 상속 및 전파 플래그;에 대 한 검색 호환 되는 규칙이 없는 경우 여기에서 지정된 된 규칙에 포함 된 권한이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; is searched for an audit rule that has the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">현재 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;사용자와 동일한 사용자가 감사 규칙에 대 한 검색 <ph id="ph1">`rule`</ph>.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그러한 규칙이 아무 작업도 및 메서드 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 해당 상속 및 호환성 플래그에 지정 된 플래그와의 호환성에 대 한 확인 <ph id="ph1">`rule`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">호환 가능한 규칙이 아무 작업도 및 메서드 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">에 지정 된 호환 플래그와 함께 규칙이 없으면 권한은 <ph id="ph1">`rule`</ph> 호환 되는 규칙에서 제거 됩니다 메서드에서 반환 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">경우 <ph id="ph1">`rule`</ph> 아무 작업도 수행 해당 권리에 대해, 호환 되는 규칙에 포함 되지 않은 권한을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; object.</source>
          <target state="translated">현재에서 전체 규칙을 제거할 모든 권리를 호환 되는 규칙에서 제거 하면 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;개체입니다.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for semaphore audit rules, by creating them with the &lt;xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 세마포 감사 규칙, 상속 및 전파 플래그를 만들어 지정할 수는 있지만 &lt;xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A&gt;메서드를 권장 되지 않습니다.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">상속 및 전파 한 의미가 없으며 명명 된 세마포에 대 한 감사 규칙의 유지 관리 보다 복잡 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색할 사용자와 일치 하는 규칙, 상속 및 전파 플래그 집합이 지정 하는 경우 발견와 호환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">발견 하는 경우 호환 되는 규칙에서 제거할 수 있는 권한을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호환 되는 규칙이 없으면; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">검색이 모든 감사 규칙은 지정 된 규칙으로 같은 사용자가 있으며 하는 경우 제거 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt; is searched for audit rules that have the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">현재 &lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;는 동일한 사용자로 포함 하는 감사 규칙에 대 한 검색 <ph id="ph1">`rule`</ph>.&lt;/xref:System.Security.AccessControl.SemaphoreSecurity&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">지정한 모든 권한은 <ph id="ph1">`rule`</ph> 이 검색을 수행할 때 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>All matching rules are removed.</source>
          <target state="translated">모든 일치 규칙 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">일치 하는 규칙 발견 되 면 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색할 사용자 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">이 규칙에 지정 된 모든 권한은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">지정 된과 정확히 일치 하는 감사 규칙에 대 한 검색 규칙 및 경우 제거 합니다 것입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">정확히 일치 하는 규칙을 제거할 <ph id="ph1">`rule`</ph> 모든 세부 정보에 플래그를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">동일한 사용자에 대 한 다른 감사 규칙의 영향을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 규칙을 나타내는 하나 이상의 기본 액세스 제어 항목 (ACE) 및 이러한 항목은 분할 되거나 사용자에 대 한 감사 보안 규칙을 수정 하는 경우 필요에 따라 조합 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAuditRuleSpecific method cannot remove it.</source>
          <target state="translated">따라서 규칙 추가 될 때 특정 폼에 더 이상 존재 하 고이 경우 RemoveAuditRuleSpecific 메서드는 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and then adds the specified rule.</source>
          <target state="translated">에 관계 없이 사용자가 지정된 된 규칙으로 모든 액세스 제어 규칙을 제거 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 다음은 지정 된 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">사용자가 지정한 규칙과 일치 하는 액세스 규칙이 없으면 없으면 <ph id="ph1">`rule`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">이 규칙에 의해 지정 된 사용자를이 규칙을 추가 하기 전에 제거 하는 규칙을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">사용자가 모든 액세스 제어 규칙을 제거 하 고 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (허용 또는 거부) 지정된 된 규칙으로 다음 지정된 된 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, the effect of this method is to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">지정 된 규칙의 경우 &lt;xref:System.Security.AccessControl.AccessControlType&gt;,이 방법의 효과 모두 제거 하는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;지정한 규칙으로 대체 하는 지정 된 사용자에 대 한 규칙.&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">지정 된 규칙의 경우 &lt;xref:System.Security.AccessControl.AccessControlType&gt;모든 &lt;xref:System.Security.AccessControl.AccessControlType&gt;지정된 된 사용자에 대 한 규칙은 지정 된 규칙으로 대체 됩니다.&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no rules whose user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; match the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">있는 경우 규칙이 없으면 해당 사용자 및 &lt;xref:System.Security.AccessControl.AccessControlType&gt;지정 된 규칙과 일치 <ph id="ph1">`rule`</ph> 추가 됩니다.&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">사용자 및 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 규칙의이 규칙은 추가 되기 전에 제거 하는 규칙을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, and then adds the specified rule.</source>
          <target state="translated">모든 감사 사용자가 지정된 된 규칙으로 규칙에 관계 없이 제거는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값을 복사한 다음 지정 된 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">사용자가 지정한 규칙과 일치 하는 감사 규칙이 없으면 없으면 <ph id="ph1">`rule`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.SemaphoreAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">이 규칙에 의해 지정 된 사용자를이 규칙을 추가 하기 전에 제거 하는 규칙을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>