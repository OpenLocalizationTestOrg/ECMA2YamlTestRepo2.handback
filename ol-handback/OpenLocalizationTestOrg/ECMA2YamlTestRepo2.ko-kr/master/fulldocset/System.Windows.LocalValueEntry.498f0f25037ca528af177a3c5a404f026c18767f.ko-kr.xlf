<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0adf9a5dad1994515d0626f658e616d4fcdca6b7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.LocalValueEntry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37fad7355a56ea052047008155f497affff9d39c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b31d10d6bec5e0b89f07a091bbc32a576b6694d9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a property identifier and the property value for a locally set dependency property.</source>
          <target state="translated">속성 식별자 및 로컬로 설정에 대 한 속성 값을 나타내는 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this class are returned when getting the value of the &lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt; property of a &lt;xref:System.Windows.LocalValueEnumerator&gt;.</source>
          <target state="translated">이 클래스의 인스턴스는 &lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt; &lt;xref:System.Windows.LocalValueEnumerator&gt;.&lt;/xref:System.Windows.LocalValueEnumerator&gt; 속성&lt;/xref:System.Windows.LocalValueEnumerator.Current%2A&gt; 의 값을 가져올 때 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>All LocalValueEntry properties are read-only.</source>
          <target state="translated">모든 LocalValueEntry 속성은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class has no public constructor.</source>
          <target state="translated">이 클래스는 공용 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to obtain instances of this class you must call &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;, and then get the value of &lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt; from the returned &lt;xref:System.Windows.LocalValueEnumerator&gt;.</source>
          <target state="translated">호출한 다음이 클래스의 인스턴스를 가져오려면 &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;, &lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;반환 된 &lt;xref:System.Windows.LocalValueEnumerator&gt;.&lt;/xref:System.Windows.LocalValueEnumerator&gt; &lt;/xref:System.Windows.LocalValueEnumerator.Current%2A&gt; 의 값을 가져온 후&lt;/xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Determines whether two <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances are equal.</source>
          <target state="translated">두 결정 <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스는 같습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare with the current <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재과 비교할 <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.Windows.LocalValueEntry.op_Equality<bpt id="p1">*</bpt>&gt; implementation compares the values of the &lt;xref:System.Windows.LocalValueEntry.Property<ept id="p1">*</ept>&gt;, and potentially compares the values of &lt;xref:System.Windows.LocalValueEntry.Value<bpt id="p2">*</bpt>&gt;. The &lt;xref:System.Windows.LocalValueEntry.Property<ept id="p2">*</ept>&gt; component of a <bpt id="p3">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is a value type, so will always be a bitwise comparison.</source>
          <target state="translated">이 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;의 값을 비교 하는 구현에서 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;, 잠재적으로 값을 비교 하 고 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 합니다. &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;의 구성 요소는 <bpt id="p3">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 이므로 항상 비트 비교 값 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For the &lt;xref:System.Windows.LocalValueEntry.Value*&gt; component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Windows.LocalValueEntry.Value*&gt;구성 요소를이 구현에서는 비트 비교 값 형식이 면.&lt;/xref:System.Windows.LocalValueEntry.Value*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally.</source>
          <target state="translated">로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 내부적으로 두 개의 값 연산자 = = 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By default, this would be a reference equality of the values and thus the equality of the entire <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> would become a reference equality.</source>
          <target state="translated">기본적으로 일 값의 참조 일치와 전체 같음 <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가 참조 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 해시 코드를 반환 합니다. <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">부호 있는 32 비트 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Compares the specified <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances to determine whether they are the same.</source>
          <target state="translated">지정 된 비교 <bpt id="p1">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 동일한 지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This Equality implementation compares the values of the &lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;, and potentially compares the values of &lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;.</source>
          <target state="translated">값을 비교 하는이 같음 구현은 &lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;, 잠재적으로 &lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;.&lt;/xref:System.Windows.LocalValueEntry.Value%2A&gt; 의 값을 비교 하 고&lt;/xref:System.Windows.LocalValueEntry.Property%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.LocalValueEntry.Property%2A&gt; component of a &lt;xref:System.Windows.LocalValueEntry&gt; is always a value type, so this comparison will always be a bitwise value comparison.</source>
          <target state="translated">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;의 구성 요소는 &lt;xref:System.Windows.LocalValueEntry&gt;은 항상 값 형식 이므로이 비교는 항상 비트 값 비교 합니다.&lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.LocalValueEntry.Property%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Windows.LocalValueEntry.Value%2A&gt; component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;구성 요소를이 구현에서는 비트 비교 값 형식이 면.&lt;/xref:System.Windows.LocalValueEntry.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">`==`</ph> operator on the two values internally.</source>
          <target state="translated">로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 <ph id="ph1">`==`</ph> 연산자의 두 값이 내부적으로 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">기본적으로이 값의 참조 일치 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
          <target state="translated">비교할 첫 번째 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
          <target state="translated">비교할 두 번째 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj1</ph><ept id="p2">&lt;/code&gt;</ept><bpt id="p3">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is equal to the <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">obj2</ph><ept id="p4">&lt;/code&gt;</ept><bpt id="p5">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>; otherwise, <bpt id="p6">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj1</ph><ept id="p2">&lt;/code&gt;</ept><bpt id="p3">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is equal to the <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">obj2</ph><ept id="p4">&lt;/code&gt;</ept><bpt id="p5">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>; otherwise, <bpt id="p6">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compares the specified <bpt id="p1">&lt;xref href="System.Windows.LocalValueEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances to determine whether they are different.</source>
          <target state="translated">지정 된 비교 <bpt id="p1">&lt;xref href="System.Windows.LocalValueEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 다른 지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
          <target state="translated">비교할 첫 번째 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
          <target state="translated">비교할 두 번째 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This implementation compares the values of the &lt;xref:System.Windows.LocalValueEntry.Property<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Windows.LocalValueEntry.Value<ept id="p1">*</ept>&gt; components of a <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값을 비교 하는이 구현에서 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 구성 요소는 <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.LocalValueEntry.Property<bpt id="p1">*</bpt>&gt; component of a <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is always a value type, so this comparison will always be a bitwise comparison. For the &lt;xref:System.Windows.LocalValueEntry.Value<ept id="p1">*</ept>&gt; component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;의 구성 요소는 <bpt id="p2">&lt;xref href="System.Windows.LocalValueEntry"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 은 항상 값 형식 이므로이 비교는 항상 비트 비교 합니다. 에 대 한는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 구성 요소를이 구현에서는 비트 비교 값 형식인 경우.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <bpt id="p1">&lt;xref uid="langword_csharp_==" name="==" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> operator on the two values internally.</source>
          <target state="translated">로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 <bpt id="p1">&lt;xref uid="langword_csharp_==" name="==" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연산자의 두 값이 내부적으로 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">기본적으로이 값의 참조 일치 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the identifier for the locally set dependency property that is represented by this entry.</source>
          <target state="translated">로컬에서 설정에 대 한 식별자를 가져옵니다.이 항목에 의해 표시 되는 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to query the identifier of the locally set dependency property and to obtain its metadata.</source>
          <target state="translated">이 속성을 사용 하 여 로컬로 설정의 식별자를 쿼리하고을 종속성 속성의 메타 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This obtained metadata may include the initial default value of the property and whether the property supports property value inheritance.</source>
          <target state="translated">이렇게 가져온된 메타 데이터 속성 및 속성의 속성 값 상속이 지원 하는지 여부의 초기 기본값을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The identifier for the locally set dependency property.</source>
          <target state="translated">로컬에서 설정에 대 한 식별자 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the value of the locally set dependency property.</source>
          <target state="translated">로컬에서 설정의 값을 가져옵니다 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine a more specific type for this value, check the &lt;xref:System.Windows.LocalValueEntry.Property%2A&gt; for the current &lt;xref:System.Windows.LocalValueEntry&gt; and get its &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;.</source>
          <target state="translated">이 값에 대해 더 구체적인 형식을 확인 하려면 &lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;현재 &lt;xref:System.Windows.LocalValueEntry&gt;해당 &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.PropertyType%2A&gt; 가져오기 및&lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.LocalValueEntry.Property%2A&gt; 확인</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The value of the locally set dependency property as an object.</source>
          <target state="translated">로컬에서 설정의 값으로 개체 종속성 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>