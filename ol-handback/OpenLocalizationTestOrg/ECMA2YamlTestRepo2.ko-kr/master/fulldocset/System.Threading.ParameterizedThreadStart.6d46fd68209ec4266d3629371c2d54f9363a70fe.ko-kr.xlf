<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e380be4474237c2f088cb14445641a67f71425b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.ParameterizedThreadStart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">878eece72fe1260cf9bf5cbd3ae706b8d9e9a2a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44c10de7aee5cd9759c15f18c6f0a26c87b5d110</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that executes on a <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">실행 되는 메서드를 나타냅니다는 <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a managed thread is created, the method that executes on the thread is represented by:      -   A &lt;xref:System.Threading.ThreadStart&gt; delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">스레드에서 실행 되는 메서드의 관리 되는 스레드를 만들면 나타내는:- &lt;xref:System.Threading.ThreadStart&gt;에 전달 되는 대리자는 &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt;생성자.&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; &lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any method that has no parameters and that returns <ph id="ph1">`void`</ph> in C# or is a <ph id="ph2">`Sub`</ph> procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">매개 변수가 없는 및 반환 하는 모든 메서드에 <ph id="ph1">`void`</ph> C# 또는 <ph id="ph2">`Sub`</ph> Visual Basic의 프로시저 대리자를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A ParameterizedThreadStart delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">-ParameterizedThreadStart 대리자에 전달 되는 &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;생성자.&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any method that has a single parameter of type &lt;xref:System.Object&gt; and that returns void in C# or is a Sub procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">형식의 단일 매개 변수를 가진 모든 메서드에 &lt;xref:System.Object&gt;되 고, C#에서 void를 반환 하거나는 Sub 프로시저 Visual Basic에서 대리자를 나타낼 수 있습니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread does not begin executing until the &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">스레드가 실행 될 때까지 시작 되지 않습니다는 &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;메서드를 호출 합니다.&lt;/xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate is invoked on the thread, and execution begins at the first line of the method represented by the delegate.</source>
          <target state="translated">&lt;xref:System.Threading.ThreadStart&gt;스레드에서 호출 되는 ParameterizedThreadStart 대리자와 대리자가 나타내는 메서드의 첫 번째 줄에서 실행이 시작 또는.&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of the ParameterizedThreadStart delegate, the object that is passed to the &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt; method is passed to the delegate.</source>
          <target state="translated">ParameterizedThreadStart 대리자에 전달 되는 개체의 경우는 &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt;메서드에 대리자에 전달 됩니다.&lt;/xref:System.Threading.Thread.Start%28System.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Visual Basic and C# users can omit the &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate constructor when creating a thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Visual Basic 및 C# 사용자가 생략할 수는 &lt;xref:System.Threading.ThreadStart&gt;또는 스레드를 만드는 경우 ParameterizedThreadStart 대리자 생성자.&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the &lt;xref:System.Threading.Thread.%23ctor%2A&gt; constructor; for example, <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">Visual Basic에서 사용 하 여는 <ph id="ph1">`AddressOf`</ph> 되어 메서드가 전달 하는 경우 연산자는 &lt;xref:System.Threading.Thread.%23ctor%2A&gt;생성자; 예를 들어 <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.&lt;/xref:System.Threading.Thread.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">C#에서는 스레드 프로시저의 이름을 지정 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">컴파일러는 올바른 대리자 생성자를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you create a ParameterizedThreadStart delegate for an instance method in C++, the first parameter of the constructor is the instance variable.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 생성자의 첫 번째 매개 변수 인스턴스 변수는 c + +에서 인스턴스 메서드의 ParameterizedThreadStart 대리자를 만들 때.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a static method, the first parameter of the constructor is zero.</source>
          <target state="translated">정적 메서드를 생성자의 첫 번째 매개 변수는&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a static method, the delegate constructor requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">정적 메서드의 대리자 생성자에 매개 변수가 하나만 필요한: 클래스 이름으로 정규화 된 콜백 메서드의 주소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ParameterizedThreadStart delegate and the &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; method overload make it easy to pass data to a thread procedure, but this technique is not type safe because any object can be passed to &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">ParameterizedThreadStart 대리자와는 &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;모든 개체와 &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;사이로&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; 전달 될 수 있으므로 형식이 안전 하지를 쉽게 스레드 프로시저에 있지만이 방법은 데이터를 전달 하 메서드 오버 로드 확인&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</source>
          <target state="translated">스레드 프로시저에 데이터를 전달 하는 보다 강력한 방법은 작업자 개체에 데이터 필드와 스레드 프로시저를 넣는 것입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>스레드 만들기 및 시작 시 데이터 전달<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ParameterizedThreadStart delegate supports only a single parameter.</source>
          <target state="translated">ParameterizedThreadStart 대리자에는 하나의 매개 변수만 지원합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass multiple data items to the ParameterizedThreadStart by making that parameter one of the following:      -   An array.</source>
          <target state="translated">다음 중 하나는 해당 매개 변수를 만들어서는 ParameterizedThreadStart에 여러 데이터 항목을 전달할 수 있습니다.-배열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A collection type, if all of the data items are of the same type.</source>
          <target state="translated">-컬렉션 형식과 동일한 형식의 모든 데이터 항목의 경우.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A tuple type, such as &lt;xref:System.Tuple%602&gt; or &lt;xref:System.Tuple%604&gt;.</source>
          <target state="translated">-는 튜플 형식 &lt;xref:System.Tuple%602&gt;또는 &lt;xref:System.Tuple%604&gt;.&lt;/xref:System.Tuple%604&gt; &lt;/xref:System.Tuple%602&gt; 예:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>