<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8c5b6763f05ac7f416589554b07395541fc6f11</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.ResourceExpressionFields.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58ec911a985003bf06068be9a6a8c6b22eba3cbd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">367ef020ec4889dd56b11b17a7d5bce86a2b9f44</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains the fields from a parsed resource expression.</source>
          <target state="translated">리소스 구문 분석 된 식에서 필드를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a page is parsed, the values contained in a resource expression are parsed and stored in an instance of the ResourceExpressionFields class.</source>
          <target state="translated">페이지 구문 분석 되 면 리소스 식에 포함 된 구문 분석 되 고 ResourceExpressionFields 클래스의 인스턴스에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ResourceExpressionFields object contains two fields, &lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt; and &lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;.</source>
          <target state="translated">이 ResourceExpressionFields 개체 &lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt;및 &lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;.&lt;/xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt; &lt;/xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt; 두 필드에 포함</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>These fields are drawn from the values of a resource expression in either the explicit (<ph id="ph1">`&lt;%$ Resources: ClassKey, ResourceKey %&gt;`</ph>) or implicit (<ph id="ph2">`meta:resourcekey="ResourceKey"`</ph>) form.</source>
          <target state="translated">이러한 필드에는 명시적 리소스 식을 값에서 가져온 것 (<ph id="ph1">`&lt;%$ Resources: ClassKey, ResourceKey %&gt;`</ph>) 또는 암시적 (<ph id="ph2">`meta:resourcekey="ResourceKey"`</ph>) 형식입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt; property identifies the class name of a resource that is mapped to a resource file.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt;리소스 파일에 매핑되는 리소스의 클래스 이름 속성을 식별 합니다.&lt;/xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to reference a resource file named Financial.resx, or a localized version such as Financial.en-GB.resx, the resource expression would appear as <ph id="ph1">`&lt;%$ Resources: Financial, ResourceKey %&gt;`</ph>.</source>
          <target state="translated">예를 들어 Financial.resx, 또는 Financial.en GB.resx 같은 다른 언어 버전 라는 리소스 파일을 참조 하려면 리소스 식은 것으로 표시 <ph id="ph1">`&lt;%$ Resources: Financial, ResourceKey %&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parsing, the &lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt; property would return "Financial" as its value.</source>
          <target state="translated">구문 분석 한 후의 &lt;xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt;속성 값으로 "Financial"를 반환 합니다.&lt;/xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt; property identifies the particular key/value pair to be retrieved from the file.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;속성 파일에서 검색할 특정 키/값 쌍을 식별 합니다.&lt;/xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Financial.resx file contains a key called <ph id="ph1">`Currency`</ph>, that value could be specified with the resource expression <ph id="ph2">`&lt;%$ Resources: Financial, Currency %&gt;`</ph>.</source>
          <target state="translated">Financial.resx 파일 라는 키를 포함 하는 경우 <ph id="ph1">`Currency`</ph>, 리소스 식과 값을 지정할 수 있음을 <ph id="ph2">`&lt;%$ Resources: Financial, Currency %&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parsing, the &lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt; property would return "Currency" as its value.</source>
          <target state="translated">구문 분석 한 후의 &lt;xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;속성 값으로 "Currency"를 반환 합니다.&lt;/xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource expression is parsed through the &lt;xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A&gt; method.</source>
          <target state="translated">리소스 식을 통해 구문 분석 되 고 &lt;xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A&gt;메서드.&lt;/xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Sensitive information should not be stored in a resource file.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 리소스 파일에 중요 한 정보를 저장 하지 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the class key for a parsed resource expression.</source>
          <target state="translated">리소스 구문 분석 된 식에 대 한 클래스 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the class key for a parsed resource expression.</source>
          <target state="translated">이 메서드는 리소스를 구문 분석 된 식에 대 한 클래스 키를 반환합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class key represents the name of the resource file, and is the value specified before the comma (,) in an expression of the form <ph id="ph1">`&lt;%$ Resources: [Namespace.]ClassKey, ResourceKey $&gt;`</ph>.</source>
          <target state="translated">클래스 키 리소스 파일의 이름을 나타내고 폼의 식에 쉼표 (,) 하기 전에 지정 된 값이 <ph id="ph1">`&lt;%$ Resources: [Namespace.]ClassKey, ResourceKey $&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A namespace value for the resource class is optional.</source>
          <target state="translated">리소스 클래스에 대 한 네임 스페이스 값은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a namespace is provided, the namespace and the class key are returned in the ClassKey property.</source>
          <target state="translated">네임 스페이스 제공 되 면 네임 스페이스 및 클래스 키 ClassKey 속성에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class key cannot contain spaces or double-byte character sets (DBCS).</source>
          <target state="translated">클래스 키에 공백이 없어야 합니다. 또는 더블 바이트 문자 집합 (DBCS).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reference a resource file named Financial.resx or a localized version such as Financial.en-GB.resx, you would include the resource expression &lt;<ph id="ph1">`%$ Resources: Financial, ResourceKey %&gt;`</ph>.</source>
          <target state="translated">리소스 식은 Financial.resx 또는 Financial.en GB.resx 같은 다른 언어 버전 라는 리소스 파일을 참조 하려면 포함 <ph id="ph1">`%$ Resources: Financial, ResourceKey %&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parsing, the ClassKey property would return "Financial" as its value.</source>
          <target state="translated">구문 분석 한 후 ClassKey 속성은 해당 값으로 "Financial"을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Sensitive information should not be stored in a resource file.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 리소스 파일에 중요 한 정보를 저장 하지 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the class key, or &lt;xref:System.String&gt; if the class key has not been set.</source>
          <target state="translated">A &lt;xref:System.String&gt;클래스 키가 포함 된 또는 &lt;xref:System.String&gt;클래스 키가 설정 되어 있지 않으면.&lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a parsed resource expression.</source>
          <target state="translated">리소스 구문 분석 된 식에 대 한 리소스 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the resource key for a parsed resource expression.</source>
          <target state="translated">이 메서드는 리소스를 구문 분석 된 식에 대 한 리소스 키를 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource key is the value specified after the comma (,) in an expression of the form <ph id="ph1">`&lt;%$ Resources: ClassKey, ResourceKey %&gt;`</ph>.</source>
          <target state="translated">리소스 키는 폼의 식에 쉼표 (,) 한 후 지정 된 값 <ph id="ph1">`&lt;%$ Resources: ClassKey, ResourceKey %&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ResourceKey property identifies a particular key/value pair within the resource file mapped to the class key.</source>
          <target state="translated">ResourceKey 속성 클래스 키에 매핑된 리소스 파일 내에서 특정 키/값 쌍을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a file named Financial.resx contains a key called <ph id="ph1">`Currency`</ph>, that value could be specified with the resource expression <ph id="ph2">`&lt;%$ Resources: Financial, Currency %&gt;`</ph>.</source>
          <target state="translated">예를 들어 라는 파일 Financial.resx 포함 라는 키 <ph id="ph1">`Currency`</ph>, 리소스 식과 값을 지정할 수 있음을 <ph id="ph2">`&lt;%$ Resources: Financial, Currency %&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parsing, the ResourceKey property would return "Currency" as its value.</source>
          <target state="translated">구문 분석 한 후 ResourceKey 속성 값으로 "Currency"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Sensitive information should not be stored in a resource file.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 리소스 파일에 중요 한 정보를 저장 하지 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the resource key, or &lt;xref:System.String&gt; if the resource key has not been set.</source>
          <target state="translated">A &lt;xref:System.String&gt;리소스 키가 포함 된 또는 &lt;xref:System.String&gt;리소스 키가 설정 되어 있지 않으면.&lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>