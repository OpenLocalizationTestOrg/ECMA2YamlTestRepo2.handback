<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8625c9f5884954010a1995d5e05ac6b42d1e13d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Http.MultipartContent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f4f7422cc7b1e1c5eed93242aff7a2cbd569324</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ddca88583d855690138f623467f2905e0476c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">컬렉션을 제공 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The subtype of the multipart content.</source>
          <target state="translated">다중 파트 콘텐츠의 하위 형식입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subtype</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or contains only white space characters.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">subtype</ph> <ept id="p1">&lt;/code&gt;</ept> 되었습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이거나 공백 문자만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The subtype of the multipart content.</source>
          <target state="translated">다중 파트 콘텐츠의 하위 형식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The boundary string for the multipart content.</source>
          <target state="translated">다중 파트 콘텐츠의 경계 문자열입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subtype</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">subtype</ph> <ept id="p1">&lt;/code&gt;</ept> 되었습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or contains only white space characters.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept> 되었습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이거나 공백 문자만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> ends with a space character.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept> 공백 문자로 끝납니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> was greater than 70.</source>
          <target state="translated">길이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept> 70 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add multipart HTTP content to a collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">다중 파트 HTTP 콘텐츠를 컬렉션에 추가 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The HTTP content to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 HTTP 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 삭제 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.When the <ph id="ph4">`disposing`</ph> parameter is <ph id="ph5">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.MultipartContent&gt; references.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 와 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다. 경우는 <ph id="ph4">`disposing`</ph> 매개 변수는 <ph id="ph5">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Net.Http.MultipartContent&gt;참조.&lt;/xref:System.Net.Http.MultipartContent&gt;&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification..</source>
          <target state="translated">컬렉션을 반복 하는 열거자를 반환 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을...</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 언어 (각각에 대해 Visual basic에서)의 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 foreach를 사용 하는 것 보다 열거자를 직접 조작 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복 하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Serialize the multipart HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 스트림에 HTTP 콘텐츠 다중 파트를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been serialized to the target stream.</source>
          <target state="translated">반환 된 &lt;xref:System.Threading.Tasks.Task%601&gt;대상 스트림으로 serialize 된 모든 콘텐츠 개체 완성 합니다.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">대상 스트림입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">(채널 바인딩 토큰 예를 들어) 전송 하는 방법에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 작업 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The explicit implementation of the &lt;xref:System.Net.Http.MultipartContent.GetEnumerator*&gt; method.</source>
          <target state="translated">명시적 구현이 &lt;xref:System.Net.Http.MultipartContent.GetEnumerator*&gt;메서드.&lt;/xref:System.Net.Http.MultipartContent.GetEnumerator*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복 하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determines whether the HTTP multipart content has a valid length in bytes.</source>
          <target state="translated">HTTP 다중 파트 콘텐츠의 길이 (바이트)에서에 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TryComputeLength method gives HTTP multipart content the ability to calculate the content length.</source>
          <target state="translated">TryComputeLength 메서드 콘텐츠 길이 계산 하는 HTTP 다중 파트 콘텐츠를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">쉽게 콘텐츠 길이 계산할 수 있는 콘텐츠 형식에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">콘텐츠 길이 수 없거나 비용이 많이 드는 (해야 직렬화는 비용이 많이 들 수 하거나 많은 양의 메모리를 할당할 수 있는 전체 콘텐츠를 버퍼링 하는 시스템) 컴퓨팅,이 메서드가 반환할 수 있습니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`false`</ph>,이 청크 분할된 전송 필요 없거나 서버에 전송 되기 전에 콘텐츠 버퍼링 해야 되 의미 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The length in bytes of the HHTP content.</source>
          <target state="translated">HHTP 콘텐츠의 길이 (바이트)에서입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p2">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">length</ph> <ept id="p2">&lt;/code&gt;</ept> 올바르면, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>