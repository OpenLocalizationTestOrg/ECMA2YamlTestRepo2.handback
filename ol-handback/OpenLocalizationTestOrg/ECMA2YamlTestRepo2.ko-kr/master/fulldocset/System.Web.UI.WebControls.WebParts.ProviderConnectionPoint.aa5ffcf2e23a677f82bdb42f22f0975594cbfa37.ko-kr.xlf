<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb8f9739e674c5062a08210f1e8f16b2798f50ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffa411797e8ce555383163d6b4379a98d5bf31a3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07d6684782aa957af7231de75350efc1a406fb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</source>
          <target state="translated">역할 공급자는 소비자와의 연결을 형성 하는 서버 컨트롤 수 있도록 하는 연결 지점 개체를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">두 개의 서버 컨트롤 간의 모든 웹 파트 연결에서 각 컨트롤은 다른 컨트롤에 연결 하 고 제공 하거나 공급자 또는 소비자 연결에 대 한 컨트롤 지정 된 여부에 따라 데이터를 사용할 수 있도록 하는 관련 된 연결 지점 개체 (다른 요구 사항) 간에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;개체 일반적 공유할 수 있는 데이터의 형식과 다른 컨트롤에 컨트롤 연결 방법에 대 한 세부 정보를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a control acting as the provider in a connection, its connection point must be a ProviderConnectionPoint object.</source>
          <target state="translated">연결에서 공급자 역할을 하는 컨트롤의 경우 연결 지점은 ProviderConnectionPoint 개체 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</source>
          <target state="translated">웹 파트 연결 및 연결 지점에 대 한 자세한 내용은 아래 참고 항목 섹션에 나열 된 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a ProviderConnectionPoint object, several steps are required:      1.</source>
          <target state="translated">ProviderConnectionPoint 개체를 만들려면 몇 가지 단계를 수행 해야 합니다. 1.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an interface.</source>
          <target state="translated">인터페이스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</source>
          <target state="translated">공급자는 소비자와 데이터를 공유 경우 인터페이스의 인스턴스를 얻는 하는 소비자에 게 해당 인스턴스를 반환 하 여 수행 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the interface in a provider.</source>
          <target state="translated">공급자에 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; or other server control (any type of server control in a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone can be used) that will be the provider must implement the interface created in the first step.</source>
          <target state="translated">A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;또는 기타 서버 컨트롤 (모든 종류의 서버 컨트롤의 한 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;영역을 사용할 수 있습니다) 공급자는 첫 번째 단계에서 만든 인터페이스를 구현 해야 사용 됩니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identify a callback method.</source>
          <target state="translated">콜백 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A method in the provider must be identified as the callback method to establish a connection.</source>
          <target state="translated">공급자의 메서드는 연결을 설정 하는 콜백 메서드로 식별 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an instance of the implemented interface to a consumer.</source>
          <target state="translated">이 메서드는 구현된 된 인터페이스의 인스턴스는 소비자에 게 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Web Parts approach for identifying a callback method in the provider is to add a <ph id="ph1">`ConnectionProvider`</ph> metadata attribute (defined by the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt; class) to the method that returns the interface instance.</source>
          <target state="translated">공급자에서 콜백 메서드를 식별 하는 데 웹 파트 방법은 추가 하는 <ph id="ph1">`ConnectionProvider`</ph> 메타 데이터 특성 (정의한는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;클래스) 인터페이스 인스턴스를 반환 하는 메서드에.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the attribute is added, the only required parameter is a display name to use for the provider connection point.</source>
          <target state="translated">특성이 추가 되 면 필요한 유일한 매개 변수는 공급자 연결 지점에 사용할 표시 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional parameters can also be added, such as an ID for the connection point.</source>
          <target state="translated">선택적 매개 변수는 연결점에 대 한 ID 같은 추가할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</source>
          <target state="translated">컨트롤 공급자 역할을 하도록 설정 된 후 컨트롤 (구비 하 고 사용 가능한 소비자 컨트롤 마찬가지로 라고 가정함) 연결에 참여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">웹 페이지의 태그에는 정적 선언적 연결을 만들려면 개발자가 사용할 수는 <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ConnectionProvider`</ph> attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ProviderConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">경우는 <ph id="ph1">`ConnectionProvider`</ph> 연결 지점에 대 한 ID를 지정 하는 콜백 메서드를 식별 하는 공급자 소스 코드에서 해당 값에 할당 되어야 합니다는 <ph id="ph2">`ProviderConnectionPointID`</ph> 특성에 <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> 는 페이지입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</source>
          <target state="translated">개발자가 공급자 연결 지점에 대 한 ID를 지정할 수 하나의 이유 공급자 컨트롤에 연결 지점이 여러 개 있기 때문입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the <ph id="ph1">`ProviderConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt; field.</source>
          <target state="translated">값 공급자 컨트롤의 공급자 연결 지점에 대 한 ID를 지정 하지 않으면에 할당할 필요가 없습니다는 <ph id="ph1">`ProviderConnectionPointID`</ph> 만들어지므로 연결에서 가져온 기본값을 사용 하 여 페이지에서, 특성은 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;필드.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a connection in code, developers must create a new ProviderConnectionPoint object by calling the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method and passing to it the ID of the provider control, along with the ID or index of the defined ProviderConnectionPoint object in the provider control.</source>
          <target state="translated">코드에 대 한 연결을 만들려면 개발자 만들어야 새 ProviderConnectionPoint 개체를 호출 하 여는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;메서드와 ID 또는 공급자 컨트롤에 정의 된 ProviderConnectionPoint 개체의 인덱스와 함께 공급자 컨트롤의 ID를 전달 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned ProviderConnectionPoint object, along with a reference to the provider control, a reference to the consumer control, and a corresponding &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; object, are all passed to the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; method to create a new &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; object.</source>
          <target state="translated">공급자 컨트롤에 대 한 참조, 해당 소비자 컨트롤에 대 한 참조와 함께 반환된 된 ProviderConnectionPoint 개체 &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;개체를 모두에 전달 되는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;만드는 새 메서드를 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;개체입니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</source>
          <target state="translated">개발자를 사용할 수 있지만 공급자 연결 지점 선언적으로 또는 프로그래밍 방식으로 연결 설정의 일부로 사용자가 사용자 인터페이스 (UI)를 통해 연결을 설정할 수 있는 공급자 연결 지점이 상호 작용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If developers declare a &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt; control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">개발자가 선언 하는 경우는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;컨트롤이 웹 페이지에서 연결을 생성 하는 사용자를 위해 런타임에 UI를 제공 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</source>
          <target state="translated">사용자가 클릭 하 여 연결을 설정 하기 위한 시작 지점으로 소비자 컨트롤을 선택 하는 경우 해당 연결 동사 (공급자를 선택할 수도; 동일한 차이점이) UI에서 사용할 수 있는 공급자 연결 지점 (또는 여러 세션에 있는 경우 지점)의 표시 이름으로 드롭다운 목록 컨트롤이 나타납니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users must select a provider connection point to create a connection.</source>
          <target state="translated">사용자가 연결을 만드는 공급자 연결 지점을 선택 해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ProviderConnectionPoint object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint 개체는 특정 공급자 컨트롤 직접 연결 하 고 기본 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; 에서 상속 된 속성에 대 한 연결에 대 한 세부 정보를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property, a provider connection point keeps the type of interface returned by the provider.</source>
          <target state="translated">상속 된 예를 들어 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;속성 공급자 연결 지점 공급자가 반환 하는 인터페이스의 형식을 유지 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">공급자와 같은 작업 둘 다 연결에서 소비자 인터페이스 형식, 해당 컨트롤은 호환 되며 직접 연결을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object to translate the provider connection point's &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; value into a type that the consumer can work with.</source>
          <target state="translated">공급자 및 소비자 같은 인터페이스 형식을 사용할 수 없는, 경우 호환 되지 않는 하며 사용 해야 합니다는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;공급자 연결 지점 변환할 개체 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;소비자가 사용할 수 있는 형식으로 값.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another important inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt; property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</source>
          <target state="translated">또 다른 중요 한 상속 된 속성은는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;연결을 만들 때 공급자 연결을 선택 하는 사용자를 위해 UI에 표시 하는 식별 이름을 제공 하는 속성을 가리킵니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionProvider`</ph> attribute to the callback method in a provider control.</source>
          <target state="translated">개발자는 추가 하는 경우 표시 이름은 필수 매개 변수를입니다는 <ph id="ph1">`ConnectionProvider`</ph> 특성을 공급자 컨트롤에 콜백 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt; property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</source>
          <target state="translated">상속 된 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;공급자에 연결 지점이 여러 개 공급자 연결 지점에 대 한 고유 식별자를 제공 하기 때문에, 위에 표시 된 대로 속성은 유용 하 게도.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>A provider can have multiple ProviderConnectionPoint objects defined in it, and in this case, when developers add the <ph id="ph1">`ConnectionProvider`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">공급자가 정의 되어,이 경우 개발자가 추가 하는 여러 ProviderConnectionPoint 개체를 유지할 수는 <ph id="ph1">`ConnectionProvider`</ph> 특성 메서드에 각 연결점을 구별 하는 ID 값을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>One other notable inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt; property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</source>
          <target state="translated">다른 주목할 만한 상속 된 속성 중 하나는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;속성 공급자 연결 지점에서 동시에 여러 소비자에 연결할 수 있는지 여부를 나타냅니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property value is <ph id="ph1">`true`</ph> by default for provider connection points (whereas it defaults to <ph id="ph2">`false`</ph> for consumer connection points).</source>
          <target state="translated">이 속성 값은 <ph id="ph1">`true`</ph> 공급자 연결 지점에 대해 기본적으로 (기본적으로 반면 <ph id="ph2">`false`</ph> 소비자 연결 지점에 대 한).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ProviderConnectionPoint class adds several unique methods to the members it inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">몇 가지 고유한 메서드를 추가 하는 ProviderConnectionPoint 클래스 멤버에 필요한 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; 에서 상속</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method retrieves an instance of the interface that the callback method will return to consumers.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;메서드 콜백 메서드는 소비자에 게 반환 하는 인터페이스의 인스턴스를 검색 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt; method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;메서드는 기존 연결을의 일부인 추가 소비자 인터페이스를 검색 하지만 인터페이스가 아닌 고 연결을 사용 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ProviderConnectionPoint constructor for the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;클래스는 기본 클래스를 초기화 하는 다양 한 매개 변수를 전달, 기본 생성자를 호출&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; 하는 것에 대 한 ProviderConnectionPoint 생성자</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">기본 클래스 생성자는 연결 지점에 대 한 매개 변수 개수를 확인 하 고 몇 가지 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">가능한 예외 목록은 예외 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the ProviderConnectionPoint constructor to create your own instance of the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; 의 인스턴스를 직접 만들려는 ProviderConnectionPoint 생성자를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method to return an existing connection point object from a provider.</source>
          <target state="translated">그러나 단순히 연결을 설정 하 고 클래스를 확장 하지 않는 경우에 호출 해야는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;공급자에서 기존 연결 지점 개체를 반환 하는 메서드.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The method in the provider control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">연결을 설정 하는 소비자에 게 인터페이스 인스턴스를 반환 하는 공급자 컨트롤에 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the interface that the provider serves to consumers.</source>
          <target state="translated">&lt;xref:System.Type&gt;공급자는 소비자에 게 사용 되는 인터페이스입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the provider control with which the provider connection point is associated.</source>
          <target state="translated">&lt;xref:System.Type&gt;공급자 연결 지점에 연결 된 공급자 컨트롤의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">연결 사용자 인터페이스 (UI)에 사용자에 게 표시 되는 공급자 연결 지점에 대 한 표시 이름.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A unique identifier for the provider connection point.</source>
          <target state="translated">공급자 연결 지점에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</source>
          <target state="translated">공급자 연결 지점 소비자와 함께 여러 개의 동시 연결을 사용할 수 있는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>is not the same type as the provider control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>공급자 컨트롤로 동일한 형식이 아닙니다 (또는 잘못 된 클래스에서 파생 된).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Invokes the callback method in a provider control that gets an interface instance to return to consumers.</source>
          <target state="translated">소비자에 게 반환 하는 인터페이스 인스턴스를 가져오는 공급자 컨트롤에서 콜백 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an object from the provider control that is an instance of the interface used to establish a connection.</source>
          <target state="translated">이 메서드는 연결을 설정 하는 데 사용 하는 인터페이스의 인스턴스가 공급자 컨트롤에서 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the object will be the type of the implemented interface.</source>
          <target state="translated">개체의 형식에 구현된 된 인터페이스의 형식이 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, two interfaces that are implemented for connections in the Web Parts control set are &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt; and &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.</source>
          <target state="translated">예를 들면 웹 파트 컨트롤 집합의 연결에 대 한 구현 되는 두 가지 인터페이스는 &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;및 &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.&lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the GetObject method is called on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</source>
          <target state="translated">GetObject 메서드는 호출 하는 경우는 &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;개체를 연결 된 공급자 이러한 인터페이스 중 하나를 구현 하는 반환 된 개체 동일한 형식의 됩니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetObject method is called by &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; objects when a connection is being activated.</source>
          <target state="translated">GetObject 메서드를 호출 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;개체는 연결을 활성화 하는 중입니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</source>
          <target state="translated">이 실제로 한 연결을 시작 하 고 두 개의 컨트롤 데이터를 공유할 수 있도록 하는 프로세스를 시작 하는 중요 한 단계입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">연결의 소비자 컨트롤 공급자와 같은 유형의 인터페이스 작업할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it does not, the controls are incompatible and a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object must be used to establish a connection.</source>
          <target state="translated">그렇지 않은 경우 컨트롤이 호환 되 고 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;개체 연결을 설정 하는 데 사용 해야 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">웹 파트 연결에서 공급자 역할을 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is an instance of the interface a provider returns to consumers to establish a connection.</source>
          <target state="translated">&lt;xref:System.Object&gt;즉, 연결을 설정 하는 소비자에 게는 공급자 인터페이스의 인스턴스를 반환 합니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</source>
          <target state="translated">공급자 연결 지점에서 지원할 수 있는 보조 인터페이스의 선택적 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A provider connection point object always has a default interface that is used to establish a connection with consumers.</source>
          <target state="translated">공급자 연결 지점 개체는 항상 소비자와의 연결을 설정 하는 데 사용 되는 기본 인터페이스를 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of the default interface is retrieved by calling the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object.</source>
          <target state="translated">기본 인터페이스의 인스턴스를 호출 하 여 검색 되는 &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;에서 메서드는 &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;개체입니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</source>
          <target state="translated">그러나 일부 공급자 컨트롤 소비자에 게는 연결의 일부로 제공 하는 여러 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</source>
          <target state="translated">이러한 인터페이스를 없는 경우 기본 연결을 설정 하는 데 사용 되는 보조 인터페이스를 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetSecondaryInterfaces method provides a way to return a collection of references to the secondary interfaces, just as the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method returns a reference to the default interface.</source>
          <target state="translated">GetSecondaryInterfaces 메서드와 마찬가지로 보조 인터페이스에 대 한 참조의 컬렉션을 반환 하는 방법을 제공는 &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;메서드는 기본 인터페이스에 대 한 참조를 반환 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">웹 파트 연결에서 공급자 역할을 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of additional interfaces provided by the control acting as a provider.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 공급자 역할을 하는 컨트롤에서 제공 하는 추가 인터페이스의 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>