<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2b59314fd7b97bb8d24f8a1bef9aa96abd0eb35</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.PropertyPath.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31320f2d6a582151be12f28b71918cc0a1f03478</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6add39d459bb1aecf2557abb4d497767b9304fb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a data structure for describing a property as a path below another property, or below an owning type.</source>
          <target state="translated">속성을 다른 속성 아래 또는 소유 형식 아래의 경로로 설명 하기 위한 데이터 구조를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Property paths are used in data binding to objects, and in storyboards and timelines for animations.</source>
          <target state="translated">속성 경로 애니메이션에 대 한 스토리 보드 및 타임 라인 개체에 데이터 바인딩에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains a string &lt;xref:System.Windows.PropertyPath.Path%2A&gt;, and list of dependency properties that are the &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt; into the string&lt;xref:System.Windows.PropertyPath.Path%2A&gt;.</source>
          <target state="translated">이 클래스는 문자열을 포함 &lt;xref:System.Windows.PropertyPath.Path%2A&gt;, 및는 &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;&lt;xref:System.Windows.PropertyPath.Path%2A&gt;.&lt;/xref:System.Windows.PropertyPath.Path%2A&gt; 문자열에&lt;/xref:System.Windows.PropertyPath.PathParameters%2A&gt; 는 종속성 속성의 목록을&lt;/xref:System.Windows.PropertyPath.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>PropertyPath supports two modes of behavior:       <bpt id="p1">**</bpt>Source mode<ept id="p1">**</ept> describes a path to a property that is used as a source for some other operation.</source>
          <target state="translated">동작의 두 모드를 지원 하는 PropertyPath: <bpt id="p1">**</bpt>소스 모드<ept id="p1">**</ept> 다른 작업에 대 한 원본으로 사용 되는 속성에 대 한 경로 설명 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mode is used by the &lt;xref:System.Windows.Data.Binding&gt; class to support data binding.</source>
          <target state="translated">이 모드에서 사용 되는 &lt;xref:System.Windows.Data.Binding&gt;데이터 바인딩을 지원 하기 위해 클래스.&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Target mode<ept id="p1">**</ept> describes a path to a property that will be set as a target property.</source>
          <target state="translated"><bpt id="p1">**</bpt>대상 모드<ept id="p1">**</ept> 대상 속성으로 설정할 수 있는 속성에 대 한 경로 설명 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mode is used by animation in support of storyboard and timeline setters.</source>
          <target state="translated">이 모드는 스토리 보드 및 타임 라인 setter 지원 하기 위해 애니메이션에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, <ph id="ph1">`Background.Opacity`</ph> is a two-step path.</source>
          <target state="translated">예를 들어, <ph id="ph1">`Background.Opacity`</ph>&amp;2; 단계 경로입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This path implies: first, find the <ph id="ph1">`Background`</ph> property of an object, get the value object that the <ph id="ph2">`Background`</ph> property is set to, and then get the value of the <ph id="ph3">`Opacity`</ph> property on that object.</source>
          <target state="translated">이 경로 의미: 먼저 찾을 <ph id="ph1">`Background`</ph> 개체의 속성 값 개체를 가져오는 <ph id="ph2">`Background`</ph> 속성로 설정 되 고 다음 값을 가져올는 <ph id="ph3">`Opacity`</ph> 해당 개체의 속성을 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_PropertyPath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="propertyPath" .../&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_PropertyPath"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>propertyPath<ept id="p3">*</ept>    A string that is evaluated to be either a simple or complex property path.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_PropertyPath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object property="propertyPath" .../&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_PropertyPath"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>propertyPath<ept id="p3">*</ept> 간단 하거나 복잡 한 속성 경로 이거나로 평가 하는 문자열입니다.      </target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for setting a PropertyPath in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is versatile but complex, and is described in the separate topic <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">에 PropertyPath를 설정 하기 위한 구문을 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 다양 한 건 복잡 하 고 별도 항목에 설명 된 <bpt id="p1">[</bpt>PropertyPath XAML 구문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</source>
          <target state="translated">이 생성자에는 바인딩에 대 한 또는 스토리 보드 대상에 대 한 대상 모드 단일 단계 속성 경로 대 한 소스 모드 속성 경로 사용 여부에 따라 완전히 다른 두 개의 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If using this &lt;xref:System.Windows.PropertyPath&gt; in source mode for a binding, <ph id="ph1">`parameter`</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">이 사용 하는 경우 &lt;xref:System.Windows.PropertyPath&gt;된 바인딩, 소스 모드에서 <ph id="ph1">`parameter`</ph> 속성 이름을 나타내는 문자열 또는 속성에 "단계별" 경로 설명 하는 문자열 수는 <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 바인딩에 대 한 원본으로 사용 중인 개체의 개체 모델입니다.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">바인딩 속성 경로 "단계"를 식별 하는 문자는 점 (.).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">인덱서 참조 (여러 인덱서 및 형식 구분 포함)도 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details on the syntax of the string as specifically used by the &lt;xref:System.Windows.Data.Binding&gt; object, see &lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">구체적으로는 &lt;xref:System.Windows.Data.Binding&gt;개체를 참조 하십시오 &lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding&gt; 에서 사용 하는 문자열의 구문은 대 한 자세한 내용은</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">바인딩 소스로 사용 되는 속성에는 종속성 속성 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the binding updates two-way, the property referenced must be read-write.</source>
          <target state="translated">바인딩이 양방향으로 업데이트 하는 경우 참조 된 속성이 읽기 / 쓰기 여야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">바인딩 대상 종속성 속성으로 않았는지 참고도 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If using this &lt;xref:System.Windows.PropertyPath&gt; in target mode for a single-step path for a storyboard target, <ph id="ph1">`parameter`</ph> is generally provided as type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">이 사용 하는 경우 &lt;xref:System.Windows.PropertyPath&gt;스토리 보드 대상에 대 한 단계씩 경로 대 한 대상 모드에 <ph id="ph1">`parameter`</ph> 일반적으로 &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; 형식으로 제공&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify a string that is the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt; 하는 문자열을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either of these evaluate to the same result, because it is stored internally as a string.</source>
          <target state="translated">둘 중 하나를 string으로 내부적으로 저장 되므로 동일한 결과를 평가 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A provided &lt;xref:System.Windows.DependencyProperty&gt; is converted to a string through &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;.</source>
          <target state="translated">제공 된 &lt;xref:System.Windows.DependencyProperty&gt; &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;.&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt; 통해 문자열로 변환&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; supports a qualified naming format for dependency properties, so you can specify a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string to the PropertyPath constructor in code.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;종속성 속성에 대 한 정규화 된 이름 형식 지정할 수 있도록 지원는 <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> 정규화 된 코드에서 PropertyPath 생성자에 종속성 속성 이름 문자열.&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The qualified path to the dependency property identifier is a different concept than a complex path.</source>
          <target state="translated">종속성 속성 식별자의 정규화 된 경로 복잡 한 경로 다른 개념입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A complex-path &lt;xref:System.Windows.PropertyPath&gt; should instead be created with the &lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">복합 경로 &lt;xref:System.Windows.PropertyPath&gt;와 대신 만들 수는 &lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt;생성자.&lt;/xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A property path that either describes a path to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> property, or a single dependency property.</source>
          <target state="translated">경로를 설명 하는 속성 경로 <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> 속성 또는 단일 종속성 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, with the provided pathing token string and parameters.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 경로 제공 된 토큰 문자열 및 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature is generally only used for target-mode &lt;xref:System.Windows.PropertyPath&gt; usages with complex paths.</source>
          <target state="translated">일반적으로이 서명을 대상 모드에만 사용 &lt;xref:System.Windows.PropertyPath&gt;복합 경로가 포함 된.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor supports <ph id="ph1">`params`</ph> for the <ph id="ph2">`pathParameters`</ph> constructor argument.</source>
          <target state="translated">이 생성자 <ph id="ph1">`params`</ph> 에 대 한는 <ph id="ph2">`pathParameters`</ph> 생성자 인수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore you can specify the contents of <ph id="ph1">`pathParameters`</ph> as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the <ph id="ph2">`pathParameters`</ph> items.</source>
          <target state="translated">따라서의 내용을 지정할 수 있습니다 <ph id="ph1">`pathParameters`</ph> 일련의 쉼표로 구분 된 생성자 인수를 채우는 배열 차원 하며 다음을 채울 필요 하지 않고 배열에는 <ph id="ph2">`pathParameters`</ph> 항목입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each item you specify must be one of the following types: &lt;xref:System.Windows.DependencyProperty&gt;, &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.</source>
          <target state="translated">각 항목을 지정한 다음 유형 중 하나 여야 합니다: &lt;xref:System.Windows.DependencyProperty&gt;, &lt;xref:System.Reflection.PropertyInfo&gt; &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.&lt;/xref:System.ComponentModel.PropertyDescriptor&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the requirements of the parameters, see &lt;xref:System.Windows.PropertyPath.Path%2A&gt; and &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;.</source>
          <target state="translated">매개 변수 요구 사항에 대 한 자세한 내용은 &lt;xref:System.Windows.PropertyPath.Path%2A&gt;및 &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;.&lt;/xref:System.Windows.PropertyPath.PathParameters%2A&gt; &lt;/xref:System.Windows.PropertyPath.Path%2A&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string that specifies the &lt;xref:System.Windows.PropertyPath.Path*&gt;, in a tokenized format.</source>
          <target state="translated">지정 하는 문자열은 &lt;xref:System.Windows.PropertyPath.Path*&gt;, 토큰화 된 형식에서입니다.&lt;/xref:System.Windows.PropertyPath.Path*&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of objects that sets the &lt;xref:System.Windows.PropertyPath.PathParameters*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.PropertyPath.PathParameters*&gt;.&lt;/xref:System.Windows.PropertyPath.PathParameters*&gt; 를 설정 하는 개체의 배열</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that describes the path.</source>
          <target state="translated">경로 설명 하는 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The string that describes the path.</source>
          <target state="translated">경로 설명 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the list of parameters to use when the path refers to indexed parameters.</source>
          <target state="translated">경로 인덱싱된 매개 변수를 참조할 때 사용할 매개 변수 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for a &lt;xref:System.Windows.PropertyPath&gt; are typically established through the constructors.</source>
          <target state="translated">에 대 한 속성을 &lt;xref:System.Windows.PropertyPath&gt;일반적으로 생성자를 통해 설정 됩니다.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For setting PathParameters, the &lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt; constructor is particularly convenient because the <ph id="ph1">`pathParameters`</ph> constructor argument is designated as <ph id="ph2">`params`</ph>, meaning that you do not need to create or dimension an array for construction.</source>
          <target state="translated">PathParameters를 설정 하기 위한는 &lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;생성자 사용 하는 것이 편리한 때문에 <ph id="ph1">`pathParameters`</ph> 생성자 인수로 지정 된 <ph id="ph2">`params`</ph>, 즉를 만들거나 생성에 대 한 배열을 차원 필요 하지 않습니다.&lt;/xref:System.Windows.PropertyPath.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You simply specify each member of the array as an additional parameter.</source>
          <target state="translated">배열의 각 멤버를 추가 매개 변수로 지정 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the final property that is the target is a &lt;xref:System.Windows.Freezable&gt; type, that value will be cloned.</source>
          <target state="translated">최종 속성 대상이 되는 경우는 &lt;xref:System.Windows.Freezable&gt;입력 값은 복제 됩니다.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>적기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</source>
          <target state="translated">속성 체인의 실제 평가 스토리 보드 애니메이션 메커니즘에 의해 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>At the &lt;xref:System.Windows.PropertyPath&gt; level, no validation is performed to make sure that the steps of the path connect at all.</source>
          <target state="translated">에 &lt;xref:System.Windows.PropertyPath&gt;수준에서 유효성을 검사 하지 경로 단계가 전혀 연결 되도록 수행 됩니다.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, you can construct a property path that has &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt; as the first step, and &lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt; as the second step.</source>
          <target state="translated">예를 들어, 속성 경로 생성할 수 있습니다 &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;첫 번째 단계로, 및 &lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt;두 번째 단계로.&lt;/xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>But such a property path would fail if actually applied as a target, because the Brush type that fills &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt; does not have a &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">이러한 속성 경로 오류가 실제로 적용 한 대상으로 하는 경우 브러시 입력 해당 채우기 &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;없는 &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invalid property paths fail silently.</source>
          <target state="translated">잘못 된 속성 경로 자동으로 실패 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](../Topic/Storyboards%20Overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>적기<ept id="p1">](../Topic/Storyboards%20Overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a &lt;xref:System.Windows.PropertyPath&gt; to describe a property reference in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (&lt;xref:System.Windows.PropertyPathConverter&gt;).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> 사용 하는 경우는 &lt;xref:System.Windows.PropertyPath&gt;속성 참조를 설명 하기 위해 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>특성 값을 지정 하는 문자열은 형식 변환기에서 먼저 처리 된 것으로, (&lt;xref:System.Windows.PropertyPathConverter&gt;).&lt;/xref:System.Windows.PropertyPathConverter&gt; &lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type converter then processes the string and based on its syntax will call one of the &lt;xref:System.Windows.PropertyPath&gt; constructor signatures.</source>
          <target state="translated">이 형식 변환기에서 다음 문자열을 처리 하 고에 따라 캐스트 연산자 구문 중 하나를 호출 됩니다는 &lt;xref:System.Windows.PropertyPath&gt;생성자 서명을.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indirection through the type converter handling an attribute value is generally how you use &lt;xref:System.Windows.PropertyPath&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a &lt;xref:System.Windows.PropertyPath&gt; object element and then applying specific values to attributes such as &lt;xref:System.Windows.PropertyPath.Path%2A&gt; and PathParameters.</source>
          <target state="translated">특성 값을 처리 하는 형식 변환기를 통해이 간접 참조는 일반적으로 사용 하는 방법을 &lt;xref:System.Windows.PropertyPath&gt;에 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>를 선언 하는 대신 한 &lt;xref:System.Windows.PropertyPath&gt;개체 요소를 같은 특성을 특정 값을 다음 적용 &lt;xref:System.Windows.PropertyPath.Path%2A&gt;및 PathParameters.&lt;/xref:System.Windows.PropertyPath.Path%2A&gt; &lt;/xref:System.Windows.PropertyPath&gt; &lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>PropertyPath XAML 구문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_PathParameters"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of the &lt;xref:System.Windows.PropertyPath&gt; type are not typically set in a direct <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_PathParameters"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용 멤버는 &lt;xref:System.Windows.PropertyPath&gt;형식을 직접에서 일반적으로 설정 되지 않은 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 구문.&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks.</source>
          <target state="translated">설명 부분을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The parameter list.</source>
          <target state="translated">매개 변수 목록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>