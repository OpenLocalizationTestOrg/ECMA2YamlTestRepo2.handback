<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8662c7fb3d2c82590fd2c5fbe669d4e09d37b65</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlXmlWriterSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ca1f821c014ac8acb77bc9104f2594c15b5a715</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115ad97a37da33578115ad46e86a7ea8bf0f6a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides initialization settings for the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> XAML writer implementation.</source>
          <target state="translated">에 대 한 초기화 설정을 제공는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 작성기 구현 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The defaults for all XamlXmlWriterSettings values are <ph id="ph1">`false`</ph>.</source>
          <target state="translated">모든 XamlXmlWriterSettings 값에 대 한 기본값이 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should always assume valid XAML input for purposes of duplicate resolution or other error checking.</source>
          <target state="translated">지정 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 항상 다른 오류 검사 또는 중복 확인을 위해 유효한 XAML 입력을 가정해 야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> skips certain validation or error checks, such as throwing exceptions on duplicate members.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 중복 멤버에 대해 예외를 throw 하는 등 특정 유효성 검사 또는 오류 검사를 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> throws exceptions when invalid XAML is encountered.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 잘못 된 XAML 발생 하면 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should close immediately on <bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or other operations, or whether the XAML writer should instead write the buffer output before closing.</source>
          <target state="translated">지정 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 즉시 닫혀야 <bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 기타 작업을 XAML 작성기 닫기 전에 버퍼 출력 작성 대신 해야 하는지 여부 또는 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.</source>
          <target state="translated">이 설정을 사용 하 여 주의 해야 합니다. 닫는 즉시 다시 로드할 수 없는 잘못 된 XAML에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting influences the logic of &lt;xref:System.Xaml.XamlXmlWriter.Dispose%2A?displayProperty=fullName&gt;, which calls <ph id="ph1">`Close`</ph> on the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt; when CloseOutput is <ph id="ph2">`true`</ph>; or it calls &lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt; (again tied to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;) if CloseOutput is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">이 설정은 논리에 영향을 줍니다 &lt;xref:System.Xaml.XamlXmlWriter.Dispose%2A?displayProperty=fullName&gt;, 되는 호출 <ph id="ph1">`Close`</ph> 은 기본 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;CloseOutput 다음과 같은 경우 <ph id="ph2">`true`</ph>; 호출 또는 &lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;(내부에 다시 연결 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;) CloseOutput 이면 <ph id="ph3">`false`</ph>.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter.Flush%2A&gt; &lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter.Dispose%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> immediately closes on a <bpt id="p3">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or similar operations.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에 즉시 닫습니다는 <bpt id="p3">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 이와 유사한 작업 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the remaining buffer output is written before the <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is released.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>남아 있는 버퍼 출력 하기 전에 작성 된 경우는 <bpt id="p2">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns a copy of this <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">이 파일의 복사본을 반환 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The returned copy.</source>
          <target state="translated">반환 된 복사본입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>