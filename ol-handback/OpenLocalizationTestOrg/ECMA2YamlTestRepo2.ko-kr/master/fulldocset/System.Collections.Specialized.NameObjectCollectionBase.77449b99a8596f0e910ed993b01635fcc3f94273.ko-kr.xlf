<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c593dbcd900a5b08037adb7c924f600c225acdb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.NameObjectCollectionBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91c711e10b5d8333bce69d91443bf8ea8eb8691b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10fb7c1b43fc3c8006f9e4a7ebe5da411389c294</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for a collection of associated &lt;xref:System.String&gt; keys and &lt;xref:System.Object&gt; values that can be accessed either with the key or with the index.</source>
          <target state="translated">제공 된 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 컬렉션에 대 한 기본 클래스에 관련 된 &lt;xref:System.String&gt;키 및 &lt;xref:System.Object&gt;키 또는 인덱스에 액세스할 수 있는 값.&lt;/xref:System.Object&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying structure for this class is a hash table.</source>
          <target state="translated">이 클래스에 대 한 기본 구조는 해시 테이블입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element is a key/value pair.</source>
          <target state="translated">각 요소는 키/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a NameObjectCollectionBase is the number of elements the NameObjectCollectionBase can hold.</source>
          <target state="translated">NameObjectCollectionBase 용량이 NameObjectCollectionBase 저장할 수 있는 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a NameObjectCollectionBase, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">요소는 NameObjectCollectionBase에 추가 되 면 자동으로 용량 증가 하면 재할당을 통해 필요에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the NameObjectCollectionBase instance.</source>
          <target state="translated">해시 코드 공급자 NameObjectCollectionBase 인스턴스에서 키에 대 한 해시 코드를 분배 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.</source>
          <target state="translated">기본 해시 코드 공급자가 있는 &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.&lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</source>
          <target state="translated">.NET Framework 버전 1.0에서이 클래스는 문화권 구분 문자열 비교를 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in .NET Framework version 1.1 and later, this class uses &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt; when comparing strings.</source>
          <target state="translated">.NET Framework 1.1 이상 버전에서는이 클래스가 사용 하는 반면 &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;문자열을 비교할 때.&lt;/xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how culture affects comparisons and sorting, see <bpt id="p1">[</bpt>Performing Culture-Insensitive String Operations<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">문화권 비교 및 정렬에 미치는 영향에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>문화권을 구분 하지 않는 문자열 작업 수행<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> is allowed as a key or as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph>키 또는 값으로 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt; method does not distinguish between <ph id="ph2">`null`</ph> which is returned because the specified key is not found and <ph id="ph3">`null`</ph> which is returned because the value associated with the key is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt;는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;메서드는 구분 하지 않으며 <ph id="ph2">`null`</ph> 지정된 된 키를 찾을 수 없으므로 반환 되는 및 <ph id="ph3">`null`</ph> 키와 연결 된 값이 반환 되는 <ph id="ph4">`null`</ph>.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 비어 있는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.</source>
          <target state="translated">키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.</source>
          <target state="translated">기본 해시 코드 공급자가 있는 &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.&lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and uses the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 비어 있는 기본 초기 용량을 갖고 있고 사용 하 여 지정 된 &lt;xref:System.Collections.IEqualityComparer&gt;개체입니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체는 요소 수는는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object combines the comparer and the hash code provider.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;개체 비교자와 해시 코드 공급자를 결합 합니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">해시 코드 공급자 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 키에 대 한 해시 코드를 분배합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;두 키가 같은지 여부를 확인 하 고 컬렉션의 키에 대 한 해시 코드를 생성을 사용 하는 개체입니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 비어 있는 지정 된 초기 용량을 갖고 있고 기본 해시 코드 공급자와 기본 비교자를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.</source>
          <target state="translated">키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.</source>
          <target state="translated">기본 해시 코드 공급자가 있는 &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.&lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 <ph id="ph3">`capacity`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The approximate number of entries that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance can initially contain.</source>
          <target state="translated">항목의 대략적인 수 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 처음 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 비어 있는 기본 초기 용량을 갖고 있고 지정 된 해시 코드 공급자와 지정된 된 비교자를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.</source>
          <target state="translated">키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.</source>
          <target state="translated">기본 해시 코드 공급자가 있는 &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.&lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will supply the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모든 키에 대 한 해시 코드를 제공 하는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 비어 있는 지정 된 초기 용량을 갖고 있고 사용 하 여 지정 된 &lt;xref:System.Collections.IEqualityComparer&gt;개체입니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체는 요소 수는는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object combines the comparer and the hash code provider.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;개체 비교자와 해시 코드 공급자를 결합 합니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">해시 코드 공급자 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 키에 대 한 해시 코드를 분배합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 는 <ph id="ph3">`capacity`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The approximate number of entries that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">항목의 대략적인 수 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 처음 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;두 키가 같은지 여부를 확인 하 고 컬렉션의 키에 대 한 해시 코드를 생성을 사용 하는 개체입니다.&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is serializable and uses the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 수 있으며를 사용 하 여 지정 된 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">이 생성자는 o (1) 연산입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the information required to serialize the new <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 serialize 하는 데 필요한 정보를 포함 하는 개체 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object that contains the source and destination of the serialized stream associated with the new <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 소스 및 새와 관련 된 serialize 된 스트림의 대상이 들어 있는 개체 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 비어 있는 지정 된 초기 용량 및 지정 된 해시 코드 공급자와 지정된 된 비교자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.</source>
          <target state="translated">용량은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;요소의 수가 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;보유할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">요소에 추가 되는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 요소를 추가 하는 동안 여러 번 수행</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.</source>
          <target state="translated">키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.</source>
          <target state="translated">기본 해시 코드 공급자가 있는 &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.&lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">이 생성자는는 O (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 <ph id="ph3">`capacity`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The approximate number of entries that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance can initially contain.</source>
          <target state="translated">항목의 대략적인 수 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 처음 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will supply the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모든 키에 대 한 해시 코드를 제공 하는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Adds an entry with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정 된 키와 값에 항목을 추가 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; already equals the capacity, the capacity of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">경우 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;이미 용량의 용량과 같은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소를 추가 하기 전에 기존 요소를 새 배열에 복사 됩니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">경우 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;작은 용량 보다이 메서드는 o (1) 작업.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O 됩니다 용량을 새 요소로 적용로 늘려야 하는 경우 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; key of the entry to add.</source>
          <target state="translated">&lt;xref:System.String&gt;추가할 엔트리의 키&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The key can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; value of the entry to add.</source>
          <target state="translated">&lt;xref:System.Object&gt;추가할 항목의 값&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값일 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Removes all entries from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">항목을 모두 제거 된 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;가&amp;0;으로 설정 하 고 컬렉션의 요소에 다른 개체에 대 한 참조도 해제 됩니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets the value of the entry at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 인덱스에 있는 항목의 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">가져올 값의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the value of the entry at the specified index.</source>
          <target state="translated">&lt;xref:System.Object&gt;지정된 된 인덱스에서 엔트리의 값을 나타내는입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the value of the first entry with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 키를 가진 첫 번째 항목의 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection contains multiple entries with the specified key, this method returns only the first entry.</source>
          <target state="translated">컬렉션의 지정한 키를 가진 항목이 여러 개 있으면이 메서드는 첫 번째 항목만을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</source>
          <target state="translated">후속 항목의 값이 동일한 키를 가져오려면 열거자를 사용 하 여 컬렉션을 반복 하는 키를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  This method returns <ph id="ph2">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt;이 메서드가 반환 <ph id="ph2">`null`</ph> 다음과 같은 경우에: 지정된 된 키를 찾을 수 없습니다; 있는 경우 1) 및 2) 하는 경우 지정된 된 키를 찾아 관련된 값은 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">이 메서드는 두 가지 경우를 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; key of the entry to get.</source>
          <target state="translated">&lt;xref:System.String&gt;가져올 항목의 키.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The key can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the value of the first entry with the specified key, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;검색 되지 않으면, 지정된 된 키와 첫 번째 항목의 값을 나타내는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.String&gt; array that contains all the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">반환 된 &lt;xref:System.String&gt;배열에 있는 모든 키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array that contains all the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A &lt;xref:System.String&gt;배열에 있는 모든 키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Object&gt; array that contains all the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">반환 된 &lt;xref:System.Object&gt;배열에 있는 모든 값을 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; array that contains all the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">&lt;xref:System.Object&gt;배열에 있는 모든 값을 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns an array of the specified type that contains all the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정 된 형식의 모든 값을 포함 하는 배열을 반환는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of array to return.</source>
          <target state="translated">A &lt;xref:System.Type&gt;반환할 배열의 형식을 나타내는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An array of the specified type that contains all the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">모든 값을 포함 하는 지정 된 형식의 배열을 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>유효 하지 않거나 <ph id="ph2">&lt;xref:System.Type&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the key of the entry at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 인덱스에서 엔트리의 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">가져올 키의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that represents the key of the entry at the specified index.</source>
          <target state="translated">A &lt;xref:System.String&gt;지정된 된 인덱스에서 엔트리의 키를 나타내는입니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance contains entries whose keys are not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 아닌 키가 없는 항목을 포함 하는 인스턴스 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance contains entries whose keys are not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 아닌 키가 없는 항목을 포함 하는 인스턴스 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Removes the entries with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 키를 가진 항목을 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; remains unchanged.</source>
          <target state="translated">경우는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;지정된 키를 가진 요소가 포함 되지 않습니다는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;변경 되지 않습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
          <target state="translated">예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; key of the entries to remove.</source>
          <target state="translated">&lt;xref:System.String&gt;제거할 항목의 키.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The key can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Removes the entry at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 인덱스에 항목을 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The zero-based index of the entry to remove.</source>
          <target state="translated">제거할 엔트리의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">지정된 된 인덱스에서 엔트리의 값을 설정는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The zero-based index of the entry to set.</source>
          <target state="translated">설정할 항목의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that represents the new value of the entry to set.</source>
          <target state="translated">&lt;xref:System.Object&gt;설정할 항목의 새 값을 나타내는입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값일 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Sets the value of the first entry with the specified key in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, if found; otherwise, adds an entry with the specified key and value into the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 지정한 키를 가진 첫 번째 항목의 값을 설정는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 검색 되지 않으면, 추가 된 지정 된 키와 값에 들어 있는 항목의 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection contains multiple entries with the specified key, this method sets only the first entry.</source>
          <target state="translated">컬렉션의 지정한 키를 가진 항목이 여러 개 있으면이 메서드는 첫 번째 항목은 설정 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</source>
          <target state="translated">후속 항목의 값이 동일한 키를 설정 하려면 열거자를 사용 하 여 컬렉션을 반복 하는 키를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; key of the entry to set.</source>
          <target state="translated">&lt;xref:System.String&gt;설정할 항목의 키.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The key can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that represents the new value of the entry to set.</source>
          <target state="translated">&lt;xref:System.Object&gt;설정할 항목의 새 값을 나타내는입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값일 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets the number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 키/값 쌍의 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can store.</source>
          <target state="translated">용량은 요소의 수가 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;저장할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.</source>
          <target state="translated">Count가 실제로 있는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; 에 있는 요소 수</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is always greater than or equal to Count.</source>
          <target state="translated">용량은 항상 개수 보다 크거나 같은 경우입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Count는 용량을 초과 하면 요소를 추가 하는 동안 용량 자동으로 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 다시 할당 하 여 증가 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 포함 된 키/값 쌍의 수는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반복 하는 열거자를 반환 된 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enumerator returns the keys of the collection as strings.</source>
          <target state="translated">이 열거자로 문자열인 컬렉션의 키를 반환합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;또한이 위치로 복원 열거자를 가져옵니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">이 위치에서 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거지 않습니다 본질적으로 스레드로부터 안전한 프로시저가 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;에 대 한는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">구현 하는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스를 serialize 하는 데 필요한 데이터를 반환 된 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 serialize 하는 데 필요한 정보를 포함 하는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object that contains the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;소스와 연결 된 serialize 된 스트림의 대상이 들어 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is read-only.</source>
          <target state="translated">나타내는 값을 가져오거나 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스가 읽기 전용이 아니면, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; instance that contains all the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;인스턴스의 모든 키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">이 속성의 값을 검색 하는 것은 o (1) 작업입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; instance that contains all the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;인스턴스의 모든 키를 포함 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">구현 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스와 deserialization이 완료 되 면 deserialization 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the OnDeserialization method is not visible to COM clients by default, inheriting the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">동안 OnDeserialization 메서드 기본적으로 COM 클라이언트에 표시 되지 않는 경우 상속 된 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;클래스 노출할 수 있습니다 및 COM 클라이언트에서 원하지 않는 동작이 발생할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">Deserialization 이벤트의 소스입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the current <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체와 현재 연결 된 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스가 유효 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">전체 복사 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호환 되는&amp;1; 차원 &lt;xref:System.Array&gt;대상 배열의 지정된 된 인덱스부터 시작 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">지정된 된 배열의 호환 되는 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">이 방법은 사용 하 여 &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;요소를 복사해올.&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the ICollection.CopyTo method is not visible to COM clients by default, inheriting the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">ICollection.CopyTo 메서드가 기본적으로 COM 클라이언트에 표시 되지 않는 동안 상속 하는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;클래스 노출할 수 있습니다 및 COM 클라이언트에서 원하지 않는 동작이 발생할 수 있습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> 은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;에서 복사한 요소의 대상인 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 가능한 공간 보다 큰 <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 동기화 되었는지 (스레드로부터 안전함).</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is not synchronized.</source>
          <target state="translated">A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체 동기화 되지 않았습니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide a synchronized version of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;를 사용 하 여 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property during the entire enumeration.</source>
          <target state="translated">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안 속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p2">](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p4">](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p2">](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p4">](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)</ept> <ept id="p5">]</ept> 이 속성의 값을 검색 하는 것은 o (1) 작업입니다.    </target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 액세스는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체가 동기화 되었는지 (스레드로부터 안전함), 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;클래스 사용의 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object, not directly on the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object.</source>
          <target state="translated">동기화 하는 코드에서 작업을 수행 해야는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;의 속성은 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체에 대해 직접는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt; &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object.</source>
          <target state="translated">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;개체입니다.&lt;/xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration.</source>
          <target state="translated">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p2">](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p4">](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p2">](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p4">](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id="p6">](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)</ept> <ept id="p5">]</ept> 이 속성의 값을 검색 하는 것은 o (1) 작업입니다.    </target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameObjectCollectionBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>