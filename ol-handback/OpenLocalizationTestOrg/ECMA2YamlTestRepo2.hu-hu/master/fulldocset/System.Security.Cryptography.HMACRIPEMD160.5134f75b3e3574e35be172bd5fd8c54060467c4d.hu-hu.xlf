<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="hu-hu">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75531308ac2b3158cc8a0bbad38049644abd3be8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HMACRIPEMD160.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f663975fefd8b41ce571c42d85c340f3e4be32f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50f69798049498c7d1653009c2a3c5ba68eb77bf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Computes a Hash-based Message Authentication Code (HMAC) by using the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RIPEMD160"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> hash function.</source>
          <target state="translated">A kivonat-alapú üzenethitelesítési kód (HMAC) használatával kiszámítja a <bpt id="p1">&lt;xref href="System.Security.Cryptography.RIPEMD160"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kivonatoló függvényt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>HMACRIPEMD160 is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">HMACRIPEMD160 típus, amely a RIPEMD-160 kivonatoló függvényt értékekből összeállított és használni, mint a kivonat-alapú üzenethitelesítési kód (HMAC) létre kivonatoló kulcsalgoritmus.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">A HMAC-folyamat egy titkos kulcsot kever az üzenet adataihoz, a kivonatoló függvényt eredményét, a titkos kulccsal rendelkező keveri újra és majd még egyszer alkalmazza a kivonatoló függvényt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 160 bits in length.</source>
          <target state="translated">A kimeneti kivonat 160 bit hosszúságú.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">Egy HMAC használható annak meghatározásához, hogy egy nem biztonságos csatornán keresztül küldött üzenet módosították, feltéve, hogy a küldő és fogadó ugyanazt a titkos kulcsot.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</source>
          <target state="translated">A küldő kiszámítja a kivonatot az eredeti adatokkal, és az eredeti adatok, mind a kivonat értéke, egy üzenet küld.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">A fogadó újraszámítja a kivonat értéke a fogadott üzenethez, és ellenőrzi, hogy a számított HMAC megegyezik-e a továbbított HMAC.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">Bármi is módosul az adatokat, vagy a kivonat értéke nem egyezik, eredményez, mert a titkos kulcs ismerete szükséges módosítani az üzenetet, és Reprodukálja a megfelelő kivonat értéke.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">Ezért ha az eredeti és számított kivonati értékek egyeznek, az üzenet hitelesítése.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>HMACRIPEMD160 accepts keys of any size, and produces a hash sequence that is 160 bits long.</source>
          <target state="translated">HMACRIPEMD160 kulcsok bármilyen méretű fogad, és 160 bites kimenettel kivonatoló sorrend eredményez.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RIPEMD hash algorithm and its successors were developed by the European RIPE project.</source>
          <target state="translated">A RIPEMD kivonatoló algoritmus és a követő tevékenységek az Európai érett projekt fejlesztette ki.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original RIPEMD algorithm was designed to replace MD4 and MD5 and was later strengthened and renamed RIPEMD-160.</source>
          <target state="translated">Az eredeti RIPEMD algoritmus MD4 és MD5 helyett, és később kell erősíteni, és RIPEMD-160 átnevezték.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RIPEMD-160 hash algorithm produces a 160-bit hash value.</source>
          <target state="translated">A RIPEMD-160 kivonatoló algoritmus 160 bites üzenetkivonatot értéket eredményez.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The algorithm's designers have placed it in the public domain.</source>
          <target state="translated">Az algoritmus tervezők be van jelölve, a nyilvános tartomány.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a randomly generated 64-byte key.</source>
          <target state="translated">Egy új példányát inicializálja a <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> osztály egy véletlenszerűen generált 64 bájtos kulccsal.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt; is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;egy olyan típusú, amely a RIPEMD-160 kivonatoló függvényt értékekből összeállított és használni, mint a kivonat-alapú üzenethitelesítési kód (HMAC) létre kivonatoló kulcsalgoritmus.&lt;/xref:System.Security.Cryptography.HMACRIPEMD160&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">A HMAC-folyamat egy titkos kulcsot kever az üzenet adataihoz, a kivonatoló függvényt eredményét, a titkos kulccsal rendelkező keveri újra és majd még egyszer alkalmazza a kivonatoló függvényt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 160 bytes in length.</source>
          <target state="translated">A kimeneti kivonat 160 bájt hosszúságú.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor uses a 64-byte, randomly generated key.</source>
          <target state="translated">Ez a konstruktor 64 bájtos, véletlenszerűen létrehozott kulcsot használ.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key data.</source>
          <target state="translated">Egy új példányát inicializálja a <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> osztály a megadott kulcs adatokkal.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt; is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;egy olyan típusú, amely a RIPEMD-160 kivonatoló függvényt értékekből összeállított és használni, mint a kivonat-alapú üzenethitelesítési kód (HMAC) létre kivonatoló kulcsalgoritmus.&lt;/xref:System.Security.Cryptography.HMACRIPEMD160&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">A HMAC-folyamat egy titkos kulcsot kever az üzenet adataihoz, a kivonatoló függvényt eredményét, a titkos kulccsal rendelkező keveri újra és majd még egyszer alkalmazza a kivonatoló függvényt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 160 bytes in length.</source>
          <target state="translated">A kimeneti kivonat 160 bájt hosszúságú.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The secret key for <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryption.</source>
          <target state="translated">A titkos kulcs <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACRIPEMD160"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> titkosítás.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The key can be any length, but if it is more than 64 bytes long it is hashed (using SHA-1) to derive a 64-byte key.</source>
          <target state="translated">A kulcs hossza lehet, de ha több mint 64 bájt hosszú megtörténik annak kivonatolása (használatával SHA-1) egy 64 bájtos kulcs létrehozására.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Therefore, the recommended size of the secret key is 64 bytes.</source>
          <target state="translated">Ezért ajánlott a titkos kulcs mérete 64 bájt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>