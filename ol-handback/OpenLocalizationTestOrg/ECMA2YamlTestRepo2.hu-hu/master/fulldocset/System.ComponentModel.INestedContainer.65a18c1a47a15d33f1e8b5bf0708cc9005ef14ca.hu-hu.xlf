<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="hu-hu">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f65fc67ce7392cbd0da2f5dd98544a7f7125ac13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.INestedContainer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">730b4ad6446d574747396b55f1398d34a35720ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">354f90a81f46fa3183a1ffadf94ec4ca56487fa3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</source>
          <target state="translated">A funkcionalitást biztosítja beágyazott tárolók, amelyek logikailag nulla vagy több összetevőt tartalmaz, és egy szülő-összetevő a tulajdonosa.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The INestedContainer interface adds the concept of an owning component to the &lt;xref:System.ComponentModel.IContainer&gt; interface.</source>
          <target state="translated">A INestedContainer felület hozzáadja egy tulajdonos összetevő fogalma a &lt;xref:System.ComponentModel.IContainer&gt;felületet.&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</source>
          <target state="translated">Egy beágyazott tároló olyan objektum, amely logikailag, de nem feltétlenül vizuálisan nulla vagy több alárendelt összetevőket tartalmaz, és néhány szülő összetevő tulajdonában.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For visual containment, the owning component is often another container.</source>
          <target state="translated">Visual tárolására a tulajdonos összetevője gyakran egy másik tárolóban.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</source>
          <target state="translated">Beágyazott tárolók lehetővé teszik a vezérlő designable, anélkül, hogy egy explicit szerializált tag változó vagy egy egyéni szerializáló az egyes következő alvezérlő szakaszait.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the form designer maintains one master container of components.</source>
          <target state="translated">Ehelyett a űrlaptervezőben fenntartja az összetevők egy fő tároló.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each component’s site may have a nested container that provides a place to put extra components.</source>
          <target state="translated">Egyes összetevők hely rendelkezhet olyan beágyazott tároló, amely a felesleges összetevőket helyezése itt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component’s name.</source>
          <target state="translated">Amikor egy összetevő egy beágyazott tárolóban van elhelyezni, kap neve nem a megadott névvel és a tulajdonos összetevő neve.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</source>
          <target state="translated">Ezenkívül egy beágyazott tárolóhoz adni összetevők a szülőtároló szolgáltatások teljes hozzáféréssel rendelkeznek, és a beágyazott tárolót biztosít a szülő tekintetében új összetevőt hozzáadni kívánt viselkedést eredményező beállítást.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nested container will create the designer for each component it contains, thereby enabling design-time support.</source>
          <target state="translated">A beágyazott tároló hoz létre a tervező az egyes összetevők tartalmaz, ezáltal a tervezési idejű támogatásának engedélyezése.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</source>
          <target state="translated">Szabványos kód objektumszerializáló beágyazott tárolók nem tekinti meg, mert az összetevők csak szerializált, ha az elérési útjuk érhető el az elsődleges tárolóban összetevők érdekében.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nested containers can be found by querying a component's site for services of type INestedContainer.</source>
          <target state="translated">Beágyazott tárolókban található egy összetevő site INestedContainer típusú szolgáltatások lekérdezésével.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the owning component for the nested container.</source>
          <target state="translated">A tulajdonos összetevő lekérdezi a beágyazott tároló.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning component is the characteristic that differentiates nested containers from ordinary containers.</source>
          <target state="translated">A tulajdonos összetevője a különbséget tesz a szokványos tárolókból beágyazott tárolók jellemző.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that owns the nested container.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> birtokló a beágyazott tároló.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>