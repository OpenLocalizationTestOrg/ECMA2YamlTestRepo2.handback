<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95fd6000be25aa34c764b63e2170c12445c646eb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlMember.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d98968e4787d78092f0f6c5b611431fcc734852b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">847af931ba8799ec08203b9f9c25be6d8148e483</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the XAML type system identifier for members of XAML types.</source>
          <target state="translated">Fornece o identificador do sistema de tipo XAML para membros de tipos XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and also for general XAML type system logic.</source>
          <target state="translated">O identificador é usado por leitores XAML e autores de XAML durante o processamento de nós de membro (quando o leitor XAML está posicionado em uma <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) e também para lógica geral do sistema de tipo XAML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <ph id="ph1">`Lookup*`</ph> API that is provided by possible XamlMember subclasses.</source>
          <target state="translated">XamlMember pode usar as metodologias de três para retornar informações sobre um membro XAML: padrão reflexão comum de tempo de execução (CLR) do idioma; uma técnica de reflexão somente para referência interna ao chamar esse bit de otimização do uso de APIs sinalizadores; ou chamar virtual substituições do <ph id="ph1">`Lookup*`</ph> API que é fornecido por subclasses de XamlMember possíveis.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context.</source>
          <target state="translated">Para a maioria dos usos de APIs de serviços XAML do .NET Framework e a API do XamlMember, use o contexto do esquema XAML padrão.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</source>
          <target state="translated">O contexto do esquema padrão XAML para serviços XAML do .NET Framework usa backup para o sistema de tipo CLR.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</source>
          <target state="translated">Isso permite que os leitores XAML e gravadores XAML trabalhar com qualquer tipo ou membro que é definido em ou não disponível para, o CLR e suas técnicas de reflexão.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lookup* APIs and XamlMember Derived Classes    XamlMember defines several virtual members that derived classes might override.</source>
          <target state="translated">APIs de pesquisa * e XamlMember de Classes derivadas do XamlMember define vários membros virtuais que classes derivadas podem substituir.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These members have names that always start with the string <ph id="ph1">`Lookup`</ph>.</source>
          <target state="translated">Esses membros com nomes que iniciam sempre com a cadeia de caracteres <ph id="ph1">`Lookup`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the API name then references the property that the virtual method influences.</source>
          <target state="translated">O restante da API de referências, em seguida, o propriedade name que influencia o método virtual.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a XamlMember derived class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to influence what the base-defined property &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt; returns in a derived class.</source>
          <target state="translated">Por exemplo, uma classe derivada de XamlMember pode substituir &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;para influenciar a que a propriedade base &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;retorna na classe derivada.&lt;/xref:System.Xaml.XamlMember.TargetType%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant <ph id="ph1">`Lookup*`</ph> methods.</source>
          <target state="translated">Você pode prever valores de retorno para essas propriedades no XamlMember ou existentes classes derivadas lendo a documentação relevante <ph id="ph1">`Lookup*`</ph> métodos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of the <ph id="ph1">`Lookup*`</ph> methods is to provide a XAML type system extension technique that incorporates the XamlMember base class.</source>
          <target state="translated">A finalidade de <ph id="ph1">`Lookup*`</ph> métodos é fornecer uma técnica de extensão de sistema de tipo XAML que incorpora a classe base XamlMember.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By deriving from XamlMember and overriding the <ph id="ph1">`Lookup`</ph> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</source>
          <target state="translated">Derivando de XamlMember e substituindo o <ph id="ph1">`Lookup`</ph> membros virtuais, você pode definir o conceito de um membro XAML para um esquema XAML em um sistema de tipo XAML sem ser vinculado às especificações de um sistema de tipos de backup ou uma tecnologia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use a provided XAML schema context under this scheme and still return the results you want.</source>
          <target state="translated">Você pode também usar um contexto de esquema XAML fornecido sob esse esquema e ainda retornará os resultados desejados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, consider the XamlMember property &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.</source>
          <target state="translated">Por exemplo, considere a propriedade XamlMember &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property informs callers that operations such as using a &lt;xref:System.Xaml.XamlWriter&gt; for serialization can write a value for this member on a target object.</source>
          <target state="translated">Essa propriedade informa os chamadores que operações como usando um &lt;xref:System.Xaml.XamlWriter&gt;para serialização pode gravar um valor para esse membro em um objeto de destino.&lt;/xref:System.Xaml.XamlWriter&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR &lt;xref:System.Type&gt; and its members (the &lt;xref:System.Reflection.MemberInfo&gt;).</source>
          <target state="translated">Na implementação do padrão, a determinação se o membro é gravável é feita usando técnicas de reflexão em relação a CLR de apoio &lt;xref:System.Type&gt;e seus membros (o &lt;xref:System.Reflection.MemberInfo&gt;).&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, by default, the XAML type system depends on the CLR type system.</source>
          <target state="translated">Portanto, por padrão, o sistema de tipo XAML depende do sistema de tipo CLR.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can remove this dependency for your XAML type system reporting of &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; by overriding the API &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;.</source>
          <target state="translated">No entanto, você pode remover essa dependência para o sistema de tipo XAML relatórios de &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;, substituindo a API &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; &lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</source>
          <target state="translated">Dentro de sua substituição, você pode usar outras decisões, como metadados específicos para sua tecnologia, de uma tabela de pesquisa principal que é otimizada para um vocabulário XAML fixado ou uma variedade de outras estratégias para determinar se um membro XAML é gravável no seu vocabulário XAML.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Constructing XamlMember Without XAML Schema Context    Most constructors of XamlMember require a &lt;xref:System.Xaml.XamlSchemaContext&gt; as part of their initialization.</source>
          <target state="translated">Construindo XamlMember sem XAML esquema contexto mais construtores de XamlMember exigem um &lt;xref:System.Xaml.XamlSchemaContext&gt;como parte da sua inicialização.&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xaml.XamlSchemaContext&gt; is also necessary for many internal &lt;xref:System.Xaml.XamlSchemaContext&gt; operations, such as obtaining information that is being forwarded from the backing type.</source>
          <target state="translated">O &lt;xref:System.Xaml.XamlSchemaContext&gt;também é necessária para muitos interno &lt;xref:System.Xaml.XamlSchemaContext&gt;operações, como obter as informações que está sendo encaminhadas do tipo de backup.&lt;/xref:System.Xaml.XamlSchemaContext&gt; &lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are working with the XamlMember API, you typically have a &lt;xref:System.Xaml.XamlSchemaContext&gt; that is available from a surrounding construct such as a &lt;xref:System.Xaml.XamlWriter&gt;.</source>
          <target state="translated">Quando você estiver trabalhando com a API do XamlMember, você normalmente tem um &lt;xref:System.Xaml.XamlSchemaContext&gt;disponível em uma construção ao redor como &lt;xref:System.Xaml.XamlWriter&gt;.&lt;/xref:System.Xaml.XamlWriter&gt; &lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you can pass the &lt;xref:System.Xaml.XamlSchemaContext&gt; reference through to all XAML type system calls that require a XAML schema context.</source>
          <target state="translated">Nesse caso, você pode passar o &lt;xref:System.Xaml.XamlSchemaContext&gt;referência por meio de todas as chamadas de sistema de tipo XAML que exigem um contexto de esquema XAML.&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>One specific constructor, &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;, does not require a &lt;xref:System.Xaml.XamlSchemaContext&gt;.</source>
          <target state="translated">Um construtor específico &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;, não requer um &lt;xref:System.Xaml.XamlSchemaContext&gt;.&lt;/xref:System.Xaml.XamlSchemaContext&gt; &lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a XamlMember that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">No entanto, um XamlMember que é construído com o &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;assinatura retorna <ph id="ph1">`true`</ph> para &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.</source>
          <target state="translated">Para um caminho de carga que envolve &lt;xref:System.Xaml.XamlObjectWriter&gt;, esse membro não pode ser gravado em um gráfico de objeto.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the .NET Framework XAML services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant XamlMember reports <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Com a implementação de serviços XAML do .NET Framework, o &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;chamar lança um &lt;xref:System.Xaml.XamlObjectWriterException&gt;quando relata o relevante XamlMember <ph id="ph1">`true`</ph> para &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a XamlMember that has a value of <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">Você não deve criar um XamlMember que tem um valor de <ph id="ph1">`true`</ph> para &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;, a menos que sua implementação pode manipular as exceções de &lt;xref:System.Xaml.XamlObjectWriter&gt;, ou você tiver outras maneiras de ajustar o &lt;xref:System.Xaml.XamlObjectWriter&gt;comportamento.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one or more of the  following might be true of your implementation:      -   The XAML schema context is available later.</source>
          <target state="translated">Por exemplo, um ou mais dos itens a seguir podem ser verdadeiro para sua implementação:-contexto do esquema XAML o está disponível mais tarde.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You use a member invoker pattern.</source>
          <target state="translated">-Você usar um padrão de chamador do membro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.</source>
          <target state="translated">-Você substituir deliberadamente &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;em um gravador XAML personalizado.&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe usando o sistema de tipos CLR &lt;xref:System.Reflection.EventInfo&gt;e um <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an event (event handler connection-point property).</source>
          <target state="translated">Use este construtor se o membro representa um evento (propriedade de ponto de conexão de manipulador de eventos).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.EventInfo&gt;que representa o membro de evento.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe usando o sistema de tipos CLR &lt;xref:System.Reflection.PropertyInfo&gt;e um <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents a property (and specifically is not an event handler connection).</source>
          <target state="translated">Use este construtor se o membro representa uma propriedade (e especificamente não é uma conexão de manipulador de eventos).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.PropertyInfo&gt;que representa o membro de propriedade.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe usando o sistema de tipos CLR &lt;xref:System.Reflection.EventInfo&gt;e um <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, incluindo <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informações.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an event (or an event handler connection-point property).</source>
          <target state="translated">Use este construtor se o membro representa um evento (ou uma propriedade de ponto de conexão do manipulador de eventos).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.EventInfo&gt;que representa o membro de evento.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time reflection calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que manipula a reflexão em tempo de execução chama em relação a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using reflection &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe usando a reflexão &lt;xref:System.Reflection.PropertyInfo&gt;e um <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, incluindo <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informações.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor only if the member represents a property and if it is not an event handler connection.</source>
          <target state="translated">Use este construtor somente se o membro representa uma propriedade e se não for uma conexão de manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.PropertyInfo&gt;que representa o membro de propriedade.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que manipula a invocação de tempo de execução chama em relação a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable event.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de classe para um <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> que representa um evento anexável.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Use este construtor se o membro representa um membro de evento anexável.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The string name of the attachable event.</source>
          <target state="translated">O nome da cadeia de caracteres do evento anexável.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o manipulador <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> método do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a string name and declaring <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> usando um nome de cadeia de caracteres e a declaração de classe <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> informações.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is constructed with this signature has significant limitations; see Remarks.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é construído com esta assinatura apresenta limitações significativas; consulte comentários.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the XamlMember signature returns <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Um &lt;xref:System.Xaml.XamlMember&gt;que é construído com o XamlMember assinatura retorna <ph id="ph1">`true`</ph> para &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.</source>
          <target state="translated">Para um caminho de carga que envolve &lt;xref:System.Xaml.XamlObjectWriter&gt;, esse membro não pode ser gravado em um gráfico de objeto.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the .NET Framework XAML Services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Com a implementação de serviços XAML do .NET Framework, o &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;chamar lança um &lt;xref:System.Xaml.XamlObjectWriterException&gt;quando relevante &lt;xref:System.Xaml.XamlMember&gt;relatórios <ph id="ph1">`true`</ph> para &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a &lt;xref:System.Xaml.XamlMember&gt; with &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;<ph id="ph1">`true`</ph> unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">Você não deve criar um &lt;xref:System.Xaml.XamlMember&gt;com &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph> , a menos que sua implementação pode manipular as exceções de &lt;xref:System.Xaml.XamlObjectWriter&gt;, ou você tiver outras maneiras de ajustar o &lt;xref:System.Xaml.XamlObjectWriter&gt;comportamento.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one or more of the following might be true of your implementation:      -   The XAML schema context is available later.</source>
          <target state="translated">Por exemplo, um ou mais dos itens a seguir podem ser verdadeiro para sua implementação:-contexto do esquema XAML o está disponível mais tarde.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You use a member invoker pattern.</source>
          <target state="translated">-Você usar um padrão de chamador do membro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.</source>
          <target state="translated">-Você substituir deliberadamente &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;em um gravador XAML personalizado.&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The string name of the member.</source>
          <target state="translated">O nome da cadeia de caracteres do membro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the declaring type.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informações para o tipo de declaração.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the member is attachable; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para indicar que o membro anexável; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable property.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de classe para um <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> que representa uma propriedade anexável.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable property.</source>
          <target state="translated">Use este construtor se o membro representa uma propriedade anexável.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The string name of the attachable property.</source>
          <target state="translated">O nome da cadeia de caracteres da propriedade anexável.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable event, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de classe para um <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> que representa um evento anexável, incluindo <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informações.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Use este construtor se o membro representa um membro de evento anexável.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The string name of the attachable event.</source>
          <target state="translated">O nome da cadeia de caracteres do evento anexável.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o manipulador <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> método do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que manipula a invocação de tempo de execução chama em relação a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable property, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de classe para um <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> que representa uma propriedade anexável, incluindo <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informações.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable property member.</source>
          <target state="translated">Use este construtor se o membro representa um membro de uma propriedade anexável.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The string name of the attachable property.</source>
          <target state="translated">O nome da cadeia de caracteres da propriedade anexável.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">O sistema de tipos CLR &lt;xref:System.Reflection.MethodInfo&gt;para o <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador do membro anexável do fazendo implementação.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contexto que qualifica o membro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que manipula a invocação de tempo de execução chama em relação a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para o tipo que declara o membro que é associado a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is typically set during initialization and is usually not <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Esse valor normalmente é definida durante a inicialização e não costuma ser <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  DeclaringType information can be passed in by constructors for initialization.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; DeclaringType informações podem ser passadas por construtores para inicialização.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling directly into base constructors, initialization for &lt;xref:System.Xaml.XamlMember&gt; derived classes can omit some of the value-checks that are made in the base class.</source>
          <target state="translated">Por chamar diretamente os construtores base, a inicialização para &lt;xref:System.Xaml.XamlMember&gt;derivadas de classes podem omitir algumas das verificações de valor que são feitas na classe base.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</source>
          <target state="translated">Portanto, a inicialização derivada pode alterar as informações de relação de membro de tipo relatado de um membro XAML para que ele não se alinha de forma esperada com as informações de sua declaração de CLR subjacente do sistema de tipo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of declaring type information, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações da declaração de tipo informações críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para o tipo que declara o membro que é associado a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Obtém um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> objeto, que é usado para carregamento adiado dos XAML declarado objetos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling DeferringLoader invokes &lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar DeferringLoader invoca &lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Esse comportamento ocorre nos casos em que a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> com <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> restrição genérica.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Obtém uma lista de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>These report the members where dependency relationships for initialization order exist relative to this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Eles reportam os membros em que relações de dependência para ordem de inicialização existem em relação a esse <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling DependsOn invokes &lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar DependsOn invoca &lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Esse comportamento ocorre nos casos em que a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern can be applied to object model cases that deliberately contradict a general XAML rule.</source>
          <target state="translated">O <ph id="ph1">`DependsOn`</ph> padrão pode ser aplicado a casos de modelo de objeto que deliberadamente contradigam a regra XAML geral.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</source>
          <target state="translated">A regra XAML geral é que os membros de um tipo que não são transmitidos como texto de inicialização (ou por um método de fábrica em XAML 2009) devem poder ser atribuídas em qualquer ordem.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>By applying a <ph id="ph1">`DependsOn`</ph> pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</source>
          <target state="translated">Aplicando um <ph id="ph1">`DependsOn`</ph> padrão para um membro, você pode instruir gravadores XAML para processar sempre o membro referenciado antes desse membro.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</source>
          <target state="translated">Você pode aplicar esse padrão em situações em que o valor do membro atual requer contexto ou outras informações que está disponíveis somente depois de outro membro é definido.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</source>
          <target state="translated">O <ph id="ph1">`DependsOn`</ph> padrão deve ser aplicado criteriosamente e reservado para cenários de propriedade em que ele tem uma finalidade de arquitetura.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Large numbers of dependencies have the potential to slow down XAML processing.</source>
          <target state="translated">Grandes números de dependências têm potencial para reduzir a velocidade de processamento de XAML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</source>
          <target state="translated">Além disso, é possível produzir dependências circulares, caso em que o comportamento de processamento de XAML é indefinido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example <ph id="ph1">`DependsOn`</ph> scenarios from WPF include certain properties on &lt;xref:System.Windows.Controls.ControlTemplate&gt; and &lt;xref:System.Windows.DataTemplate&gt;, on &lt;xref:System.Windows.Trigger&gt;, and on &lt;xref:System.Windows.Setter&gt;.</source>
          <target state="translated">Exemplo <ph id="ph1">`DependsOn`</ph> cenários do WPF incluem determinadas propriedades em &lt;xref:System.Windows.Controls.ControlTemplate&gt;e &lt;xref:System.Windows.DataTemplate&gt;, na &lt;xref:System.Windows.Trigger&gt;e em &lt;xref:System.Windows.Setter&gt;.&lt;/xref:System.Windows.Setter&gt; &lt;/xref:System.Windows.Trigger&gt; &lt;/xref:System.Windows.DataTemplate&gt; &lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Uma lista de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Indica se o objeto atual é igual a outro objeto.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The object to compare with this object.</source>
          <target state="translated">O objeto a ser comparado com este objeto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o objeto atual é igual a <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> parâmetro; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
          <target state="translated">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An object to compare with this object.</source>
          <target state="translated">Um objeto a ser comparado com este objeto.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o objeto atual é igual a <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept> parâmetro; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Retorna o código hash para este objeto.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An integer hash code.</source>
          <target state="translated">Um código de hash de número inteiro.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">Retorna uma lista de namespaces XAML onde esse membro XAML pode existir.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt; call result from the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; that is associated with this &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">A implementação padrão retorna a &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt;chamar resultado a partir do &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;que está associado esta &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt; &lt;/xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A list of XAML namespace identifiers as strings.</source>
          <target state="translated">Uma lista de identificadores de namespace XAML como cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que está associada a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Invoker`</ph> pattern is an advanced XAML type system extension technique.</source>
          <target state="translated">O <ph id="ph1">`Invoker`</ph> padrão é uma técnica de extensão do sistema de tipo XAML avançada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Invoker`</ph> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</source>
          <target state="translated">O <ph id="ph1">`Invoker`</ph> padrão fornece uma maneira de inserir o comportamento de mapeamento de tipo de esquema diferente, enquanto estiver usando definições de sistema de tipo XAML de serviços XAML do .NET Framework.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; override returns <ph id="ph1">`null`</ph>, or if the default implementation returns <ph id="ph2">`null`</ph> because it lacks the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; for this &lt;xref:System.Xaml.XamlMember&gt;, the Invoker property returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Se um &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;Substituir retorna <ph id="ph1">`null`</ph>, ou se a implementação padrão retorna <ph id="ph2">`null`</ph> porque ele não tem a &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;para este &lt;xref:System.Xaml.XamlMember&gt;a propriedade do chamador retorna &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; is the default.</source>
          <target state="translated">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;é o padrão.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <ph id="ph1">`Invoker`</ph> patterns are passed for construction of XAML type system entities.</source>
          <target state="translated">Isso é verdadeiro para a maioria das operações que usam serviços XAML do .NET Framework e o contexto do esquema XAML padrão e em nenhum específicos substituir <ph id="ph1">`Invoker`</ph> padrões são passados para a construção de entidades do sistema de tipo XAML.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Invoker invokes &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar um chamador chama &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que está associada a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reported as an ambient property.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> será relatado como uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsAmbient invokes &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsAmbient invoca &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Esse comportamento ocorre em implementações onde a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">Verificando para propriedades de ambiente é geralmente fazem parte da lógica de processamento de XAML para certificar-se de que os objetos e os valores que se baseiam no uso de ambiente para a qualificação do tipo podem funcionar corretamente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">APIs de serviços XAML do .NET Framework e o contexto do esquema padrão XAML preenche esse valor com base na atribuição com &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; uses this existing &lt;xref:System.Windows.Markup.AmbientAttribute&gt; technique, and it returns <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member declaration.</source>
          <target state="translated">A implementação padrão de &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;usa esse existente &lt;xref:System.Windows.Markup.AmbientAttribute&gt;técnica e retornará <ph id="ph1">`true`</ph> se &lt;xref:System.Windows.Markup.AmbientAttribute&gt;existe em uma declaração de membro.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is found on members of several WPF types, which include &lt;xref:System.Windows.Application&gt;, &lt;xref:System.Windows.Setter&gt;, and &lt;xref:System.Windows.Style&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;foi encontrado em membros de vários tipos WPF, que incluem &lt;xref:System.Windows.Application&gt;, &lt;xref:System.Windows.Setter&gt;e &lt;xref:System.Windows.Style&gt;.&lt;/xref:System.Windows.Style&gt; &lt;/xref:System.Windows.Setter&gt; &lt;/xref:System.Windows.Application&gt;&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also found on the &lt;xref:System.Windows.ResourceDictionary&gt; type, which connotes that any member that uses &lt;xref:System.Windows.ResourceDictionary&gt; as its type should be considered ambient even if the member is not specifically attributed.</source>
          <target state="translated">Ele também é encontrado na &lt;xref:System.Windows.ResourceDictionary&gt;tipo, que dá a ideia de que qualquer membro que usa &lt;xref:System.Windows.ResourceDictionary&gt;como seu tipo deve ser considerado ambiente mesmo se o membro não é especificamente atribuído.&lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is reported as an ambient property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> relatados como uma propriedade de ambiente; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is an attachable member.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é um membro anexável.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsAttachable value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">O valor de IsAttachable é inicializado com base em qual construtor foi usado para construir um &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is an attachable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> é um membro anexável; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a XAML directive.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é uma diretiva XAML.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsDirective value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">O valor de IsDirective é inicializado com base em qual construtor foi usado para construir um &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base &lt;xref:System.Xaml.XamlMember&gt; constructors initialize so that IsDirective is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">A base &lt;xref:System.Xaml.XamlMember&gt;construtores inicializar para que seja IsDirective <ph id="ph1">`false`</ph>.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the &lt;xref:System.Xaml.XamlDirective&gt; class (a &lt;xref:System.Xaml.XamlMember&gt; derived class) initializes so that IsDirective is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">No entanto, a &lt;xref:System.Xaml.XamlDirective&gt;classe (um &lt;xref:System.Xaml.XamlMember&gt;classe derivada) inicializa para que seja IsDirective <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to report IsDirective as <ph id="ph1">`true`</ph> to callers of a custom XAML schema class for XAML members, make sure you derive from &lt;xref:System.Xaml.XamlDirective&gt; because that is the only way to enable that behavior.</source>
          <target state="translated">Se você deseja relatar IsDirective como <ph id="ph1">`true`</ph> para chamadores de uma classe personalizada de esquema XAML para membros XAML, verifique se você derivar da &lt;xref:System.Xaml.XamlDirective&gt;porque é a única maneira de habilitar esse comportamento.&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a XAML directive; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> é uma XAML diretiva; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an event member.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro de evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsEvent invokes &lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsEvent invoca &lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um evento; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized with a valid <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> string as its &lt;xref:System.Xaml.XamlMember.Name*&gt;.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é inicializada com uma validade <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> cadeia de caracteres como seu &lt;xref:System.Xaml.XamlMember.Name*&gt;.&lt;/xref:System.Xaml.XamlMember.Name*&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is initialized with a valid <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> string; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> é inicializada com uma validade <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> de cadeia de caracteres; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a read-only member.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro somente leitura.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsReadOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsReadOnly invoca &lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a read-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um membro somente leitura; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member with a callable public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro com um público que pode ser chamado <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> acessador.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsReadPublic value checks whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public.</source>
          <target state="translated">O IsReadPublic valor verifica se o &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;é público.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id="ph1">`get`</ph> accessor is not callable in a practical way, and IsReadPublic returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;é não público, o <ph id="ph1">`get`</ph> acessador não é chamado em uma forma prática e retorna IsReadPublic <ph id="ph2">`false`</ph>.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsReadPublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsReadPublic invoca &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; O &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;método é virtual e, portanto, pode ser substituído.&lt;/xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">A substituição tem o potencial de mudar (maliciosamente ou não) as informações de acesso reportadas de um membro XAML para que ele não alinhe de forma esperada com as informações de acesso de sua declaração de CLR subjacente do tipo system.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Para qualquer verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a callable public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um público que pode ser chamado <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> acessador; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Obtém um valor que indica se o membro não é resolvido pelo sistema de backup que é usado para resolução de tipo e membro.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id="ph1">`true`</ph> for IsUnknown.</source>
          <target state="translated">Um &lt;xref:System.Xaml.XamlMember&gt;que é construído com o &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;assinatura retorna <ph id="ph1">`true`</ph> para IsUnknown.&lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, a &lt;xref:System.Xaml.XamlMember&gt; with <ph id="ph1">`true`</ph> for IsUnknown cannot be written into an object graph.</source>
          <target state="translated">Para um caminho de carga que envolve &lt;xref:System.Xaml.XamlObjectWriter&gt;, um &lt;xref:System.Xaml.XamlMember&gt;com <ph id="ph1">`true`</ph> para IsUnknown não pode ser gravado em um gráfico de objeto.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the default implementations in .NET Framework XAML Services APIs, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id="ph1">`true`</ph> for IsUnknown.</source>
          <target state="translated">Sob as implementações padrão de APIs de serviços de XAML do .NET Framework, o &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;chamar lança um &lt;xref:System.Xaml.XamlObjectWriterException&gt;quando relevante &lt;xref:System.Xaml.XamlMember&gt;relatórios <ph id="ph1">`true`</ph> para IsUnknown.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a &lt;xref:System.Xaml.XamlMember&gt; that has a value of <ph id="ph1">`true`</ph> for IsUnknown unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">Você não deve criar um &lt;xref:System.Xaml.XamlMember&gt;que tem um valor de <ph id="ph1">`true`</ph> para IsUnknown, a menos que sua implementação pode manipular as exceções de &lt;xref:System.Xaml.XamlObjectWriter&gt;, ou você tiver outras maneiras de ajustar o &lt;xref:System.Xaml.XamlObjectWriter&gt;comportamento.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsUnknown invokes &lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsUnknown invoca &lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is not resolvable; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the member is resolvable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o membro não pode ser resolvido; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o membro puder ser resolvido.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a write-only member.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro de somente gravação.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsWriteOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsWriteOnly invoca &lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um membro somente gravação; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a callable public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Obtém um valor que indica se este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro que tem um público que pode ser chamado <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> acessador.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsWritePublic value considers whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public as part of the determination.</source>
          <target state="translated">O valor de IsWritePublic considera se o &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;é público como parte da determinação.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id="ph1">`set`</ph> accessor is not callable in a practical way, and IsWritePublic returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;é não público, o <ph id="ph1">`set`</ph> acessador não é chamado em uma forma prática e retorna IsWritePublic <ph id="ph2">`false`</ph>.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsWritePublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar IsWritePublic invoca &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; O &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;método é virtual e, portanto, pode ser substituído.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">A substituição tem o potencial de mudar (maliciosamente ou não) as informações de acesso reportadas de um membro XAML para que ele não alinhe de forma esperada com as informações de acesso de sua declaração de CLR subjacente do tipo system.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Para qualquer verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a callable public <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um público que pode ser chamado <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> acessador; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, returns an <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Quando implementada em uma classe derivada, retorna um <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</source>
          <target state="translated">Substitua este método para fornecer a reflexão interna com uma maneira alternativa para obter valores de atributo do CLR.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to &lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;.</source>
          <target state="translated">Na ausência de uma substituição, o reflector interno usa a lógica de reflexão típica do CLR como chamadas ao &lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;.&lt;/xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A implementação padrão retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Retorna um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> objeto, que é usado para carregamento adiado dos XAML declarado objetos.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; property.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor da &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;propriedade.&lt;/xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Substitua este método se desejar &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;para retornar um valor diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informações.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns an object either by reading &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; or using a &lt;xref:System.Xaml.XamlDeferringLoader&gt; from the declaring type.</source>
          <target state="translated">A implementação padrão retorna um objeto lendo &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;ou usando um &lt;xref:System.Xaml.XamlDeferringLoader&gt;do tipo declarativo.&lt;/xref:System.Xaml.XamlDeferringLoader&gt; &lt;/xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither object is available, this method might return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se nenhum objeto estiver disponível, esse método pode retornar <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that has a <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> que tem um <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> restrição genérica.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Retorna uma lista de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Items in the list report the members where dependency relationships for initialization order exist relative to this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Relatam de itens na lista os membros em que relações de dependência para ordem de inicialização existem em relação a esse <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; property.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor da &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;propriedade.&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Substitua este método se desejar &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;para retornar um valor diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informações.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF XAML reader and writer implementations attribute this case with &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;.</source>
          <target state="translated">As implementações de leitor e gravador do WPF XAML atributo nesse caso com &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses this existing &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; technique.</source>
          <target state="translated">A implementação padrão usa esse existente &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;técnica.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not using &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; for this purpose and intend to replace that technique for indicating property processing order with your own technique.</source>
          <target state="translated">Substitua este método se você não estiver usando &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;para essa finalidade e a intenção de substituir essa técnica para indicar a ordem de processamento de propriedade com sua própria técnica.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</source>
          <target state="translated">Se você não pretende dar suporte a uma ordem de processamento de propriedade, você pode usar a implementação padrão porque ele não retorna nenhum resultado, que é apropriado.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list is read-only.</source>
          <target state="translated">A lista é somente leitura.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Uma lista de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é associada a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked by calls to &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.</source>
          <target state="translated">Esse método é invocado por chamadas para &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation does not require that a &lt;xref:System.Xaml.XamlMember&gt; be constructed by using one of the constructors that pass an initial &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.</source>
          <target state="translated">A implementação padrão não requer que um &lt;xref:System.Xaml.XamlMember&gt;ser construídas usando um dos construtores que passam um inicial &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; value must exist for the &lt;xref:System.Xaml.XamlMember&gt;; otherwise, the default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">No entanto, um &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;valor deve existir para o &lt;xref:System.Xaml.XamlMember&gt;; caso contrário, retorna a implementação padrão <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you also derive from &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; and intend to return the derived class.</source>
          <target state="translated">Substitua este método se você também deriva &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;e pretendia retornar classe derivada.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you return <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt; returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; to callers.</source>
          <target state="translated">Se você retornar <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;retorna &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;para chamadores.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlMember.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reported as an ambient property.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> será relatado como uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked by internal calls that check for ambient XAML property information.</source>
          <target state="translated">Esse método é invocado por chamadas internas que verificar se há informações de propriedade do ambiente XAML.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</source>
          <target state="translated">Comportamento de propriedade de ambiente é contabilizado no comportamento de API público de leitores XAML e gravadores XAML.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">As chamadas internas que fazem referência a LookupIsAmbient geralmente fazem parte da lógica de processamento de XAML para certificar-se de que os objetos e os valores que se baseiam no uso de ambiente para a qualificação do tipo podem funcionar corretamente.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</source>
          <target state="translated">A implementação de serviços XAML do .NET Framework padrão usa a atribuição para obter essas informações de reflexão fazendo tipos CLR.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the default implementation checks for &lt;xref:System.Windows.Markup.AmbientAttribute&gt; and returns <ph id="ph1">`true`</ph> for LookupIsAmbient if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member definition.</source>
          <target state="translated">Especificamente, a implementação padrão procura &lt;xref:System.Windows.Markup.AmbientAttribute&gt;e retorna <ph id="ph1">`true`</ph> para LookupIsAmbient se &lt;xref:System.Windows.Markup.AmbientAttribute&gt;existe em uma definição de membro.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not using &lt;xref:System.Windows.Markup.AmbientAttribute&gt; for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</source>
          <target state="translated">Substitua este método se você não estiver usando &lt;xref:System.Windows.Markup.AmbientAttribute&gt;para essa finalidade e a intenção de substituir essa técnica para propriedades de ambiente XAML com sua própria técnica, indicando.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example APIs from WPF that attribute with &lt;xref:System.Windows.Markup.AmbientAttribute&gt; are &lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">APIs de exemplo de atributo com &lt;xref:System.Windows.Markup.AmbientAttribute&gt;são &lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt;e &lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt; do WPF</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as an ambient property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>relate isto <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> como uma propriedade de ambiente; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an event.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um evento.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation checks whether &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; is of type &lt;xref:System.Reflection.EventInfo&gt;, and if it is, returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">As verificações de implementação padrão se &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;é do tipo &lt;xref:System.Reflection.EventInfo&gt;e se for, retorna <ph id="ph1">`true`</ph>.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis que podem ser interpretados para determinar o XAML tipo representações de sistema em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report that this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para relatórios que este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um evento; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an intended read-only property.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa uma propriedade somente leitura pretendida.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists, but a public <ph id="ph2">`set`</ph> accessor does not exist for it, as determined by internal reflection.</source>
          <target state="translated">A implementação padrão retorna <ph id="ph1">`true`</ph> se &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;existe, mas um público <ph id="ph2">`set`</ph> acessador não existe para ele, conforme determinado pela reflexão interno.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis que podem ser interpretados para determinar o XAML tipo representações de sistema em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as an intended read-only property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>relate isto <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> como uma propriedade somente leitura pretendida; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa uma propriedade que tem um público <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> acessador.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results based either on internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;, processing in that order.</source>
          <target state="translated">A implementação padrão retorna resultados com base em reflexão interno ou a negação de &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;, o processamento nessa ordem.&lt;/xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>LookupIsReadPublic returns whether the member itself is public; it returns <ph id="ph1">`true`</ph> for a public member on a nonpublic declaring type.</source>
          <target state="translated">LookupIsReadPublic retorna se o próprio membro é público; ele retorna <ph id="ph1">`true`</ph> para um membro público em um confidenciais tipo declarativo.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt; instead, if you also want to consider the visibility of the declaring type.</source>
          <target state="translated">Use &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;em vez disso, se você também queira considerar a visibilidade do tipo declarativo.&lt;/xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The LookupIsReadPublic method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupIsReadPublic o método é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">A substituição tem o potencial de mudar (maliciosamente ou não) as informações de acesso reportadas de um membro XAML para que ele não alinhe de forma esperada com as informações de acesso de sua declaração de CLR subjacente do tipo system.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Para qualquer verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa uma propriedade que tem um público <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> acessador; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para resolução de tipo e membro.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results that are based on either internal reflection or checking for a <ph id="ph1">`null`</ph> value of &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, processing in that order.</source>
          <target state="translated">A implementação padrão retorna resultados com base em qualquer reflexão interno ou verificando um <ph id="ph1">`null`</ph> valor &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, o processamento nessa ordem.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a non-resolvable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um membro não pode ser resolvido; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor but not a public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro que tem um público <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> acessador mas não um público <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> acessador.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists that has a public <ph id="ph2">`set`</ph> accessor and a nonpublic <ph id="ph3">`get`</ph> accessor, as determined by internal reflection.</source>
          <target state="translated">A implementação padrão retorna <ph id="ph1">`true`</ph> se um &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;existe que tem um público <ph id="ph2">`set`</ph> acessador e um confidenciais <ph id="ph3">`get`</ph> acessador, conforme determinado pela reflexão interno.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um membro somente gravação; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retorna se isso <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representa um membro que tem um público <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> acessador.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results based  either internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;, processing in that order.</source>
          <target state="translated">A implementação padrão retorna resultados com base em reflexão interno ou a negação de &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;, o processamento nessa ordem.&lt;/xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The LookupIsWritePublic method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupIsWritePublic o método é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">A substituição tem o potencial de mudar (maliciosamente ou não) as informações de acesso reportadas de um membro XAML para que ele não alinhe de forma esperada com as informações de acesso de sua declaração de CLR subjacente do tipo system.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Para qualquer verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a writable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representa um membro gravável; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type where the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Retorna o <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo onde o <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> pode existir.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation distinguishes between attachable and non-attachable members.</source>
          <target state="translated">A implementação padrão faz distinção entre os membros anexáveis e não anexável.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For non-attachable members, LookupTargetType always returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.</source>
          <target state="translated">Para membros não anexável, LookupTargetType sempre retorna &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attachable members, LookupTargetType returns a result based on examining the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; accessor parameter type and interprets that type based on XAML schema context.</source>
          <target state="translated">Para membros anexáveis, LookupTargetType retorna um resultado com base em examinar o &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;tipo de parâmetro do acessador e interpreta que tipo com base no contexto do esquema XAML.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.TargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The type where the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">O tipo de onde o <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> pode existir.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">Retorna o <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo que é usado pelo membro.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.Type%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Substitua este método se desejar &lt;xref:System.Xaml.XamlMember.Type%2A&gt;para retornar um valor diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informações.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses different code paths and conceptual meanings for the returned &lt;xref:System.Xaml.XamlType&gt; that is based on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event.</source>
          <target state="translated">A implementação padrão usa caminhos de código diferentes e significados conceituais para retornado &lt;xref:System.Xaml.XamlType&gt;que baseia-se isso &lt;xref:System.Xaml.XamlMember&gt;representa uma propriedade, método ou evento.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.</source>
          <target state="translated">-Para uma propriedade, retornada &lt;xref:System.Xaml.XamlType&gt;é o tipo que define a propriedade ou é retornado pela propriedade.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">-Para um evento, retornado &lt;xref:System.Xaml.XamlType&gt;é o tipo de manipulador de eventos necessários (um delegado em uma implementação de CLR).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type.</source>
          <target state="translated">-Para um método, &lt;xref:System.Xaml.XamlType&gt;é o tipo de retorno.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</source>
          <target state="translated">Em cada caso, o contexto do esquema XML é usado para avaliar o tipo XAML do tipo de sistema subjacente.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo que é usado pelo membro.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Returns a type converter implementation that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna uma implementação de conversor de tipo que é associada a essa <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.</source>
          <target state="translated">A implementação padrão usa a seguinte lógica e a ordem de processamento: - se a atribuição existe no nível de membro (&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;), as informações de atributo são usadas para chamar &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;em relação ao contexto de esquema XAML.&lt;/xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; &lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a type converter that is associated with the type is returned.</source>
          <target state="translated">-Se &lt;xref:System.Xaml.XamlMember.Type%2A&gt;for válido, um conversor de tipo que está associado com o tipo será retornado.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the member is an event, an event-specific type converter is returned.</source>
          <target state="translated">-Se o membro é um evento, será retornado um conversor de tipo de evento específico.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;.&lt;/xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instance with <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instância com <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> restrição; ou <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador que está associado a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation interprets the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; property as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id="ph1">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">A implementação padrão interpreta o &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;a propriedade como &lt;xref:System.Reflection.PropertyInfo&gt;e retorna o valor de &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt;(com o parâmetro definido <ph id="ph1">`true`</ph>), que significa que o método retornado pode ser confidenciais.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can result in <ph id="ph1">`null`</ph> for certain cases.</source>
          <target state="translated">Esse comportamento pode resultar em <ph id="ph1">`null`</ph> para determinados casos.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>including cases where no associated accessor exists or the member is not a property.</source>
          <target state="translated">incluindo casos em que nenhum acessador associado existe ou o membro não é uma propriedade.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt; property on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor da &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;propriedade em um associado &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement LookupUnderlyingGetter, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.</source>
          <target state="translated">Certifique-se de implementar LookupUnderlyingGetter, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, e &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;para que retornem resultados correlacionados.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodInfo&gt;associado <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador; ou <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Returns a CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um sistema de tipos CLR &lt;xref:System.Reflection.MemberInfo&gt;que é associada a essa <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the underlying member information, which is based on construction.</source>
          <target state="translated">A implementação padrão retorna as informações de membro subjacente, que se baseia em construção.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Reflection.MemberInfo&gt; object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se o &lt;xref:System.Reflection.MemberInfo&gt;objeto for construído com uma assinatura que não fornece informações suficientes para definir o membro base, esse método retorna <ph id="ph1">`null`</ph>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an underlying member was set during construction, you should not need to call this method.</source>
          <target state="translated">Se um membro subjacente foi definido durante a construção, você não precisará chamar esse método.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and LookupUnderlyingMember so that they all return correlated results.</source>
          <target state="translated">Certifique-se de implementar &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, LookupUnderlyingMember para que todos eles retornem resultados correlacionados.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A CLR type system &lt;xref:System.Reflection.MemberInfo&gt; object that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um sistema de tipos CLR &lt;xref:System.Reflection.MemberInfo&gt;objeto que está associado com esta <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; ou <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador que está associado a essa <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation interprets &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id="ph1">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">A implementação padrão interpreta &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;como &lt;xref:System.Reflection.PropertyInfo&gt;e retorna o valor de &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt;(com o parâmetro definido <ph id="ph1">`true`</ph>), que significa que o método retornado pode ser confidenciais.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in <ph id="ph1">`null`</ph> for certain cases, including cases where there is no such accessor, or the member is not a property.</source>
          <target state="translated">Isso pode resultar em <ph id="ph1">`null`</ph> para certos casos, inclusive os casos em que não há nenhum tal acessador ou o membro não é uma propriedade.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt; on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;em um &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;associado. Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, LookupUnderlyingSetter, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.</source>
          <target state="translated">Certifique-se de implementar &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, LookupUnderlyingSetter, e &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;para que retornem resultados correlacionados.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodInfo&gt;associado <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> acessador; ou <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Returns a value serializer implementation that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna uma implementação de serializador de valor que é associada a essa <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.</source>
          <target state="translated">A implementação padrão usa a seguinte lógica e a ordem de processamento: - se a atribuição existe no nível de membro (&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;), as informações de atributo são usadas para chamar &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;em relação ao contexto de esquema XAML.&lt;/xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; &lt;/xref:System.Windows.Markup.ValueSerializerAttribute&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a value converter that is associated with the type is returned.</source>
          <target state="translated">-Se &lt;xref:System.Xaml.XamlMember.Type%2A&gt;for válido, um conversor de valor que está associado com o tipo será retornado.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the previous conditions do not apply, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">-Se não se aplicam as condições anteriores, <ph id="ph1">`null`</ph> será retornado.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;.</source>
          <target state="translated">Esse método é chamado quando um chamador obtém um valor de &lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;.&lt;/xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Substitua este método se você deseja relatar resultados uniforme para toda uma &lt;xref:System.Xaml.XamlMember&gt;derivado da classe, ou se você tiver um especializado metadados disponíveis para determinar isso em uma base por caso.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instance with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instância com &lt;xref:System.Windows.Markup.ValueSerializer&gt;restrição, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> name string that declares this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> nome de cadeia de caracteres que declara isso <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is always set during construction.</source>
          <target state="translated">Esse valor é sempre definido durante a construção.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors that are implemented by &lt;xref:System.Xaml.XamlMember&gt; typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <ph id="ph1">`null`</ph> or an empty string, if you are using default .NET Framework XAML Services implementations.</source>
          <target state="translated">Os construtores que são implementados por &lt;xref:System.Xaml.XamlMember&gt;normalmente lançar uma exceção se não for especificado um nome inicial; portanto, não espere essa propriedade para ser <ph id="ph1">`null`</ph> ou uma cadeia de caracteres vazia, se você estiver usando as implementações padrão de serviços XAML do .NET Framework.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and naming rules for CLR type and members are not an exact intersect.</source>
          <target state="translated"><bpt id="p1">[</bpt>Gramática XamlName<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e as regras de nomenclatura para o tipo CLR e os membros não são uma interseção exata.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</source>
          <target state="translated">É possível declarar um nome de membro que é válido em CLR, mas não é válido em XAML de nomenclatura.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should avoid this situation if possible.</source>
          <target state="translated">Você deve evitar essa situação, se possível.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> name string that declares this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> nome de cadeia de caracteres que declara isso <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have the same value.</source>
          <target state="translated">Determina se duas especificadas <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos têm o mesmo valor.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlMember1</ph><ept id="p2">&lt;/code&gt;</ept> is the same as the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlMember2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o valor de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlMember1</ph> <ept id="p2">&lt;/code&gt;</ept> é o mesmo que o valor de <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlMember2</ph> <ept id="p3">&lt;/code&gt;</ept>; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have different values.</source>
          <target state="translated">Determina se duas especificadas <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos têm valores diferentes.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlMember1</ph><ept id="p2">&lt;/code&gt;</ept> differs from the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlMember2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o valor de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlMember1</ph> <ept id="p2">&lt;/code&gt;</ept> difere do valor de <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlMember2</ph> <ept id="p3">&lt;/code&gt;</ept>; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Gets the single XAML namespace URI that identifies the primary XAML namespace for this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém o namespace XAML URI que identifica o namespace XAML primário para esse único <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreferredXamlNamespace property provides the same value as calling &lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt; and then getting the first value string from the returned list.</source>
          <target state="translated">A propriedade PreferredXamlNamespace fornece o mesmo valor que a chamada &lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;e, em seguida, obter a primeira cadeia de caracteres do valor da lista retornada.&lt;/xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</source>
          <target state="translated">O namespace XAML preferencial deve ser usado ao gravar o membro de volta para o texto ou outras representações que preservam as informações de namespace XAML.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The identifier for the primary XAML namespace for this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, as a string.</source>
          <target state="translated">O identificador do namespace XAML primário para este <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, which indicates how a visual designer should process the member.</source>
          <target state="translated">Obtém um <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valor que indica como um designer visual deve processar o membro.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">Um valor de <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> enumeração.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type where the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo onde o <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> pode existir.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is different for attachable and non-attachable members.</source>
          <target state="translated">O valor retornado é diferente para membros anexáveis e não anexável.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For non-attachable members, TargetType returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.</source>
          <target state="translated">Para membros não anexável, TargetType retorna &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attachable members, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; returns a result that is based on this logic:      -   If reflection cannot resolve a backing (&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph>), this method returns an internal constant that represents a generic object type.</source>
          <target state="translated">Para membros anexáveis, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;retorna um resultado com base em lógica: - se de reflexão não é possível resolver um backup (&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph>), esse método retorna uma constante interna que representa um tipo de objeto genérico.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the previous condition does not apply, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; is called.</source>
          <target state="translated">-Se a condição anterior não se aplica, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;é chamado.&lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a &lt;xref:System.Xaml.XamlType&gt; that is based on examining the methods that implement the <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> accessors.</source>
          <target state="translated">A implementação padrão retorna um &lt;xref:System.Xaml.XamlType&gt;que se baseia no examinando os métodos que implementam o <ph id="ph1">`get`</ph> e <ph id="ph2">`set`</ph> acessadores.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to use a different behavior such as other metadata forms that might report target types for attachable members.</source>
          <target state="translated">Uma classe pode substituir &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;usar um comportamento diferente, como outros metadados de formulários que poderá reportar os tipos de destino para membros anexáveis.&lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The type where the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">O tipo de onde o <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> pode existir.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna uma representação de cadeia de caracteres deste <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.</source>
          <target state="translated">Essa implementação retorna &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Uma representação de cadeia de caracteres deste <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo que é usado pelo membro.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Type invokes &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; or a specific override of that method.</source>
          <target state="translated">Tipo de chamada invoca &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupType%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Isso ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default behavior (no &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; override), the returned &lt;xref:System.Xaml.XamlType&gt; can have different conceptual meanings.</source>
          <target state="translated">No comportamento padrão (nenhuma &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;Substituir), retornado &lt;xref:System.Xaml.XamlType&gt;pode ter diferentes significados conceituais.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlMember.LookupType%2A&gt;</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Which meaning applies depends on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event, as the following list shows:      -   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.</source>
          <target state="translated">Aplica-se qual significado depende se isso &lt;xref:System.Xaml.XamlMember&gt;representa uma propriedade, método ou evento, como mostra a lista a seguir: - para uma propriedade, retornada &lt;xref:System.Xaml.XamlType&gt;é o tipo que define a propriedade ou é retornado pela propriedade.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">-Para um evento, retornado &lt;xref:System.Xaml.XamlType&gt;é o tipo de manipulador de eventos necessários (um delegado em uma implementação de CLR).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type of that method, which may be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">-Para um método, &lt;xref:System.Xaml.XamlType&gt;é o tipo de retorno desse método, o que pode ser <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</source>
          <target state="translated">Em cada caso, o contexto do esquema XAML é usado para avaliar o tipo XAML do tipo de backup.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do tipo que é usado pelo membro.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which can be used for type conversion construction of XAML declared objects.</source>
          <target state="translated">Obtém um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> objeto, que pode ser usado para a construção de conversão de tipo de XAML declarado objetos.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling TypeConverter invokes &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar TypeConverter invoca &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Esse comportamento ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations that return a non-null property value for TypeConverter are not necessarily a working &lt;xref:System.ComponentModel.TypeConverter&gt;.</source>
          <target state="translated">Implementações que retornam um valor de propriedade nulos para TypeConverter não são necessariamente um trabalho &lt;xref:System.ComponentModel.TypeConverter&gt;.&lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following is a list of possible non-null return values for TypeConverter and what these values represent:      -   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</source>
          <target state="translated">A seguir está uma lista de possíveis valores de retorno não nulo para TypeConverter e esses valores representam:-o valor de retorno relata um conversor de tipo é atribuído especificamente para esse membro ou de forma geral para o tipo de destino do conversor.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</source>
          <target state="translated">Normalmente, esse comportamento é que a maioria dos sistemas de tipo XAML e procure processadores XAML para instanciar um conversor de tipo e chamar seus métodos.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The return value reports a built-in value converter.</source>
          <target state="translated">-O valor de retorno relata um conversor de valor interno.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>These converters exist for certain internal operations that are performed by a XAML writer.</source>
          <target state="translated">Esses conversores existem para determinadas operações internas que são executadas por um autor XAML.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</source>
          <target state="translated">Em particular, esses conversores de valor interno converter os valores de cadeia de caracteres bruta de atributo para os primitivos de nível de linguagem XAML.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</source>
          <target state="translated">Para a implementação de serviços XAML do .NET Framework, essas conversões de tipo interno geralmente encaminham para um conversor de tipo é definido no assembly System.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a conversion for an &lt;xref:System.Int32&gt; value has built-in forwarded conversion, and therefore, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt; value references &lt;xref:System.ComponentModel.Int32Converter&gt;.</source>
          <target state="translated">Por exemplo, uma conversão para um &lt;xref:System.Int32&gt;valor tem interno encaminhado conversão e, portanto, as &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt;referências de valor &lt;xref:System.ComponentModel.Int32Converter&gt;.&lt;/xref:System.ComponentModel.Int32Converter&gt; &lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt; &lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The return value reports the special case of an unconstrained object model; that is, the &lt;xref:System.Xaml.XamlMember&gt; has a &lt;xref:System.Xaml.XamlMember.Type%2A&gt; value of &lt;xref:System.Object&gt;.</source>
          <target state="translated">-O valor de retorno relatórios caso especial de um modelo de objeto irrestrita; ou seja, o &lt;xref:System.Xaml.XamlMember&gt;tem um &lt;xref:System.Xaml.XamlMember.Type%2A&gt;valor de &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Xaml.XamlMember.Type%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; reports that the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt; is {<ph id="ph1">`Object}`</ph>.</source>
          <target state="translated">Nesse caso, a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;relata que o &lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt;é {<ph id="ph1">`Object}`</ph>.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.Schema.XamlValueConverter%601&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt; is <ph id="ph1">`null`</ph> because no actual type or instance is available to perform this conversion.</source>
          <target state="translated">No entanto, &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;é <ph id="ph1">`null`</ph> porque nenhum tipo real ou a instância está disponível para realizar essa conversão.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</source>
          <target state="translated">Em vez disso, o comportamento do modelo de objeto não pode ser determinado até o tempo de execução, quando o tempo de execução da tecnologia específica determina a manipulação de seu gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you can access a working &lt;xref:System.ComponentModel.TypeConverter&gt; from &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;, you can invoke its conversion methods.</source>
          <target state="translated">Se você puder acessar um trabalho &lt;xref:System.ComponentModel.TypeConverter&gt;de &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;, você pode chamar seus métodos de conversão.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt; &lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, many conversion methods rely on service context.</source>
          <target state="translated">No entanto, vários métodos de conversão confiam no contexto do serviço.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</source>
          <target state="translated">Se você não tem o mesmo contexto de serviço disponível que o conversor de tipo de espera para sua função típica de gravação de objetos para gráficos de objeto, os métodos de conversor podem gerar exceções.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> value, with a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> valor, com um <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> restrição genérica.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Gets the CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is available for a member that is constructed by &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.Reflection.MethodInfo&gt;, or &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">Obtém o sistema de tipos CLR &lt;xref:System.Reflection.MemberInfo&gt;que está disponível para um membro que é criado por &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.Reflection.MethodInfo&gt;, ou &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling UnderlyingMember invokes &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar UnderlyingMember invoca &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>CLR type system &lt;xref:System.Reflection.MemberInfo&gt; information, as cast from the initial constructor parameters.</source>
          <target state="translated">Sistema de tipos CLR &lt;xref:System.Reflection.MemberInfo&gt;informações, como conversão de parâmetros de construtor inicial.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is constructed with the <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29<ph id="ph2">&amp;gt;</ph> signature returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é construído com a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29<ph id="ph2">&amp;gt;</ph> assinatura retorna <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for value serialization of XAML declared objects.</source>
          <target state="translated">Obtém um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> objeto, que é usado para serialização de valor de XAML declarado objetos.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling ValueSerializer invokes &lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt; or a specific override of that method.</source>
          <target state="translated">Chamar ValueSerializer invoca &lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;ou uma substituição específica desse método.&lt;/xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Esse comportamento ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all cases that return a non-null property value for ValueSerializer are necessarily a working &lt;xref:System.Windows.Markup.ValueSerializer&gt;.</source>
          <target state="translated">Nem todos os casos que retornam um valor de propriedade nulos para ValueSerializer são necessariamente um trabalho &lt;xref:System.Windows.Markup.ValueSerializer&gt;.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks in &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;; the same considerations apply to ValueSerializer.</source>
          <target state="translated">Consulte comentários em &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;; as mesmas considerações se aplicam a ValueSerializer.&lt;/xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint on the generic.</source>
          <target state="translated">Um <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> com &lt;xref:System.Windows.Markup.ValueSerializer&gt;restrição genérica.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>