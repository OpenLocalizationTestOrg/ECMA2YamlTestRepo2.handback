<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eacd6e1927ba58ae63e58184eecf3a9e3b645576</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.AsyncFlowControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acc187f367f53d438853dd33b86e239f55679d8c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a767117aa760f5bb5c396527eddaf2ecd515873b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the functionality to restore the migration, or flow, of the execution context between threads.</source>
          <target state="translated">Fornece a funcionalidade para restaurar a migração, ou o fluxo do contexto de execução entre threads.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An execution context contains all execution-related information for a logical thread.</source>
          <target state="translated">Um contexto de execução contém todas as informações relacionadas à execução de um segmento lógico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The flow of the execution context to other threads can be prevented by using the &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt; method, which returns an AsyncFlowControl structure.</source>
          <target state="translated">O fluxo do contexto de execução a outros threads pode ser evitado usando o &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;método, que retorna uma estrutura AsyncFlowControl.&lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt; method of the returned AsyncFlowControl structure can be used to undo the flow suppression.</source>
          <target state="translated">O &lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;método da estrutura de AsyncFlowControl retornado pode ser usado para desfazer a supressão de fluxo.&lt;/xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncFlowControl structure must be used on the same thread on which it was created.</source>
          <target state="translated">A estrutura AsyncFlowControl deve ser usada no mesmo thread em que ele foi criado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual do <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Threading.AsyncFlowControl&gt;.</source>
          <target state="translated">Chamar <ph id="ph1">`Dispose`</ph> quando terminar de usar o &lt;xref:System.Threading.AsyncFlowControl&gt;.&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Threading.AsyncFlowControl&gt; in an unusable state.</source>
          <target state="translated">O <ph id="ph1">`Dispose`</ph> método deixa o &lt;xref:System.Threading.AsyncFlowControl&gt;em um estado inutilizável.&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Threading.AsyncFlowControl&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Threading.AsyncFlowControl&gt; was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">`Dispose`</ph>, você deve liberar todas as referências para o &lt;xref:System.Threading.AsyncFlowControl&gt;para o coletor de lixo possa recuperar a memória que o &lt;xref:System.Threading.AsyncFlowControl&gt;estava ocupando.&lt;/xref:System.Threading.AsyncFlowControl&gt; &lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Threading.AsyncFlowControl&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Sempre chamada <ph id="ph2">`Dispose`</ph> antes de liberar sua última referência a &lt;xref:System.Threading.AsyncFlowControl&gt;.&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Threading.AsyncFlowControl&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o &lt;xref:System.Threading.AsyncFlowControl&gt;do objeto <ph id="ph1">`Finalize`</ph> método.&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is not used on the thread where it was created.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura não é usada no thread em que ele foi criado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure has already been used to call Dispose or &lt;xref:System.Threading.AsyncFlowControl.Undo*&gt;.</source>
          <target state="translated">- ou - <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura já foi usada para chamar Dispose ou &lt;xref:System.Threading.AsyncFlowControl.Undo*&gt;.&lt;/xref:System.Threading.AsyncFlowControl.Undo*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Determina se o objeto especificado é igual ao atual <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object to compare with the current structure.</source>
          <target state="translated">Um objeto a ser comparado com a estrutura atual.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is an <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> structure and is equal to the current <bpt id="p4">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> structure; otherwise, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> é um <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> estrutura e é igual à atual <bpt id="p4">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> estrutura; caso contrário, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is equal to the current <bpt id="p2">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Determina se o especificado <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura é igual à atual <bpt id="p2">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure to compare with the current structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura a ser comparado com a estrutura atual.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is equal to the current <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> structure; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> é igual à atual <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> estrutura; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Obtém um código hash para a atual <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um código hash para a atual <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine whether they are equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se eles são iguais.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two structures are equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se duas estruturas forem iguais; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine whether they are not equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se eles não são iguais.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the structures are not equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se as estruturas não forem iguais; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Restores the flow of the execution context between threads.</source>
          <target state="translated">Restaura o fluxo do contexto de execução entre threads.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Threading.AsyncFlowControl&gt; structure that is used to restore the flow.</source>
          <target state="translated">O &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;método retorna um &lt;xref:System.Threading.AsyncFlowControl&gt;estrutura que é usada para restaurar o fluxo.&lt;/xref:System.Threading.AsyncFlowControl&gt; &lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Undo method must be called only on the &lt;xref:System.Threading.AsyncFlowControl&gt; structure returned by its associated &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt; method.</source>
          <target state="translated">O método Undo deve ser chamado apenas no &lt;xref:System.Threading.AsyncFlowControl&gt;estrutura retornada por seus associados &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;método.&lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt; &lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is not used on the thread where it was created.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura não é usada no thread em que ele foi criado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure has already been used to call &lt;xref:System.Threading.AsyncFlowControl.Dispose*&gt; or Undo.</source>
          <target state="translated">- ou - <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura já foi usada para chamar &lt;xref:System.Threading.AsyncFlowControl.Dispose*&gt;ou desfaça.&lt;/xref:System.Threading.AsyncFlowControl.Dispose*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>