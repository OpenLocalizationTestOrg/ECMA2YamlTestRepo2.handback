<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b29a890905ae20cc20d68dce90bf4de2ab9a7e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyPropertyChangedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d309b7f9119ddcc4eba6e50fcc38f530f258d299</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">209c5c8e10db85ab6500d4cc42ee5cc95e0705d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for various property changed events.</source>
          <target state="translated">Fornece dados para vários eventos de alteração de propriedade.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Typically these events report effective value changes in the value of a read-only dependency property.</source>
          <target state="translated">Normalmente, esses eventos relatam alterações de valor efetivo no valor de uma propriedade de dependência somente leitura.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Another usage is as part of a <bpt id="p1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Outro uso é como parte de um <bpt id="p1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The events that use the DependencyPropertyChangedEventArgs class for event data, and the &lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt; method implementations for handlers, generally follow the naming pattern <ph id="ph1">`Is*Changed`</ph>, and are generally implemented as <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events without &lt;xref:System.Windows.RoutedEvent&gt; backing (they are not routed events).</source>
          <target state="translated">Os eventos que usam a classe DependencyPropertyChangedEventArgs para dados de eventos, e o &lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt;implementações de método para manipuladores, geralmente seguem o padrão de nomenclatura <ph id="ph1">`Is*Changed`</ph>e geralmente são implementadas como <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> eventos sem &lt;xref:System.Windows.RoutedEvent&gt;backup (eles não são eventos roteados).&lt;/xref:System.Windows.RoutedEvent&gt; &lt;/xref:System.Windows.DependencyPropertyChangedEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;, also use the DependencyPropertyChangedEventArgs class for event data.</source>
          <target state="translated">Alguns métodos "manipular" caso contrário de tratamento de classe exposta eventos que reportam uma alteração de estado por meio de uma alteração de propriedade, como &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;, também usar a classe DependencyPropertyChangedEventArgs para dados de evento.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The scenario for &lt;xref:System.Windows.PropertyChangedCallback&gt; is to use the arguments to report old and new values that come from the property system evaluation of the property.</source>
          <target state="translated">O cenário para &lt;xref:System.Windows.PropertyChangedCallback&gt;é usar os argumentos para relatórios antigos e novos valores provenientes de avaliação do sistema de propriedade da propriedade.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</source>
          <target state="translated">Um retorno de chamada que processa os valores novos e antigos pode escolher um tratamento especial dependendo esses valores, como escolher não responder às alterações de valor que são consideradas insignificantes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</source>
          <target state="translated">Implementadores de eventos personalizados que as alterações de propriedade de dependência de relatório devem usar esse construtor para preencher os dados de eventos com as especificações da alteração quando o evento é gerado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property that changed.</source>
          <target state="translated">O identificador para a propriedade de dependência que foram alteradas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of the property before the change reported by the relevant event or state change.</source>
          <target state="translated">O valor da propriedade antes da alteração relatada pelo evento relevante ou alteração de estado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The value of the property after the change reported by the relevant event or state change.</source>
          <target state="translated">O valor da propriedade após a alteração relatada pelo evento relevante ou alteração de estado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Determines whether the provided object is equivalent to the current <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se o objeto fornecido é equivalente à atual <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation relies on value equivalence of all properties, including internal properties.</source>
          <target state="translated">Essa implementação depende de equivalência do valor de todas as propriedades, incluindo propriedades internas.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object to compare to the current <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O objeto a ser comparado ao atual <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the provided object is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o objeto fornecido é equivalente à atual <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether the provided <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se o fornecido <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é equivalente à atual <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation relies on value equivalence of all properties, including internal properties.</source>
          <target state="translated">Essa implementação depende de equivalência do valor de todas as propriedades, incluindo propriedades internas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para comparar com a atual<bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the provided <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p3">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se fornecido <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> é equivalente à atual <bpt id="p3">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a hash code  for this <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém um código hash para este <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer hash code.</source>
          <target state="translated">Um código de hash de inteiro de 32 bits com sinal.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the value of the property after the change.</source>
          <target state="translated">Obtém o valor da propriedade após a alteração.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided should always be castable to the type of the dependency property being reported.</source>
          <target state="translated">O tipo do valor fornecido deve sempre ser conversíveis para o tipo da propriedade de dependência que está sendo relatado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The property value after the change.</source>
          <target state="translated">O valor da propriedade após a alteração.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the value of the property before the change.</source>
          <target state="translated">Obtém o valor da propriedade antes da alteração.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided should always be castable to the type of the dependency property being reported.</source>
          <target state="translated">O tipo do valor fornecido deve sempre ser conversíveis para o tipo da propriedade de dependência que está sendo relatado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The property value before the change.</source>
          <target state="translated">O valor da propriedade antes da alteração.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have the same value.</source>
          <target state="translated">Determina se duas especificadas <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos têm o mesmo valor.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation uses the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.</source>
          <target state="translated">A implementação usa a mesma lógica &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A primeira <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para comparar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A segunda <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para comparar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are equivalent; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se os dois <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instâncias forem equivalentes; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are different.</source>
          <target state="translated">Determina se duas especificadas <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos são diferentes.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation returns the negation of the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.</source>
          <target state="translated">A implementação retorna a negação da mesma lógica &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A primeira <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para comparar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A segunda <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para comparar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are different; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se os dois <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instâncias forem diferentes; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the identifier for the dependency property where the value change occurred.</source>
          <target state="translated">Obtém o identificador para a propriedade de dependência em que ocorreu a alteração de valor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is relevant if used within a common &lt;xref:System.Windows.PropertyChangedCallback&gt; that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</source>
          <target state="translated">Esta propriedade é relevante se usado em um comum &lt;xref:System.Windows.PropertyChangedCallback&gt;que está registrada para várias propriedades, e é necessário para resolver a ambiguidade que mudam de propriedade chamado o retorno de chamada.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</source>
          <target state="translated">Propriedade não é normalmente relevante para gerar eventos, pois normalmente há uma correspondência 1:1 entre propriedades e eventos de alteração de propriedade do relatório.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event that was raised is itself the indication of which property changed.</source>
          <target state="translated">O evento que foi gerado em si é a indicação de que a propriedade alterada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The identifier field of the dependency property where the value change occurred.</source>
          <target state="translated">O campo de identificador de propriedade de dependência em que ocorreu a alteração de valor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>