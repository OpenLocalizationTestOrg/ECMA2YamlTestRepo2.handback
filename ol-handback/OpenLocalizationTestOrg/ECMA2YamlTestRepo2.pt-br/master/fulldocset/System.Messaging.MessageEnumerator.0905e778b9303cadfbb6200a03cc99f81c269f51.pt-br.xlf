<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48866610ef8d80da05371b0b6ef7e6d9609661bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.MessageEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a570860269ef6d3d9454ac1b94ae9a92fb373c77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">033622fbc69b34a2532b7f1b35be969738c8cd13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Fornece um cursor somente de avanço para enumerar por meio de mensagens em uma fila de mensagens.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use MessageEnumerator for dynamic interaction with messages in a queue.</source>
          <target state="translated">Use MessageEnumerator para dinâmica interação com as mensagens em uma fila.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods available through the &lt;xref:System.Messaging.MessageQueue&gt; class can return either a MessageEnumerator pointing to a dynamic list of messages in the queue, or an array that contains a copy at a given instant - a snapshot - of the queue at the time the specified method was called.</source>
          <target state="translated">Métodos disponíveis por meio de &lt;xref:System.Messaging.MessageQueue&gt;classe pode retornar qualquer um MessageEnumerator apontando para uma lista dinâmica de mensagens na fila, ou uma matriz que contém uma cópia em um dado momento - um instantâneo - da fila no momento em que o método especificado foi chamado.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike a static snapshot, an enumerator allows you to modify the collection.</source>
          <target state="translated">Ao contrário de um instantâneo estático, um enumerador permite modificar a coleção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a MessageEnumerator, you can remove messages from the queue, and the change is immediately reflected in the queue.</source>
          <target state="translated">Usando um MessageEnumerator, você pode remover mensagens da fila e imediatamente, a alteração será refletida na fila.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator does not remove the messages from the queue when it queries the queue.</source>
          <target state="translated">Um enumerador não remove as mensagens da fila quando a consulta a fila.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns information about the message at the current cursor position, but it leaves the message in the queue.</source>
          <target state="translated">Retorna informações sobre a mensagem na posição atual do cursor, mas deixa a mensagem na fila.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MessageEnumerator is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">Um MessageEnumerator é um cursor, inicializado para o início de uma lista dinâmica.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list order is the same as the order of the messages in the queue, according to message priority.</source>
          <target state="translated">A ordem da lista é igual à ordem das mensagens na fila, de acordo com a prioridade da mensagem.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can move the cursor to the first message in the queue by calling &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Você pode mover o cursor para a primeira mensagem na fila chamando &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the enumerator has been initialized, you can use &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to step forward through the remaining messages.</source>
          <target state="translated">Depois que o enumerador foi inicializado, você pode usar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;para percorrer as mensagens restantes para a frente.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify whether to wait for a message to become available by passing a timeout into the &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; method.</source>
          <target state="translated">Você pode especificar se deseja aguardar uma mensagem se torne disponível, passando um tempo limite para o &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;método.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the enumerator is dynamic, a message that is appended beyond the cursor's current position (for example, due to low priority), can be accessed by the enumerator.</source>
          <target state="translated">Como o enumerador é dinâmico, uma mensagem que é anexada além a posição atual do cursor (por exemplo, devido à baixa prioridade), pode ser acessado pelo enumerador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message that is inserted before the cursor's current position cannot be accessed.</source>
          <target state="translated">Uma mensagem que é inserida antes da posição atual do cursor não pode ser acessada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to step backward with a MessageEnumerator.</source>
          <target state="translated">Não é possível retroceder uma etapa com um MessageEnumerator.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cursor allows forward-only movement.</source>
          <target state="translated">Um cursor permite a movimentação de somente avanço.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt; method enables you to place the cursor back at the beginning of the queue.</source>
          <target state="translated">O &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;método permite que você coloque o cursor no início da fila.&lt;/xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of MessageEnumerator for a given queue work independently.</source>
          <target state="translated">Instâncias do MessageEnumerator para uma determinada fila trabalhar de forma independente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create two MessageEnumerator instances that apply to the same queue.</source>
          <target state="translated">Você pode criar duas instâncias de MessageEnumerator que se aplicam à mesma fila.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The changes that one MessageEnumerator makes to the messages in the queue will be reflected immediately in a second enumerator if the second enumerator is positioned before the first.</source>
          <target state="translated">As alterações que faz um MessageEnumerator para as mensagens na fila serão refletidas imediatamente em um segundo enumerador se o segundo enumerador está posicionado antes da primeira.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if two enumerators have the same position and one of them removes the message at that position, an exception is thrown if the other enumerator attempts to get the value of the &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt; property on the now-deleted message.</source>
          <target state="translated">No entanto, se duas enumeradores têm a mesma posição e um deles remove a mensagem da posição, uma exceção será lançada se o enumerador outros tenta obter o valor da &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;propriedade na mensagem excluída agora.&lt;/xref:System.Messaging.MessageEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you create an instance of &lt;xref:System.Messaging.MessageQueue&gt; with &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; set to <ph id="ph2">`true`</ph>, no other application can modify the messages in your enumerator while you have the connection to the queue.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se você criar uma instância de &lt;xref:System.Messaging.MessageQueue&gt;com &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt;definido como <ph id="ph2">`true`</ph>, nenhum outro aplicativo pode modificar as mensagens na sua enumerador enquanto você tem a conexão para a fila.&lt;/xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Libera os recursos associados com o enumerador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system retains an open handle to the queue during the lifetime of the cursor.</source>
          <target state="translated">O sistema operacional retém um identificador aberto para a fila durante o tempo de vida do cursor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call Close to release the resources associated with the handle.</source>
          <target state="translated">Quando você terminar de trabalhar com o enumerador, chamada Fechar para liberar os recursos associados a alça.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that this enumerator points to.</source>
          <target state="translated">Obtém a atual <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que este enumerador aponta para.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it points to the head of the queue, at a location before the first message.</source>
          <target state="translated">Quando o enumerador é criado, ele aponta para o início da fila em um local antes da primeira mensagem.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Current is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Nesse caso, o atual não é válido e lançará uma exceção se ele for acessado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to position the cursor at the first message in the queue.</source>
          <target state="translated">Você deve chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;para posicionar o cursor a primeira mensagem na fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current message.</source>
          <target state="translated">A mensagem atual.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You called Current before the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<bpt id="p1">*</bpt>&gt;. The cursor is located before the first element of the message enumeration.       -or-       You called Current after a call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<ept id="p1">*</ept>&gt; had returned <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> (indicating the cursor is located after the last element of the message enumeration.)</source>
          <target state="translated">Chamado atual antes da primeira chamada para &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;. O cursor está localizado antes do primeiro elemento da enumeração de mensagem.       - ou - chamado atual após uma chamada para &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; retornou <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> (indicando que o cursor está localizado depois do último elemento da enumeração de mensagem.)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The message the enumerator is currently pointing to no longer exists.</source>
          <target state="translated">A mensagem que o enumerador está apontando atualmente não existe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It might have been deleted.</source>
          <target state="translated">Ele pode ter sido excluído.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the native Message Queuing cursor handle used to browse messages in the queue.</source>
          <target state="translated">Obtém o identificador de cursor enfileiramento nativo usado para procurar mensagens na fila.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains the native handle to the enumeration.</source>
          <target state="translated">Esta propriedade contém o identificador nativo para a enumeração.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt; to release this resource.</source>
          <target state="translated">Quando você terminar de trabalhar com o enumerador, chame &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;para liberar esse recurso.&lt;/xref:System.Messaging.MessageEnumerator.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The native cursor handle.</source>
          <target state="translated">O identificador nativo do cursor.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The handle does not exist.</source>
          <target state="translated">O identificador não existe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Libera todos os recursos usados pelo <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Messaging.MessageEnumerator&gt; to be reallocated for other purposes.</source>
          <target state="translated">Chamar Dispose permite que os recursos usados pelo &lt;xref:System.Messaging.MessageEnumerator&gt;para ser realocada para outros fins.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre Dispose, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e, opcionalmente, libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Este método é chamado pelo público &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;método e o &lt;xref:System.Object.Finalize%2A&gt;método.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>invoca o protegido <ph id="ph2">`Dispose(Boolean)`</ph> método com o <ph id="ph3">`disposing`</ph> parâmetro definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;invoca <ph id="ph1">`Dispose`</ph> com <ph id="ph2">`disposing`</ph> definido como <ph id="ph3">`false`</ph>.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Messaging.MessageEnumerator&gt; references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este &lt;xref:System.Messaging.MessageEnumerator&gt;referências.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método chama o <ph id="ph1">`Dispose()`</ph> método de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para liberar recursos gerenciados e não gerenciados; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue, if one is currently available.</source>
          <target state="translated">Avança o enumerador para a próxima mensagem na fila, se houver um disponível no momento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload returns immediately if there is no message in the queue.</source>
          <target state="translated">Essa sobrecarga retorna imediatamente se não há nenhuma mensagem na fila.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is another overload that waits a specified &lt;xref:System.TimeSpan&gt; for a message to arrive.</source>
          <target state="translated">Há outra sobrecarga que espera um especificado &lt;xref:System.TimeSpan&gt;para uma mensagem chegue.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, MoveNext returns <ph id="ph1">`false`</ph> to the calling method.</source>
          <target state="translated">Se uma mensagem não está disponível no momento porque a fila está vazia ou porque você ultrapassou o último elemento da coleção, MoveNext retorna <ph id="ph1">`false`</ph> para o método de chamada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the queue, and the first call to MoveNext brings the first message of the queue into view.</source>
          <target state="translated">Após a criação, conceitualmente, um enumerador está posicionado antes da primeira mensagem da fila e a primeira chamada para MoveNext traz a primeira mensagem da fila para o modo de exibição.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was succesfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi avançado para a próxima mensagem; de com êxito <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador atingiu o final da fila.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Foi lançada uma exceção específica de enfileiramento de mensagens.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue.</source>
          <target state="translated">Avança o enumerador para a próxima mensagem na fila.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the enumerator is positioned at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt; waits until a message is available or the given timeout expires.</source>
          <target state="translated">Se o enumerador está posicionado no final da fila, &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt;aguardará até uma mensagem está disponível ou o tempo limite determinado.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload waits if there is no message in the queue or if the cursor has reached the end of the queue.</source>
          <target state="translated">Essa sobrecarga de espera se não houver nenhuma mensagem na fila ou se o cursor atingiu o final da fila.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; waits the specified timeout.</source>
          <target state="translated">Se uma mensagem não está disponível no momento porque a fila está vazia ou porque você ultrapassou o último elemento da coleção, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;aguarda o tempo limite especificado.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is already at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; only returns <ph id="ph1">`true`</ph> if the new message arrives within the specified time interval, has lower priority than all messages currently in the queue and is placed at the end of the queue.</source>
          <target state="translated">Se o cursor estiver no final da fila, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;só retorna <ph id="ph1">`true`</ph> se a nova mensagem chega no intervalo de tempo especificado, tem prioridade inferior todas as mensagens atualmente na fila e é colocado no final da fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload with no parameter returns immediately if no further messages are in the queue.</source>
          <target state="translated">Uma sobrecarga sem nenhum parâmetro retorna imediatamente se nenhuma outra mensagem está na fila.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the enumeration, and the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; brings the first message of the enumeration into view.</source>
          <target state="translated">Após a criação, um enumerador é conceitualmente posicionado antes da primeira mensagem de enumeração e a primeira chamada para &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;coloca a primeira mensagem da enumeração em modo de exibição.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; to wait for a message to be available if the enumerator is positioned at the end of the queue.</source>
          <target state="translated">O &lt;xref:System.TimeSpan&gt;ao aguardar uma mensagem esteja disponível se o enumerador está posicionado no final da fila.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator successfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi avançado com êxito para a próxima mensagem; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador atingiu o fim da fila e uma mensagem não ficar disponível dentro do tempo especificado o <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p3">&lt;/code&gt;</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value specified for the timeout parameter is invalid.</source>
          <target state="translated">O valor especificado para o parâmetro de tempo limite é inválido.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It might represent a negative number.</source>
          <target state="translated">Ele pode representar um número negativo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Foi lançada uma exceção específica de enfileiramento de mensagens.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       The timeout has expired.</source>
          <target state="translated">- ou - o tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual de uma fila transacional ou não transacional e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>RemoveCurrent removes and returns the message at the cursor's current location.</source>
          <target state="translated">RemoveCurrent remove e retorna a mensagem no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling RemoveCurrent.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar RemoveCurrent.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Se você chamar essa sobrecarga em uma fila transacional, enfileiramento de mensagens cria uma única transação interna.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual de uma fila transacional e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e retorna a mensagem no local do cursor atual, usando o contexto de transação interna definido pelo <ph id="ph1">`transaction`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;a ser retornado para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação é confirmada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction in which the message will be removed.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que especifica a transação na qual a mensagem será removida.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual de uma fila e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e retorna a mensagem o local atual do cursor, usando um contexto de transação definido pelo <ph id="ph1">`transactionType`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Especifique <ph id="ph1">`Automatic`</ph> para o <ph id="ph2">`transactionType`</ph> parâmetro se já houver um contexto de transação externa é anexado ao thread que você deseja usar para receber a mensagem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Especificar <ph id="ph1">`Single`</ph> se você deseja receber a mensagem como uma única transação interna.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Você pode especificar <ph id="ph1">`None`</ph> se você quiser receber uma mensagem de uma fila transacional fora de um contexto de transação.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;a ser retornado para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação é confirmada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Uma da <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores, que descreve o tipo de contexto de transação para associar com a mensagem.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">O <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro não é um do <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> membros.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Removes the current message from the queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual da fila e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se houver uma mensagem a ser removido, o método retorna imediatamente.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método aguarda o tempo limite especificado para uma nova mensagem chegue.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e retorna a mensagem no local atual do cursor.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda uma mensagem está disponível ou o intervalo especificado pelo <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Se você chamar essa sobrecarga em uma fila transacional, enfileiramento de mensagens cria uma única transação interna.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for a message to arrive in the queue.</source>
          <target state="translated">O intervalo de tempo de espera por uma mensagem para chegar na fila.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual de uma fila transacional e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se houver uma mensagem a ser removido, o método retorna imediatamente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método aguarda o tempo limite especificado para uma nova mensagem chegue.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e retorna a mensagem no local atual do cursor.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda uma mensagem está disponível ou o intervalo especificado pelo <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;a ser retornado para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação é confirmada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">O intervalo de tempo de espera para a mensagem a ser removido.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction context for the message.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que especifica o contexto de transação para a mensagem.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual de uma fila e retorna a mensagem para o aplicativo de chamada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se houver uma mensagem a ser removido, o método retorna imediatamente.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método aguarda o tempo limite especificado para uma nova mensagem chegue.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e retorna a mensagem o local atual do cursor, usando um contexto de transação definido pelo <ph id="ph1">`transactionType`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda uma mensagem está disponível ou o intervalo especificado pelo <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Especifique <ph id="ph1">`Automatic`</ph> para o <ph id="ph2">`transactionType`</ph> parâmetro se já houver um contexto de transação externa é anexado ao thread que você deseja usar para receber a mensagem.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Especificar <ph id="ph1">`Single`</ph> se você deseja receber a mensagem como uma única transação interna.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Você pode especificar <ph id="ph1">`None`</ph> se você quiser receber uma mensagem de uma fila transacional fora de um contexto de transação.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se você estiver usando o diário da fila, removendo a mensagem faz com que uma cópia sejam mantidas na fila do diário, assim como o &lt;xref:System.Messaging.MessageQueue&gt;da classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;a ser retornado para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação é confirmada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">O intervalo de tempo de espera para a mensagem a ser removido.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Uma da <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores, que descreve o tipo de contexto de transação para associar com a mensagem.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">O <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro não é um do <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> membros.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Resets the current enumerator so it points to the head of the queue.</source>
          <target state="translated">Redefine o enumerador atual para que ele aponta para o início da fila.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator can only move in a forward direction.</source>
          <target state="translated">Um enumerador só poderá mover avançando.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to start over at the beginning of the queue.</source>
          <target state="translated">Use esse método para recomeçar no início da fila.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Reset, the cursor points to the first message.</source>
          <target state="translated">Depois de chamar redefinir, o cursor aponta para a primeira mensagem.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling Reset to move the cursor forward to the first message in the queue.</source>
          <target state="translated">Você não precisa chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar Redefinir para mover o cursor para encaminhar a primeira mensagem na fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">Retorna um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a mensagem na posição atual do cursor.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que faz referência a mensagem na posição atual do cursor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>