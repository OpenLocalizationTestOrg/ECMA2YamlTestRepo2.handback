<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622666fe3f8113d23c72052accb71885003cda5f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.UIElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a41fb4c1cff3162275bb0fb29f0377eadd923d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61e81a5ed112cb763bdff1f73c0fa5ef7a296661</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>UIElement is a base class for WPF core level implementations building on <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elements and basic presentation characteristics.</source>
          <target state="translated">UIElement é uma classe base para implementações de nível de núcleo do WPF aproveitando <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elementos e as características básicas de apresentação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</source>
          <target state="translated">UIElement fornece um ponto de partida para características de layout do elemento e também expõe os métodos virtuais que classes derivadas podem substituir, que pode influenciar o layout de elementos de renderização de comportamento do elemento e seus filhos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Much of the input and focusing behavior for elements in general is also defined in the UIElement class.</source>
          <target state="translated">Grande parte da entrada e o comportamento para elementos concentrando-se em geral também é definido na classe de UIElement.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the events for keyboard, mouse and stylus input, and related status properties.</source>
          <target state="translated">Isso inclui os eventos de teclado, mouse e entrada de caneta e propriedades de status relacionadas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</source>
          <target state="translated">Muitos desses eventos são eventos roteados e muitos dos eventos relacionados à entrada tem dois uma bolha roteamento de versão, bem como uma versão de túnel do evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>These paired events are typically the events of greatest interest to control authors.</source>
          <target state="translated">Esses eventos emparelhados normalmente são os eventos de maior interesse para autores de controle.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement also includes <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> that relate to the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> event model, including methods that can raise specified routed events that are sourced from an element instance.</source>
          <target state="translated">Também inclui um UIElement <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> que se relacionam com o <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> modelo de evento, incluindo métodos que podem gerar especificados roteadas eventos que são originados de uma instância do elemento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In terms of architecture, UIElement can be considered roughly equivalent to a window handle in <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> programming, or an Element in <ph id="ph2">[!INCLUDE[TLA#tla_dhtml](~/add/includes/tlasharptla-dhtml-md.md)]</ph> programming.</source>
          <target state="translated">Em termos de arquitetura, os UIElement pode ser considerada equivalente a um identificador de janela em <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> programação ou um elemento em <ph id="ph2">[!INCLUDE[TLA#tla_dhtml](~/add/includes/tlasharptla-dhtml-md.md)]</ph> de programação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement is a base element at the WPF core level.</source>
          <target state="translated">UIElement é um elemento base no nível de núcleo do WPF.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A UIElement has the following capabilities that are specifically defined by the UIElement class:      -   Can render as a child element (UIElement derives from &lt;xref:System.Windows.Media.Visual&gt;, a high level graphics class)      -   Contains logic that is used to size and position possible child elements of a UIElement (when interpreted by a layout system)      -   Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)      -   Can raise routed events that travel a route through the logical element tree      -   Supports some aspects of the animation system       &lt;xref:System.Windows.FrameworkElement&gt; is the WPF framework-level implementation class that builds on UIElement, and adds specific interactions with the WPF framework level.</source>
          <target state="translated">Um UIElement tem os seguintes recursos que são especificamente definidos pela classe de UIElement:-podem ser processados como um elemento filho (UIElement deriva &lt;xref:System.Windows.Media.Visual&gt;, uma classe de gráficos de nível alto) - contém a lógica que é usada para dimensionar e posicionar elementos filho possíveis de um UIElement (quando interpretada por um sistema de layout) - pode responder a entrada do usuário (incluindo o controle de entrada onde está obtendo enviada para por meio da manipulação de eventos ou o roteamento de comandos) - pode gerar eventos roteados que viajam uma rota através da árvore de elementos lógicos - oferece suporte a alguns aspectos do sistema animação &lt;xref:System.Windows.FrameworkElement&gt;é a classe de implementação de nível de framework WPF que amplia UIElement e adiciona específicas interações com o nível de framework WPF.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Media.Visual&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; adds and defines the following capabilities:      -   Additional framework-specific layout characteristics      -   Support for richer metadata reporting on properties      -   Class-specific implementation of certain input base classes and their attached properties or attached events      -   Style support      -   Further animation support       Another related class is &lt;xref:System.Windows.ContentElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;Adiciona e define os seguintes recursos: - características de layout específicas do framework adicionais - suportam para metadados mais rico reporting propriedades - implementação de classe específica de determinadas classes base e suas propriedades anexadas de entrada ou eventos - suporte de estilo anexados - ainda mais a animação dão suporte à outra relacionadas a classe é &lt;xref:System.Windows.ContentElement&gt;.&lt;/xref:System.Windows.ContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.ContentElement&gt; class implements many of the same members as does UIElement; the difference between these two classes has to do with their intended place in the overall content model.</source>
          <target state="translated">O &lt;xref:System.Windows.ContentElement&gt;classe implementa muitos dos mesmos membros, como o UIElement; a diferença entre essas duas classes tem com seu pretendido colocar no modelo de conteúdo geral.&lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A UIElement derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</source>
          <target state="translated">Normalmente, uma classe derivada de UIElement define um modelo de conteúdo relativamente rígido, que significa que há restrições nas quais elementos podem ser elementos filho na marcação.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>There might be capacity for taking less restrictive child content in a UIElement, but that capacity is typically centralized in designated content properties.</source>
          <target state="translated">Pode haver capacidade para fazer menos restritivo do conteúdo de filho em um UIElement, mas essa capacidade normalmente é centralizada nas propriedades do conteúdo designadas.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.ContentElement&gt; derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</source>
          <target state="translated">Um &lt;xref:System.Windows.ContentElement&gt;classe derivada normalmente não é mais restritivo sobre o conteúdo para dar suporte a cenários, como documentos em formato de fluxo.&lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Windows.UIElement.Visibility%2A&gt; state affects all input handling by that element.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; &lt;xref:System.Windows.UIElement.Visibility%2A&gt;estado afeta todas as entrada tratamento por esse elemento.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</source>
          <target state="translated">Elementos que não são visíveis não participam de teste de clique e não receber eventos de entrada, mesmo se o mouse estiver sobre os limites em que o elemento seria se eram visíveis.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a new instance that is actually of type &lt;xref:System.Windows.UIElement&gt; is uncommon in application code, because &lt;xref:System.Windows.UIElement&gt; is a base element.</source>
          <target state="translated">Criando uma nova instância que é realmente do tipo &lt;xref:System.Windows.UIElement&gt;é incomum no código do aplicativo, porque &lt;xref:System.Windows.UIElement&gt;é um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>visão geral de elementos de Base<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</source>
          <target state="translated">Adiciona um manipulador de eventos roteados para um evento roteado especificado, adicionando o manipulador para a coleção de manipulador no elemento atual.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the same handler for the same event multiple times without raising an exception.</source>
          <target state="translated">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the handler is actually invoked multiple times when the event is handled.</source>
          <target state="translated">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</source>
          <target state="translated">Portanto, considere como esse comportamento pode ter efeitos colaterais que devem ser considerados na implementação do manipulador.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method to provide the implementation of the "add" accessor for the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.</source>
          <target state="translated">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> padrão de acesso do evento de um evento roteado personalizado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An identifier for the routed event to be handled.</source>
          <target state="translated">Um identificador para o evento roteado devem ser tratados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">Uma referência para a implementação do manipulador.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</source>
          <target state="translated">Adiciona um manipulador de eventos roteados para um evento roteado especificado, adicionando o manipulador para a coleção de manipulador no elemento atual.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handledEventsToo</ph><ept id="p1">&lt;/code&gt;</ept> as <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</source>
          <target state="translated">Especifique <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handledEventsToo</ph> <ept id="p1">&lt;/code&gt;</ept> como <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> para que o manipulador fornecido a ser invocado para eventos roteados que já tinham sido marcado como manipulado por outro elemento na rota de evento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Processing low-level input events in a practical way is a complex task.</source>
          <target state="translated">O processamento de eventos de entrada de baixo nível em uma forma prática é uma tarefa complexa.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</source>
          <target state="translated">Muitos controles que implementam o comportamento em que um determinado evento estiver marcado como tratado e é substituído por outro evento mais intuitivo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</source>
          <target state="translated">Em geral, um controle só marcar um evento de entrada de plataforma como manipulado se houver algum intenção de design para fazer isso.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</source>
          <target state="translated">Em determinados cenários, as intenções de design não podem ser o que requer o tratamento específico do evento de entrada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is for these scenarios that registering handlers with <ph id="ph1">`handledEventsToo`</ph> as <ph id="ph2">`true`</ph> is appropriate.</source>
          <target state="translated">É por esses cenários que registrar manipuladores com <ph id="ph1">`handledEventsToo`</ph> como <ph id="ph2">`true`</ph> é apropriado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>But you should not do this routinely.</source>
          <target state="translated">Mas você não deve fazer isso periodicamente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</source>
          <target state="translated">Chamar manipuladores em resposta a todos os eventos, mesmo quando manipulados complicar a sua própria lógica de processamento de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may see a decrease in performance if the handler logic is substantial.</source>
          <target state="translated">Você pode ver uma diminuição no desempenho se a lógica do manipulador é significativa.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</source>
          <target state="translated">Você deve reservar o uso de anexação de manipuladores de eventos já tratado para situações em que você já tenha descoberto durante o processo de desenvolvimento que certos controles lidar com eventos que deseja processar com a lógica do aplicativo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</source>
          <target state="translated">Outra técnica para evitar o comportamento de algumas combinações de controle de evento de manipulação de classe é usar a alternativa de visualização do evento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; is marked handled by class handling, you might be able to add handlers for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; instead.</source>
          <target state="translated">Por exemplo, se &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;estiver marcado como tratado pela manipulação de classe, você poderá adicionar manipuladores para &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;em vez disso.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the same handler for the same event multiple times without raising an exception.</source>
          <target state="translated">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the handler is actually invoked multiple times when the event is handled.</source>
          <target state="translated">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</source>
          <target state="translated">Portanto, considere como esse comportamento pode ter efeitos colaterais que devem ser considerados na implementação do manipulador.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method to provide the implementation of the "add" accessor for the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.</source>
          <target state="translated">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> padrão de acesso do evento de um evento roteado personalizado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An identifier for the routed event to be handled.</source>
          <target state="translated">Um identificador para o evento roteado devem ser tratados.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">Uma referência para a implementação do manipulador.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para registrar o manipulador de modo que ele é invocado, mesmo quando o evento roteado está marcado como tratado nos dados do evento; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> para registrar o manipulador com a condição padrão que ele não poderá ser invocado se o evento roteado já estiver marcado como tratado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Do not routinely ask to rehandle a routed event.</source>
          <target state="translated">Não rotineiramente pedir para rehandle um evento roteado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">Para obter mais informações, consulte comentários.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Adds handlers to the specified <bpt id="p1">&lt;xref href="System.Windows.EventRoute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event handler collection.</source>
          <target state="translated">Adiciona manipuladores especificado <bpt id="p1">&lt;xref href="System.Windows.EventRoute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> atual <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> coleção de manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used by content host elements (either those that implement &lt;xref:System.Windows.IContentHost&gt; or those that don't) to add handlers for child elements to the &lt;xref:System.Windows.EventRoute&gt;.</source>
          <target state="translated">Esse método pode ser usado pelos elementos de host de conteúdo (aqueles que implementam &lt;xref:System.Windows.IContentHost&gt;ou não) para adicionar manipuladores para elementos filho para &lt;xref:System.Windows.EventRoute&gt;.&lt;/xref:System.Windows.EventRoute&gt; &lt;/xref:System.Windows.IContentHost&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, this is not required for &lt;xref:System.Windows.UIElement&gt;, because handlers are automatically added for all elements found in a completed logical tree.</source>
          <target state="translated">Em geral, isso não é necessário para &lt;xref:System.Windows.UIElement&gt;, pois os manipuladores são adicionados automaticamente para todos os elementos encontrados em uma árvore lógica concluída.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in some cases where &lt;xref:System.Windows.ContentElement&gt; and &lt;xref:System.Windows.UIElement&gt; are mixed in templated trees, intervening elements that came from the template need to be added to a route.</source>
          <target state="translated">No entanto, em alguns casos onde &lt;xref:System.Windows.ContentElement&gt;e &lt;xref:System.Windows.UIElement&gt;são mesclados em árvores modeladas, elementos que veio com a modelo precisa ser adicionado a uma rota de intervenção.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both &lt;xref:System.Windows.ContentElement&gt; and &lt;xref:System.Windows.UIElement&gt; support a version of this method.</source>
          <target state="translated">Ambos &lt;xref:System.Windows.ContentElement&gt;e &lt;xref:System.Windows.UIElement&gt;suporte a uma versão desse método.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The event route that handlers are added to.</source>
          <target state="translated">A rota de evento manipuladores são adicionados ao.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The event data that is used to add the handlers.</source>
          <target state="translated">Os dados de evento que são usados para adicionar manipuladores.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method uses the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of the event data to create the handlers.</source>
          <target state="translated">Esse método usa o &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;propriedade dos dados para criar os manipuladores de eventos.&lt;/xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</source>
          <target state="translated">Obtém ou define um valor que indica se este elemento pode ser usado como o destino de uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Operações de arrastar e soltar não estão habilitadas por padrão e deve ser habilitadas deliberadamente definindo AllowDrop como <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by &lt;xref:System.Windows.UIElement&gt; or any other base element class.</source>
          <target state="translated">Além dessa configuração básica, o comportamento de arrastar e soltar inteiramente é específico da implementação e não está definido ou &lt;xref:System.Windows.UIElement&gt;qualquer outra classe de elemento base.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain controls, for example, &lt;xref:System.Windows.Controls.RichTextBox&gt;, do have a default behavior.</source>
          <target state="translated">Alguns controles, por exemplo, &lt;xref:System.Windows.Controls.RichTextBox&gt;, têm um comportamento padrão.&lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on drag and drop, see <bpt id="p1">[</bpt>Drag and Drop Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como arrastar e soltar, consulte <bpt id="p1">[</bpt>arrastar e soltar visão de geral<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property in its implementation.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;substitui os metadados para essa propriedade de dependência em sua implementação.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, &lt;xref:System.Windows.FrameworkElement&gt; designates this property to allow property value inheritance (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; is <ph id="ph1">`true`</ph> in metadata).</source>
          <target state="translated">Especificamente, &lt;xref:System.Windows.FrameworkElement&gt;designa essa propriedade para permitir a herança de valor de propriedade (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; é <ph id="ph1">`true`</ph> nos metadados).&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance in this context means that if there are child elements with no other value for AllowDrop assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</source>
          <target state="translated">Herança de valor de propriedade neste contexto significa que se houver elementos filho com nenhum outro valor para AllowDrop atribuído por meio de estilos ou valores locais, o valor do elemento pai mais próximo com esse valor atribuído (novamente, seja em estilos, valores padrão ou um valor local) e, em seguida, o valor do elemento pai será atribuído a todos os elementos filho anteriormente não atribuído pelo sistema de propriedades.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Na prática, isso significa que você pode especificar se deseja permitir que as operações de descarte no elemento raiz, e que o valor serão propagadas para todos os elementos filho que têm não especificamente atribuído como <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_AllowDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.AllowDropProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_AllowDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.AllowDropProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.AllowDropProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element can be used as the target of a drag-and-drop operation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se esse elemento pode ser usado como o destino de uma operação de arrastar e soltar; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O valor padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AllowDrop*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.AllowDrop*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.AllowDrop*&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Applies an animation to a specified dependency property on this element.</source>
          <target state="translated">Aplica uma animação a uma propriedade de dependência especificado neste elemento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Any existing animations are stopped and replaced with the new animation.</source>
          <target state="translated">Qualquer animações existentes são interrompidas e substituídas com a nova animação.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove an animation from a property, specify the identifier for that property as <ph id="ph1">`dp`</ph> and specify <ph id="ph2">`clock`</ph> as <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Para remover uma animação de uma propriedade, especifique o identificador para a propriedade como <ph id="ph1">`dp`</ph> e especifique <ph id="ph2">`clock`</ph> como <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This removes the animation and the animated property is set to its base value.</source>
          <target state="translated">Isso remove a animação e a propriedade animada é definida como seu valor de base.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation clock is not stopped.</source>
          <target state="translated">No entanto, o relógio de animação originalmente associado não será interrompido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that clock will continue to run.</source>
          <target state="translated">Quaisquer outras animações atribuídas a esse relógio continuará a ser executado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The identifier for the property to animate.</source>
          <target state="translated">O identificador para a propriedade animar.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The animation clock that controls and declares the animation.</source>
          <target state="translated">O relógio de animação que controla e declara a animação.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</source>
          <target state="translated">Aplica uma animação a uma propriedade de dependência especificado neste elemento, com a capacidade de especificar o que acontece se a propriedade já tiver uma animação em execução.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove an animation from a property, specify the identifier for that property as <ph id="ph1">`dp`</ph> and specify <ph id="ph2">`clock`</ph> as <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Para remover uma animação de uma propriedade, especifique o identificador para a propriedade como <ph id="ph1">`dp`</ph> e especifique <ph id="ph2">`clock`</ph> como <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This removes the animation and the animated property is set to its base value.</source>
          <target state="translated">Isso remove a animação e a propriedade animada é definida como seu valor de base.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation clock is not stopped.</source>
          <target state="translated">No entanto, o relógio de animação originalmente associado não será interrompido.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that clock will continue to run.</source>
          <target state="translated">Quaisquer outras animações atribuídas a esse relógio continuará a ser executado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">A propriedade para animar.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The animation clock that controls and declares the animation.</source>
          <target state="translated">O relógio de animação que controla e declara a animação.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">Um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which will stop any existing animation and replace with the new one.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, que interromperá todas as animações existente e substitua pelo novo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is captured to this element.</source>
          <target state="translated">Obtém um valor que indica se pelo menos um toque é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is captured to this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se pelo menos um toque é capturado para este elemento. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</source>
          <target state="translated">Obtém um valor que indica se pelo menos um toque é capturado para este elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se pelo menos um toque é capturado para este elemento ou elementos filho na árvore visual; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is pressed over this element.</source>
          <target state="translated">Obtém um valor que indica se pelo menos um toque é pressionado sobre este elemento.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is pressed over this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se pelo menos um toque é pressionado sobre este elemento. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</source>
          <target state="translated">Obtém um valor que indica se pelo menos um toque é pressionado sobre este elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se pelo menos um toque é pressionado sobre este elemento ou elementos filho na árvore visual; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.AreAnyTouchesOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.AreAnyTouchesOver*&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Positions child elements and determines a size for a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Posiciona elementos filho e determina um tamanho para um <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Parent elements call this method from their &lt;xref:System.Windows.UIElement.ArrangeCore*&gt; implementation (or a WPF framework-level equivalent) to form a recursive layout update.</source>
          <target state="translated">Elementos pai chamar esse método de seus &lt;xref:System.Windows.UIElement.ArrangeCore*&gt;implementação (ou um equivalente em nível de framework WPF) para formar uma atualização recursiva de layout.&lt;/xref:System.Windows.UIElement.ArrangeCore*&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This method constitutes the second pass of a layout update.</source>
          <target state="translated">Esse método constitui a segunda passagem de uma atualização de layout.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For WPF framework-level element deriving scenarios, behavior for Arrange should not (and cannot, unless you shadow) be changed.</source>
          <target state="translated">Para o elemento de nível de framework WPF derivando cenários, comportamento para organizar não devem (e não é possível, a menos que você sombrear) ser alterado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should override the &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; implementation in your class.</source>
          <target state="translated">Em vez disso, você deve substituir a &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;implementação em sua classe.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; implementation is called internally by Arrange as part of default WPF framework-level layout operations.</source>
          <target state="translated">O &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;implementação é chamada internamente por organizar como parte das operações de layout de nível de framework WPF padrão.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation should also call &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; on each child element, if it has child elements.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;implementação também deve chamar &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;em cada elemento filho, se ele tem elementos filho.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For WPF core-level element deriving scenarios, the behavior for Arrange should not (and cannot, unless you shadow) be changed.</source>
          <target state="translated">Para o elemento de nível de núcleo do WPF derivando cenários, o comportamento para organizar não devem (e não é possível, a menos que você sombrear) ser alterado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should override &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; in your class.</source>
          <target state="translated">Em vez disso, você deve substituir &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;na sua classe.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation is called internally by Arrange as part of default WPF framework-level layout operations.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;implementação é chamada internamente por organizar como parte das operações de layout de nível de framework WPF padrão.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the &lt;xref:System.Windows.UIElement&gt; base element class.</source>
          <target state="translated">No entanto, isso pressupõe que você estiver usando o layout de nível de framework do WPF e seu sistema de layout, que geralmente não é o caso se elementos em nível de núcleo do WPF especificamente estiverem sendo derivados da &lt;xref:System.Windows.UIElement&gt;classe de base do elemento&lt;/xref:System.Windows.UIElement&gt; de</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation should also call Arrange on each child element, if it has child elements.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;implementação também deve chamar Arrange em cada elemento filho, se ele tem elementos filho.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the WPF core-level scenario implies that you are not using a &lt;xref:System.Windows.FrameworkElement&gt; derived class, because &lt;xref:System.Windows.FrameworkElement&gt; seals &lt;xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt;.</source>
          <target state="translated">Observe que o cenário de nível de núcleo do WPF implica que você não estiver usando um &lt;xref:System.Windows.FrameworkElement&gt;a classe derivada, porque &lt;xref:System.Windows.FrameworkElement&gt;selos &lt;xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Computation of WPF framework-level layout positioning in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> consists of a &lt;xref:System.Windows.UIElement.Measure%2A&gt; call and an Arrange call.</source>
          <target state="translated">Computação de posicionamento de layout de nível de framework do WPF em <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> consiste em um &lt;xref:System.Windows.UIElement.Measure%2A&gt;chamada e uma chamada de organizar.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the &lt;xref:System.Windows.UIElement.Measure%2A&gt; call, the layout system determines an element's size requirements using a provided &lt;xref:System.Windows.Size&gt; (<ph id="ph1">`availableSize`</ph>) argument.</source>
          <target state="translated">Durante o &lt;xref:System.Windows.UIElement.Measure%2A&gt;chamada, o sistema de layout determina os requisitos de tamanho de um elemento usando um fornecido &lt;xref:System.Windows.Size&gt;(<ph id="ph1">`availableSize`</ph>) argumento.&lt;/xref:System.Windows.Size&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the Arrange call, the layout system finalizes the size and position of an element's bounding box.</source>
          <target state="translated">Durante a chamada de organizar, o sistema de layout finaliza o tamanho e a posição da caixa delimitadora de um elemento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Layout<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`availableSize`</ph> can be any number from zero to infinity.</source>
          <target state="translated"><ph id="ph1">`availableSize`</ph>pode ser qualquer número entre zero e infinito.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements to be laid out return the minimum &lt;xref:System.Windows.Size&gt; they require through the <ph id="ph1">`availableSize`</ph> parameter.</source>
          <target state="translated">Elemento a ser dispostos retornar o mínimo &lt;xref:System.Windows.Size&gt;precisam por meio de <ph id="ph1">`availableSize`</ph> parâmetro.&lt;/xref:System.Windows.Size&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a layout is first instantiated, it always receives a &lt;xref:System.Windows.UIElement.Measure%2A&gt; call before Arrange.</source>
          <target state="translated">Quando um layout é instanciado pela primeira vez, ele sempre recebe um &lt;xref:System.Windows.UIElement.Measure%2A&gt;chamar antes de organizar.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the first layout pass, it may receive an Arrange call without a &lt;xref:System.Windows.UIElement.Measure%2A&gt;; this can happen when a property that affects only Arrange is changed (such as alignment), or when the parent receives an Arrange without a &lt;xref:System.Windows.UIElement.Measure%2A&gt;.</source>
          <target state="translated">No entanto, após a primeira passagem de layout, pode receber uma chamada de organizar sem &lt;xref:System.Windows.UIElement.Measure%2A&gt;Isso pode acontecer quando uma propriedade que afeta apenas organizar é alterada (como alinhamento), ou quando o pai recebe um organizar sem &lt;xref:System.Windows.UIElement.Measure%2A&gt;.&lt;/xref:System.Windows.UIElement.Measure%2A&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.UIElement.Measure%2A&gt; call will automatically invalidate an Arrange call.</source>
          <target state="translated">Um &lt;xref:System.Windows.UIElement.Measure%2A&gt;chamada invalidará automaticamente uma chamada de organizar.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Layout updates generally occur asynchronously (at a time determined by the layout system).</source>
          <target state="translated">As atualizações de layout geralmente ocorrem assincronamente (em um tempo determinado pelo sistema de layout).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element might not immediately reflect changes to properties that affect element sizing (such as &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;).</source>
          <target state="translated">Um elemento pode não refletir imediatamente as alterações nas propriedades que afetam o dimensionamento de elemento (como &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;).&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Layout updates can be forced by using the &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Atualizações de layout podem ser forçadas usando o &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;método; no entanto, chamar essa função não é recomendável, pois ele normalmente não é necessário e pode causar baixo desempenho.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many situations where calling &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; might be appropriate, the layout system will probably already be processing updates.</source>
          <target state="translated">Em muitas situações em que a chamada &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;pode ser apropriado, o sistema de layout provavelmente já processará atualizações.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</source>
          <target state="translated">O sistema de layout pode processar alterações de layout de uma maneira que pode otimizar a todas as atualizações necessárias como parte de um pacote.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system keeps two separate queues of invalid layouts, one for &lt;xref:System.Windows.UIElement.Measure%2A&gt; and one for Arrange.</source>
          <target state="translated">O sistema de layout mantém duas filas separadas de layouts inválidos, uma para &lt;xref:System.Windows.UIElement.Measure%2A&gt;e outra para organizar.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout queue is sorted based upon the order of elements in the visual tree.</source>
          <target state="translated">A fila de layout é classificada com base na ordem dos elementos na árvore visual.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</source>
          <target state="translated">São superior da árvore de elementos na parte superior da fila, para evitar a redundância layouts causados por alterações repetidas em pais.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</source>
          <target state="translated">Entradas duplicadas são automaticamente removidas da fila e os elementos são automaticamente removidos da fila se eles já são válidos.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>When updating layout, the &lt;xref:System.Windows.UIElement.Measure%2A&gt; queue is emptied first, followed by the Arrange queue.</source>
          <target state="translated">Ao atualizar o layout, o &lt;xref:System.Windows.UIElement.Measure%2A&gt;fila é esvaziada primeiro, seguido pela fila organizar.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element in the Arrange queue will never be arranged if there is an element in the &lt;xref:System.Windows.UIElement.Measure%2A&gt; queue.</source>
          <target state="translated">Um elemento na fila de organizar nunca será organizado se houver um elemento de &lt;xref:System.Windows.UIElement.Measure%2A&gt;fila.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The final size that the parent computes for the child element, provided as a <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">O tamanho final que calcula o pai do elemento filho, fornecido como um <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> instância.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Defines the template for WPF core-level arrange layout definition.</source>
          <target state="translated">Define o modelo de nível de núcleo do WPF organizar a definição do layout.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The final area within the parent that element should use to arrange itself and its child elements.</source>
          <target state="translated">A área final dentro do pai desse elemento deve usar para organizar o próprio e seus elementos filho.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Starts an animation for a specified animated property on this element.</source>
          <target state="translated">Inicia uma animação para uma propriedade animada especificada neste elemento.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</source>
          <target state="translated">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; for <ph id="ph1">`animation`</ph> is <ph id="ph2">`null`</ph>, then any current animations are removed and the current value of the property is held.</source>
          <target state="translated">Se o &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;para <ph id="ph1">`animation`</ph> é <ph id="ph2">`null`</ph>, qualquer animações atuais são removidas e o valor atual da propriedade é mantido.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the entire <ph id="ph1">`animation`</ph> value is <ph id="ph2">`null`</ph>, all animations are removed from the property and the property value reverts to its base value.</source>
          <target state="translated">Se todo o <ph id="ph1">`animation`</ph> valor é <ph id="ph2">`null`</ph>, todas as animações são removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation timeline is not stopped.</source>
          <target state="translated">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that timeline will continue to run.</source>
          <target state="translated">Quaisquer outras animações atribuídas a essa linha do tempo, continuará a ser executado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The property to animate, which is specified as a dependency property identifier.</source>
          <target state="translated">A propriedade para animar, que é especificada como um identificador de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The timeline of the animation to start.</source>
          <target state="translated">A linha do tempo da animação iniciar.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</source>
          <target state="translated">Inicia uma animação específica para uma propriedade animada especificada neste elemento, com a opção de especificar o que acontece se a propriedade já tiver uma animação em execução.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</source>
          <target state="translated">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; for <ph id="ph1">`animation`</ph> is <ph id="ph2">`null`</ph>, then any current animations are removed and the current value of the property is held.</source>
          <target state="translated">Se o &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;para <ph id="ph1">`animation`</ph> é <ph id="ph2">`null`</ph>, qualquer animações atuais são removidas e o valor atual da propriedade é mantido.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the entire <ph id="ph1">`animation`</ph> value is <ph id="ph2">`null`</ph>, all animations are removed from the property and the property value reverts to its base value.</source>
          <target state="translated">Se todo o <ph id="ph1">`animation`</ph> valor é <ph id="ph2">`null`</ph>, todas as animações são removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation timeline is not stopped.</source>
          <target state="translated">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that timeline will continue to run.</source>
          <target state="translated">Quaisquer outras animações atribuídas a essa linha do tempo, continuará a ser executado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The property to animate, which is specified as the dependency property identifier.</source>
          <target state="translated">A propriedade para animar, que é especificada como o identificador de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The timeline of the animation to be applied.</source>
          <target state="translated">A linha do tempo da animação a ser aplicado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</source>
          <target state="translated">Um valor de enumeração que especifica como a nova animação interage com qualquer animações atual (em execução) que já estão afetando o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets or sets a bitmap effect that applies directly to the rendered content for this element.</source>
          <target state="translated">Obtém ou define um efeito de bitmap aplicado diretamente ao conteúdo renderizado para este elemento.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt; is an abstract type, therefore the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> usage requires an implemented derived class of &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, such as &lt;xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;é um tipo abstrato, portanto o <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> uso requer uma classe derivada implementada de &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, como &lt;xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt;.&lt;/xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt; &lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that one implemented derived class is a collection type that allows you to specify more than one sequential &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, using a nested tag syntax.</source>
          <target state="translated">Observe que um implementado classe derivada é um tipo de coleção que permite que você especificar mais de um sequencial &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, usando uma sintaxe de marca aninhada.&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>No existing derived class of &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt; supports a type converter, so the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax that you use for this property is generally property element syntax.</source>
          <target state="translated">Nenhuma classe derivada de &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;oferece suporte a um conversor de tipo, portanto, o <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> sintaxe usada para essa propriedade é geralmente a sintaxe de elemento de propriedade.&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.BitmapEffectProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.BitmapEffectProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.BitmapEffectProperty&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The bitmap effect to apply.</source>
          <target state="translated">O efeito de bitmap para aplicar.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</source>
          <target state="translated">Obtém ou define uma fonte de entrada para o efeito de bitmap aplicado diretamente ao conteúdo renderizado para este elemento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffectInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffectInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The source for bitmap effects.</source>
          <target state="translated">A origem para efeitos de bitmap.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.BitmapEffectInput*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.BitmapEffectInput*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.BitmapEffectInput*&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.BitmapEffect*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.BitmapEffect*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.BitmapEffect*&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets a cached representation of the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém ou define uma representação em cache do <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the CacheMode property when you need to increase performance for content that is time consuming to render.</source>
          <target state="translated">Defina a propriedade de CacheMode quando você precisa aumentar o desempenho para o conteúdo que é demorado para processar.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Media.BitmapCache&gt;.</source>
          <target state="translated">Para obter mais informações, consulte &lt;xref:System.Windows.Media.BitmapCache&gt;.&lt;/xref:System.Windows.Media.BitmapCache&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds a cached representation of the <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém uma representação em cache do <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.CacheMode*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.CacheMode*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.CacheMode*&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of the mouse to this element.</source>
          <target state="translated">Tentativas de forçar a captura do mouse para esse elemento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be captured, an element must be enabled.</source>
          <target state="translated">Para ser capturada, um elemento deve ser habilitado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check whether &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`true`</ph> before you call CaptureMouse.</source>
          <target state="translated">Verifique se &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;é <ph id="ph1">`true`</ph> antes de chamar CaptureMouse.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureMouse returns <ph id="ph1">`true`</ph>, then &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se a chamada retorna CaptureMouse <ph id="ph1">`true`</ph>, em seguida, &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;também é <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureMouse returns <ph id="ph1">`true`</ph>, then the &lt;xref:System.Windows.UIElement.GotMouseCapture&gt; and &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; events are raised, with &lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt; in the event data reported as the element where the CaptureMouse method is called.</source>
          <target state="translated">Se chamar CaptureMouse retorna <ph id="ph1">`true`</ph>, em seguida, o &lt;xref:System.Windows.UIElement.GotMouseCapture&gt;e &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;os eventos são gerados, com &lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt;no evento dados relatados como o elemento em que o método CaptureMouse é chamado.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; &lt;/xref:System.Windows.UIElement.GotMouseCapture&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</source>
          <target state="translated">Se você forçar a captura, você pode interferir na captura existente, especialmente com capturas de que se relacionam com arrastar e soltar com o mouse.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear mouse capture from all elements, call &lt;xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt; with the <ph id="ph1">`element`</ph> parameter provided as <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Para limpar a captura do mouse de todos os elementos, chame &lt;xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt;com o <ph id="ph1">`element`</ph> parâmetro fornecido como <ph id="ph2">`null`</ph>.&lt;/xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the mouse is successfully captured; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o mouse é capturado com êxito; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of the stylus to this element.</source>
          <target state="translated">Tentativas de forçar a captura da caneta para esse elemento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation based on the underlying default stylus device always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">A implementação do padrão com base no dispositivo de caneta padrão subjacente sempre retorna <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</source>
          <target state="translated">No entanto, se você estiver estendendo os dispositivos de entrada que fornece a implementação de dispositivo para o sistema de entrada, é possível criar um sistema com uma implementação de dispositivo de caneta alternativo que pode retornar resultados diferentes.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</source>
          <target state="translated">Quando um elemento captura a caneta, ele recebe entrada de caneta mesmo se a caneta está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method calls an underlying static &lt;xref:System.Windows.Input.Stylus&gt; method &lt;xref:System.Windows.Input.Stylus.Capture%2A&gt;.</source>
          <target state="translated">Chamar este método chama um &lt;xref:System.Windows.Input.Stylus&gt;método &lt;xref:System.Windows.Input.Stylus.Capture%2A&gt;.&lt;/xref:System.Windows.Input.Stylus.Capture%2A&gt; &lt;/xref:System.Windows.Input.Stylus&gt; de estático subjacente.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual capture behavior is implemented by the active stylus device implementation.</source>
          <target state="translated">O comportamento real de captura é implementado pela implementação de dispositivo de caneta ativo.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be captured, an element must be enabled.</source>
          <target state="translated">Para ser capturada, um elemento deve ser habilitado.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check whether &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`true`</ph> return before you call CaptureStylus.</source>
          <target state="translated">Verifique se &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;é <ph id="ph1">`true`</ph> retornar antes de chamar CaptureStylus.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureStylus returns <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se a chamada retorna CaptureStylus <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;também é <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stylus was successfully captured; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a caneta foi capturada com êxito; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of a touch to this element.</source>
          <target state="translated">Tentativas de forçar a captura de um toque para esse elemento.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>CaptureTouch will return <ph id="ph1">`false`</ph> if the &lt;xref:System.Windows.Input.TouchDevice&gt; is currently captured to another element.</source>
          <target state="translated">Retornará CaptureTouch <ph id="ph1">`false`</ph> se o &lt;xref:System.Windows.Input.TouchDevice&gt;capturada no momento para outro elemento.&lt;/xref:System.Windows.Input.TouchDevice&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If CaptureTouch returns <ph id="ph1">`true`</ph>, then the &lt;xref:System.Windows.UIElement.GotTouchCapture&gt; event is raised.</source>
          <target state="translated">Se retornar CaptureTouch <ph id="ph1">`true`</ph>, em seguida, o &lt;xref:System.Windows.UIElement.GotTouchCapture&gt;é gerado.&lt;/xref:System.Windows.UIElement.GotTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release capture of a single touch from this element, use the &lt;xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt; method and specify the touch device to release.</source>
          <target state="translated">Para liberar a captura de um único toque deste elemento, use o &lt;xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt;método e especifique o dispositivo de toque para liberar.&lt;/xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release all touches from this element, use the &lt;xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt; method.</source>
          <target state="translated">Para liberar todos os toques deste elemento, use o &lt;xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt;método.&lt;/xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The device to capture.</source>
          <target state="translated">O dispositivo para capturar.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified touch is captured to this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o contato especificado é capturado para este elemento. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets or sets the geometry used to define the outline of the contents of an element.</source>
          <target state="translated">Obtém ou define a geometria usada para definir o contorno do conteúdo de um elemento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements outside the geometry will be visually clipped in the rendered layout.</source>
          <target state="translated">Elementos fora da geometria serão recortados visualmente no layout renderizado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The geometry does not have to be rectangular.</source>
          <target state="translated">A geometria não precisa ser retangular.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Clip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ClipProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Clip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ClipProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.ClipProperty&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The geometry to be used for clipping area sizing.</source>
          <target state="translated">A geometria a ser usado para dimensionamento de área de corte.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The default is a null <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é um valor nulo <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Clip*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Clip*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Clip*&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</source>
          <target state="translated">Obtém ou define um valor que indica se o conteúdo deste elemento (ou conteúdo surgimento de elementos filho desse elemento) para se ajustar ao tamanho do elemento contido.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For child elements, ClipToBounds has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; / &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; or &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; / &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">Para elementos filho, ClipToBounds tem efeitos diferentes nos comportamentos de layout, dependendo se a altura e largura do elemento pai estão sendo determinadas pelo &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;ou &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; / &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; of the parent element are always respected regardless of the value of ClipToBounds and the effective clipping will always clip the content based on these maximums.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;do pai elemento sempre são respeitadas independentemente do valor ClipToBounds e o recorte efetivo sempre recortará o conteúdo com base nesses máximos.&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent's &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; / &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; settings will not clip the content when ClipToBounds is <ph id="ph1">`false`</ph>, but will clip the content if ClipToBounds is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O pai &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;configurações não recortará o conteúdo quando ClipToBounds <ph id="ph1">`false`</ph>, mas recortará o conteúdo se ClipToBounds <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that defaulting to <ph id="ph1">`false`</ph> is the general behavior as implemented in the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">Observe que o padrão para <ph id="ph1">`false`</ph> é o comportamento geral, conforme implementado na &lt;xref:System.Windows.UIElement&gt;classe.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible for any given element that derives from &lt;xref:System.Windows.UIElement&gt; to override the dependency property metadata for this property in that instance to default to <ph id="ph1">`true`</ph> instead.</source>
          <target state="translated">É possível para qualquer elemento determinado que deriva de &lt;xref:System.Windows.UIElement&gt;para substituir os metadados de propriedade de dependência para essa propriedade na instância padrão para <ph id="ph1">`true`</ph> em vez disso.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several existing derived classes override this metadata and/or adjust the dependency property default value.</source>
          <target state="translated">Várias classes derivadas existentes substituem esses metadados e/ou ajustar o valor da propriedade de dependência padrão.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.InkCanvas&gt;, &lt;xref:System.Windows.Controls.InkPresenter&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup&gt; each override the default value to be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.InkCanvas&gt;, &lt;xref:System.Windows.Controls.InkPresenter&gt;, e &lt;xref:System.Windows.Controls.Primitives.Popup&gt;cada substituir o valor padrão a ser <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Controls.InkPresenter&gt;&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;substitui os metadados para essa propriedade de dependência.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, &lt;xref:System.Windows.FrameworkElement&gt; designates this property to allow property value inheritance (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; is <ph id="ph1">`true`</ph> in metadata).</source>
          <target state="translated">Especificamente, &lt;xref:System.Windows.FrameworkElement&gt;designa essa propriedade para permitir a herança de valor de propriedade (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; é <ph id="ph1">`true`</ph> nos metadados).&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance in this context means that if there are child elements with no other value for ClipToBounds assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</source>
          <target state="translated">Herança de valor de propriedade neste contexto significa que se houver elementos filho com nenhum outro valor ClipToBounds atribuído por meio de estilos ou valores locais, o valor do elemento pai mais próximo com esse valor é atribuído (novamente, tanto em estilos, valores padrão, ou um valor localmente), em seguida, o valor do elemento pai será atribuído a todos os elementos filho não atribuído pelo sistema de propriedades.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Na prática, isso significa que você pode especificar se deseja permitir que o clipe de limites no elemento raiz, e que o valor serão propagadas para todos os elementos filho que têm não especificamente atribuído como <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClipToBounds"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ClipToBoundsProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClipToBounds"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ClipToBoundsProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.ClipToBoundsProperty&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the content should be clipped; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o conteúdo deve ser recortado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O valor padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.ClipToBounds*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.ClipToBounds*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.ClipToBounds*&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets a collection of <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects associated with this element.</source>
          <target state="translated">Obtém uma coleção de <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos associados a esse elemento.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> permite a manipulação de comando para este elemento e declara a ligação entre um comando, seus eventos e os manipuladores anexados por este elemento.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another typical way to populate the CommandBindings collection is to use &lt;xref:System.Windows.Input.CommandManager&gt; methods programmatically.</source>
          <target state="translated">Outra maneira comum para preencher a coleção CommandBindings é usar &lt;xref:System.Windows.Input.CommandManager&gt;métodos programaticamente.&lt;/xref:System.Windows.Input.CommandManager&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_CommandBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.CommandBindings&gt;       oneOrMoreCommandBindings     &lt;/object.CommandBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_CommandBindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreCommandBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Input.CommandBinding&gt; elements.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_CommandBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Uso do elemento de propriedade de XAML <ph id="ph1">```   &lt;object&gt;     &lt;object.CommandBindings&gt;       oneOrMoreCommandBindings     &lt;/object.CommandBindings&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_CommandBindings"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML valores <bpt id="p3">*</bpt>oneOrMoreCommandBindings<ept id="p3">*</ept> um ou mais &lt;xref:System.Windows.Input.CommandBinding&gt;elementos.&lt;/xref:System.Windows.Input.CommandBinding&gt;      </target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these should have a &lt;xref:System.Windows.Input.CommandBinding.Command%2A&gt; attribute set to a known command, and attributes set for the &lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt; and &lt;xref:System.Windows.Input.CommandBinding.Executed&gt; handler implementations.</source>
          <target state="translated">Cada um deles deve ter um &lt;xref:System.Windows.Input.CommandBinding.Command%2A&gt;atributo definido como um comando conhecido e os atributos definidos para o &lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;e &lt;xref:System.Windows.Input.CommandBinding.Executed&gt;implementações de manipulador.&lt;/xref:System.Windows.Input.CommandBinding.Executed&gt; &lt;/xref:System.Windows.Input.CommandBinding.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandBinding.Command%2A&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see &lt;xref:System.Windows.Input.CommandBinding&gt;.</source>
          <target state="translated">Para obter mais informações, consulte &lt;xref:System.Windows.Input.CommandBinding&gt;.&lt;/xref:System.Windows.Input.CommandBinding&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The collection of all <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">A coleção de todos os <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets the size that this element computed during the measure pass of the layout process.</source>
          <target state="translated">Obtém o tamanho que esse elemento é calculado durante a fase de medida do processo de layout.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by this property will only be a valid measurement if the value of the &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">O valor retornado por essa propriedade será uma medida válida somente se o valor de &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;é de propriedade <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>DesiredSize is typically checked as one of the measurement factors when you implement layout behavior overrides such as &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, or &lt;xref:System.Windows.UIElement.OnRender%2A&gt; (in the &lt;xref:System.Windows.UIElement.OnRender%2A&gt; case, you might check &lt;xref:System.Windows.UIElement.RenderSize%2A&gt; instead, but this depends on your implementation).</source>
          <target state="translated">DesiredSize é tipicamente verificado como um dos fatores medida ao implementar o comportamento de layout, como substituições &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, ou &lt;xref:System.Windows.UIElement.OnRender%2A&gt;(no &lt;xref:System.Windows.UIElement.OnRender%2A&gt;caso, você pode verificar &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;em vez disso, mas isso depende de sua implementação).&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the scenario, DesiredSize might be fully respected by your implementation logic, constraints on DesiredSize might be applied, and such constraints might also change other characteristics of either the parent element or child element.</source>
          <target state="translated">Dependendo do cenário, DesiredSize pode ser totalmente respeitada pela sua lógica de implementação, podem ser aplicadas restrições em DesiredSize e tais restrições também podem alterar outras características do elemento pai ou elemento filho.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to DesiredSize.</source>
          <target state="translated">Por exemplo, um controle que dá suporte a regiões roláveis (mas optar por não derivar os controles de nível de framework do WPF que já habilitar áreas roláveis) poderá comparar tamanho disponível para DesiredSize.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control could then set an internal state that enabled scrollbars in the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> for that control.</source>
          <target state="translated">O controle, em seguida, foi definido um estado interno que habilitado barras de rolagem no <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or, DesiredSize could potentially also be ignored in certain scenarios.</source>
          <target state="translated">Ou, DesiredSize pode também ser ignorado em determinados cenários.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The computed size, which becomes the desired size for the arrange pass.</source>
          <target state="translated">O tamanho calculado, que se torna o tamanho desejado para a etapa de organização.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como o destino de arrastar.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event for this class, so that DragEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;anexa para esta classe, para que DragEnter faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento DragEnter são anexados ao subjacente &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragEnterEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewDragEnter&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.DragEnterEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewDragEnter&gt;.&lt;/xref:System.Windows.UIElement.PreviewDragEnter&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnDragEnter%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnDragEnter%2A&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag origin.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como origem de arrastar.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event for this class so that DragLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;anexa para esta classe para que DragLeave faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento DragLeave são anexados ao subjacente &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragLeaveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.DragDrop.PreviewDragLeave&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.DragLeaveEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.DragDrop.PreviewDragLeave&gt;.&lt;/xref:System.Windows.DragDrop.PreviewDragLeave&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnDragLeave%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnDragLeave%2A&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the potential drop target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como o destino de soltar potencial.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs even if the drag originates in the element bounds.</source>
          <target state="translated">Esse evento ocorre mesmo se a operação de arrastar se origina dos limites do elemento.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the drag starts outside the bounds and then moves inside, this event is also raised, as well as &lt;xref:System.Windows.UIElement.DragEnter&gt; and related preview events.</source>
          <target state="translated">Se a operação de arrastar inicia fora dos limites e, em seguida, move dentro, esse evento também é gerado, bem como &lt;xref:System.Windows.UIElement.DragEnter&gt;e Visualizar eventos relacionados.&lt;/xref:System.Windows.UIElement.DragEnter&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event for this class so that DragOver is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;anexa para esta classe para que DragOver faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento DragOver são anexados ao subjacente &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragOverEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.DragDrop.PreviewDragOver&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.DragOverEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.DragDrop.PreviewDragOver&gt;.&lt;/xref:System.Windows.DragDrop.PreviewDragOver&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragOverEvent&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragOver%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnDragOver%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnDragOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragOver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragOver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drop event with this element as the drop target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento como o destino de soltar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event for this class so that Drop is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;evento anexado para esta classe de forma que soltar faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the Drop event are attached to the underlying &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento soltar associadas à subjacente &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Drop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DropEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewDrop&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Drop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.DropEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewDrop&gt;.&lt;/xref:System.Windows.UIElement.PreviewDrop&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DropEvent&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDrop%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnDrop%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnDrop%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.Drop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.Drop"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Gets or sets the bitmap effect to apply to the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém ou define o efeito de bitmap para aplicar ao <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Effect property to apply a bitmap effect to a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Use a propriedade do efeito de aplicar um efeito de bitmap para &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Effect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.EffectProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Effect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.EffectProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.EffectProperty&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bitmap effect.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que representa o efeito de bitmap.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Effect*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Effect*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Effect*&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Attempts to set focus to this element.</source>
          <target state="translated">Tenta definir o foco para esse elemento.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be focusable, &lt;xref:System.Windows.UIElement.Focusable%2A&gt; and &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; must both be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Para ser Focusable é, &lt;xref:System.Windows.UIElement.Focusable%2A&gt;e &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;devem ser <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt; &lt;/xref:System.Windows.UIElement.Focusable%2A&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Mesmo se um elemento é a manipulação de eventos de controle e habilitada, dentro de uma árvore específica, (por exemplo, para um controle composto) pode responder a eventos de foco de visualização, não permitindo que o foco, portanto, esse método retornaria <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</source>
          <target state="translated">Foco em geral é regido pelos dois conceitos separados: foco do teclado e foco lógico, que nem sempre são idênticos.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Focus Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de foco<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> ou <bpt id="p2">[</bpt>visão geral de entrada<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling Focus returns <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; and &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; are also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se a chamada retorna foco <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;e &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;também são <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the related properties are not already <ph id="ph1">`true`</ph>, when you call  Focus, one or more of the following events are raised in the following order: &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; (source is the new focus target), &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;, &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;, &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt; (source is the new focus target).</source>
          <target state="translated">Se as propriedades relacionadas não ainda estiver <ph id="ph1">`true`</ph>, quando você chamar o foco, um ou mais dos seguintes eventos são gerados na seguinte ordem: &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;(origem é o novo destino de foco), &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;, &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;, &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;(origem é o novo destino de foco).&lt;/xref:System.Windows.UIElement.GotKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.LostKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; &lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for this call to be successful, some other element in the application needed to have focus previously.</source>
          <target state="translated">Para esta chamada seja bem-sucedida, algum outro elemento no aplicativo precisava ter foco anteriormente.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if keyboard focus and logical focus were set to this element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o foco do teclado e foco lógico foram definidos para este elemento. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se foco lógico foi configurado para este elemento apenas ou se a chamada para esse método não forçar o foco para alterar.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the element can receive focus.</source>
          <target state="translated">Obtém ou define um valor que indica se o elemento pode receber foco.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the focused element receives keyboard input.</source>
          <target state="translated">Somente o elemento focalizado recebe entrada do teclado.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focusable is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">Focusable é o <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> acessador de propriedade para o que é na verdade uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</source>
          <target state="translated">Essa propriedade de dependência particular com bastante frequência tem seu valor aparente "padrão" definido em classes de elemento derivado, particularmente em controles de modo diferente.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>This commonly occurs in one of two ways:      -   The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</source>
          <target state="translated">Isso geralmente ocorre em uma das duas maneiras: - a propriedade de dependência é herdada por uma determinada classe derivada, mas substitui os metadados da propriedade de dependência de classe derivada e altera o valor padrão da propriedade.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A style or template is applied to an element, which sets that dependency property value differently.</source>
          <target state="translated">-Um estilo ou modelo é aplicado a um elemento, que define esse valor de propriedade de dependência de maneira diferente.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the apparent "default" of Focusable for a &lt;xref:System.Windows.Controls.Button&gt; control will be <ph id="ph1">`true`</ph>, even though &lt;xref:System.Windows.Controls.Button&gt; inherits Focusable as a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> property directly from &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Por exemplo, o aparente "padrão" de Focusable para um &lt;xref:System.Windows.Controls.Button&gt;controle será <ph id="ph1">`true`</ph>, embora &lt;xref:System.Windows.Controls.Button&gt;herda Focusable como um <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> propriedade diretamente no &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the applied metadata value for the Focusable dependency property was overridden within the static constructor of the &lt;xref:System.Windows.Controls.Control&gt; base class, which is situated between &lt;xref:System.Windows.Controls.Button&gt; and &lt;xref:System.Windows.UIElement&gt; in the class hierarchy.</source>
          <target state="translated">Isso ocorre porque o valor de metadados aplicados para a propriedade de dependência Focusable é foi substituído do construtor estático do &lt;xref:System.Windows.Controls.Control&gt;classe, que está situado entre base &lt;xref:System.Windows.Controls.Button&gt;e &lt;xref:System.Windows.UIElement&gt;na hierarquia de classe.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Controls.Control&gt; or its derived classes, &lt;xref:System.Windows.Controls.Control&gt; redefines the default value of this property to be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Quando herdado por &lt;xref:System.Windows.Controls.Control&gt;ou suas classes derivadas, &lt;xref:System.Windows.Controls.Control&gt;redefine o valor padrão dessa propriedade para ser <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Controls.Label&gt; (which is a &lt;xref:System.Windows.Controls.Control&gt; derived class), the default value is again redefined to be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Quando herdado por &lt;xref:System.Windows.Controls.Label&gt;(que é um &lt;xref:System.Windows.Controls.Control&gt;classe derivada), o valor padrão é redefinido novamente para ser <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Focusable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.FocusableProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Focusable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.FocusableProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.FocusableProperty&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is focusable; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento for Focusable é; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but see Remarks.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, mas consulte comentários.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.Focusable*&gt; property changes.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.Focusable*&gt;alterações de propriedade.&lt;/xref:System.Windows.UIElement.Focusable*&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Focusable*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Focusable*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Focusable*&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</source>
          <target state="translated">Retorna o valor da propriedade base para a propriedade especificada neste elemento, desconsiderando qualquer possível animado valor da execução ou parado animação.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no animations are attached to the property, then the GetAnimationBaseValue return value is always identical to the &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; return value.</source>
          <target state="translated">Se nenhum animações são anexadas à propriedade, o valor de retorno GetAnimationBaseValue sempre é idêntico de &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;valor de retorno.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</source>
          <target state="translated">Se houver animações anexadas, em seguida, animação possíveis todos os derivado valores, incluindo o início e parada valores são ignorados e, o valor da propriedade é determinado com base em todas as outras entradas possíveis.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>precedência de valor de propriedade de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The dependency property to check.</source>
          <target state="translated">A propriedade de dependência para verificar.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The property value as if no animations are attached to the specified dependency property.</source>
          <target state="translated">O valor da propriedade como se nenhum animações são anexadas à propriedade de dependência especificada.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Returns an alternative clipping geometry that represents the region that would be clipped if &lt;xref:System.Windows.UIElement.ClipToBounds*&gt; were set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna uma geometria recorte alternativo que representa a região que poderia ser cortada se &lt;xref:System.Windows.UIElement.ClipToBounds*&gt;foram definidos como <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.ClipToBounds*&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation will return a legitimate value, but does not use the <ph id="ph1">`layoutSlotSize`</ph> parameter in its calculations.</source>
          <target state="translated">A implementação padrão irá retornar um valor legítimo, mas não usa o <ph id="ph1">`layoutSlotSize`</ph> parâmetro em seus cálculos.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead it uses the value of &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;.</source>
          <target state="translated">Em vez disso, ele usa o valor de &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;.&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is substantially overridden by the immediately derived &lt;xref:System.Windows.FrameworkElement&gt; class, and the &lt;xref:System.Windows.FrameworkElement&gt; override produces a more sophisticated behavior for general WPF framework-level elements.</source>
          <target state="translated">Esse método substancialmente é substituído por imediatamente derivada &lt;xref:System.Windows.FrameworkElement&gt;classe e o &lt;xref:System.Windows.FrameworkElement&gt;substituição produz um comportamento mais sofisticado para elementos de nível da estrutura gerais do WPF.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see &lt;xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Para obter detalhes, consulte &lt;xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The available size provided by the element.</source>
          <target state="translated">O tamanho disponível fornecido pelo elemento.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The potential clipping geometry.</source>
          <target state="translated">A geometria potencial de recorte.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an alternative <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> parent for this element if no visual parent exists.</source>
          <target state="translated">Quando substituído em uma classe derivada, retorna uma alternativa <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> pai para esse elemento se nenhum visual pai existe.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default virtual implementation of this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retorna a implementação de virtual padrão desse método <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; provides a practical implementation.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;Fornece uma implementação prática.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</source>
          <target state="translated">Pais alternativos são usados para roteamento de eventos, em casos onde um elemento cria uma estrutura pai alternativo para que seus eventos roteados de forma que diverge o padrão de roteamento na árvore visual pai padrão ou para baixo na estratégia de roteamento de visualização.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>An object, if implementation of a derived class has an alternate parent connection to report.</source>
          <target state="translated">Um objeto, se a implementação de uma classe derivada tem uma conexão alternativa pai ao relatório.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag-and-drop event that involves this element.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar e soltar subjacente que envolve este elemento.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">O evento GiveFeedback permite que a origem de um evento arrastar para modificar a aparência do ponteiro do mouse para fornecer os comentários visuais do usuário durante uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual feedback reinforces that a drag-and-drop operation is in process.</source>
          <target state="translated">Os comentários visuais reforçam que uma operação de arrastar e soltar está em processo.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event for this class so that GiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;anexa para esta classe para que GiveFeedback faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento GiveFeedback são anexados ao subjacente &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GiveFeedbackEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewGiveFeedback&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GiveFeedbackEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewGiveFeedback&gt;.&lt;/xref:System.Windows.UIElement.PreviewGiveFeedback&gt; &lt;/xref:System.Windows.GiveFeedbackEventHandler&gt; &lt;/xref:System.Windows.UIElement.GiveFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGiveFeedback%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnGiveFeedback%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGiveFeedback%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GiveFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GiveFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets logical focus.</source>
          <target state="translated">Ocorre quando este elemento tem foco lógico.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</source>
          <target state="translated">Foco lógico é diferente do foco do teclado ao foco deliberadamente é forçado por meio de uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus remains where it is and the element where a &lt;xref:System.Windows.UIElement.Focus%2A&gt; method is called still gets logical focus.</source>
          <target state="translated">Nesse cenário, o foco do teclado permanece onde é e o elemento onde um &lt;xref:System.Windows.UIElement.Focus%2A&gt;método é chamado ainda foco lógico obtém.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; property of an element in the route is changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor de &lt;xref:System.Windows.UIElement.IsFocused%2A&gt;propriedade de um elemento na rota é alterada de <ph id="ph1">`false`</ph> para <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que recebe o foco pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que obteve o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GotFocusEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.RoutedEventHandler&gt;|      -Não há nenhum evento de túnel correspondente.&lt;/xref:System.Windows.RoutedEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGotFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is focused on this element.</source>
          <target state="translated">Ocorre quando o teclado está focalizado neste elemento.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;é um evento semelhante que rastreia as alterações de status em uma propriedade que mantém o estado de foco para um elemento. o evento GotKeyboardFocus é gerado em muitas das mesmas circunstâncias.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que tem o foco pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento que tem o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event for this class so that GotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;anexa para esta classe para que GotKeyboardFocus faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento GotKeyboardFocus são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Occurs when this element captures the mouse.</source>
          <target state="translated">Ocorre quando este elemento captura o mouse.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</source>
          <target state="translated">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo se o ponteiro do mouse está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">O mouse normalmente é capturado somente durante as operações de arrastar e soltar e permanece capturado até que ocorra a ação drop da operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que tem captura pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has mouse capture.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;de eventos de captura de dados para determinar o elemento que tem o mouse.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event for  this class so that GotMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;anexa para esta classe para que GotMouseCapture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento GotMouseCapture são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Não há nenhum evento de túnel correspondente definido.&lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Occurs when this element captures the stylus.</source>
          <target state="translated">Ocorre quando este elemento captura a caneta.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</source>
          <target state="translated">Quando um elemento captura a caneta, ele recebe entrada de caneta mesmo que o ponteiro está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">A caneta normalmente é capturada somente durante as operações de arrastar e soltar e retém captura até que ocorra a ação drop da operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que tem captura pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has capture.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que tem captura.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o evento anexado para esta classe de forma que GotStylusCapture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento GotStylusCapture são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Não há nenhum evento de túnel correspondente definido.&lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotStylusCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Occurs when a touch is captured to this element.</source>
          <target state="translated">Ocorre quando um toque é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Substituir &lt;xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element has any animated properties.</source>
          <target state="translated">Obtém um valor que indica se este elemento tem as propriedades de animação.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`true`</ph> either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</source>
          <target state="translated">Essa propriedade retorna <ph id="ph1">`true`</ph> para persistentes animações (unclocked, sempre execução) ou de animações que têm uma linha de tempo específica.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has animations attached to any of its properties; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este elemento tem animações anexadas a uma das suas propriedades. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has focus.</source>
          <target state="translated">Obtém um valor que indica se o <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> tem foco.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subclasses can override this property to specify when the element has keyboard focus.</source>
          <target state="translated">As subclasses podem substituir essa propriedade para especificar quando o elemento tem o foco do teclado.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when your &lt;xref:System.Windows.UIElement&gt; contains elements that can have keyboard focus and you want your element to report that it has focus.</source>
          <target state="translated">Isso é útil quando sua &lt;xref:System.Windows.UIElement&gt;contém elementos que podem ter o foco do teclado e você deseja que o elemento ao relatório que tem foco.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has focus; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tem foco; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Implements <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to supply base element hit testing behavior (returning <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Implementa <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> para fornecer a base de elemento ocorrências comportamento teste (retornando <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the original virtual method &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt; for information on overriding this method in further derived classes.</source>
          <target state="translated">Consulte o método virtual original &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;para obter informações sobre como substituir esse método em ainda mais as classes derivadas.&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that several specific controls (&lt;xref:System.Windows.Controls.TextBlock&gt;, for example) do have distinct implementations, which override this one.</source>
          <target state="translated">Observe que vários controles específicos (&lt;xref:System.Windows.Controls.TextBlock&gt;, por exemplo) têm implementações diferentes, que substituem essa.&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called from your application code.</source>
          <target state="translated">Esse método não se destina a ser chamado no código do aplicativo.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</source>
          <target state="translated">Este método dá suporte a ocorrências teste comportamentos internos que são expostos por vários aspectos do sistema de entrada (se o ponteiro do mouse está sobre um elemento, por exemplo).</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Describes the hit test to perform, including the initial hit point.</source>
          <target state="translated">Descreve o teste de clique para executar, incluindo o ponto inicial de ocorrência.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Results of the test, including the evaluated geometry.</source>
          <target state="translated">Resultados do teste, incluindo a geometria avaliada.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Implements &lt;xref:System.Windows.Media.Visual.HitTestCore*&gt; to supply base element hit testing behavior (returning <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Implementa &lt;xref:System.Windows.Media.Visual.HitTestCore*&gt;para fornecer a base de elemento ocorrências comportamento teste (retornando <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Media.Visual.HitTestCore*&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the original virtual method &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt; for information on overriding this method in further derived classes.</source>
          <target state="translated">Consulte o método virtual original &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;para obter informações sobre como substituir esse método em ainda mais as classes derivadas.&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that several specific controls (&lt;xref:System.Windows.Controls.TextBlock&gt;, for example) do have distinct implementations, which override HitTestCore as defined by &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Observe que vários controles específicos (&lt;xref:System.Windows.Controls.TextBlock&gt;, por exemplo) têm implementações diferentes, que substituem HitTestCore conforme definido pelo &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called from your application code.</source>
          <target state="translated">Esse método não se destina a ser chamado no código do aplicativo.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</source>
          <target state="translated">Este método dá suporte a ocorrências teste comportamentos internos que são expostos por vários aspectos do sistema de entrada (se o ponteiro do mouse está sobre um elemento, por exemplo).</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Describes the hit test to perform, including the initial hit point.</source>
          <target state="translated">Descreve o teste de clique para executar, incluindo o ponto inicial de ocorrência.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Results of the test, including the evaluated point.</source>
          <target state="translated">Resultados do teste, incluindo o ponto avaliado.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets the collection of input bindings associated with this element.</source>
          <target state="translated">Obtém a coleção de associações de entrada associada a esse elemento.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input bindings support the binding of commands to input devices.</source>
          <target state="translated">Suportam a associações de entrada a associação dos comandos para dispositivos de entrada.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Windows.Input.MouseBinding&gt; implements input bindings that include properties that are particular to mouse devices.</source>
          <target state="translated">Por exemplo, &lt;xref:System.Windows.Input.MouseBinding&gt;implementa entrada associações que incluem propriedades que são específicas dos dispositivos de mouse.&lt;/xref:System.Windows.Input.MouseBinding&gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</source>
          <target state="translated">A coleção de associações de entrada incluirá associações de entrada que pertencem ao tipo, bem como as associações de entrada que são declaradas na instância.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>A related property, &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;, maintains a collection of command bindings.</source>
          <target state="translated">Uma propriedade relacionada, &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;, mantém uma coleção de associações de comando.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</source>
          <target state="translated">Estes diferem de associações de entrada que representam o próximo nível para baixo de processamento do comando - ações que estão vinculados aos comandos conhecidos.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_InputBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.InputBindings&gt;       oneOrMoreInputBindings     &lt;/object.InputBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_InputBindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreInputBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Input.InputBinding&gt; elements (typically the &lt;xref:System.Windows.Input.KeyBinding&gt; or &lt;xref:System.Windows.Input.MouseBinding&gt; derived classes).</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_InputBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Uso do elemento de propriedade de XAML <ph id="ph1">```   &lt;object&gt;     &lt;object.InputBindings&gt;       oneOrMoreInputBindings     &lt;/object.InputBindings&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_InputBindings"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML valores <bpt id="p3">*</bpt>oneOrMoreInputBindings<ept id="p3">*</ept> um ou mais &lt;xref:System.Windows.Input.InputBinding&gt;elementos (normalmente o &lt;xref:System.Windows.Input.KeyBinding&gt;ou &lt;xref:System.Windows.Input.MouseBinding&gt;classes derivadas).&lt;/xref:System.Windows.Input.MouseBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.InputBinding&gt;      </target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these is expected to have a &lt;xref:System.Windows.Input.InputBinding.Command%2A&gt; and &lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt; attribute set.</source>
          <target state="translated">Cada um deles deve ter um &lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;e &lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;conjunto de atributos.&lt;/xref:System.Windows.Input.InputBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.InputBinding.Command%2A&gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The collection of input bindings.</source>
          <target state="translated">A coleção de associações de entrada.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</source>
          <target state="translated">Retorna o elemento de entrada dentro do elemento atual que está em coordenadas especificadas em relação a origem do elemento atual.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IInputElement&gt; is returned as the return type, because that type is a common interface for both &lt;xref:System.Windows.UIElement&gt; and &lt;xref:System.Windows.ContentElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.IInputElement&gt;é retornado como o tipo de retorno, porque esse tipo é uma interface comum para ambos os &lt;xref:System.Windows.UIElement&gt;e &lt;xref:System.Windows.ContentElement&gt;.&lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.IInputElement&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the &lt;xref:System.Windows.IInputElement&gt; interface.</source>
          <target state="translated">Você pode converter o tipo de retorno adequadamente, ou usar a instância da interface para determinados membros que são definidos pelo &lt;xref:System.Windows.IInputElement&gt;interface.&lt;/xref:System.Windows.IInputElement&gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method typically is not called from your application code.</source>
          <target state="translated">Esse método normalmente não é chamado de código do aplicativo.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</source>
          <target state="translated">Chamar esse método só é apropriado se você pretende implementar novamente uma quantidade significativa dos recursos de entrada de baixo níveis que já estão presentes, como recriar a lógica de dispositivo de mouse.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IContentHost&gt; contracts an &lt;xref:System.Windows.IContentHost.InputHitTest%2A&gt; method with the same signature, which some elements choose to implement explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.IContentHost&gt;contratos de um &lt;xref:System.Windows.IContentHost.InputHitTest%2A&gt;método com a mesma assinatura, alguns elementos optar por implementar explicitamente.&lt;/xref:System.Windows.IContentHost.InputHitTest%2A&gt;&lt;/xref:System.Windows.IContentHost&gt;</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The offset coordinates within this element.</source>
          <target state="translated">O deslocamento de coordenadas dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>The element child that is located at the given position.</source>
          <target state="translated">O elemento filho que está localizado na posição determinada.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Invalidates the arrange state (layout) for the element.</source>
          <target state="translated">Invalida o estado de organizar (layout) para o elemento.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by &lt;xref:System.Windows.UIElement.UpdateLayout*&gt;.</source>
          <target state="translated">Depois de invalidação, o elemento terá seu layout atualizado, o que ocorrerá de forma assíncrona, a menos que subsequentemente forçada por &lt;xref:System.Windows.UIElement.UpdateLayout*&gt;.&lt;/xref:System.Windows.UIElement.UpdateLayout*&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequent calls to InvalidateArrange or in particular to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; have significant performance consequences.</source>
          <target state="translated">Chamadas para InvalidateArrange ou em particular para frequentes &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;têm consequências de desempenho significativa.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> in your code.</source>
          <target state="translated">Portanto, evite chamar esse método, a menos que você precisa absolutamente estado layout preciso para chamadas subsequentes para outros <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> em seu código.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>An advanced scenario where you might call InvalidateArrange is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the arrange pass of layout when it changes.</source>
          <target state="translated">Um cenário avançado, onde você pode chamar InvalidateArrange é se você estiver criando um &lt;xref:System.Windows.PropertyChangedCallback&gt;para uma propriedade de dependência que não está em um &lt;xref:System.Windows.Freezable&gt;ou &lt;xref:System.Windows.FrameworkElement&gt;derivado da classe que ainda influencia a etapa de organização de layout quando altera.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Invalidates the measurement state (layout) for the element.</source>
          <target state="translated">Invalida o estado de medida (layout) para o elemento.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method also calls &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; internally, there is no need to call InvalidateMeasure and &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; in succession.</source>
          <target state="translated">Chamar esse método também chama &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;internamente, não é necessário chamar InvalidateMeasure e &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;em sucessão.&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt; &lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the invalidation, the element will have its layout updated, which will occur asynchronously, unless &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; is called to force a synchronous layout change.</source>
          <target state="translated">Depois de invalidação, o elemento terá seu layout atualizado, o que ocorrerá de forma assíncrona, a menos que &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;é chamado para forçar uma alteração de layout síncrono.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</source>
          <target state="translated">O sistema de layout de nível de framework WPF não seu próprio tratamento de alterações na árvore visual de um elemento, e em casos mais comuns de invalidação do layout do sistema de layout está chamando o equivalente a este método quando necessário.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</source>
          <target state="translated">Você só deve chamar esse método se estão produzindo uma implementação de concluir o layout, que direcionam a manipulação da árvore de elemento, ou similar cenários avançados.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>One such advanced scenario is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the measure pass of layout when it changes.</source>
          <target state="translated">Um esse cenário avançado é se você estiver criando um &lt;xref:System.Windows.PropertyChangedCallback&gt;para uma propriedade de dependência que não está em um &lt;xref:System.Windows.Freezable&gt;ou &lt;xref:System.Windows.FrameworkElement&gt;derivado da classe que ainda influencia a passagem da medida de layout quando altera.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequent calls to InvalidateMeasure or in particular to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; have significant performance consequences.</source>
          <target state="translated">Chamadas para InvalidateMeasure ou em particular para frequentes &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;têm consequências de desempenho significativa.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> in your code.</source>
          <target state="translated">Portanto, evite chamar esse método, a menos que você precisa absolutamente estado layout preciso para chamadas subsequentes para outros <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> em seu código.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Invalidates the rendering of the element, and forces a complete new layout pass.</source>
          <target state="translated">Invalida o processamento do elemento e força uma nova passagem de layout concluída.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.UIElement.OnRender*&gt; is called after the layout cycle is completed.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.OnRender*&gt;é chamado após o ciclo de layout.&lt;/xref:System.Windows.UIElement.OnRender*&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; internally.</source>
          <target state="translated">Este método chama &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;internamente.&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not generally called from your application code.</source>
          <target state="translated">Este método não é geralmente chamado de código do aplicativo.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</source>
          <target state="translated">O sistema de layout de nível de framework WPF não seu próprio tratamento de alterações na árvore visual de um elemento e seria o equivalente a este método quando necessário chamar já.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is necessary only for advanced scenarios.</source>
          <target state="translated">Chamar esse método é necessário somente para cenários avançados.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>One such advanced scenario is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the layout when it changes.</source>
          <target state="translated">Um esse cenário avançado é se você estiver criando um &lt;xref:System.Windows.PropertyChangedCallback&gt;para uma propriedade de dependência que não está em um &lt;xref:System.Windows.Freezable&gt;ou &lt;xref:System.Windows.FrameworkElement&gt;derivado da classe que ainda influencia o layout quando altera.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</source>
          <target state="translated">Obtém um valor que indica se o tamanho calculado e a posição dos elementos filho em layout do elemento são válidos.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force arrangement to be invalidated by calling &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; on this element (or its parents).</source>
          <target state="translated">Você pode forçar a organização a ser invalidado chamando &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;no elemento (ou seus pais).&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flags the layout for recomposition at such time as the layout system determines.</source>
          <target state="translated">Isso sinaliza o layout de recomposition at como determina o sistema de layout.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, an immediate call to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</source>
          <target state="translated">Como alternativa, uma chamada de imediata para &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;poderia ser feita, mas isso só deve ser feito se você tiver certeza de que nenhum invalidações adicionais estão pendentes (um grande número de atualizações desnecessariamente forçadas tem consequências de desempenho).&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsArrangeValid cannot be <ph id="ph1">`true`</ph> unless &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; is also <ph id="ph2">`true`</ph> (in the layout process, arrangement cannot be valid without measurement first being valid).</source>
          <target state="translated">Não pode ser IsArrangeValid <ph id="ph1">`true`</ph> , a menos que &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;também é <ph id="ph2">`true`</ph> (no processo de layout, organização não pode ser válida sem medida primeiro sendo válido).&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the size and position of layout are valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o tamanho e a posição de layout são válidas. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this element is enabled in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Obtém ou define um valor que indica se esse elemento está habilitado no <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this property is influenced by class-specific implementations of &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt; on particular elements, often at runtime.</source>
          <target state="translated">Observe que essa propriedade é influenciada por implementações específicas de classe de &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;em determinados elementos, geralmente em tempo de execução.&lt;/xref:System.Windows.UIElement.IsEnabledCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the default value listed here is sometimes not effective.</source>
          <target state="translated">Portanto, o valor padrão listado aqui, às vezes, não é eficaz.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a &lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt; will be IsEnabled <ph id="ph1">`false`</ph> whenever it is determined that there is no need to support a scrollbar.</source>
          <target state="translated">Por exemplo, um &lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;terá IsEnabled <ph id="ph1">`false`</ph> sempre que for determinado que não é necessário para dar suporte a uma barra de rolagem.&lt;/xref:System.Windows.Controls.Primitives.ScrollBar&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this value will also potentially be overridden by the value returned by &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;.</source>
          <target state="translated">Tentativa de definir esse valor também será ser substituída pelo valor retornado por &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;.&lt;/xref:System.Windows.UIElement.IsEnabledCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</source>
          <target state="translated">Elementos que não estão habilitados não participam de teste de clique ou foco e, portanto, não poderá ser fontes de eventos de entrada.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsEnabledProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsEnabledProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsEnabledProperty&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento estiver habilitado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O valor padrão é <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsEnabled*&gt; property on this element changes.</source>
          <target state="translated">Ocorre quando o valor da &lt;xref:System.Windows.UIElement.IsEnabled*&gt;propriedade alterações neste elemento.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Gets a value that becomes the return value of &lt;xref:System.Windows.UIElement.IsEnabled*&gt; in derived classes.</source>
          <target state="translated">Obtém um valor que se torna o valor de retorno &lt;xref:System.Windows.UIElement.IsEnabled*&gt;em classes derivadas.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento estiver habilitado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsEnabled*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsEnabled*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether this element has logical focus.</source>
          <target state="translated">Obtém um valor que determina se este elemento tem foco lógico.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</source>
          <target state="translated">Foco lógico pode diferir em foco do teclado se um aplicativo tem várias divisões de foco, como entre o conteúdo do menu e o restante do aplicativo.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</source>
          <target state="translated">Nesse cenário, o foco do teclado pode estar somente em um elemento de interface do usuário do aplicativo, no entanto, certos elementos em outras divisões foco ainda podem manter foco lógico.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on logical focus, see <bpt id="p1">[</bpt>Focus Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o foco lógico, consulte <bpt id="p1">[</bpt>visão geral de foco<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set focus by setting this property (it is read-only).</source>
          <target state="translated">Você não definir foco definindo essa propriedade (é somente leitura).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical use for this property is to use it as a dependency property for a &lt;xref:System.Windows.Setter&gt; or &lt;xref:System.Windows.EventTrigger&gt;.</source>
          <target state="translated">O uso típico dessa propriedade é usá-la como uma propriedade de dependência para um &lt;xref:System.Windows.Setter&gt;ou &lt;xref:System.Windows.EventTrigger&gt;.&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Setter&gt;</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set focus programmatically, call &lt;xref:System.Windows.UIElement.Focus%2A&gt;.</source>
          <target state="translated">Para definir o foco programaticamente, chame &lt;xref:System.Windows.UIElement.Focus%2A&gt;.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</source>
          <target state="translated">Foco também pode ser definido por uma ação do usuário ou por implementações de controle, que incluem possivelmente o comportamento de captura do mouse.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsFocusedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsFocusedProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsFocusedProperty&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has logical focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este elemento tem foco lógico. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsFocused*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsFocused*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsFocused*&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</source>
          <target state="translated">Obtém ou define um valor que declara se este elemento possivelmente pode ser retornado como um resultado de teste de clique de alguma parte de seu conteúdo renderizado.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</source>
          <target state="translated">O valor efetivo dessa propriedade é influenciado pelas posições relativas de elementos podem ser testados ocorrências na árvore lógica.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain <ph id="ph1">`false`</ph>, even if attempting to set that value locally.</source>
          <target state="translated">Por exemplo, se um elemento é um elemento filho de um elemento que é não visível do teste de clique, o valor efetivo da propriedade no filho permanecerá <ph id="ph1">`false`</ph>, mesmo se a tentativa de definir esse valor localmente.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, it is important that you do not set IsHitTestVisible to <ph id="ph1">`false`</ph> on a composited control unless you do not want any input or hit testing on that control.</source>
          <target state="translated">Por esse motivo, é importante que você não defina IsHitTestVisible como <ph id="ph1">`false`</ph> em um controle composto, a menos que você não deseja qualquer entrada ou testes de colisão em que o controle.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on hit testing, see <bpt id="p1">[</bpt>Hit Testing in the Visual Layer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o teste de clique, consulte <bpt id="p1">[</bpt>ocorrências testes na camada Visual<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHitTestVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHitTestVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element could be returned as a hit test result from at least one point; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se esse elemento pode ser retornado como um resultado de teste de clique pelo menos um ponto; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O valor padrão é <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt; dependency property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt;alterações de propriedade de dependência neste elemento.&lt;/xref:System.Windows.UIElement.IsHitTestVisible*&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsHitTestVisible*&gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether an input method system, such as an <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]</ph>,  is enabled for processing the input to this element.</source>
          <target state="translated">Obtém um valor que indica se um sistema de método de entrada, como um <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]</ph>, está habilitado para processamento de entrada para esse elemento.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns the value that is returned by the attached property &lt;xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt; for the currently enabled input methods (keyboard, speech, and other input devices).</source>
          <target state="translated">Essa propriedade retorna o valor retornado pela propriedade anexada &lt;xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt;para os métodos de entrada atualmente habilitados (teclado, fala e outros dispositivos de entrada).&lt;/xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an input method is active; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se um método de entrada estiver ativo; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The default value of the underlying attached property is <bpt id="p1">&lt;xref uid="langword_csharp_true;" name="true;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> however, this will be influenced by the actual state of input methods at runtime.</source>
          <target state="translated">O valor padrão da propriedade anexada subjacente é <bpt id="p1">&lt;xref uid="langword_csharp_true;" name="true;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no entanto, isso será influenciado pelo estado real dos métodos de entrada em tempo de execução.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element has keyboard focus.</source>
          <target state="translated">Obtém um valor que indica se este elemento tem o foco do teclado.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the determined value of this property may be accompanied by focus-related events.</source>
          <target state="translated">Alterações para o determinado valor dessa propriedade podem ser acompanhadas por eventos relacionados a foco.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsKeyboardFocused and &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</source>
          <target state="translated">IsKeyboardFocused é e &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;são geralmente usados em manipuladores de eventos de classe para outros eventos relacionados à entrada, para a instância para determinar se o elemento já tem o foco do teclado, ou fazer decisões quando o mouse eventos e eventos de teclado que ocorrerem.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este elemento tem o foco do teclado. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused*&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused*&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</source>
          <target state="translated">Obtém um valor que indica se o foco do teclado em qualquer lugar dentro do elemento ou seus elementos filho de árvore visual.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the value of this property typically raise the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event, unless a derived class has overridden &lt;xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt; to suppress the event.</source>
          <target state="translated">Alterações para o valor dessa propriedade normalmente geram o &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;evento, a menos que uma classe derivada substituiu &lt;xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt;para suprimir o evento.&lt;/xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set this property directly, but you can set the focus to an element by calling &lt;xref:System.Windows.UIElement.Focus%2A&gt;, or by making a &lt;xref:System.Windows.UIElement.MoveFocus%2A&gt; request.</source>
          <target state="translated">Você não definir essa propriedade diretamente, mas você pode definir o foco para um elemento chamando &lt;xref:System.Windows.UIElement.Focus%2A&gt;, ou fazendo uma &lt;xref:System.Windows.UIElement.MoveFocus%2A&gt;solicitação.&lt;/xref:System.Windows.UIElement.MoveFocus%2A&gt; &lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either of these method calls might change this property value.</source>
          <target state="translated">Qualquer uma dessas chamadas de método pode alterar esse valor de propriedade.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;e IsKeyboardFocusWithin são geralmente usados em manipuladores de eventos de classe para outros eventos relacionados à entrada, para a instância para determinar se o elemento já tem o foco do teclado, ou fazer decisões quando o mouse eventos e eventos de teclado ocorrem em conjunto.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocusWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocusWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if keyboard focus is on the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o foco do teclado está no elemento ou seus elementos filho; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the IsKeyboardFocusWithinChanged property changes on this element.</source>
          <target state="translated">Ocorre quando o valor da propriedade IsKeyboardFocusWithinChanged é alterado neste elemento.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether manipulation events are enabled on this <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém ou define um valor que indica se os eventos de manipulação estão habilitados neste <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to true if you want the &lt;xref:System.Windows.UIElement&gt; to receive the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;, &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;, &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;, and &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt; events.</source>
          <target state="translated">Defina essa propriedade como true se você quiser que o &lt;xref:System.Windows.UIElement&gt;para receber o &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;, &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;, &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;, e &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;eventos.&lt;/xref:System.Windows.UIElement.ManipulationCompleted&gt; &lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; &lt;/xref:System.Windows.UIElement.ManipulationInertiaStarting&gt; &lt;/xref:System.Windows.UIElement.ManipulationDelta&gt; &lt;/xref:System.Windows.UIElement.ManipulationStarted&gt; &lt;/xref:System.Windows.UIElement.ManipulationStarting&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if manipulation events are enabled on this <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a manipulação eventos são habilitados neste <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsManipulationEnabled*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsManipulationEnabled*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsManipulationEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current size returned by layout measure is valid.</source>
          <target state="translated">Obtém um valor que indica se o tamanho atual retornado pela medida de layout é válido.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force measurement and arrangement to be invalidated by calling &lt;xref:System.Windows.UIElement.InvalidateMeasure%2A&gt; on this element (or any parent element up the visual tree).</source>
          <target state="translated">Você pode forçar a medida e a organização sejam invalidados chamando &lt;xref:System.Windows.UIElement.InvalidateMeasure%2A&gt;no elemento (ou qualquer elemento pai na árvore visual).&lt;/xref:System.Windows.UIElement.InvalidateMeasure%2A&gt;</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</source>
          <target state="translated">Isso designa o layout para recomposition de forma assíncrona, que ocorrem em um momento determinado pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you could make an immediate call to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;.</source>
          <target state="translated">Como alternativa, você pode fazer uma chamada de imediata para &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you should only call &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</source>
          <target state="translated">No entanto, você só deve chamar &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;se é provável que nenhum invalidações adicionais pendentes (um grande número de atualizações desnecessariamente forçadas terá consequências de desempenho).&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IsMeasureValid is <ph id="ph1">`false`</ph>, &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt; must also be <ph id="ph2">`false`</ph> (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</source>
          <target state="translated">Se for IsMeasureValid <ph id="ph1">`false`</ph>, &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt;também deve ser <ph id="ph2">`false`</ph> (pela lógica de imposto do processo de layout, organização não pode ser válida sem medida primeiro sendo válido).&lt;/xref:System.Windows.UIElement.IsArrangeValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the measure pass of layout returned a valid and current value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a medida passar de layout retornado um valor válido e atual; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the mouse is captured to this element.</source>
          <target state="translated">Obtém um valor que indica se o mouse é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse capture state is related to in-process drag-and-drop operations.</source>
          <target state="translated">Estado de captura do mouse está relacionado a operações de arrastar e soltar no processo.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has mouse capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento tem captura do mouse. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsMouseCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsMouseCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</source>
          <target state="translated">Obtém um valor que determina se a captura do mouse é mantida por este elemento ou elementos filho em sua árvore visual.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element or a contained element has mouse capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se esse elemento ou um elemento contido tem captura do mouse. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes on this element.</source>
          <target state="translated">Ocorre quando o valor de <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> alterações neste elemento.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</source>
          <target state="translated">Obtém um valor que indica se a posição do ponteiro do mouse corresponde a resultados de teste, o que levar em conta a composição de elemento de ocorrências.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;, this property is only <ph id="ph1">`true`</ph> if the mouse pointer is over the literal element—as it is for a hit test.</source>
          <target state="translated">Ao contrário de &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;, essa propriedade é somente <ph id="ph1">`true`</ph> se o ponteiro do mouse está sobre o elemento literal — assim como para um teste de hit.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se o ponteiro do mouse está sobre um elemento filho, em particular sobre os elementos que fazem parte de um elemento modelo mais profundo e composição, essa propriedade será <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</source>
          <target state="translated">A menos que você sabe como um controle composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; instead.</source>
          <target state="translated">Na maioria dos cenários em que você está criando não controles, use &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;em vez disso.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured by this element, and this property is <ph id="ph1">`true`</ph> at time of capture, this property will continue to return <ph id="ph2">`true`</ph> until mouse capture is lost and the pointer is not over its bounds.</source>
          <target state="translated">Se o mouse é capturado por esse elemento, e essa propriedade é <ph id="ph1">`true`</ph> no momento da captura, esta propriedade continuarão a retornar <ph id="ph2">`true`</ph> até que a captura do mouse é perdida e o ponteiro não é sobre seus limites.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the mouse pointer is over the same element result as a hit test; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o ponteiro do mouse está sobre o mesmo resultado de elemento como um teste de hit; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</source>
          <target state="translated">Obtém um valor que indica se o ponteiro do mouse está localizado sobre este elemento (incluindo elementos filho na árvore visual).</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</source>
          <target state="translated">Normalmente, os controles são compostos, de modo que os vários elementos dentro do controle (a árvore visual) irá relatar o estado de mouse para o controle que contém.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Windows.Controls.ListBox&gt; style control will report IsMouseOver as <ph id="ph1">`true`</ph> if the mouse is anywhere over its geometry, including any &lt;xref:System.Windows.Controls.ListBoxItem&gt;.</source>
          <target state="translated">Por exemplo, um &lt;xref:System.Windows.Controls.ListBox&gt;controle estilo relatará IsMouseOver como <ph id="ph1">`true`</ph> se o mouse em qualquer lugar em sua geometria, incluindo qualquer &lt;xref:System.Windows.Controls.ListBoxItem&gt;.&lt;/xref:System.Windows.Controls.ListBoxItem&gt; &lt;/xref:System.Windows.Controls.ListBox&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</source>
          <target state="translated">Embora não exista um evento "IsMouseOverChanged" análogo, faça vários eventos semelhantes.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can handle &lt;xref:System.Windows.UIElement.MouseEnter&gt;, &lt;xref:System.Windows.UIElement.MouseMove&gt;, and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.</source>
          <target state="translated">Por exemplo, você pode manipular &lt;xref:System.Windows.UIElement.MouseEnter&gt;, &lt;xref:System.Windows.UIElement.MouseMove&gt;e &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; &lt;/xref:System.Windows.UIElement.MouseMove&gt; &lt;/xref:System.Windows.UIElement.MouseEnter&gt;</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element captures the mouse, this property remains <ph id="ph1">`true`</ph> until mouse capture is lost and the mouse pointer leaves the element bounds.</source>
          <target state="translated">Se este elemento captura o mouse, essa propriedade permanece <ph id="ph1">`true`</ph> até que a captura do mouse é perdida e o ponteiro do mouse sai dos limites do elemento.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</source>
          <target state="translated">Alguns controles deliberadamente capturam o mouse sobre determinadas ações que não aparecem diretamente envolver o mouse.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can lead to IsMouseOver being <ph id="ph1">`true`</ph> even though the mouse has not apparently moved.</source>
          <target state="translated">Isso pode levar a IsMouseOver sendo <ph id="ph1">`true`</ph> , embora o mouse aparentemente não foi movido.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsMouseOverProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsMouseOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if mouse pointer is over the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o ponteiro do mouse está sobre o elemento ou seus elementos filho; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsMouseOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsMouseOver*&gt;</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the stylus is captured by this element.</source>
          <target state="translated">Obtém um valor que indica se a caneta é capturada por este elemento.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has stylus capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento captura a caneta. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsStylusCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsStylusCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</source>
          <target state="translated">Obtém um valor que determina se a caneta capturar é mantido por esse elemento ou um elemento dentro dos limites do elemento e sua árvore visual.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Touch Input Support in Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> and <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Touch suporte de entrada no Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> e <bpt id="p2">[</bpt>visão geral de entrada<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element or a contained element has stylus capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se esse elemento ou um elemento contido captura da caneta. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Este é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</source>
          <target state="translated">Obtém um valor que indica se a posição de caneta corresponde a resultados de teste, o que levar em conta a composição de elemento de ocorrências.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;, this property is only <ph id="ph1">`true`</ph> if the stylus is over the element.</source>
          <target state="translated">Ao contrário de &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;, essa propriedade só é <ph id="ph1">`true`</ph> se a caneta está sobre o elemento.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se a caneta está sobre um elemento filho ou sobre os elementos que fazem parte de composição de mais de um elemento (a árvore visual), essa propriedade será <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</source>
          <target state="translated">A menos que você sabe como um controle composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; instead.</source>
          <target state="translated">Na maioria dos cenários em que você está criando não controles, use &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;em vez disso.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element has stylus capture and this property is <ph id="ph1">`true`</ph> at the time of capture, this property remains <ph id="ph2">`true`</ph> until stylus capture is lost and the stylus is not over its bounds.</source>
          <target state="translated">Se este elemento tem a captura da caneta e esta propriedade é <ph id="ph1">`true`</ph> no momento da captura, esta propriedade permanece <ph id="ph2">`true`</ph> até que a captura da caneta é perdida e não está sobre seus limites.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stylus pointer is over the same element result as a hit test; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o ponteiro de caneta está sobre o mesmo resultado de elemento como um teste de hit; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</source>
          <target state="translated">Obtém um valor que indica se o cursor da caneta é localizado sobre este elemento (incluindo elementos filhos visuais).</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element has stylus capture, this property will continue to return <ph id="ph1">`true`</ph> until stylus capture is lost and the pointer is out of its bounds.</source>
          <target state="translated">Se este elemento tem a captura da caneta, essa propriedade continuará retornar <ph id="ph1">`true`</ph> até que a captura da caneta é perdida e o ponteiro está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsStylusOverProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsStylusOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if stylus cursor is over the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o cursor da caneta está sobre o elemento ou seus elementos filho; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusOver*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsStylusOver*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsStylusOver*&gt;</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element is visible in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Obtém um valor que indica se esse elemento está visível no <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Determination of the IsVisible value takes all factors of layout into account.</source>
          <target state="translated">Determinação do valor IsVisible leva em conta a todos os fatores de layout.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</source>
          <target state="translated">Por outro lado, &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, só que é uma propriedade configurável, indica a intenção de fazer programaticamente um elemento visível ou invisível.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements where IsVisible is <ph id="ph1">`false`</ph> do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</source>
          <target state="translated">Elementos onde IsVisible é <ph id="ph1">`false`</ph> participar de eventos de entrada (ou comandos), faça influenciam a medida ou organizar os passos de layout, não são Focusable é, não estão em uma sequência de guia e não serão reportadas no teste de clique não.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, elements where &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`false`</ph> will still participate in events and commands, and hit testing, but are also not focusable.</source>
          <target state="translated">Por outro lado, elementos onde &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;é <ph id="ph1">`false`</ph> ainda farão parte de eventos e comandos e teste de clique, mas também não são Focusable é.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsVisibleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.IsVisibleProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.IsVisibleProperty&gt;</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento estiver visível; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsVisible*&gt; property changes on this element.</source>
          <target state="translated">Ocorre quando o valor de &lt;xref:System.Windows.UIElement.IsVisible*&gt;alterações de propriedade neste elemento.&lt;/xref:System.Windows.UIElement.IsVisible*&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the &lt;xref:System.Windows.UIElement.IsVisible%2A&gt; property.</source>
          <target state="translated">Esse evento não será gerado se o elemento não está sendo processado, o sistema de layout, por motivos diferente do valor da &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;propriedade.&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the element might not have an associated visual.</source>
          <target state="translated">Por exemplo, o elemento não pode ter um visual associado.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsVisible*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.IsVisible*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.IsVisible*&gt;</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Occurs when a key is pressed while focus is on this element.</source>
          <target state="translated">Ocorre quando uma tecla é pressionada enquanto o foco está neste elemento.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Tratamento de chaves interage com outros recursos de plataforma como composição ordenar e texto.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>The KeyDown event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">O evento KeyDown é um evento de entrada de texto de nível inferior pode não funcionar como esperado em determinados controles.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Isso ocorre porque alguns controles tem composição de controle ou de tratamento de classe que fornece uma versão de nível mais alto de texto manipulação de entrada e eventos relacionados.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event for this class so that KeyDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;anexa para esta classe para que KeyDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the KeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento KeyDown são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_KeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.KeyDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewKeyDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_KeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.KeyDownEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewKeyDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewKeyDown&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.KeyDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnKeyDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Occurs when a key is released while focus is on this element.</source>
          <target state="translated">Ocorre quando uma tecla é liberada enquanto o foco está neste elemento.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event for this class so that  KeyUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;anexa para esta classe para que KeyUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the KeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento KeyUp são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_KeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.KeyUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewKeyUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_KeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.KeyUpEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewKeyUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewKeyUp&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.KeyUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnKeyUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Occurs when the layout of the various visual elements associated with the current <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes.</source>
          <target state="translated">Ocorre quando o layout dos vários elementos visuais associados atual <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> alterações.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>A layout update can occur as a result of a property change, a window resize, or an explicit user request.</source>
          <target state="translated">Uma atualização de layout pode ocorrer como resultado de uma alteração de propriedade, um redimensionamento de janela ou uma solicitação explícita do usuário.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Esse membro é um <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> evento, não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses logical focus.</source>
          <target state="translated">Ocorre quando este elemento perde o foco lógico.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</source>
          <target state="translated">Foco lógico é diferente do foco do teclado, se o foco é deliberadamente forçado longe usando uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus remains where it is, and the element where a &lt;xref:System.Windows.UIElement.Focus%2A&gt; method is called still gets logical focus.</source>
          <target state="translated">Neste cenário, permanece de foco do teclado em que é e o elemento onde um &lt;xref:System.Windows.UIElement.Focus%2A&gt;método é chamado ainda foco lógico obtém.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; property of an element in the route changes from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor de &lt;xref:System.Windows.UIElement.IsFocused%2A&gt;alterações de propriedade de um elemento na rota de <ph id="ph1">`true`</ph> para <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que perde o foco pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que obteve o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.LostFocusEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.RoutedEventHandler&gt;|      -Não há nenhum evento de túnel correspondente.&lt;/xref:System.Windows.RoutedEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnLostFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnLostFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is no longer focused on this element,.</source>
          <target state="translated">Ocorre quando o teclado não está focalizado neste elemento.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que perdeu o foco pode ser um elemento filho, em vez do elemento onde o manipulador de eventos, na verdade, está conectado.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que perdeu o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that LostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;anexa para esta classe, para que LostKeyboardFocus faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento LostKeyboardFocus são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses mouse capture.</source>
          <target state="translated">Ocorre quando este elemento perde a captura do mouse.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</source>
          <target state="translated">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo que o ponteiro está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Normalmente, o mouse é capturado somente durante as operações de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento perde a captura do pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost capture.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que perdeu captura.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event for this class, so that LostMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;anexa para esta classe, para que LostMouseCapture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento LostMouseCapture são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Não há nenhum evento de túnel correspondente definido.&lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses stylus capture.</source>
          <target state="translated">Ocorre quando este elemento perde a captura da caneta.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</source>
          <target state="translated">Quando um elemento captura a caneta, ele recebe entrada de caneta mesmo que o ponteiro está fora dos seus limites.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa roteamento bolha, o elemento que perde o foco pode ser um elemento de filho em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que perdeu o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event for this class, so that LostStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;anexa para esta classe, para que LostStylusCapture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento LostStylusCapture são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Não há nenhum evento de túnel correspondente definido.&lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostStylusCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses a touch capture.</source>
          <target state="translated">Ocorre quando este elemento perde a captura de toque.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Substituir &lt;xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>Occurs when the manipulation encounters a boundary.</source>
          <target state="translated">Ocorre quando a manipulação encontra um limite.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Occurs when a manipulation and inertia on the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is complete.</source>
          <target state="translated">Ocorre quando uma manipulação e inércia no <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto for concluído.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to get information about the manipulation when it completes.</source>
          <target state="translated">Você pode usar esse evento para obter informações sobre a manipulação de quando ele for concluído.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt; property to determine the total amount the position of the manipulation changed.</source>
          <target state="translated">Por exemplo, você pode usar o &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt;alterado de propriedade para determinar a quantidade total a posição da manipulação de.&lt;/xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Occurs when the input device changes position during a manipulation.</source>
          <target state="translated">Ocorre quando o dispositivo de entrada muda de posição durante uma manipulação.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationDelta event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</source>
          <target state="translated">O evento ManipulationDelta ocorre várias vezes quando o usuário arrasta dedos a tela durante uma manipulação e novamente quando inércia ocorre.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt; property to check whether the event is occurring during inertia.</source>
          <target state="translated">Você pode usar o &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt;propriedade para verificar se o evento ocorre durante inércia.&lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt;</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element on with ManipulationDelta event occurs is not affected in any way when the event occurs.</source>
          <target state="translated">O elemento com ManipulationDelta evento ocorre não é afetado de qualquer forma, quando o evento ocorre.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must provide the logic to the element that is to be manipulated.</source>
          <target state="translated">Você deve fornecer a lógica para o elemento a ser manipulada.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt; and &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt; properties, which are of type &lt;xref:System.Windows.Input.ManipulationDelta&gt;, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</source>
          <target state="translated">O &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;e &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;Propriedades, que são do tipo &lt;xref:System.Windows.Input.ManipulationDelta&gt;, contêm dados sobre como alterar a posição de manipulações e interpretado como mover, redimensionar ou girar um objeto.&lt;/xref:System.Windows.Input.ManipulationDelta&gt; &lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt; &lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply that information to the element that is to be manipulated.</source>
          <target state="translated">Você pode aplicar essas informações para o elemento a ser manipulada.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Occurs when the input device loses contact with the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object during a manipulation and inertia begins.</source>
          <target state="translated">Ocorre quando o dispositivo de entrada perde o contato com o <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto durante uma manipulação e inércia começa.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationInertiaStarting event occurs when the user lifts all of the fingers from the screen during a manipulation.</source>
          <target state="translated">O evento ManipulationInertiaStarting ocorre quando o usuário retira a todos os dedos na tela durante uma manipulação.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a user "throws" a &lt;xref:System.Windows.UIElement&gt; across a surface, the user will touch the &lt;xref:System.Windows.UIElement&gt; to begin the action, move the finger across the screen for a short distance, and then release the &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Por exemplo, se um usuário "lançar" um &lt;xref:System.Windows.UIElement&gt;em uma superfície, o usuário será tocam o &lt;xref:System.Windows.UIElement&gt;para iniciar a ação move o dedo na tela para uma pequena distância e, em seguida, solte &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user releases the element, inertia begins and the ManipulationInertiaStarting event occurs.</source>
          <target state="translated">Quando o usuário libera o elemento, inércia começa e o evento ManipulationInertiaStarting ocorre.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement&gt; continues to receive &lt;xref:System.Windows.UIElement.ManipulationDelta&gt; events to indicate that inertia is occurring on the element.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement&gt;continua a receber &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;eventos para indicar que inércia está ocorrendo no elemento.&lt;/xref:System.Windows.UIElement.ManipulationDelta&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to specify the behavior of the inertia.</source>
          <target state="translated">Você pode usar esse evento para especificar o comportamento de inércia.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can set the initial velocity that is used when inertia begins.</source>
          <target state="translated">Por exemplo, você pode definir a velocidade inicial que é usada quando inércia começa.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</source>
          <target state="translated">Você também pode especificar a quantidade de inércia definindo a desaceleração desejada ou definindo o posicionamento desejado.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</source>
          <target state="translated">Você pode definir esses valores para cada tipo de manipulação (tradução, expansão ou rotação) de forma independente.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.</source>
          <target state="translated">Para obter mais informações, consulte &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.&lt;/xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Occurs when an input device begins a manipulation on the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Ocorre quando um dispositivo de entrada começa uma manipulação no <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationStarted event occurs after the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt; event.</source>
          <target state="translated">O evento ManipulationStarted ocorre após o &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationStarting&gt;</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do the following with the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;:      -   Get the element that the manipulation's position is relative to by using the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt; property.</source>
          <target state="translated">Você pode fazer o seguinte com o &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;:-obter o elemento de posição da manipulação é relativo ao usando o &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt;propriedade.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt; &lt;/xref:System.Windows.Input.ManipulationStartedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Get the origin of the manipulation by using the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt; property.</source>
          <target state="translated">-Obtém a origem da manipulação de por meio de &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt;propriedade.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt;</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cancel the manipulation by calling the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt; method.</source>
          <target state="translated">-Cancelar a manipulação chamando o &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt;método.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt;</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationStartedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationStartedEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationStartedEvent&gt;</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Occurs when the manipulation processor is first created.</source>
          <target state="translated">Ocorre quando o processador de manipulação é criado pela primeira vez.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationStarting event occurs on an element that has the &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt; property set to <ph id="ph1">`true`</ph> when the user puts a finger on it.</source>
          <target state="translated">O evento ManipulationStarting ocorre em um elemento que tem o &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;propriedade definida como <ph id="ph1">`true`</ph> quando o usuário coloca um dedo no proprietário.&lt;/xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, subsequent manipulation events report the position of the manipulation relative to the element that has &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt; set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Por padrão, a posição da manipulação de em relação ao elemento que tem de relatório de eventos subsequentes de manipulação de &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;definida como <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify that the position should be relative to another element by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt; property.</source>
          <target state="translated">Você pode especificar que a posição deve ser relativo ao outro elemento definindo o &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;propriedade.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can make the manipulation relative to the parent of the element.</source>
          <target state="translated">Por exemplo, você pode fazer a manipulação em relação ao pai do elemento.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also do the following in an event handler for ManipulationStarting:      -   Specify whether the user needs more than one finger to perform the manipulations by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Você também pode fazer o seguinte em um manipulador de eventos para ManipulationStarting:-especificar se o usuário precisa de mais de um dedo para executar as manipulações definindo o &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt;propriedade.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Specify which types of manipulation are enabled by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt; property to a &lt;xref:System.Windows.Input.ManipulationModes&gt; enumeration.</source>
          <target state="translated">-Especificar quais tipos de manipulação de estão habilitados, definindo o &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt;propriedade para um &lt;xref:System.Windows.Input.ManipulationModes&gt;enumeração.&lt;/xref:System.Windows.Input.ManipulationModes&gt; &lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Specify the center of a single-finger rotation by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-Especificar o Centro de rotação de um único dedo, definindo o &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt;propriedade.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cancel the manipulation by calling the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">-Cancelar a manipulação chamando o &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt;método.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre manipulações, consulte o <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter um exemplo de um aplicativo que responde às manipulações, consulte <bpt id="p1">[</bpt>passo a passo: Criando seu primeiro toque aplicativo<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationStartingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.ManipulationStartingEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationStartingEvent&gt;</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Updates the &lt;xref:System.Windows.UIElement.DesiredSize<bpt id="p1">*</bpt>&gt; of a <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>. Parent elements call this method from their own &lt;xref:System.Windows.UIElement.MeasureCore<ept id="p1">*</ept>&gt; implementations to form a recursive layout update.</source>
          <target state="translated">Updates the &lt;&gt;<bpt id="p1">*</bpt>&gt; of a <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>. Elementos pai chamar esse método de seus próprios &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; atualizar implementações para formar um layout recursiva.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</source>
          <target state="translated">Chamar esse método constitui a primeira passagem (a fase de "Medida") de uma atualização de layout.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Computation of layout positioning in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> is comprised of a Measure call and an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call.</source>
          <target state="translated">Cálculo de posicionamento de layout em <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> é composta de uma chamada de medida e um &lt;xref:System.Windows.UIElement.Arrange%2A&gt;chame.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the Measure call, an element determines its size requirements by using an <ph id="ph1">`availableSize`</ph> input.</source>
          <target state="translated">Durante a chamada de medida, um elemento determina seus requisitos de tamanho usando um <ph id="ph1">`availableSize`</ph> entrada.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call, the element size is finalized.</source>
          <target state="translated">Durante o &lt;xref:System.Windows.UIElement.Arrange%2A&gt;chamada, o tamanho do elemento é finalizada.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`availableSize`</ph> can be any number from zero to infinite.</source>
          <target state="translated"><ph id="ph1">`availableSize`</ph>pode ser qualquer número de zero como infinito.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements participating in layout should return the minimum &lt;xref:System.Windows.Size&gt; they require for a given <ph id="ph1">`availableSize`</ph>.</source>
          <target state="translated">Elementos que participam do layout devem retornar o mínimo &lt;xref:System.Windows.Size&gt;precisam para um determinado <ph id="ph1">`availableSize`</ph>.&lt;/xref:System.Windows.Size&gt;</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a layout is first instantiated, it always receives a Measure call before &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.</source>
          <target state="translated">Quando um layout é instanciado pela primeira vez, ele sempre recebe uma chamada de medida antes &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the first layout pass, it may receive an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call without a Measure; this can happen when a property that affects only &lt;xref:System.Windows.UIElement.Arrange%2A&gt; is changed (such as alignment), or when the parent receives an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; without a Measure.</source>
          <target state="translated">No entanto, após a primeira passagem de layout, pode receber um &lt;xref:System.Windows.UIElement.Arrange%2A&gt;chamar sem uma medida; isso pode acontecer quando uma propriedade que só afeta &lt;xref:System.Windows.UIElement.Arrange%2A&gt;for alterada (como alinhamento), ou quando o pai recebe um &lt;xref:System.Windows.UIElement.Arrange%2A&gt;sem uma medida.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Measure call will automatically invalidate an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call.</source>
          <target state="translated">Uma chamada de medida invalidará automaticamente um &lt;xref:System.Windows.UIElement.Arrange%2A&gt;chame.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</source>
          <target state="translated">As atualizações de layout de forma assíncrona, ocorrem, de modo que o thread principal não está esperando para todas as alterações de layout possíveis.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; property, for example).</source>
          <target state="translated">Consultar um elemento por meio de lógica verificando valores de propriedade pode não refletir imediatamente alterações em propriedades que interagem com as características de dimensionamento ou layout (o &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;propriedade, por exemplo).&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Layout updates can be forced by using the &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Atualizações de layout podem ser forçadas usando o &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;método.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, calling this method is usually unnecessary and can cause poor performance.</source>
          <target state="translated">No entanto, chamar esse método normalmente não é necessário e pode causar baixo desempenho.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system keeps two separate queues of invalid layouts, one for Measure and one for &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.</source>
          <target state="translated">O sistema de layout mantém duas filas separadas layouts inválidos, uma medida e outra para &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</source>
          <target state="translated">A fila de layout é classificada com base na ordem dos elementos na árvore visual do elemento de execução de layout; são superiores na árvore de elementos na parte superior da fila, para evitar a redundância layouts causados por alterações repetidas em pais.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</source>
          <target state="translated">Entradas duplicadas são automaticamente removidas da fila e os elementos são automaticamente removidos da fila se eles já são validados de layout.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>When updating layout, the Measure queue is emptied first, followed by the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; queue.</source>
          <target state="translated">Ao atualizar o layout, a fila de medida é esvaziada primeiro, seguido de &lt;xref:System.Windows.UIElement.Arrange%2A&gt;fila.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element in the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; queue will never be arranged if there is an element in the Measure queue.</source>
          <target state="translated">Um elemento de &lt;xref:System.Windows.UIElement.Arrange%2A&gt;fila nunca será organizada se há um elemento na fila de medida.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>The available space that a parent element can allocate a child element.</source>
          <target state="translated">O espaço disponível que um elemento pai pode alocar um elemento filho.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</source>
          <target state="translated">Um elemento filho pode solicitar um espaço maior do que está disponível. o tamanho fornecido pode ser acomodado se a rolagem é possível no modelo de conteúdo para o elemento atual.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</source>
          <target state="translated">Quando substituído em uma classe derivada, fornece lógica de medida para este elemento de dimensionamento corretamente, levando em consideração o tamanho de qualquer conteúdo de elemento filho.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is more common to derive an element from &lt;xref:System.Windows.FrameworkElement&gt; rather than &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">É mais comum para derivar um elemento &lt;xref:System.Windows.FrameworkElement&gt;em vez&lt;/xref:System.Windows.FrameworkElement&gt; de &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are deriving from &lt;xref:System.Windows.FrameworkElement&gt;, note that an override of MeasureCore on &lt;xref:System.Windows.FrameworkElement&gt; seals the MeasureCore method.</source>
          <target state="translated">Se você estiver derivando de &lt;xref:System.Windows.FrameworkElement&gt;, observe que uma substituição de MeasureCore em &lt;xref:System.Windows.FrameworkElement&gt;lacra o método MeasureCore.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you only override MeasureCore as a means to alter layout measure characteristics if you derive from &lt;xref:System.Windows.UIElement&gt; through an inheritance that does not include &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">Portanto, você apenas substituir MeasureCore como um meio para alterar as características da medida de layout se você derivar de &lt;xref:System.Windows.UIElement&gt;por meio de uma herança que não inclua &lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might be the case if you are attempting to build your own implementation on the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> core-level.</source>
          <target state="translated">Isso poderá acontecer se você estiver tentando criar sua própria implementação de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> nível de núcleo.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, if you are deriving from &lt;xref:System.Windows.FrameworkElement&gt;, then the implementation template for Measure behavior is the &lt;xref:System.Windows.FrameworkElement&gt; implementation of .&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;.</source>
          <target state="translated">Caso contrário, se você estiver derivando de &lt;xref:System.Windows.FrameworkElement&gt;, em seguida, o modelo de implementação para o comportamento de medida é o &lt;xref:System.Windows.FrameworkElement&gt;implementação de.&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parent element with child elements must call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</source>
          <target state="translated">Um elemento pai com elementos filho deve chamar &lt;xref:System.Windows.UIElement.Measure%2A&gt;em cada filho, caso contrário, esses elementos filho não são dimensionados ou organizados e efetivamente desaparecerá do layout.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>The available size that the parent element can allocate for the child.</source>
          <target state="translated">O tamanho disponível que o elemento pai pode alocar para o filho.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>The desired size of this element in layout.</source>
          <target state="translated">O tamanho desejado desse elemento no layout.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is pressed while the pointer is over this element.</source>
          <target state="translated">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event for this class, so that MouseDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;anexa para esta classe, para que MouseDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseDown são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MouseDown event is often raised together with either &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">O evento MouseDown geralmente é gerado junto com o &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;ou &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;, que corresponde a um pressionamento de um dos dois botões de mouse padrão.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;e &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;também são eventos roteados, mas são eventos roteados diretos e o evento específico do botão apropriado é gerado quando o &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento atinge esse elemento na rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">Consulte os comentários ou &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some controls might have inherent class handling for mouse button events.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Alguns controles podem ter inerente à classe de tratamento de eventos do botão do mouse.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>The left mouse button down event is the most likely event to have class handling in a control.</source>
          <target state="translated">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.</source>
          <target state="translated">A classe tratamento geralmente marca subjacente &lt;xref:System.Windows.Input.Mouse&gt;classe de evento como manipulado.&lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</source>
          <target state="translated">Depois que o evento é marcado como tratado, outros manipuladores de instância associados a esse elemento normalmente não são gerados.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</source>
          <target state="translated">Outros classe ou instância manipuladores anexados a elementos na direção bolha na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; event, which is not marked as handled by the controls.</source>
          <target state="translated">Você pode resolver o problema que é descrito na importante anterior e ainda recebe eventos MouseDown para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem classe tratamento usando qualquer uma dessas soluções:-anexar manipuladores para o &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;evento, que não está marcado como manipulados pelos controles.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt;</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</source>
          <target state="translated">Observe que, porque esse é um evento de visualização, a rota iniciado na raiz e túneis para o controle.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</source>
          <target state="translated">-Registrar um manipulador no controle de maneira procedural chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos mesmo se eles ainda estão marcados como manipulados nos dados de evento roteado.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseDownEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnMouseDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer enters the bounds of this element.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse entra nos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>MouseEnter is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">MouseEnter é um que usa o estratégia de roteamento de manipulação de eventos direto.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Os eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">No entanto, elas permitem que outros aspectos do comportamento de eventos roteados, como disparadores em estilos de eventos.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; property value has changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph> on this element.</source>
          <target state="translated">Embora MouseEnter controla quando o ponteiro do mouse entra nos limites de um elemento, esse evento mais literalmente informa que o &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;o valor da propriedade foi alterado de <ph id="ph1">`false`</ph> para <ph id="ph2">`true`</ph> neste elemento.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event for this class, so that MouseEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;anexa para esta classe, para que os eventos MouseEnter faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseEnter event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseEnter são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Controls.Button&gt; (or any &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt; derived class) has native handling for a &lt;xref:System.Windows.UIElement.KeyDown&gt; event when the button has focus, and the pressed key is the space bar.</source>
          <target state="translated">Um &lt;xref:System.Windows.Controls.Button&gt;(ou qualquer &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;classe derivada) tem manipulação nativo para um &lt;xref:System.Windows.UIElement.KeyDown&gt;evento quando o botão tem foco, e a tecla pressionada a barra de espaço&lt;/xref:System.Windows.UIElement.KeyDown&gt; &lt;/xref:System.Windows.Controls.Primitives.ButtonBase&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>The native handling raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</source>
          <target state="translated">Gera o tratamento nativo de &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;eventos com o botão como a origem e também captura o mouse, mesmo que o ponteiro do mouse não aparecer mover.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result of the mouse capture, a MouseEnter event is also raised with the button as the source.</source>
          <target state="translated">Como resultado de captura do mouse, um evento MouseEnter também é gerado com o botão como a origem.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, if an element captures the mouse, then MouseEnter is raised, as well as &lt;xref:System.Windows.UIElement.GotMouseCapture&gt; and possibly other control-specific events.</source>
          <target state="translated">Em geral, se um elemento captura o mouse, MouseEnter é gerado, bem como &lt;xref:System.Windows.UIElement.GotMouseCapture&gt;e possivelmente outros eventos de controle específicos.&lt;/xref:System.Windows.UIElement.GotMouseCapture&gt;</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseEnterEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseEnter%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseEnter%2A&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer leaves the bounds of this element.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse sai dos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>MouseLeave is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">MouseLeave é um que usa o estratégia de roteamento de manipulação de eventos direto.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Os eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">No entanto, elas permitem que outros aspectos do comportamento de eventos roteados, como disparadores em estilos de eventos.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; property value has changed from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph> on this element.</source>
          <target state="translated">Embora MouseLeave controla quando o mouse sai de um elemento, esse evento mais literalmente informa que o &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;o valor da propriedade foi alterado de <ph id="ph1">`true`</ph> para <ph id="ph2">`false`</ph> neste elemento.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event for this class, so that MouseLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;anexa para esta classe, para que MouseLeave faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseLeave event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseLeave são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseLeaveEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseLeave%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseLeave%2A&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota bolha por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar MouseLeftButtonDown tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.</source>
          <target state="translated">Isso inclui possivelmente eventos gerado pelo manipulador de classe, como &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.MouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some control classes might have inherent class handling for mouse button events.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Algumas classes de controle podem ter inerente à classe de tratamento de eventos do botão do mouse.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>The left mouse button down event is the most likely event to have class handling in a control.</source>
          <target state="translated">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.</source>
          <target state="translated">A classe tratamento geralmente marca subjacente &lt;xref:System.Windows.Input.Mouse&gt;classe de evento como manipulado.&lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</source>
          <target state="translated">Depois que o evento é marcado como tratado, outros manipuladores de instância associados a esse elemento normalmente não são gerados.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</source>
          <target state="translated">Outros classe ou instância manipuladores anexados a elementos na direção bolha na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; event, which is not marked as handled by the controls.</source>
          <target state="translated">Você pode resolver o problema que é descrito na importante anterior e ainda recebe eventos MouseLeftButtonDown para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem classe tratamento usando qualquer uma dessas soluções:-anexar manipuladores para o &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;evento, que não está marcado como manipulados pelos controles.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt;</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</source>
          <target state="translated">Observe que, porque esse é um evento de visualização, a rota iniciado na raiz e túneis para o controle.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</source>
          <target state="translated">-Registrar um manipulador no controle de maneira procedural chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos mesmo se eles ainda estão marcados como manipulados nos dados de evento roteado.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota bolha por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar MouseLeftButtonUp tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer moves while over this element.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse se move enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event for this class, so that MouseMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;anexa para esta classe, para que MouseMove faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseMove são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseMoveEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnMouseMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota bolha por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar MouseRightButtonDown tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.</source>
          <target state="translated">Isso inclui possivelmente eventos gerado pelo manipulador de classe, como &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.MouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Right button mouse events frequently have native handling in application scenarios.</source>
          <target state="translated">Eventos do botão direito do mouse frequentemente têm tratamento nativo em cenários de aplicativo.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a right mouse button down might display a context menu.</source>
          <target state="translated">Por exemplo, um botão direito do mouse para baixo pode exibir um menu de contexto.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>ContextMenu Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>visão geral do ContextMenu<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota bolha por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar MouseRightButtonUp tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is released over this element.</source>
          <target state="translated">Ocorre quando qualquer botão do mouse é liberado sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event for this class, so that MouseUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;anexa para esta classe, para que MouseUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseUp são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MouseUp event is often raised together with either &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;, which correspond to a release of one of the two standard mouse buttons.</source>
          <target state="translated">O evento MouseUp geralmente é gerado junto com o &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;ou &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;, que corresponde a uma versão de um dos dois botões de mouse padrão.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;e &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;também são eventos roteados, mas são eventos roteados diretos e o evento específico do botão apropriado é gerado quando o &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;evento atinge esse elemento na rota de evento.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.</source>
          <target state="translated">Consulte os comentários ou &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseUpEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseUp&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnMouseUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the MouseWheel event from a focused or captured element, the mouse pointer might actually be over another element.</source>
          <target state="translated">Captura de foco ou mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber o evento MouseWheel um elemento focalizado ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event for this class, so that MouseWheel is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;anexa para esta classe, para que MouseWheel faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseWheel event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento MouseWheel são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseWheelEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseWheel&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.MouseWheelEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewMouseWheel&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseWheel&gt; &lt;/xref:System.Windows.Input.MouseWheelEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseWheelEvent&gt;</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseWheel%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnMouseWheel%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnMouseWheel%2A&gt;</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseWheel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseWheel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>Attempts to move focus from this element to another element.</source>
          <target state="translated">Tenta mover o foco deste elemento para outro elemento.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</source>
          <target state="translated">A direção para mover o foco é especificada uma direção da orientação, que é interpretada dentro da organização do visual pai para este elemento.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure you check the return value of this method.</source>
          <target state="translated">Certifique-se de que verificar o valor de retorno deste método.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`false`</ph> might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</source>
          <target state="translated">Um valor de retorno <ph id="ph1">`false`</ph> pode ser retornado se o percurso é executado em uma parada de tabulação é definida pela composição de um controle e a solicitação de passagem não solicitou a encapsular.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</source>
          <target state="translated">Uma solicitação de passagem, que contém uma propriedade que indica o modo de percorrer em ordem de tabulação existente ou uma direção para mover visualmente.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested traversal was performed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o percurso solicitado foi executado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>Provides class handling for when an access key that is meaningful for this element is invoked.</source>
          <target state="translated">Fornece a manipulação de classe para quando uma chave de acesso que seja significativa para esse elemento é invocado.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no actual AccessKey event in the &lt;xref:System.Windows.UIElement&gt; class, or elsewhere, which you can raise or attach handlers for.</source>
          <target state="translated">Não há nenhum evento AccessKey real no &lt;xref:System.Windows.UIElement&gt;classe, ou em outro local, que você pode gerar ou anexar manipuladores for&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the event is originated via a dedicated manager class, &lt;xref:System.Windows.Input.AccessKeyManager&gt;, which post-processes all input to search for access keys that are applicable to the entire input model.</source>
          <target state="translated">Em vez disso, o evento foi originado por meio de uma classe de gerente dedicado, &lt;xref:System.Windows.Input.AccessKeyManager&gt;, que processa após todas as entradas para procurar as chaves de acesso que se aplicam a todo o modelo de entrada.&lt;/xref:System.Windows.Input.AccessKeyManager&gt;</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>The event data to the access key event.</source>
          <target state="translated">Os dados de evento para o evento de chave de acesso.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>The event data reports which key was invoked, and indicate whether the <bpt id="p1">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that controls the sending of these events also sent this access key invocation to other elements.</source>
          <target state="translated">Os relatórios de dados de evento qual chave foi invocado e indicar se o <bpt id="p1">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que controla o envio desses eventos enviados também esta chamada de chave de acesso a outros elementos.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>Supports layout behavior when a child element is resized.</source>
          <target state="translated">Oferece suporte ao comportamento de layout quando um elemento filho é redimensionado.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically not called by your application code.</source>
          <target state="translated">Normalmente, este método não é chamado pelo código do aplicativo.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</source>
          <target state="translated">Ele é exposto para que esse elemento derivado classes podem tornar mais verifica no seu próprio estado layout possivelmente inválida.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</source>
          <target state="translated">Classes também poderá tentar otimizações para minimizar o tempo de processamento de uma passagem de layout com base nas alterações de tamanho para elementos filho.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example derived element class that implements OnChildDesiredSizeChanged is the &lt;xref:System.Windows.Controls.Grid&gt; control.</source>
          <target state="translated">Um elemento derivado do exemplo de classe que implementa OnChildDesiredSizeChanged é o &lt;xref:System.Windows.Controls.Grid&gt;controle.&lt;/xref:System.Windows.Controls.Grid&gt;</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The child element that is being resized.</source>
          <target state="translated">O elemento filho que está sendo redimensionado.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>Returns class-specific <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementations for the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure.</source>
          <target state="translated">Retorna a classe específica <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementações para o <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infraestrutura.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>The type-specific <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">O tipo específico <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event by using the event data provided.</source>
          <target state="translated">Gera o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados usando os dados de evento fornecidos.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém dados do evento.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve">
          <source>This event data must contain the identifier for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Esses dados de evento devem conter o identificador para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is captured to this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnGotTouchCapture method has no default implementation.</source>
          <target state="translated">O método OnGotTouchCapture não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnGotTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement.GotTouchCapture&gt; event.</source>
          <target state="translated">Substituir OnGotTouchCapture em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.GotTouchCapture&gt;evento.&lt;/xref:System.Windows.UIElement.GotTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnGotTouchCapture da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; dependency property changes.</source>
          <target state="translated">Esse método virtual é gerado quando o valor de &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;alterações de propriedade de dependência.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the  &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; event is not a routed event.</source>
          <target state="translated">Observe que o &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;não é um evento roteado.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>Invoked just before the <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised by this element.</source>
          <target state="translated">Chamado antes de <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é gerado por este elemento.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; dependency property changes .</source>
          <target state="translated">Esse método virtual é gerado quando o valor de &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;alterações de propriedade de dependência.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event is not a routed event.</source>
          <target state="translated">Observe que o &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;não é um evento roteado.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCapturedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCapturedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; dependency property changes its value.</source>
          <target state="translated">Esse método virtual é gerado quando o valor da &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;seu valor de propriedade de dependência é alterado.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Observe que o evento &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;não é um evento roteado. Portanto, ele não é possível marcar como manipulado no manipulador de classe.&lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseDirectlyOverChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseDirectlyOverChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt; dependency property changes its value.</source>
          <target state="translated">Esse método virtual é gerado quando o valor da &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt;seu valor de propriedade de dependência é alterado.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; event is not a routed event.</source>
          <target state="translated">Observe que o &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;não é um evento roteado.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCapturedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCapturedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; dependency property changes its value.</source>
          <target state="translated">Esse método virtual é gerado quando o valor da &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;seu valor de propriedade de dependência é alterado.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusCapturedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsStylusCapturedChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsStylusCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Observe que o evento não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCaptureWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCaptureWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt; dependency property changes its value.</source>
          <target state="translated">Esse método virtual é gerado quando o valor da &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt;seu valor de propriedade de dependência é alterado.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Observe que o evento não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusDirectlyOverChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusDirectlyOverChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> neste elemento é gerado.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt; dependency property changes its value.</source>
          <target state="translated">Esse método virtual é gerado quando o valor da &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt;seu valor de propriedade de dependência é alterado.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">O método virtual é gerado pela primeira vez e pode manipular os dados de evento conforme necessário.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt;é gerado com essa mesma instância de dados de evento.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Observe que o evento não é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore you cannot mark it as handled in the class handler.</source>
          <target state="translated">Portanto, você não pode marcá-lo tratados no manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event by using the event data that is provided.</source>
          <target state="translated">Gera o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados usando os dados de evento que são fornecidos.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém dados do evento.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve">
          <source>This event data must contain the identifier for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Esses dados de evento devem conter o identificador para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém dados do evento.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém dados do evento.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém dados do evento.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when this element loses a touch capture.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando este elemento perde a captura de toque.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnLostTouchCapture method has no default implementation.</source>
          <target state="translated">O método OnLostTouchCapture não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnLostTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement.LostTouchCapture&gt; event.</source>
          <target state="translated">Substituir OnLostTouchCapture em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.LostTouchCapture&gt;evento.&lt;/xref:System.Windows.UIElement.LostTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnLostTouchCapture da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Chamado quando o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationBoundaryFeedback method has no default implementation.</source>
          <target state="translated">O método OnManipulationBoundaryFeedback não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationBoundaryFeedback in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; event.</source>
          <target state="translated">Substituir OnManipulationBoundaryFeedback em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationBoundaryFeedback method of the base class so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método OnManipulationBoundaryFeedback da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Os dados para o evento.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Chamado quando o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationCompleted method has no default implementation.</source>
          <target state="translated">O método OnManipulationCompleted não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationCompleted in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt; event.</source>
          <target state="translated">Substituir OnManipulationCompleted em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationCompleted&gt;</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationCompleted method of the base class so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método OnManipulationCompleted da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Os dados para o evento.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Chamado quando o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationDelta method has no default implementation.</source>
          <target state="translated">O método OnManipulationDelta não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationDelta in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationDelta&gt; event.</source>
          <target state="translated">Substituir OnManipulationDelta em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationDelta&gt;</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationDelta method of the base class so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método OnManipulationDelta da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Os dados para o evento.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Chamado quando o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationInertiaStarting method has no default implementation.</source>
          <target state="translated">O método OnManipulationInertiaStarting não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationInertiaStarting in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt; event.</source>
          <target state="translated">Substituir OnManipulationInertiaStarting em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationInertiaStarting method of the base class so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método OnManipulationInertiaStarting da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Os dados para o evento.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Chamado quando o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationStarted method has no default implementation.</source>
          <target state="translated">O método OnManipulationStarted não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationStarted in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationStarted&gt; event.</source>
          <target state="translated">Substituir OnManipulationStarted em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationStarted&gt;</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationStarted method of the base class so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método OnManipulationStarted da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Os dados para o evento.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the manipulation processor is first created.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando o processador de manipulação primeiro é criado.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationStarting method has no default implementation.</source>
          <target state="translated">O método OnManipulationStarting não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationStarting in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt; event.</source>
          <target state="translated">Substituir OnManipulationStarting em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;evento.&lt;/xref:System.Windows.UIElement.ManipulationStarting&gt;</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnManipulationStarting method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnManipulationStarting da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.ManipulationStartingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.ManipulationStartingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve">
          <source>This event data reports details about the mouse button that was pressed and the handled state.</source>
          <target state="translated">Esses dados de evento relata detalhes sobre o botão do mouse foi pressionado e o estado manipulado.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anexado é gerado neste elemento.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante de <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event, with a direct routing strategy.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Marcar o evento como tratado ainda é útil para que os manipuladores de instância típica (aquelas que não especificam <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anexado é gerado neste elemento.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante de <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event, with a direct routing strategy.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Marcar o evento como tratado ainda é útil para que os manipuladores de instância típica (aquelas que não especificam <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event is raised on this element.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é roteado gerado neste elemento.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;evento parece viajam bolha, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;é o evento subjacente que é roteada de bolha e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseLeftButtonDown.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnMouseLeftButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Se você optar por chamar a implementação base depende de seu cenário.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseLeftButtonDown.</source>
          <target state="translated">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes ancestral que também pretende invocar OnMouseLeftButtonDown.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">Por exemplo, você pode derivar de &lt;xref:System.Windows.Controls.Button&gt;e substituir OnMouseLeftButtonDown em sua classe derivada sem chamar a implementação base; no entanto, isso pode substituir desabilita o &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;evento.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was pressed.</source>
          <target state="translated">Os dados de evento informa que o botão esquerdo do mouse foi pressionado.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;evento parece viajam bolha, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;é o evento subjacente que é roteada de bolha e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseLeftButtonUp.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnMouseLeftButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was released.</source>
          <target state="translated">Os dados de evento informa que o botão esquerdo foi liberado.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;evento parece viajam bolha, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;é o evento subjacente que é roteada de bolha e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseRightButtonDown.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnMouseRightButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Se você optar por chamar a implementação base depende de seu cenário.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseRightButtonDown.</source>
          <target state="translated">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes ancestral que também pretende invocar OnMouseRightButtonDown.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.</source>
          <target state="translated">Por exemplo, você pode derivar de &lt;xref:System.Windows.Controls.Control&gt;e substituir OnMouseRightButtonDown em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto do controle, que fazem parte do &lt;xref:System.Windows.Controls.Control&gt;comportamento padrão.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was pressed.</source>
          <target state="translated">Os dados de evento informa que o botão direito do mouse foi pressionado.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;evento parece viajam bolha, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;é o evento subjacente que é roteada de bolha e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseRightButtonUp.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnMouseRightButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was released.</source>
          <target state="translated">Os dados de evento informa que o botão direito foi liberado.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>The event data reports that the mouse button was released.</source>
          <target state="translated">Os dados de evento informa que o botão do mouse foi liberado.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anexado evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve">
          <source>The event data reports that one or more mouse buttons were pressed.</source>
          <target state="translated">Os dados de evento informa que um ou mais botões de mouse foram pressionados.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;evento parece uma rota de túnel de viagem, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;é o evento subjacente que é roteado de túnel e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseLeftButtonDown.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnPreviewMouseLeftButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Se você optar por chamar a implementação base depende de seu cenário.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseLeftButtonDown.</source>
          <target state="translated">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes ancestral que também pretende invocar OnPreviewMouseLeftButtonDown.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">Por exemplo, você pode derivar de &lt;xref:System.Windows.Controls.Button&gt;e substituir OnPreviewMouseLeftButtonDown em sua classe derivada sem chamar a implementação base; no entanto, isso pode substituir desabilita o &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;evento.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was pressed.</source>
          <target state="translated">Os dados de evento informa que o botão esquerdo do mouse foi pressionado.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;evento parece uma rota de túnel de viagem, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;é o evento subjacente que é roteado de túnel e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseLeftButtonUp.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnPreviewMouseLeftButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was released.</source>
          <target state="translated">Os dados de evento informa que o botão esquerdo foi liberado.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;evento parece uma rota de túnel de viagem, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;é o evento subjacente que é roteado de túnel e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseRightButtonDown.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnPreviewMouseRightButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Se você optar por chamar a implementação base depende de seu cenário.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseRightButtonDown.</source>
          <target state="translated">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes ancestral que também pretende invocar OnPreviewMouseRightButtonDown.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.</source>
          <target state="translated">Por exemplo, você pode derivar de &lt;xref:System.Windows.Controls.Control&gt;e substituir OnPreviewMouseRightButtonDown em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto do controle, que fazem parte do &lt;xref:System.Windows.Controls.Control&gt;comportamento padrão.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was pressed.</source>
          <target state="translated">Os dados de evento informa que o botão direito do mouse foi pressionado.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento roteado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;evento parece uma rota de túnel de viagem, mas realmente passa de uma maneira indireta.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;é o evento subjacente que é roteado de túnel e cada &lt;xref:System.Windows.UIElement&gt;ao longo do evento rota usa idênticos tratamento para acionar o evento roteado direto &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Embora você pode marcar a &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;evento como manipulado para fins deste elemento, o estado manipulado não perpetuar a outros elementos na rota de evento.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">A implementação padrão de mouse geral manipulação de eventos no &lt;xref:System.Windows.UIElement&gt;escuta &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;e o converte em um evento local apropriado.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Se você deseja substituir essa lógica, você deve criar uma classe derivada.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">No construtor estático da classe derivada, registra um manipulador de classe alternativo para &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseRightButtonUp.</source>
          <target state="translated">Você não pode alterar o comportamento de manipulação de mouse &lt;xref:System.Windows.UIElement&gt;substituindo OnPreviewMouseRightButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was released.</source>
          <target state="translated">Os dados de evento informa que o botão direito foi liberado.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve">
          <source>The event data reports that one or more mouse buttons were released.</source>
          <target state="translated">Os dados de evento informa que um ou mais botões foram liberados.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch presses this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque pressiona esse elemento.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchDown method has no default implementation.</source>
          <target state="translated">O método OnPreviewTouchDown não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; event.</source>
          <target state="translated">Substituir OnPreviewTouchDown em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;evento.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnPreviewTouchDown da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque se move enquanto está dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchMove method has no default implementation.</source>
          <target state="translated">O método OnPreviewTouchMove não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt; event.</source>
          <target state="translated">Substituir OnPreviewTouchMove em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;evento.&lt;/xref:System.Windows.UIElement.PreviewTouchMove&gt;</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnPreviewTouchMove da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque seja liberado dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchUp method has no default implementation.</source>
          <target state="translated">O método OnPreviewTouchUp não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt; event.</source>
          <target state="translated">Substituir OnPreviewTouchUp em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;evento.&lt;/xref:System.Windows.UIElement.PreviewTouchUp&gt;</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnPreviewTouchUp da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.QueryCursorEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.QueryCursorEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, participates in rendering operations that are directed by the layout system.</source>
          <target state="translated">Quando substituído em uma classe derivada, participa em operações de processamento que são direcionadas pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve">
          <source>The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</source>
          <target state="translated">As instruções de processamento para esse elemento não são usadas diretamente quando esse método é chamado e em vez disso, são preservados para serem usadas posteriormente assíncrona, layout e desenho.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation in the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">Este método não tem nenhuma implementação padrão em que a &lt;xref:System.Windows.UIElement&gt;classe.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve">
          <source>The drawing instructions for a specific element.</source>
          <target state="translated">As instruções de desenho de um elemento específico.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>This context is provided to the layout system.</source>
          <target state="translated">Neste contexto é fornecido para o sistema de layout.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, participates in rendering operations that are directed by the layout system.</source>
          <target state="translated">Quando substituído em uma classe derivada, participa em operações de processamento que são direcionadas pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve">
          <source>This method is invoked after layout update, and before rendering, if the element's &lt;xref:System.Windows.UIElement.RenderSize*&gt; has changed as a result of layout update.</source>
          <target state="translated">Esse método é chamado após a atualização de layout e antes do processamento, se o elemento &lt;xref:System.Windows.UIElement.RenderSize*&gt;foi alterado como resultado da atualização do layout.&lt;/xref:System.Windows.UIElement.RenderSize*&gt;</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical WPF framework-level element uses the override implementation from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">Um elemento de nível de framework WPF típico usa a implementação de substituição de &lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation invalidates the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; properties and handles the basics of remaking the layout.</source>
          <target state="translated">O &lt;xref:System.Windows.FrameworkElement&gt;implementação invalida o &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;e &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;Propriedades e manipula os fundamentos de refazendo o layout.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overriding OnRenderSizeChanged at the &lt;xref:System.Windows.UIElement&gt; level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</source>
          <target state="translated">Substituindo OnRenderSizeChanged no &lt;xref:System.Windows.UIElement&gt;nível implica que sua implementação de elemento não está usando a implementação de nível de framework do WPF e, portanto, o elemento deve lidar com lógica de layout mais diretamente, normalmente, escrevendo um sistema de layout de substituição.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve">
          <source>The packaged parameters (<bpt id="p1">&lt;xref href="System.Windows.SizeChangedInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), which includes old and new sizes, and which dimension actually changes.</source>
          <target state="translated">Os parâmetros de pacotes (<bpt id="p1">&lt;xref href="System.Windows.SizeChangedInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), que inclui os tamanhos de novos e antigos e que, na verdade, as alterações de dimensão.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised by this element.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anexado é gerado por este elemento.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante ao <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Marcar o evento como tratado ainda é útil para que os manipuladores de instância típica (aquelas que não especificam <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised by this element.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anexado é gerado por este elemento.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Como uma classe intermediária na herança pode implementar esse método, é recomendável que você chamar a implementação base em sua implementação.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Você pode chamar base antes ou depois do tratamento especial, dependendo dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante ao <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Marcar o evento como tratado ainda é útil para que os manipuladores de instância típica (aquelas que não especificam <ph id="ph1">`handledEventsToo`</ph>) seja chamado.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Chamado quando um sem tratamento <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> evento anexado atinge um elemento em sua rota que é derivada dessa classe.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar a manipulação de classe para esse evento.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch presses inside this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque pressiona dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchDown method has no default implementation.</source>
          <target state="translated">O método OnTouchDown não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchDown&gt; event.</source>
          <target state="translated">Substituir OnTouchDown em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.TouchDown&gt;evento.&lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchDown method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnTouchDown da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from outside to inside the bounds of this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque move de fora para dentro dos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT">
          <source>TheOnTouchEnter method has no default implementation.</source>
          <target state="translated">Método TheOnTouchEnter não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchEnter in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchEnter&gt; event.</source>
          <target state="translated">Substituir OnTouchEnter em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.TouchEnter&gt;evento.&lt;/xref:System.Windows.UIElement.TouchEnter&gt;</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnTouchEnter da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from inside to outside the bounds of this <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque move de dentro para fora dos limites deste <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchLeave method has no default implementation.</source>
          <target state="translated">O método OnTouchLeave não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchLeave in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchLeave&gt; event.</source>
          <target state="translated">Substituir OnTouchLeave em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.TouchLeave&gt;evento.&lt;/xref:System.Windows.UIElement.TouchLeave&gt;</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnTouchLeave da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque se move enquanto está dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchMove method has no default implementation.</source>
          <target state="translated">O método OnTouchMove não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchMove&gt; event.</source>
          <target state="translated">Substituir OnTouchMove em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.TouchMove&gt;evento.&lt;/xref:System.Windows.UIElement.TouchMove&gt;</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchMove method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnTouchMove da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.</source>
          <target state="translated">Fornece a manipulação de classe para o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados que ocorre quando um toque seja liberado dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchUp method has no default implementation.</source>
          <target state="translated">O método OnTouchUp não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchUp&gt; event.</source>
          <target state="translated">Substituir OnTouchUp em uma classe derivada para manipular o &lt;xref:System.Windows.UIElement.TouchUp&gt;evento.&lt;/xref:System.Windows.UIElement.TouchUp&gt;</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchUp method so that base classes receive the event.</source>
          <target state="translated">Certifique-se de chamar o método de OnTouchUp da classe base para que as classes base recebem o evento.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve">
          <source>Invoked when the parent element of this <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reports a change to its underlying visual parent.</source>
          <target state="translated">Chamado quando o elemento pai deste <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> relata uma alteração para seu pai visual subjacente.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve">
          <source>The previous parent.</source>
          <target state="translated">O pai anterior.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>This may be provided as <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> did not have a parent element previously.</source>
          <target state="translated">Isso pode ser fornecido como <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> não tem um elemento pai anteriormente.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>Gets or sets the opacity factor applied to the entire <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when it is rendered in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Obtém ou define o fator de opacidade aplicado a todo o <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> quando ele for renderizado no <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT">
          <source>The 1.0 default value is the default provided by the initial metadata of this dependency property on the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">O valor padrão de 1,0 é o padrão fornecido pelos metadados iniciais dessa propriedade de dependência de &lt;xref:System.Windows.UIElement&gt;classe.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</source>
          <target state="translated">Outras classes derivadas potencialmente podem alterar esse valor padrão, substituindo os metadados de dentro de seu construtor de classe.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of Opacity won't be applied to actual layout unless the element is also visible (&lt;xref:System.Windows.UIElement.IsVisible%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">O valor de opacidade não será aplicado ao layout real, a menos que o elemento também é visível (&lt;xref:System.Windows.UIElement.IsVisible%2A&gt; é <ph id="ph1">`true`</ph>).&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT">
          <source>Opacity is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</source>
          <target state="translated">Opacidade é aplicada de elementos pai abaixo da árvore de elemento para elementos filho, mas os efeitos visíveis das configurações de opacidade aninhadas não são indicados no valor da propriedade de elementos filho individuais.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item Opacity property would still be 0.2 when queried.</source>
          <target state="translated">Por exemplo, se uma lista tem uma opacidade de 50% (0,5) e um de seus itens de lista tem seu próprio opacidade definida como 20% (0.2), a opacidade net visível para aquele item de lista será renderizada como se fosse 10% (0,1), mas o valor da propriedade do item da lista propriedade Opacity ainda será 0,2 quando consultado.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</source>
          <target state="translated">Mesmo se a opacidade declarada ou avaliada for 0, um elemento ainda participa de comandos e eventos de entrada e é potencialmente Focusable é.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</source>
          <target state="translated">Esse aspecto pode ser útil, por exemplo, você pode usar um objeto de opacidade de zero (como uma forma) para mascaramento objetos subjacentes com elementos transparentes.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opacity-zero object can then handle all the input event processing for an underlying area.</source>
          <target state="translated">O objeto de opacidade de zero, em seguida, pode controlar todas as entrada processamento de eventos em uma área subjacente.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">`Background`</ph> or <ph id="ph2">`Fill`</ph> of the object or shape should be set to a value, even if it is &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;, otherwise hit testing is not enabled, and no events are received.</source>
          <target state="translated">No entanto, o <ph id="ph1">`Background`</ph> ou <ph id="ph2">`Fill`</ph> do objeto ou da forma deve ser definido como um valor, mesmo se ele for &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;, caso contrário, o teste de clique não está habilitado e nenhum evento é recebido.&lt;/xref:System.Windows.Media.Brushes.Transparent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Opacity"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.OpacityProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Opacity"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.OpacityProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.OpacityProperty&gt;</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve">
          <source>The opacity factor.</source>
          <target state="translated">O fator de opacidade.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve">
          <source>Default opacity is 1.0.</source>
          <target state="translated">Opacidade padrão é 1.0.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve">
          <source>Expected values are between 0.0 and 1.0.</source>
          <target state="translated">Valores esperados estão entre 0,0 e 1,0.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source>Gets or sets an opacity mask, as a <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is applied to any alpha-channel masking for the rendered content of this element.</source>
          <target state="translated">Obtém ou define uma máscara de opacidade como uma <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que é aplicada a qualquer máscara de canal alfa para o conteúdo renderizado deste elemento.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property only uses whatever the alpha channel value is for the supplied &lt;xref:System.Windows.Media.Brush&gt;.</source>
          <target state="translated">Essa propriedade só usa tudo o que é o valor de canal alfa para &lt;xref:System.Windows.Media.Brush&gt;.&lt;/xref:System.Windows.Media.Brush&gt; fornecido</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other channels of the &lt;xref:System.Windows.Media.Brush&gt;'s rendered content (Red, Green, or Blue) are ignored.</source>
          <target state="translated">Os outros canais do &lt;xref:System.Windows.Media.Brush&gt;processada do conteúdo (vermelho, verde e azul) são ignorados.&lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most typical &lt;xref:System.Windows.Media.Brush&gt; for this purpose is an &lt;xref:System.Windows.Media.ImageBrush&gt;, which can be used for a variety of photo masking techniques such as a vignette.</source>
          <target state="translated">A mais comum &lt;xref:System.Windows.Media.Brush&gt;para essa finalidade é um &lt;xref:System.Windows.Media.ImageBrush&gt;, que pode ser usado para uma variedade de foto mascaramento técnicas como um vignette.&lt;/xref:System.Windows.Media.ImageBrush&gt; &lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT">
          <source>But any defined &lt;xref:System.Windows.Media.Brush&gt; (such as &lt;xref:System.Windows.Media.LinearGradientBrush&gt;) can be used.</source>
          <target state="translated">Mas qualquer definido &lt;xref:System.Windows.Media.Brush&gt;(como &lt;xref:System.Windows.Media.LinearGradientBrush&gt;) pode ser usado.&lt;/xref:System.Windows.Media.LinearGradientBrush&gt; &lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, this property value can use an inline syntax that is specific to each implementation of the &lt;xref:System.Windows.Media.Brush&gt; abstract class.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, esse valor de propriedade pode usar uma sintaxe embutida que é específica para cada implementação da &lt;xref:System.Windows.Media.Brush&gt;classe abstrata.&lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Painting with Solid Colors and Gradients Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>pintura com cores sólidas e visão geral de gradientes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_OpacityMask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.OpacityMaskProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_OpacityMask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.OpacityMaskProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.OpacityMaskProperty&gt;</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve">
          <source>The brush to use for opacity masking.</source>
          <target state="translated">O pincel a ser usado para a máscara de opacidade.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.OpacityMask*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.OpacityMask*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.OpacityMask*&gt;</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Opacity*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Opacity*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Opacity*&gt;</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve">
          <source>Gets a value that uniquely identifies this element.</source>
          <target state="translated">Obtém um valor que identifica exclusivamente este elemento.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT">
          <source>PersistId uniquely identifies each element.</source>
          <target state="translated">PersistId identifica exclusivamente cada elemento.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element keeps the same PersistId every time the same <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> is loaded (including binary representations).</source>
          <target state="translated">Mantém um elemento do mesmo PersistId sempre o mesmo <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> é carregado (incluindo representações binárias).</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT">
          <source>This identifier is used for internal loading, parsing and serialization requirements.</source>
          <target state="translated">Esse identificador é usado para obter os requisitos de carregamento, análise e serialização internos.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not intended to be used by your application code.</source>
          <target state="translated">Ele não se destina a ser usado pelo código do aplicativo.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has no relationship to the &lt;xref:System.Object.GetHashCode%2A&gt; result for any given instance.</source>
          <target state="translated">Essa propriedade não tem relação com o &lt;xref:System.Object.GetHashCode%2A&gt;resultado para uma determinada instância.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>The unique identifier for this element.</source>
          <target state="translated">O identificador exclusivo para este elemento.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</source>
          <target state="translated">Quando substituído em uma classe derivada, retorna o elemento que deve receber o foco para uma direção de passagem do foco especificado, sem realmente mover o foco para esse elemento.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method in this class is incomplete, and always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A implementação padrão desse método nessa classe incompleta e sempre retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>The direction of the requested focus traversal.</source>
          <target state="translated">A direção da passagem foco solicitada.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve">
          <source>The element that would have received focus if &lt;xref:System.Windows.UIElement.MoveFocus*&gt; were actually invoked.</source>
          <target state="translated">O elemento que seria recebidos foco se &lt;xref:System.Windows.UIElement.MoveFocus*&gt;realmente foram chamados.&lt;/xref:System.Windows.UIElement.MoveFocus*&gt;</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como o destino de arrastar.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event for this class, so that PreviewDragEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;anexa para esta classe, para que PreviewDragEnter faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewDragEnter são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragEnter&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.DragEnter&gt;.&lt;/xref:System.Windows.UIElement.DragEnter&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt;</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag origin.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como origem de arrastar.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event for this class, so that PreviewDragLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;anexa para esta classe, para que PreviewDragLeave faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewDragLeave são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragLeave&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.DragLeave&gt;.&lt;/xref:System.Windows.UIElement.DragLeave&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt;</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the potential drop target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com esse elemento como o destino de soltar potencial.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event for this class, so that PreviewDragOver is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;anexa para esta classe, para que PreviewDragOver faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewDragOver são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragOverEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragOver&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewDragOverEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.DragOver&gt;.&lt;/xref:System.Windows.UIElement.DragOver&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragOverEvent&gt;</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragOver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drop event with this element as the drop target.</source>
          <target state="translated">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento como o destino de soltar.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event for this class, so that PreviewDrop is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;anexa para esta classe, para que PreviewDrop faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDrop event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewDrop são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDropEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.Drop&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewDropEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.DragEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.Drop&gt;.&lt;/xref:System.Windows.UIElement.Drop&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDropEvent&gt;</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDrop%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewDrop%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewDrop%2A&gt;</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDrop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDrop"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>Occurs when a drag-and-drop operation is started.</source>
          <target state="translated">Ocorre quando uma operação de arrastar e soltar é iniciada.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewGiveFeedback event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">O evento PreviewGiveFeedback permite que a origem de um evento arrastar para modificar a aparência do ponteiro do mouse, para fornecer os comentários visuais do usuário durante uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event for this class, so that PreviewGiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;anexa para esta classe, para que PreviewGiveFeedback faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewGiveFeedback são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.GiveFeedback&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.GiveFeedback&gt;.&lt;/xref:System.Windows.UIElement.GiveFeedback&gt; &lt;/xref:System.Windows.GiveFeedbackEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt;</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGiveFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is focused on this element.</source>
          <target state="translated">Ocorre quando o teclado está focalizado neste elemento.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa o encapsulamento de roteamento, o elemento que tem o foco seja um elemento filho, em vez do elemento onde o manipulador de eventos, na verdade, está conectado.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento que tem o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;anexa para esta classe, para que PreviewGotKeyboardFocus faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewGotKeyboardFocus são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.GotKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGotKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve">
          <source>Occurs when a key is pressed while focus is on this element.</source>
          <target state="translated">Ocorre quando uma tecla é pressionada enquanto o foco está neste elemento.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Tratamento de chaves interage com outros recursos de plataforma como composição ordenar e texto.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.KeyDown&gt; event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.KeyDown&gt;é um evento de entrada de texto de nível inferior pode não funcionar como esperado em determinados controles.&lt;/xref:System.Windows.UIElement.KeyDown&gt;</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Isso ocorre porque alguns controles tem composição de controle ou de tratamento de classe que fornece uma versão de nível mais alto de texto manipulação de entrada e eventos relacionados.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;anexa para esta classe, para que PreviewKeyDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewKeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewKeyDown são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.KeyDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.KeyDown&gt;.&lt;/xref:System.Windows.UIElement.KeyDown&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve">
          <source>Occurs when a key is released while focus is on this element.</source>
          <target state="translated">Ocorre quando uma tecla é liberada enquanto o foco está neste elemento.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Tratamento de chaves interage com outros recursos de plataforma como composição ordenar e texto.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.KeyUp&gt; event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">O &lt;xref:System.Windows.UIElement.KeyUp&gt;é um evento de entrada de texto de nível inferior pode não funcionar como esperado em determinados controles.&lt;/xref:System.Windows.UIElement.KeyUp&gt;</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Isso ocorre porque alguns controles tem composição de controle ou de tratamento de classe que fornece uma versão de nível mais alto de texto manipulação de entrada e eventos relacionados.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, check the documentation for individual controls.</source>
          <target state="translated">Para obter detalhes, consulte a documentação para os controles individuais.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;anexa para esta classe, para que PreviewKeyUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewKeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewKeyUp são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.KeyUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.KeyUp&gt;.&lt;/xref:System.Windows.UIElement.KeyUp&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is no longer focused on this element.</source>
          <target state="translated">Ocorre quando o teclado não está focalizado neste elemento.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Como esse evento usa o encapsulamento de roteamento, o elemento que perdeu o foco pode ser um elemento filho, em vez do elemento em que o manipulador de eventos, na verdade, está anexado.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Verifique o &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;nos dados de evento para determinar o elemento real que perdeu o foco.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;anexa para esta classe, para que PreviewLostKeyboardFocus faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewLostKeyboardFocus são anexados ao subjacente &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.LostKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewLostKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is pressed while the pointer is over this element.</source>
          <target state="translated">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;anexa para esta classe, para que PreviewMouseDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewMouseDown são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewMouseDown event is often raised together with either &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">O evento de PreviewMouseDown geralmente é lançado junto com o &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;ou &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;, que corresponde a um pressionamento de um dos dois botões de mouse padrão.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;e &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;também são eventos roteados, mas são eventos roteados diretos e o evento específico do botão apropriado é gerado quando o &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento atinge esse elemento na rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;.</source>
          <target state="translated">Consulte os comentários ou &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.MouseDown&gt;.&lt;/xref:System.Windows.UIElement.MouseDown&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota de túnel por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar PreviewMouseLeftButtonDown tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.</source>
          <target state="translated">Isso inclui possivelmente eventos gerado pelo manipulador de classe, como &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota de túnel por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar PreviewMouseLeftButtonUp tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer moves while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse se move enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</source>
          <target state="translated">Esse evento ocorre quando o ponteiro do mouse entra pela primeira vez dos limites do elemento, e também quando o ponteiro do mouse se move enquanto ainda resta dentro dos limites do elemento.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;anexa para esta classe, para que PreviewMouseMove faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewMouseMove são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.MouseMove&gt;.&lt;/xref:System.Windows.UIElement.MouseMove&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota de túnel por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar PreviewMouseRightButtonDown tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.</source>
          <target state="translated">Isso inclui possivelmente eventos gerado pelo manipulador de classe, como &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Embora isso parece siga uma rota de túnel por meio de uma árvore de elementos, na verdade é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma base &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento, que é um evento que é processado por cada elemento de uma rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Os dados de evento deste evento expõe os dados do evento de subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Se esse evento é marcado como manipulado na rota de evento, os eventos específicos do botão do mouse ainda são gerados; No entanto, os manipuladores de eventos específicos de botão do mouse devem ser adicionados explicitamente chamando &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Se você marcar PreviewMouseRightButtonUp tratado, são essencialmente marcação &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;tratado para todas as outras ouvintes na rota e em todos os eventos relacionados.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">Pense conceitualmente, esse evento (e outros eventos de botão do mouse em &lt;xref:System.Windows.UIElement&gt;) para ser um mouse "serviço" (com a definição de serviço fornecida pelo &lt;xref:System.Windows.Input.Mouse&gt;classe).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">O evento adiciona a conveniência de não precisar verificar os estados de botão do mouse (esquerda-direita, para cima para baixo) dos eventos de mouse original nos dados do evento.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Para cenários mais avançados, como verificação de estados de botões não padrão, talvez seja necessário usar o <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> de &lt;xref:System.Windows.Input.Mouse&gt;classe em vez daqueles em &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando qualquer botão do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;anexa para esta classe, para que PreviewMouseUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewMouseUp são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewMouseUp event is often raised together with either &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">O evento de PreviewMouseUp geralmente é lançado junto com o &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;ou &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;, que corresponde a um pressionamento de um dos dois botões de mouse padrão.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;e &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;também são eventos roteados, mas são eventos roteados diretos e o evento específico do botão apropriado é gerado quando o &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;evento atinge esse elemento na rota de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.</source>
          <target state="translated">Consulte os comentários ou &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.MouseUp&gt;.&lt;/xref:System.Windows.UIElement.MouseUp&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve">
          <source>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</source>
          <target state="translated">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</source>
          <target state="translated">Captura de foco ou mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber esse evento de um elemento focalizado ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt; is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;evento para esta classe anexado para que &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos que estão anexados ao &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;evento associado subjacente &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt;</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseWheel&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.MouseWheel&gt;.&lt;/xref:System.Windows.UIElement.MouseWheel&gt; &lt;/xref:System.Windows.Input.MouseWheelEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt;</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseWheel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve">
          <source>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">Ocorre quando há uma alteração no estado de botão do teclado ou mouse durante uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewQueryContinueDrag event enables the drag source to declare whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">O evento PreviewQueryContinueDrag permite que a fonte declarar se a operação de arrastar e soltar deve ser cancelada.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;anexa para esta classe, para que PreviewQueryContinueDrag faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewQueryContinueDrag são anexados ao subjacente &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.QueryContinueDrag&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.QueryContinueDrag&gt;.&lt;/xref:System.Windows.UIElement.QueryContinueDrag&gt; &lt;/xref:System.Windows.QueryContinueDragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt;</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewQueryContinueDrag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is pressed while the pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusButtonDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusButtonDown são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Touch Input Support in Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> and <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Touch suporte de entrada no Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> e <bpt id="p2">[</bpt>visão geral de entrada<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusButtonDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusButtonDown&gt;.&lt;/xref:System.Windows.UIElement.StylusButtonDown&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is released while the pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusButtonUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusButtonUp são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusButtonUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusButtonUp&gt;.&lt;/xref:System.Windows.UIElement.StylusButtonUp&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus touches the digitizer while it is over this element.</source>
          <target state="translated">Ocorre quando a caneta toca o digitalizador enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusDown são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusDown&gt;.&lt;/xref:System.Windows.UIElement.StylusDown&gt; &lt;/xref:System.Windows.Input.StylusDownEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over an element without actually touching the digitizer.</source>
          <target state="translated">Ocorre quando a caneta se move sobre um elemento sem tocar o digitalizador.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusInAirMove faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusInAirMove são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusInAirMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusInAirMove&gt;.&lt;/xref:System.Windows.UIElement.StylusInAirMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</source>
          <target state="translated">Ocorre quando a caneta está perto o suficiente do digitalizador para ser detectada enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusInRange faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusInRange são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusInRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusInRange&gt;.&lt;/xref:System.Windows.UIElement.StylusInRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves while over the element.</source>
          <target state="translated">Ocorre quando a caneta se move enquanto está sobre o elemento.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve">
          <source>The stylus must move while being detected by the digitizer to raise this event, otherwise, <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is raised instead.</source>
          <target state="translated">A caneta deve mover enquanto está sendo detectada pelo digitalizador para gerar este evento, caso contrário, <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> será gerado.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusMove faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusMove são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusMove&gt;.&lt;/xref:System.Windows.UIElement.StylusMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is too far from the digitizer to be detected.</source>
          <target state="translated">Ocorre quando a caneta está longe demais do digitalizador para ser detectada.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusOutOfRange faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusOutOfRange são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusOutOfRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusOutOfRange&gt;.&lt;/xref:System.Windows.UIElement.StylusOutOfRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusOutOfRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve">
          <source>Occurs when a user performs one of several stylus gestures.</source>
          <target state="translated">Ocorre quando um usuário executa um dos diversos gestos da caneta.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.</source>
          <target state="translated">Para obter informações sobre gestos da caneta, consulte &lt;xref:System.Windows.Input.SystemGesture&gt;.&lt;/xref:System.Windows.Input.SystemGesture&gt;</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;anexa para esta classe, para que PreviewStylusSystemGesture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewStylusSystemGesture são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusSystemGesture&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusSystemGesture&gt;.&lt;/xref:System.Windows.UIElement.StylusSystemGesture&gt; &lt;/xref:System.Windows.Input.StylusSystemGestureEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusSystemGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve">
          <source>Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</source>
          <target state="translated">Ocorre quando o usuário retira a caneta do digitalizador enquanto a caneta está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt; is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;evento para esta classe anexado para que &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos que estão anexados ao &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;evento associado subjacente &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt;</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.StylusUp&gt;.&lt;/xref:System.Windows.UIElement.StylusUp&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets text in a device-independent manner.</source>
          <target state="translated">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewTextInput event allows a component or application to listen for text input in a device-independent manner.</source>
          <target state="translated">O evento PreviewTextInput permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The keyboard is the primary means of PreviewTextInput; but speech, handwriting, and other input devices can also generate PreviewTextInput.</source>
          <target state="translated">O teclado é o principal meio de PreviewTextInput; mas fala, manuscrito e outros dispositivos de entrada também podem gerar PreviewTextInput.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</source>
          <target state="translated">Por causa de combinações de teclas — em teclados padrão ou por meio de editores de método de entrada — vários eventos de chave podem gerar um evento de entrada de texto.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event for this class, so that PreviewTextInput is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;anexa para esta classe, para que PreviewTextInput faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewTextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento PreviewTextInput são anexados ao subjacente &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTextInputEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TextInput&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewTextInputEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -O evento correspondente é &lt;xref:System.Windows.UIElement.TextInput&gt;.&lt;/xref:System.Windows.UIElement.TextInput&gt; &lt;/xref:System.Windows.Input.TextCompositionEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewTextInputEvent&gt;</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTextInput"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve">
          <source>Occurs when a finger touches the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo toca a tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the PreviewTouchDown and &lt;xref:System.Windows.UIElement.TouchDown&gt; events do not occur until a finger touches the screen and moves.</source>
          <target state="translated">Por padrão, o PreviewTouchDown e &lt;xref:System.Windows.UIElement.TouchDown&gt;eventos não ocorrer até que um dedo toca na tela e move.&lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.</source>
          <target state="translated">Pressionando um dedo na tela e mantendo sem movê-lo faz com que pressione e mantenha o comportamento de &lt;xref:System.Windows.Input.Stylus&gt;.&lt;/xref:System.Windows.Input.Stylus&gt;</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The press and hold behavior is equivalent to a mouse right-click.</source>
          <target state="translated">O comportamento pressione e segure a tecla é equivalente a um clique do mouse.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the PreviewTouchDown and &lt;xref:System.Windows.UIElement.TouchDown&gt; events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id="ph1">`false`</ph> for this element.</source>
          <target state="translated">Para fazer com que o PreviewTouchDown e &lt;xref:System.Windows.UIElement.TouchDown&gt;eventos ocorrer como um dedo toca a tela, defina o &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt;anexado a propriedade <ph id="ph1">`false`</ph> para este elemento.&lt;/xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento correspondente é &lt;xref:System.Windows.UIElement.TouchDown&gt;.&lt;/xref:System.Windows.UIElement.TouchDown&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve">
          <source>Occurs when a finger moves on the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo se move na tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento correspondente é &lt;xref:System.Windows.UIElement.TouchMove&gt;.&lt;/xref:System.Windows.UIElement.TouchMove&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve">
          <source>Occurs when a finger is raised off of the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;|   | Estratégia de roteamento | Túnel |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento correspondente é &lt;xref:System.Windows.UIElement.TouchUp&gt;.&lt;/xref:System.Windows.UIElement.TouchUp&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve">
          <source>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">Ocorre quando há uma alteração no estado de botão do teclado ou mouse durante uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">O evento QueryContinueDrag permite que a fonte determinar se a operação de arrastar e soltar deve ser cancelada.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that QueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;anexa para esta classe, para que QueryContinueDrag faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the QueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento QueryContinueDrag são anexados ao subjacente &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.QueryContinueDragEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.QueryContinueDragEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt;.&lt;/xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt; &lt;/xref:System.Windows.QueryContinueDragEventHandler&gt; &lt;/xref:System.Windows.UIElement.QueryContinueDragEvent&gt;</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt;</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryContinueDrag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve">
          <source>Occurs when the cursor is requested to display.</source>
          <target state="translated">Ocorre quando o cursor é solicitado a exibição.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve">
          <source>This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</source>
          <target state="translated">Esse evento é gerado em um elemento toda vez que o ponteiro do mouse se move para um novo local, o que significa que o objeto de cursor talvez precise ser alterada de acordo com sua nova posição.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event for this class, so that QueryCursor is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;anexa para esta classe, para que QueryCursor faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the QueryCursor event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento QueryCursor são anexados ao subjacente &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</source>
          <target state="translated">O cursor está sendo referenciado por este nome de evento não é necessariamente o cursor de texto (também conhecido como o ponto de inserção).</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in <ph id="ph1">[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]</ph> programming.</source>
          <target state="translated">Em vez disso, o cursor neste contexto é o objeto que declara a exibição gráfica na tela relacionada a vários dispositivos possíveis relacionados a entrada ou conceitos em <ph id="ph1">[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]</ph> de programação.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT">
          <source>That object is represented by the &lt;xref:System.Windows.Input.Cursor&gt; class in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Esse objeto é representado pela &lt;xref:System.Windows.Input.Cursor&gt;classe em <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> sistema de entrada permite que você altere esse cursor quando ele representa a posição na tela do ponteiro do mouse.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use predefined values from the &lt;xref:System.Windows.Input.Cursors&gt; enumeration, or you can declare a custom cursor as an image file.</source>
          <target state="translated">Você pode usar valores predefinidos do &lt;xref:System.Windows.Input.Cursors&gt;enumeração, ou você pode declarar um cursor personalizado como um arquivo de imagem.&lt;/xref:System.Windows.Input.Cursors&gt;</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Listening for the QueryCursor event is not an efficient technique for cursor management.</source>
          <target state="translated">Escutar o evento QueryCursor não é uma técnica eficiente para o gerenciamento de cursor.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, each element should define its own cursor behavior with &lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt; and &lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;.</source>
          <target state="translated">Em vez disso, cada elemento deve definir seu próprio comportamento de cursor com &lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt;e &lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;.&lt;/xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement.Cursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only rely on QueryCursor if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</source>
          <target state="translated">Você só deve confiar no QueryCursor se você não estiver usando os elementos de base de nível de framework do WPF, ou em extraordinários circunstâncias em que define o comportamento do cursor em uma base por elemento não atender às suas necessidades.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on implementing cursor behavior in response to QueryCursor, see &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;.</source>
          <target state="translated">Para obter mais informações sobre como implementar o comportamento do cursor em resposta a QueryCursor, consulte &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;.&lt;/xref:System.Windows.Input.QueryCursorEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_QueryCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.QueryCursorEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_QueryCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.QueryCursorEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;|      -Não há nenhum evento de túnel correspondente definido.&lt;/xref:System.Windows.Input.QueryCursorEventHandler&gt; &lt;/xref:System.Windows.UIElement.QueryCursorEvent&gt;</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnQueryCursor%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnQueryCursor%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnQueryCursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryCursor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryCursor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve">
          <source>Raises a specific routed event.</source>
          <target state="translated">Gera um evento roteado específico.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be raised is identified within the <bpt id="p2">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance that is provided (as the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of that event data).</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> a ser gerado é identificado no <bpt id="p2">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instância fornecida (como o &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;propriedade dos dados de evento).&lt;/xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`e`</ph> parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because &lt;xref:System.Windows.RoutedEventArgs&gt; derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</source>
          <target state="translated">O <ph id="ph1">`e`</ph> parâmetro seja tipado como o tipo de base comum para todos os dados de eventos roteados; no entanto, os dados de evento devem ser dadas como o tipo de dados de evento mais específico que está disponível para o evento que está sendo gerado, pois &lt;xref:System.Windows.RoutedEventArgs&gt;classes derivadas contêm as propriedades específicas de dados reais que se destinam-se para o evento específico quando ele é gerado.&lt;/xref:System.Windows.RoutedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.RoutedEventArgs&gt; is not just the state properties for the event; it also identifies which routed event to raise.</source>
          <target state="translated">&lt;xref:System.Windows.RoutedEventArgs&gt;não é apenas as propriedades de estado para o evento; Ele também identifica quais eventos roteados para gerar.&lt;/xref:System.Windows.RoutedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event-raising pattern and the routed event data both differ from <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events and data classes, which typically just contain properties that are related to the event.</source>
          <target state="translated">Esse padrão de gerar o evento e os dados de eventos roteados ambos diferem <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> classes de eventos e dados, que normalmente contêm apenas as propriedades que são relacionadas ao evento.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data and also identifies the event to raise.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento e também identifica o evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve">
          <source>Releases all captured touch devices from this element.</source>
          <target state="translated">Libera todos os dispositivos de toque capturada deste elemento.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve">
          <source>Releases the mouse capture, if this element held the capture.</source>
          <target state="translated">Libera a captura do mouse, se esse elemento mantidos a captura.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element did not hold the capture, calling this method has no effect.</source>
          <target state="translated">Se esse elemento não continha a captura, chamar este método não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider checking the value of &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; before you call this method.</source>
          <target state="translated">Considere a possibilidade de marcar o valor do &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;antes de chamar esse método.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve">
          <source>Releases the stylus device capture, if this element held the capture.</source>
          <target state="translated">Libera a captura da caneta dispositivo, se esse elemento mantidos a captura.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element did not hold the capture, calling this method has no effect.</source>
          <target state="translated">Se esse elemento não continha a captura, chamar este método não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider checking the value of &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; before you call this method.</source>
          <target state="translated">Considere a possibilidade de marcar o valor do &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;antes de chamar esse método.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve">
          <source>Attempts to release the specified touch device from this element.</source>
          <target state="translated">Tentativa de liberar o dispositivo de toque especificado no elemento.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve">
          <source>The device to release.</source>
          <target state="translated">O dispositivo para liberar.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the touch device is released; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o dispositivo de toque é liberado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve">
          <source>Removes the specified routed event handler from this element.</source>
          <target state="translated">Remove o manipulador de eventos roteados especificado no elemento.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common scenario for using this <ph id="ph1">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> is when you implement the <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> level.</source>
          <target state="translated">O cenário mais comum para usar esta <ph id="ph1">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> é quando você implementa o <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> evento "wrapper" que está associado um evento roteado personalizado, especialmente quando você implementar a lógica de "remover" para manipuladores no <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> nível.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example that follows this remarks section illustrates this scenario.</source>
          <target state="translated">O exemplo a seguir esta seção ilustra esse cenário de comentários.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</source>
          <target state="translated">Chamar esse método não tem nenhum efeito se não houvesse nenhum manipulador registrado com os critérios que corresponde aos parâmetros de entrada para a chamada do método.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</source>
          <target state="translated">Se mais de um manipulador é anexado que correspondem aos critérios, somente o primeiro manipulador no evento de armazenamento do manipulador é removido.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is consistent with <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> behavior of the <ph id="ph2">`-=`</ph> operator.</source>
          <target state="translated">Esse comportamento é consistente com <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> comportamento do <ph id="ph2">`-=`</ph> operador.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither <ph id="ph1">`routedEvent`</ph> nor <ph id="ph2">`handler`</ph> may be <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Nem <ph id="ph1">`routedEvent`</ph> nem <ph id="ph2">`handler`</ph> pode ser <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to provide either value as <ph id="ph1">`null`</ph> will raise an exception.</source>
          <target state="translated">Tentativa de fornecer um valor como <ph id="ph1">`null`</ph> gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method ignores the <ph id="ph1">`handledEventsToo`</ph> parameter information, which is provided if the handler was first added with the &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; signature that enables handling of already-handled events.</source>
          <target state="translated">Esse método ignora o <ph id="ph1">`handledEventsToo`</ph> informações de parâmetro, que são fornecidas quando o manipulador foi inicialmente adicionada com o &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;assinatura que permite a manipulação de eventos já tratado.&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either type of handler is removed.</source>
          <target state="translated">O tipo de manipulador é removido.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve">
          <source>The identifier of the routed event for which the handler is attached.</source>
          <target state="translated">O identificador do evento roteado para a qual o manipulador é anexado.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve">
          <source>The specific handler implementation to remove from the event handler collection on this element.</source>
          <target state="translated">A implementação do manipulador específico a ser removido da coleção de manipulador de eventos neste elemento.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve">
          <source>Gets (or sets, but see Remarks) the final render size of this element.</source>
          <target state="translated">Obtém (ou conjuntos, mas consulte comentários) final renderizar o tamanho desse elemento.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Do not attempt to set this property, either in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> or in code, if using the WPF framework-level layout system.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; Não tentar definir essa propriedade em <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> ou no código, se usar o sistema de layout de nível de framework WPF.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nearly all typical application scenarios will use this layout system.</source>
          <target state="translated">Quase todos os cenários de aplicativo típico usará este sistema de layout.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system will not respect sizes set in the RenderSize property directly.</source>
          <target state="translated">O sistema de layout não respeitará tamanhos definido na propriedade RenderSize diretamente.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderSize property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the &lt;xref:System.Windows.Documents.Adorner&gt; class.</source>
          <target state="translated">A propriedade RenderSize é declarada gravável apenas para habilitar determinado ponte casos em que é deliberadamente desviar os protocolos de layout comuns, como suporte para a &lt;xref:System.Windows.Documents.Adorner&gt;classe&lt;/xref:System.Windows.Documents.Adorner&gt; de nível de núcleo do WPF</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used for checking the applicable render size within layout system overrides such as &lt;xref:System.Windows.UIElement.OnRender%2A&gt; or &lt;xref:System.Windows.UIElement.GetLayoutClip%2A&gt;.</source>
          <target state="translated">Essa propriedade pode ser usada para verificar que o tamanho de renderização aplicáveis no sistema de layout substitui como &lt;xref:System.Windows.UIElement.OnRender%2A&gt;ou &lt;xref:System.Windows.UIElement.GetLayoutClip%2A&gt;.&lt;/xref:System.Windows.UIElement.GetLayoutClip%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more common scenario is handling the &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt; event with the class handler override or the &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt; event.</source>
          <target state="translated">Um cenário mais comum é tratar a &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt;Substituir eventos com o manipulador de classe ou o &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;evento.&lt;/xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt; &lt;/xref:System.Windows.FrameworkElement.SizeChanged&gt;</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_RenderSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_RenderSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Uso de texto XAML</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve">
          <source>The rendered size for this element.</source>
          <target state="translated">O tamanho renderizado para este elemento.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve">
          <source>Gets or sets transform information that affects the rendering position of this element.</source>
          <target state="translated">Obtém ou define informações de transformação que afeta a posição de renderização deste elemento.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT">
          <source>A render transform does not regenerate layout size or render size information.</source>
          <target state="translated">Uma transformação de renderização não regenerar o tamanho de layout ou processar informações de tamanho.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Render transforms are typically intended for animating or applying a temporary effect to an element.</source>
          <target state="translated">Renderizar transformações destinam-se normalmente para animação ou aplicação de um efeito temporário a um elemento.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Por exemplo, o elemento pode aplicar zoom quando focalizado ou moused sobre ou talvez tremulação na carga para chamar a atenção para essa parte do <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.RenderTransformProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.RenderTransformProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.RenderTransformProperty&gt;</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve">
          <source>Describes the specifics of the desired render transform.</source>
          <target state="translated">Descreve as especificações de transformação de renderização desejado.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Transform.Identity%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Transform.Identity%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve">
          <source>Gets or sets the center point of any possible render transform declared by &lt;xref:System.Windows.UIElement.RenderTransform*&gt;, relative to the bounds of the element.</source>
          <target state="translated">Obtém ou define o ponto central de qualquer transformação de renderização possível declarada por &lt;xref:System.Windows.UIElement.RenderTransform*&gt;relativo para os limites do elemento.&lt;/xref:System.Windows.UIElement.RenderTransform*&gt;</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT">
          <source>RenderTransformOrigin has a somewhat nonstandard use of the &lt;xref:System.Windows.Point&gt; structure value, in that the &lt;xref:System.Windows.Point&gt; does not represent an absolute location in a coordinate system.</source>
          <target state="translated">RenderTransformOrigin tem um uso um pouco diferente do padrão da &lt;xref:System.Windows.Point&gt;estrutura de valor, em que o &lt;xref:System.Windows.Point&gt;não representa um local absoluto em um sistema de coordenadas.&lt;/xref:System.Windows.Point&gt; &lt;/xref:System.Windows.Point&gt;</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</source>
          <target state="translated">Em vez disso, os valores entre 0 e 1 são interpretados como um fator para o intervalo do elemento atual em cada x, o eixo y.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</source>
          <target state="translated">Por exemplo, (0.5,0.5) fará com que a transformação de renderização centralizado no elemento, ou (1,1) colocaria a transformação de renderização na parte inferior direita canto do elemento.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Double.NaN&gt; is not an accepted value.</source>
          <target state="translated">&lt;xref:System.Double.NaN&gt;não é um valor aceito.&lt;/xref:System.Double.NaN&gt;</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</source>
          <target state="translated">Valores além de 0 e 1 também são aceitos e resultarão em mais efeitos de transformação não convencionais.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if you set RenderTransformOrigin to be (5,5), and then apply a &lt;xref:System.Windows.Media.RotateTransform&gt;, the rotation point will be well outside the bounds of the element itself.</source>
          <target state="translated">Por exemplo, se você definir RenderTransformOrigin (5,5) e, em seguida, aplicar um &lt;xref:System.Windows.Media.RotateTransform&gt;, o ponto de rotação será bem fora dos limites do elemento em si.&lt;/xref:System.Windows.Media.RotateTransform&gt;</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transform will spin your element around in a big circle that originates beyond bottom right.</source>
          <target state="translated">A transformação irá girar o elemento ao redor em um círculo grande que se origina além da parte inferior direita.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</source>
          <target state="translated">A origem pode estar em algum lugar dentro de seu elemento pai e poderia ser possivelmente sem quadro ou exibição.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative point values are similar, these will go beyond the top left bounds.</source>
          <target state="translated">Valores negativos ponto são semelhantes, eles ultrapassará o superior esquerdo dos limites.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</source>
          <target state="translated">Renderizar transformações não afetam o layout e normalmente são usadas para animar ou aplicar um efeito temporário a um elemento.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object RenderTransformOrigin="xOrigin, yOrigin"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_RenderTransformOrigin"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.RenderTransformOrigin&gt;       &lt;Point X=" xOrigin " Y=" yOrigin "/&gt;     &lt;/object.RenderTransformOrigin&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_RenderTransformOrigin"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>xOrigin<ept id="p4">*</ept>    The horizontal origin factor.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Uso do atributo XAML <ph id="ph1">```   &lt;object RenderTransformOrigin="xOrigin, yOrigin"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_RenderTransformOrigin"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # uso do elemento de propriedade XAML <ph id="ph2">```   &lt;object&gt;     &lt;object.RenderTransformOrigin&gt;       &lt;Point X=" xOrigin " Y=" yOrigin "/&gt;     &lt;/object.RenderTransformOrigin&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_RenderTransformOrigin"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML valores <bpt id="p4">*</bpt>xOrigin<ept id="p4">*</ept> o fator de origem horizontal.            </target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically given as a value between 0 and 1.</source>
          <target state="translated">Isso geralmente é fornecido como um valor entre 0 e 1.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>yOrigin<ept id="p1">*</ept>    The vertical origin factor.</source>
          <target state="translated"><bpt id="p1">*</bpt>yOrigin<ept id="p1">*</ept> o fator de origem vertical.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically given as a value between 0 and 1.</source>
          <target state="translated">Isso geralmente é fornecido como um valor entre 0 e 1.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks.</source>
          <target state="translated">Consulte comentários.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve">
          <source>The value that declares the render transform.</source>
          <target state="translated">O valor que declara a transformação de renderização.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve">
          <source>The default value is a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with coordinates (0,0).</source>
          <target state="translated">O valor padrão é um <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> com as coordenadas (0,0).</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.RenderTransformOrigin*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.RenderTransformOrigin*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.RenderTransformOrigin*&gt;</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.RenderTransform*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.RenderTransform*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.RenderTransform*&gt;</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement.CommandBindings*&gt; property on instances of this class.</source>
          <target state="translated">Retorna se processos de serialização devem serializar o conteúdo da &lt;xref:System.Windows.UIElement.CommandBindings*&gt;propriedade em instâncias desta classe.&lt;/xref:System.Windows.UIElement.CommandBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will return <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt; is locally set.</source>
          <target state="translated">Isso retornará <ph id="ph1">`true`</ph> se &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;é definido localmente.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt; property does not have a simple default value.</source>
          <target state="translated">Isso <ph id="ph1">`ShouldSerialize`</ph> método é fornecido, pois o &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;propriedade não tem um valor padrão simples.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">Este método indica se a propriedade foi alterado do valor padrão.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Normalmente você invocar esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporar &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>definindo valores padrão com o ShouldSerialize e os métodos de redefinição<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement.CommandBindings*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o &lt;xref:System.Windows.UIElement.CommandBindings*&gt;o valor da propriedade deve ser serializado; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.CommandBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement.InputBindings*&gt; property on instances of this class.</source>
          <target state="translated">Retorna se processos de serialização devem serializar o conteúdo da &lt;xref:System.Windows.UIElement.InputBindings*&gt;propriedade em instâncias desta classe.&lt;/xref:System.Windows.UIElement.InputBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will return <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; is locally set.</source>
          <target state="translated">Isso retornará <ph id="ph1">`true`</ph> se &lt;xref:System.Windows.UIElement.InputBindings%2A&gt;é definido localmente.&lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; property does not have a simple default value.</source>
          <target state="translated">Isso <ph id="ph1">`ShouldSerialize`</ph> método é fornecido, pois o &lt;xref:System.Windows.UIElement.InputBindings%2A&gt;propriedade não tem um valor padrão simples.&lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">Este método indica se a propriedade foi alterado do valor padrão.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Normalmente você invocar esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporar &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>definindo valores padrão com o ShouldSerialize e os métodos de redefinição<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement.InputBindings*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o &lt;xref:System.Windows.UIElement.InputBindings*&gt;o valor da propriedade deve ser serializado; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.InputBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</source>
          <target state="translated">Obtém ou define um valor que determina se o processamento para esse elemento deve usar configurações de pixel específicas de dispositivo durante o processamento.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this property to <ph id="ph1">`true`</ph> on your root element to enable pixel snap rendering throughout the UI.</source>
          <target state="translated">Você pode definir essa propriedade <ph id="ph1">`true`</ph> em seu elemento raiz para habilitar o pixel snap renderização na interface do usuário.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For devices operating at greater than 96 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>, pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</source>
          <target state="translated">Para dispositivos operando com maior 96 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>, pixel snap renderização pode minimizar artefatos de suavização visual perto linhas sólidas de única unidade.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.FrameworkElement&gt; or any possible derived classes, &lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property to set the &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; metadata property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Quando herdado por &lt;xref:System.Windows.FrameworkElement&gt;ou qualquer possível classes derivadas, &lt;xref:System.Windows.FrameworkElement&gt;substitui os metadados para essa propriedade de dependência definir o &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;propriedade de metadados para <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT">
          <source>What this achieves is that only the outermost element in a subtree needs to specify SnapsToDevicePixels as <ph id="ph1">`true`</ph>, and all child elements of that subtree will then report SnapsToDevicePixels as <ph id="ph2">`true`</ph> and will have the SnapsToDevicePixels visual effect.</source>
          <target state="translated">O que gera é que apenas o elemento externo em uma subárvore precisa especificar SnapsToDevicePixels como <ph id="ph1">`true`</ph>, e, em seguida, todos os elementos filho de que subárvore reporta SnapsToDevicePixels como <ph id="ph2">`true`</ph> e terá o efeito visual SnapsToDevicePixels.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_SnapsToDevicePixels"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_SnapsToDevicePixels"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element should render in accordance to device pixels; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o elemento deve renderizar de acordo com pixels do dispositivo. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve">
          <source>The default as declared on <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão conforme declarado em <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.SnapsToDevicePixels*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.SnapsToDevicePixels*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.SnapsToDevicePixels*&gt;</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is pressed while the pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that StylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;anexa para esta classe, para que StylusButtonDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusButtonDown são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusButtonDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusButtonDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusButtonDownEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusButtonDown&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is released while the pointer is over this element.</source>
          <target state="translated">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that StylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;anexa para esta classe, para que StylusButtonUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusButtonUp são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusButtonUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusButtonUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusButtonUpEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusButtonUp&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus touches the digitizer while the stylus is over this element.</source>
          <target state="translated">Ocorre quando a caneta toca o digitalizador enquanto a caneta está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event for this class, so that StylusDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;anexa para esta classe, para que StylusDown faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusDown são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusDownEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt; &lt;/xref:System.Windows.Input.StylusDownEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus enters the bounds of this element.</source>
          <target state="translated">Ocorre quando a caneta entra nos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT">
          <source>StylusEnter is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">StylusEnter é um que usa o estratégia de roteamento de manipulação de eventos direto.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Os eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">No entanto, elas permitem que outros aspectos do comportamento de eventos roteados, como disparadores em estilos de eventos.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; property value has changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph> on this element.</source>
          <target state="translated">Embora StylusEnter controla quando a caneta entra nos limites de um elemento, esse evento mais literalmente informa que o &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;o valor da propriedade foi alterado de <ph id="ph1">`false`</ph> para <ph id="ph2">`true`</ph> neste elemento.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event for this class, so that StylusEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;anexa para esta classe, para que StylusEnter faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusEnter event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusEnter são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnStylusEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusEnterEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnStylusEnter%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusEnter%2A&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over an element without actually touching the digitizer.</source>
          <target state="translated">Ocorre quando a caneta se move sobre um elemento sem tocar o digitalizador.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that StylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;anexa para esta classe, para que StylusInAirMove é parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusInAirMove são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusInAirMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusInAirMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusInAirMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</source>
          <target state="translated">Ocorre quando a caneta está perto o suficiente do digitalizador para ser detectada enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event for this class, so that StylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;anexa para esta classe, para que StylusInRange faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusInRange são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusInRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusInRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusInRangeEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusInRange&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusInRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusInRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusInRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusInRange%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusInRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus leaves the bounds of the element.</source>
          <target state="translated">Ocorre quando a caneta sai dos limites do elemento.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT">
          <source>StylusLeave is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">StylusLeave é um que usa o estratégia de roteamento de manipulação de eventos direto.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Os eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">No entanto, elas permitem que outros aspectos do comportamento de eventos roteados, como disparadores em estilos de eventos.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; property value has changed from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph> on this element.</source>
          <target state="translated">Embora StylusLeave controla quando a caneta sai dos limites de um elemento, esse evento mais literalmente informa que o &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;o valor da propriedade foi alterado de <ph id="ph1">`true`</ph> para <ph id="ph2">`false`</ph> neste elemento.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event for this class, so that StylusLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;anexa para esta classe, para que StylusLeave faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusLeave event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusLeave são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnStylusLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusLeaveEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Substituir &lt;xref:System.Windows.UIElement.OnStylusLeave%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusLeave%2A&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over this element.</source>
          <target state="translated">Ocorre quando a caneta se move sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve">
          <source>The stylus must move while on the digitizer to raise this event.</source>
          <target state="translated">A caneta deve mover-se enquanto está no digitalizador para gerar este evento.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is raised instead.</source>
          <target state="translated">Caso contrário, <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> será gerado.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event for this class, so that StylusMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;anexa para esta classe, para que StylusMove faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusMove são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusMoveEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is too far from the digitizer to be detected, while over this element.</source>
          <target state="translated">Ocorre quando a caneta está longe demais do digitalizador para ser detectada enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that StylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;anexa para esta classe, para que StylusOutOfRange faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusOutOfRange são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusOutOfRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve">
          <source>Gets a collection of all stylus plug-in (customization) objects associated with this element.</source>
          <target state="translated">Obtém uma coleção de todos os objetos de plug-in (personalização) de caneta associados a esse elemento.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a control that populates this collection is &lt;xref:System.Windows.Controls.InkCanvas&gt;.</source>
          <target state="translated">Um exemplo de um controle que preenche essa coleção é &lt;xref:System.Windows.Controls.InkCanvas&gt;.&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.InkCanvas&gt; adds the &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; as a collection item, which enables the &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; to interact with stylus input and produce the unique rendering in response to stylus driven events.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.InkCanvas&gt;Adiciona o &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;como um item de coleção, que permite que o &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;para interagir com a entrada de caneta e produzir a renderização exclusiva em resposta a caneta controlada por eventos.&lt;/xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; &lt;/xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on creating custom plug-ins that can receive and interpret stylus input, see <bpt id="p1">[</bpt>Intercepting Input from the Stylus<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter informações sobre a criação de plug-ins personalizados que podem receber e interpretar a entrada de caneta, consulte <bpt id="p1">[</bpt>interceptando entrada de caneta<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve">
          <source>The collection of stylus plug-ins, as a specialized collection.</source>
          <target state="translated">A coleção de caneta plug-ins, como uma coleção especializada.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve">
          <source>Occurs when a user performs one of several stylus gestures.</source>
          <target state="translated">Ocorre quando um usuário executa um dos diversos gestos da caneta.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.</source>
          <target state="translated">Para obter mais informações sobre gestos da caneta, consulte &lt;xref:System.Windows.Input.SystemGesture&gt;.&lt;/xref:System.Windows.Input.SystemGesture&gt;</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that StylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;anexa para esta classe, para que StylusSystemGesture faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusSystemGesture são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt; &lt;/xref:System.Windows.Input.StylusSystemGestureEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusSystemGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve">
          <source>Occurs when the user raises the stylus off the digitizer while it is over this element.</source>
          <target state="translated">Ocorre quando o usuário retira a caneta do digitalizador enquanto está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event for this class, so that StylusUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;anexa para esta classe, para que StylusUp faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento StylusUp são anexados ao subjacente &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Entrada de caneta, mouse e toque existem em uma relação específica.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.StylusUpEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewStylusUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusUp&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnStylusUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnStylusUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets text in a device-independent manner.</source>
          <target state="translated">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This event might already be marked as handled by the internal implementations of composited controls.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; Esse evento já pode ser marcado como manipulado pelas implementações internas de controles compostos.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remark below.</source>
          <target state="translated">Consulte a observação abaixo.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TextInput event may already be marked as handled by the internal implementations of composited controls.</source>
          <target state="translated">O evento TextInput já pode ser marcado como manipulado pelas implementações internas de controles compostos.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Windows.Controls.TextBox&gt; is a composited control where the TextInput event is already marked as handled; within its compositing.</source>
          <target state="translated">Por exemplo, um &lt;xref:System.Windows.Controls.TextBox&gt;é um controle composto onde o evento TextInput já está marcado como manipulado; dentro de sua composição.&lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</source>
          <target state="translated">Controles de fazem isso, porque o controle precisa interpretar alguns tipos de entrada, como as teclas de direção, como tendo um significado especial para esse controle.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use &lt;xref:System.Windows.UIElement.PreviewTextInput&gt; as the event where you attach handlers for text input, you may receive better results.</source>
          <target state="translated">Se você usar &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;como o evento em que você anexa manipuladores para entrada de texto, você pode receber resultados melhores.&lt;/xref:System.Windows.UIElement.PreviewTextInput&gt;</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</source>
          <target state="translated">Essa técnica contorna a maioria dos casos onde a composição de controle já marcado esse evento tratados e impede que o manipulador de receber o evento ao longo da rota de evento.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TextInput event allows a component or application to listen for text input in a device-independent manner.</source>
          <target state="translated">O evento TextInput permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The keyboard is the primary means of TextInput, but speech, handwriting, and other input devices can also raise TextInput.</source>
          <target state="translated">O teclado é o principal meio de manuscrito TextInput, mas fala, e outros dispositivos de entrada também podem gerar TextInput.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</source>
          <target state="translated">Por causa de combinações de teclas — em teclados padrão ou por meio de editores de método de entrada — vários eventos de chave podem disparar um evento de entrada de texto.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event for this class, so that TextInput is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Esse evento cria um alias para o &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;anexa para esta classe, para que TextInput faz parte da classe a lista de membros quando &lt;xref:System.Windows.UIElement&gt;é herdada como um elemento base.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the TextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Manipuladores de eventos associados ao evento TextInput são anexados ao subjacente &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;evento anexado e receber a mesma instância de dados de evento.&lt;/xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TextInputEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TextInputEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;.&lt;/xref:System.Windows.UIElement.PreviewTextInput&gt; &lt;/xref:System.Windows.Input.TextCompositionEventHandler&gt; &lt;/xref:System.Windows.UIElement.TextInputEvent&gt;</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTextInput%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnTextInput%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTextInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TextInput"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TextInput"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve">
          <source>Occurs when a finger touches the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo toca a tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; and TouchDown events do not occur until a finger touches the screen and moves.</source>
          <target state="translated">Por padrão, o &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;e TouchDown não ocorrem até que um dedo toca na tela e move.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.</source>
          <target state="translated">Pressionando um dedo na tela e mantendo sem movê-lo faz com que pressione e mantenha o comportamento de &lt;xref:System.Windows.Input.Stylus&gt;.&lt;/xref:System.Windows.Input.Stylus&gt;</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The press and hold behavior is equivalent to a mouse right-click.</source>
          <target state="translated">O comportamento pressione e segure a tecla é equivalente a um clique do mouse.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; and TouchDown events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id="ph1">`false`</ph> for this element.</source>
          <target state="translated">Para fazer com que o &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;e TouchDown eventos como um dedo toca a tela, defina o &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt;anexado a propriedade <ph id="ph1">`false`</ph> para este elemento.&lt;/xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TouchDownEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnTouchDown%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTouchDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve">
          <source>Occurs when a touch moves from outside to inside the bounds of this element.</source>
          <target state="translated">Ocorre quando um toque move de fora para dentro dos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always raised, whether or not the touch device is captured to this element.</source>
          <target state="translated">Esse evento é gerado sempre se ou não o dispositivo de toque é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnTouchEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TouchEnterEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Substituir &lt;xref:System.Windows.UIElement.OnTouchEnter%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTouchEnter%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are captured to this element.</source>
          <target state="translated">Obtém todos os dispositivos de toque que são capturados para esse elemento.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are captured to this element.</source>
          <target state="translated">Uma enumeração de <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos que são capturados para esse elemento.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are captured to this element or any child elements in its visual tree.</source>
          <target state="translated">Obtém todos os dispositivos de toque que são capturados para esse elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are captured to this element or any child elements in its visual tree.</source>
          <target state="translated">Uma enumeração de <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos que são capturados para esse elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are over this element.</source>
          <target state="translated">Obtém todos os dispositivos de toque estão sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are over this element.</source>
          <target state="translated">Uma enumeração de <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos que são sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are over this element or any child elements in its visual tree.</source>
          <target state="translated">Obtém todos os dispositivos de toque estão sobre este elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are over this element or any child elements in its visual tree.</source>
          <target state="translated">Uma enumeração de <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos que são feitas por este elemento ou elementos filho na árvore visual.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve">
          <source>Occurs when a touch moves from inside to outside the bounds of this element.</source>
          <target state="translated">Ocorre quando um toque move de dentro para fora dos limites deste elemento.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always raised, whether or not the touch device is captured to this element.</source>
          <target state="translated">Esse evento é gerado sempre se ou não o dispositivo de toque é capturado para este elemento.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnTouchLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TouchLeaveEvent&gt;|   | Estratégia de roteamento | Direct |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Substituir &lt;xref:System.Windows.UIElement.OnTouchLeave%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTouchLeave%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve">
          <source>Occurs when a finger moves on the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo se move na tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TouchMoveEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchMove&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnTouchMove%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTouchMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve">
          <source>Occurs when a finger is raised off of the screen while the finger is over this element.</source>
          <target state="translated">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Roteadas informações de evento | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.TouchUpEvent&gt;|   | Estratégia de roteamento | Bolha |   | Delegado | &lt;xref:System.EventHandler%601&gt;do tipo &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -O evento de túnel correspondente é &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchUp&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Substituir &lt;xref:System.Windows.UIElement.OnTouchUp%2A&gt;para implementar a manipulação de classe para esse evento em classes derivadas.&lt;/xref:System.Windows.UIElement.OnTouchUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Identifica o <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos roteados.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve">
          <source>Translates a point relative to this element to coordinates that are relative to the specified element.</source>
          <target state="translated">Converte um ponto em relação a esse elemento para coordenadas são em relação ao elemento especificado.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`null`</ph> for <ph id="ph2">`relativeTo`</ph> is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</source>
          <target state="translated">Passando <ph id="ph1">`null`</ph> para <ph id="ph2">`relativeTo`</ph> é permitida e indica que as coordenadas devem ser em relação ao elemento raiz na árvore lógica que esse elemento pertence.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used for translating hit test point values.</source>
          <target state="translated">Esse método é usado para converter valores de ponto de teste de ocorrências.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</source>
          <target state="translated">Chamar esse método é principalmente relevante se você estiver criando um controle e precisa processar a entrada em um nível inferior.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</source>
          <target state="translated">Se você estiver usando os controles existentes, geralmente você pode presumir que controles concluídos relatará resultados de teste de hit traduzidos corretamente.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve">
          <source>The point value, as relative to this element.</source>
          <target state="translated">O ponto de valor, como em relação a esse elemento.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve">
          <source>The element to translate the given point into.</source>
          <target state="translated">O elemento para traduzir o determinado ponto no.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve">
          <source>A point value, now relative to the target element rather than this source element.</source>
          <target state="translated">Um valor de ponto, agora em relação ao elemento de destino em vez desse elemento de origem.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve">
          <source>Gets or sets the unique identifier (for localization) for this element.</source>
          <target state="translated">Obtém ou define o identificador exclusivo (localização) para este elemento.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used by designers to get the <ph id="ph1">`x:Uid`</ph> value (see <bpt id="p1">[</bpt>WPF Globalization and Localization Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information).</source>
          <target state="translated">Usada por designers para obter o <ph id="ph1">`x:Uid`</ph> valor (consulte <bpt id="p1">[</bpt>visão de geral de localização e globalização de WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> para obter mais informações).</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.UidProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.UidProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.UidProperty&gt;</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve">
          <source>A string that is the unique identifier for this element.</source>
          <target state="translated">Uma cadeia de caracteres que é o identificador exclusivo para este elemento.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Uid*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Uid*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Uid*&gt;</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve">
          <source>Ensures that all visual child elements of this element are properly updated for layout.</source>
          <target state="translated">Garante que todos os elementos de visual filho desse elemento são atualizados corretamente para o layout.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call this method, elements with &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;<ph id="ph1">`false`</ph> or &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt;<ph id="ph2">`false`</ph> will call element-specific &lt;xref:System.Windows.UIElement.MeasureCore%2A&gt; and &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; methods, which forces layout update, and all computed sizes will be validated.</source>
          <target state="translated">Quando você chama esse método, os elementos com &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; <ph id="ph1">`false`</ph> ou &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt; <ph id="ph2">`false`</ph> chamará o elemento específico &lt;xref:System.Windows.UIElement.MeasureCore%2A&gt;e &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;atualizar métodos, o que força o layout e todos os tamanhos computados serão validados.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt; &lt;/xref:System.Windows.UIElement.MeasureCore%2A&gt; &lt;/xref:System.Windows.UIElement.IsArrangeValid%2A&gt;&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</source>
          <target state="translated">Chamar esse método não tem nenhum efeito se layout é alterado, ou se o estado de organização nem a medida de um layout é inválido.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if layout is invalid in either respect, the UpdateLayout call will redo the entire layout.</source>
          <target state="translated">No entanto, se o layout é inválido em qualquer relação, a chamada UpdateLayout será Refazer todo o layout.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should avoid calling UpdateLayout after each incremental and minor change in the element tree.</source>
          <target state="translated">Portanto, evite chamar UpdateLayout após cada alteração incremental e pequena na árvore de elementos.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</source>
          <target state="translated">O sistema de layout executará o layout do elemento de uma maneira adiada, usando um algoritmo que equilibra a desempenho e moeda, e uma estratégia de ponderação para adiar alterações raízes até que todos os elementos filho são válidos.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only call UpdateLayout if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</source>
          <target state="translated">Você só deve chamar UpdateLayout se é absolutamente necessário posições e tamanhos atualizados, e somente depois que você tiver certeza de que todas as alterações de propriedades que você controle e que pode afetar o layout são concluídas.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> visibility of this element.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> visibilidade deste elemento.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Esta é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property affects the value of &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;, which in turn may raise the &lt;xref:System.Windows.UIElement.IsVisibleChanged&gt; event.</source>
          <target state="translated">A definição dessa propriedade afeta o valor de &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;, que por sua vez pode gerar o &lt;xref:System.Windows.UIElement.IsVisibleChanged&gt;evento.&lt;/xref:System.Windows.UIElement.IsVisibleChanged&gt; &lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Windows.UIElement.IsVisible%2A&gt; has other factors that influence it, for instance the visibility settings of parents that contain it.</source>
          <target state="translated">No entanto, &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;tem outros fatores que influenciam a ele, por exemplo, as configurações de visibilidade de pais que contêm o proprietário.&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements where Visibility is not &lt;xref:System.Windows.Visibility&gt; do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</source>
          <target state="translated">Elementos onde visibilidade não é &lt;xref:System.Windows.Visibility&gt;não participam de eventos de entrada (ou comandos), não influenciam a medida ou organizar passos de layout, não estão em uma sequência de guia e não serão reportadas no teste de clique.&lt;/xref:System.Windows.Visibility&gt;</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Window&gt; or its derived classes, &lt;xref:System.Windows.Window&gt; redefines the default value of this property to be &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">Quando herdado por &lt;xref:System.Windows.Window&gt;ou suas classes derivadas, &lt;xref:System.Windows.Window&gt;redefine o valor padrão dessa propriedade para ser &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has the effect of not running the Measure pass of layout on an initially created &lt;xref:System.Windows.Window&gt;, and &lt;xref:System.Windows.UIElement.RenderSize%2A&gt; returns (0,0).</source>
          <target state="translated">Isso tem o efeito da execução não a passagem da medida de layout em inicialmente criado &lt;xref:System.Windows.Window&gt;, e &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;retorna (0,0).&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Para obter detalhes, consulte &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Primitives.Popup&gt; also redefines the default value to be &lt;xref:System.Windows.Visibility&gt;, with similar resulting behavior for &lt;xref:System.Windows.Controls.Primitives.Popup&gt; and its derived classes.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;também redefine o valor padrão para ser &lt;xref:System.Windows.Visibility&gt;, com um comportamento semelhante resultante para &lt;xref:System.Windows.Controls.Primitives.Popup&gt;e suas classes derivadas.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Visibility&gt;&lt;/xref:System.Windows.Controls.Primitives.Popup&gt;</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Visibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.VisibilityProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Visibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | &lt;xref:System.Windows.UIElement.VisibilityProperty&gt;|   | Definir propriedades de metadados <ph id="ph1">`true`</ph>| Nenhum |&lt;/xref:System.Windows.UIElement.VisibilityProperty&gt;</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">Um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Visibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O valor padrão é <bpt id="p1">&lt;xref href="System.Windows.Visibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Visibility*&gt; dependency property.</source>
          <target state="translated">Identifica o &lt;xref:System.Windows.UIElement.Visibility*&gt;DependencyProperty.&lt;/xref:System.Windows.UIElement.Visibility*&gt;</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>