<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47b8e4b950129a21b4b1c99257bf151060f70c7b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.DesignerSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">309e45a51d6c5f0fe91d220569a4e8b5b4ddd904</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d10d95625110147c0bf5bb1d1f5dd295770667</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">Fornece uma implementação de <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> interface.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; interface is designed to be a format-independent interface to an object that controls serialization.</source>
          <target state="translated">O &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;interface é projetada para ser uma interface independente de formato para um objeto que controla a serialização.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It essentially provides context and services to serializers, which actually perform the deserialization.</source>
          <target state="translated">Essencialmente, ele fornece contexto e serviços para serializadores, o que realmente executam a desserialização.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; assists in the deserialization process by keeping track of objects.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;auxilia no processo de desserialização, controlando de objetos.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is similar in technique to the &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; interface: designers actually provide the user interface (UI), and &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; provides the glue that allows different designers to work together.</source>
          <target state="translated">Isso é semelhante a técnica para o &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;interface: designers, na verdade, fornecem a interface do usuário (IU), e &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;fornece a liga que permite que diferentes designers trabalhem juntos.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class implements &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;.</source>
          <target state="translated">A classe DesignerSerializationManager implementa &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is designed to provide a generic form of deserialization that is similar to run-time serializers like the &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;.</source>
          <target state="translated">Ele é projetado para fornecer um formulário genérico de desserialização é semelhante a serializadores de tempo de execução como &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;.&lt;/xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class achieves three goals:      -   It is a simple, turnkey object that can be used to deserialize a variety of formats.</source>
          <target state="translated">A classe DesignerSerializationManager atinge três objetivos:-é um objeto simple, completo, que pode ser usado para desserializar uma variedade de formatos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It is generic and not tied to any particular format.</source>
          <target state="translated">-É genérico e não associado a qualquer formato específico.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used equally for CodeDOM deserialization as well as markup deserialization.</source>
          <target state="translated">Ele pode ser usado igualmente para desserialização de CodeDOM, bem como a desserialização de marcação.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</source>
          <target state="translated">-É extensível e oferece suporte à serialização diferente métodos que são usados em copiar/colar e cenários de desfazer/refazer.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Design-time serialization has the following differences from run-time object serialization:      -   The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</source>
          <target state="translated">A serialização de tempo de design tem as seguintes diferenças de serialização do objeto de tempo de execução:-objeto que realiza a serialização é geralmente separado do objeto de tempo de execução, para que a lógica de tempo de design pode ser removida de um componente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</source>
          <target state="translated">-O esquema de serialização pressupõe que o objeto será criado completamente inicializado e, em seguida, modificadas por meio de chamadas de método e propriedade durante a desserialização.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</source>
          <target state="translated">-Propriedades de um objeto que têm valores que nunca foram definidos no objeto (as propriedades contêm os valores padrão) não são serializados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, the deserialization stream may have holes.</source>
          <target state="translated">Por outro lado, o fluxo de desserialização pode ter falhas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</source>
          <target state="translated">-É dada ênfase a qualidade do conteúdo dentro do fluxo de serialização, em vez da serialização completa de um objeto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</source>
          <target state="translated">Isso significa que, se não houver nenhuma forma definida para serializar um objeto, esse objeto pode ser ignorado em vez de gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</source>
          <target state="translated">O mecanismo de serialização pode fornecer a heurística para decidir qual falhas podem ser ignoradas e quais são irrecuperável.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The serialization stream may have more data than is needed for deserialization.</source>
          <target state="translated">-O fluxo de serialização pode ter mais dados do que é necessário para desserialização.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</source>
          <target state="translated">Serialização de código fonte, por exemplo, tem misturado com o código necessário para desserializar um gráfico de objeto de código do usuário.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This user code must be ignored on deserialization and preserved on serialization.</source>
          <target state="translated">Esse código de usuário deve ser ignorado na desserialização e preservado na serialização.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of these differences, a different serialization model applies to design-time serialization.</source>
          <target state="translated">Devido a essas diferenças, um modelo de serialização diferentes se aplica a serialização de tempo de design.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This model utilizes a separate serializer object for each data type being serialized.</source>
          <target state="translated">Esse modelo utiliza um objeto serializador separado para cada tipo de dados que está sendo serializado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each serializer provides its small contribution to the problem as a whole.</source>
          <target state="translated">Cada serializador fornece sua contribuição pequena para o problema como um todo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These serializers are all coordinated through a common serialization manager.</source>
          <target state="translated">Esses serializadores estejam todos coordenados por meio de um Gerenciador de serialização comum.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization manager is responsible for maintaining state between these different serializers.</source>
          <target state="translated">O Gerenciador de serialização é responsável por manter o estado entre esses serializadores diferentes.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, consider the following class:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb)</ept><ept id="p3">]</ept>       An instance of this class would utilize three different serializers: one for <ph id="ph1">`SampleObject`</ph>, one for strings, and another for integers.</source>
          <target state="translated">Por exemplo, considere a seguinte classe: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb)</ept> <ept id="p3">]</ept> uma instância dessa classe utilizaria três serializadores diferentes: um para <ph id="ph1">`SampleObject`</ph>, um para cadeias de caracteres e outro para números inteiros.  </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer for <ph id="ph1">`SampleObject`</ph> is called the root serializer because <ph id="ph2">`SampleObject`</ph> is the root of the serialization graph.</source>
          <target state="translated">O serializador para <ph id="ph1">`SampleObject`</ph> é chamado o serializador raiz porque <ph id="ph2">`SampleObject`</ph> é a raiz do gráfico de serialização.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>More complex object graphs can be created as well.</source>
          <target state="translated">Gráficos de objeto mais complexos podem ser criados também.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider what would happen if <ph id="ph1">`SampleObject`</ph> were changed as follows:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb)</ept><ept id="p3">]</ept>       This allows <ph id="ph2">`SampleObject`</ph> to have a child that is another instance of itself.</source>
          <target state="translated">Por exemplo, considere o que aconteceria se <ph id="ph1">`SampleObject`</ph> foram alterados da seguinte maneira: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb)</ept> <ept id="p3">]</ept> Isso permite <ph id="ph2">`SampleObject`</ph> ter um filho que é outra instância de si mesma.  </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code fills in the object graph:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb)</ept><ept id="p3">]</ept>       When <ph id="ph1">`root`</ph> is serialized, there will be four serializers used: one root serializer, one serializer for the child <ph id="ph2">`SampleObject`</ph>, one serializer for <ph id="ph3">`int`</ph>, and one serializer for <ph id="ph4">`string`</ph>.</source>
          <target state="translated">O código a seguir preenche o gráfico de objeto: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb)</ept> <ept id="p3">]</ept> quando <ph id="ph1">`root`</ph> é serializado, haverá quatro serializadores usados: o serializador de uma raiz, um serializador para o filho <ph id="ph2">`SampleObject`</ph>, um serializador para <ph id="ph3">`int`</ph>e um serializador para <ph id="ph4">`string`</ph>.  </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers are cached based on type, so there is no need to create a serializer for each instance of <ph id="ph1">`SampleObject`</ph>.</source>
          <target state="translated">Serializadores são armazenados em cache com base no tipo, portanto, não há necessidade de criar um serializador para cada instância do <ph id="ph1">`SampleObject`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class is based on the idea of a serialization session.</source>
          <target state="translated">A classe DesignerSerializationManager baseia-se a ideia de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>A session maintains state that can be accessed by the various serializers.</source>
          <target state="translated">Uma sessão mantém o estado que pode ser acessado pelos serializadores vários.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a session is disposed, this state is destroyed.</source>
          <target state="translated">Quando uma sessão é descartada, esse estado é destruído.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</source>
          <target state="translated">Isso ajuda a garantir que serializadores permanecem em grande parte sem monitoração de estado, e ajuda a limpar os serializadores que estão corrompida.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following tables describe how state is managed in and among sessions.</source>
          <target state="translated">As tabelas a seguir descrevem como o estado é gerenciado no e entre as sessões.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Global State    This state is owned by the serialization manager object, but is independent of the current serialization session.</source>
          <target state="translated">Estado global esse estado é de propriedade do objeto do Gerenciador de serialização, mas é independente da sessão atual de serialização.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Object|Usage|   |------------|-----------|   |Serialization providers|Objects can add themselves as custom serialization providers.</source>
          <target state="translated">| Objeto | Uso |   |------------|-----------|   | Provedores de serialização | Objetos podem adicionar a mesmos como provedores de serialização personalizada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because these providers are used to locate serializers, they outlive a serialization session.|      ## Session-Owned State    This state is owned by a session and is destroyed when a session is destroyed.</source>
          <target state="translated">Como esses provedores são usados para localizar os serializadores, eles sobreviver além de uma sessão de serialização. |      # # Sessão propriedade estado esse estado é de propriedade de uma sessão e é destruído quando uma sessão é destruída.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</source>
          <target state="translated">Consequentemente, acessar quaisquer propriedades ou métodos que poderiam manipular esse estado lançará uma exceção se o Gerenciador de serialização não estiver em uma sessão ativa.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Object|Usage|   |------------|-----------|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event|The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event is attached by a serializer to provide additional resolution of names.</source>
          <target state="translated">| Objeto | Uso |   |------------|-----------|   | evento &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;| O &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;evento está conectado por um serializador para fornecer a resolução de nomes adicional.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>All handlers are detached from this event when a session terminates.|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; event|The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; event is raised just before a session is disposed.</source>
          <target state="translated">Todos os manipuladores são desanexados desse evento quando uma sessão é encerrada. |   | evento &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;| O &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;é gerado antes de uma sessão é descartada.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, all handlers are detached from this event.|   |Name table|The serialization manager maintains a table that maps between objects and their names.</source>
          <target state="translated">Em seguida, todos os manipuladores são desanexados desse evento. |   | Tabela de nomes | O Gerenciador de serialização mantém uma tabela que mapeia entre objetos e seus nomes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers may give objects names for easy identification.</source>
          <target state="translated">Serializadores podem resultar em nomes de objetos para facilitar sua identificação.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name table is cleared when the session terminates.|   |Serializer cache|The serialization manager maintains a cache of serializers it has been asked to supply.</source>
          <target state="translated">Esta tabela de nome é apagada quando a sessão é encerrada. |   | Cache do serializador | O Gerenciador de serialização mantém um cache de serializadores que foi solicitado a fornecer.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This cache is cleared when the session terminates.</source>
          <target state="translated">Esse cache é limpo quando a sessão termina.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The public &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt; method can safely be called at any time, but its value is cached only if it is called from within a session.|   |Context stack|The serialization manager maintains an object called the context stack, which you can access with the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; property.</source>
          <target state="translated">O método &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;público pode ser chamado com segurança a qualquer momento, mas seu valor é armazenado em cache somente se ele é chamado de dentro de uma sessão. |   | A pilha de contexto | O Gerenciador de serialização mantém um objeto chamado a pilha de contexto, você pode acessar com o &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;propriedade.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers can use this stack to store additional information that is available to other serializers.</source>
          <target state="translated">Serializadores podem usar esta pilha para armazenar informações adicionais que estão disponíveis para outros serializadores.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</source>
          <target state="translated">Por exemplo, um serializador que é serializar um valor de propriedade pode enviar por push o nome da propriedade na pilha de serialização antes de solicitar o valor para serializar.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This stack is cleared when the session is terminated.|   |Error list|The serialization manager maintains a list of errors that occurred during serialization.</source>
          <target state="translated">Esta pilha é limpo quando a sessão é encerrada. |   | Lista de erros | O Gerenciador de serialização mantém uma lista de erros que ocorreram durante a serialização.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This list, which is accessed through the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; property, is cleared when the session is terminated.</source>
          <target state="translated">Essa lista, que é acessada por meio de &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;propriedade, será apagada quando a sessão é encerrada.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessing the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; property between sessions will result in an exception.|</source>
          <target state="translated">Acessando o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;propriedade entre sessões resultará em uma exceção. |&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; properties to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Esse construtor define o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;e &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;propriedades <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the given service provider.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe com o provedor de serviço em questão.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">Se um serializador de solicitações de serviços que não podem ser atendidos pelo Gerenciador de serialização, a implementação padrão encaminhar essas solicitações para o <ph id="ph1">`provider`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; properties to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Esse construtor define o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;e &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;propriedades <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">An &lt;xref:System.IServiceProvider&gt;.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;provider&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;provider&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets to the container for this serialization manager.</source>
          <target state="translated">Obtém ou define o contêiner para este Gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a container exists, all components that are created by the serialization manager will be added to the container.</source>
          <target state="translated">Se existe um contêiner, todos os componentes que são criados pelo Gerenciador de serialização serão adicionados ao contêiner.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this property will search the service provider for an &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; and use the container provided by the designer host, should one exist.</source>
          <target state="translated">A implementação padrão dessa propriedade pesquisará o provedor de serviços para um &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;e usar o contêiner fornecido pelo host do designer, um existe.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this property will return <ph id="ph1">`null`</ph> and no components will be added to a container.</source>
          <target state="translated">Caso contrário, essa propriedade retornará <ph id="ph1">`null`</ph> e componentes não serão adicionados a um contêiner.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the serialization manager will add components.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> à qual o Gerenciador de serialização adicionará componentes.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">O Gerenciador de serialização tem uma sessão de serialização ativa.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Creates an instance of a type.</source>
          <target state="translated">Cria uma instância de um tipo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by serializers when they attempt to create an instance of a type.</source>
          <target state="translated">Esse método é chamado pelo serializadores quando tentam criar uma instância de um tipo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; properties.</source>
          <target state="translated">A implementação padrão cria uma nova instância do tipo, ou pode retornar uma instância existente, dependendo dos valores da &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;e &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;Propriedades.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt; method uses reflection to create instances and will perform some generic &lt;xref:System.IConvertible&gt; transformations on parameters to find a matching constructor.</source>
          <target state="translated">O &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;método usa reflexão para criar instâncias e executará alguns genérico &lt;xref:System.IConvertible&gt;transformações em parâmetros para localizar um construtor correspondente.&lt;/xref:System.IConvertible&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The type to create an instance of.</source>
          <target state="translated">O tipo para criar uma instância do.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The parameters of the type’s constructor.</source>
          <target state="translated">Os parâmetros do construtor do tipo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty collection to invoke the default constructor.</source>
          <target state="translated">Isso pode ser <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou uma coleção vazia para chamar o construtor padrão.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A name to give the object.</source>
          <target state="translated">Um nome para dar ao objeto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</source>
          <target state="translated">Se <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, o objeto não terá um nome, a menos que o objeto é adicionado a um contêiner e o contêiner fornece o objeto de um nome.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add the object to the container if the object implements <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Para adicionar o objeto para o contêiner, se o objeto implementa <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A new instance of the type specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Uma nova instância do tipo especificado pelo <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> does not have a constructor that takes parameters contained in <ph id="ph2">&lt;code&gt;arguments&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>não tem um construtor que aceite parâmetros na <ph id="ph2">&lt;code&gt;arguments&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Creates a new serialization session.</source>
          <target state="translated">Cria uma nova sessão de serialização.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most data within the serialization manager is transient and only lives for the life of a serialization session.</source>
          <target state="translated">A maioria dos dados dentro do Gerenciador de serialização é transitórios e existe somente durante a vida útil de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a session is disposed, serialization is considered to be complete and this transient state is cleared.</source>
          <target state="translated">Quando uma sessão é descartada, serialização é considerada concluída e estado transiente está desmarcado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows a single instance of a serialization manager to be used to serialize multiple object trees.</source>
          <target state="translated">Isso permite que uma única instância de um Gerenciador de serialização a ser usado para serializar várias árvores de objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</source>
          <target state="translated">Alguns estados, incluindo o provedor de serviços e quaisquer provedores de serialização personalizada que foram adicionados ao Gerenciador de serialização, abrangem as sessões.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; that represents a new serialization session.</source>
          <target state="translated">Um &lt;xref:System.IDisposable&gt;que representa uma nova sessão de serialização.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The serialization manager is already within a session.</source>
          <target state="translated">O Gerenciador de serialização é já dentro de uma sessão.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This version of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> does not support simultaneous sessions.</source>
          <target state="translated">Esta versão do <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> não oferece suporte a sessões simultâneas.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">Obtém a lista de erros que ocorreram durante a serialização ou desserialização.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only read the error list while a serialization session is active.</source>
          <target state="translated">Você somente pode ler a lista de erros durante uma sessão de serialização ativa.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">A lista de erros que ocorreram durante a serialização ou desserialização.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the type corresponding to the specified type name.</source>
          <target state="translated">Obtém o tipo correspondente ao nome do tipo especificado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The name of the type to get.</source>
          <target state="translated">O nome do tipo a ser obtido.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The specified type.</source>
          <target state="translated">O tipo especificado.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the serializer for the given object type.</source>
          <target state="translated">Obtém o serializador para o tipo de objeto em questão.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can request the type of serializer you would like.</source>
          <target state="translated">Você pode solicitar o tipo de serializador desejado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`null`</ph> if there is no serializer of the requested type for the specified object type.</source>
          <target state="translated">Este método retorna <ph id="ph1">`null`</ph> se não houver nenhum serializador do tipo solicitado para o tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the serializer.</source>
          <target state="translated">O tipo de objeto para o qual recuperar o serializador.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The type of serializer to retrieve.</source>
          <target state="translated">O tipo de serializador a recuperar.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The serializer for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectType</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if not found.</source>
          <target state="translated">O serializador para <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectType</ph> <ept id="p1">&lt;/code&gt;</ept>, ou <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, se não encontrado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;serializerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;serializerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the requested service.</source>
          <target state="translated">Obtém o serviço solicitado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetService method provides access to the underlying container or service provider that was set in the constructor.</source>
          <target state="translated">O método GetService fornece acesso ao contêiner subjacente ou provedor de serviço que foi definida no construtor.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
          <target state="translated">O tipo de serviço para recuperar.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The requested service, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service cannot be resolved.</source>
          <target state="translated">O serviço solicitado, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o serviço não pode ser resolvido.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the requested type.</source>
          <target state="translated">Obtém o tipo solicitado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; method will search the service provider for an &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt; and, if available, it will delegate to that service to resolve the type.</source>
          <target state="translated">O &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;método pesquisará o provedor de serviços para um &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;e, se disponível, ele delegará a esse serviço para resolver o tipo.&lt;/xref:System.ComponentModel.Design.ITypeResolutionService&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt; is not available, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; will call the &lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Se um &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;não estiver disponível, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;chamará o &lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt;método.&lt;/xref:System.Object.GetType%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; &lt;/xref:System.ComponentModel.Design.ITypeResolutionService&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The name of the type to retrieve.</source>
          <target state="translated">O nome do tipo para recuperar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The requested type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be resolved.</source>
          <target state="translated">O tipo solicitado, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o tipo não pode ser resolvido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Gera o <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Gerar um evento invoca o manipulador de eventos por meio de um representante.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>NIB: gerar um evento<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnResolveName method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O método OnResolveName também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ResolveNameEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ResolveNameEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém os dados de evento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Gera o <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Gerar um evento invoca o manipulador de eventos por meio de um representante.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>NIB: gerar um evento<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSessionCreated method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O método OnSessionCreated também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">Um &lt;xref:System.EventArgs&gt;que contém os dados de evento.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Gera o <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Gerar um evento invoca o manipulador de eventos por meio de um representante.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>NIB: gerar um evento<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSessionDisposed method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O método OnSessionDisposed também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">Um &lt;xref:System.EventArgs&gt;que contém os dados de evento.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; method should check for the presence of the given name in the container.</source>
          <target state="translated">Obtém ou define um valor que indica se o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;método deve verificar a presença do nome fornecido no contêiner.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreserveNames property determines the behavior of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method.</source>
          <target state="translated">A propriedade PreserveNames determina o comportamento do &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;método.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will pass the given component name.</source>
          <target state="translated">Se <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;passará o nome do componente especificado.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will check for the presence of the given name in the container.</source>
          <target state="translated">Se <ph id="ph1">`false`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;verifica a presença do nome fornecido no contêiner.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name does not exist in the container, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will use the given name.</source>
          <target state="translated">Se o nome não existe no contêiner, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;usará o nome fornecido.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name does exist in the container, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</source>
          <target state="translated">Se o nome existe no contêiner, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;passará um valor nulo como o nome de um componente ao adicioná-lo para o contêiner, assim, dando a ele um novo nome.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</source>
          <target state="translated">Essa segunda é útil para implementar um serializador que duplica sempre objetos, em vez de supondo que esses objetos não existem.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Paste commands often use this type of serializer.</source>
          <target state="translated">Colar comandos geralmente usam esse tipo de serializador.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only change this property when you are not in a serialization session.</source>
          <target state="translated">Você só pode alterar essa propriedade quando você não estiver em uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<bpt id="p2">*</bpt>&gt; will pass the given component name; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<ept id="p2">*</ept>&gt; will check for the presence of the given name in the container.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; passará o nome do componente especificado; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; verifica a presença do nome fornecido no contêiner.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This property was changed from within a serialization session.</source>
          <target state="translated">Essa propriedade foi alterada de dentro de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the object that should be used to provide properties to the serialization manager's &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">Obtém o objeto que deve ser usado para fornecer as propriedades para o Gerenciador de serialização &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;propriedade.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PropertyProvider property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</source>
          <target state="translated">A propriedade PropertyProvider fornece uma maneira para dar o Gerenciador de serialização de um conjunto de propriedades de serialização que serializadores podem usar para configurar seu comportamento.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</source>
          <target state="translated">As propriedades públicas do objeto serão inspecionadas e encapsuladas em novos descritores de propriedade que tem um objeto de destino do Gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The object that should be used to provide properties to the serialization manager's &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">O objeto que deve ser usado para fornecer as propriedades para o Gerenciador de serialização &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;propriedade.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating whether &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; will always create a new instance of a type.</source>
          <target state="translated">Obtém ou define um sinalizador que indica se &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;sempre criará uma nova instância de um tipo.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the RecycleInstances property is <ph id="ph1">`false`</ph>, the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method will always create a new instance of a type.</source>
          <target state="translated">Se a propriedade RecycleInstances <ph id="ph1">`false`</ph>, o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;método sempre criará uma nova instância de um tipo.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If RecycleInstances is <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will first search the name table and container for an object of the same name.</source>
          <target state="translated">Se for RecycleInstances <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;pesquisará primeiro a tabela de nome e o contêiner para um objeto do mesmo nome.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If such an object exists and is of the same type, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will return the existing instance.</source>
          <target state="translated">Se tal objeto exista e seja do mesmo tipo, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;retornará a instância existente.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</source>
          <target state="translated">Essa segunda é útil para implementar um serializador que aplica o estado de serialização para um conjunto de objetos existentes, em vez de criar sempre uma nova árvore.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Undo<ept id="p1">**</ept> command often uses this type of serializer.</source>
          <target state="translated">O <bpt id="p1">**</bpt>desfazer<ept id="p1">**</ept> comando geralmente usa esse tipo de serializador.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case where the RecycleInstances property is <ph id="ph1">`true`</ph>, the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; property will further modify the behavior of &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; depending on the types of the two objects.</source>
          <target state="translated">No caso em que é a propriedade RecycleInstances <ph id="ph1">`true`</ph>, o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;propriedade mais irá modificar o comportamento de &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;dependendo dos tipos de dois objetos.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<bpt id="p2">*</bpt>&gt; will return the existing instance; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<ept id="p2">*</ept>&gt; will create a new instance of a type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; retornará a instância existente; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; criará uma nova instância de um tipo.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">O Gerenciador de serialização tem uma sessão de serialização ativa.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Occurs when a session is created.</source>
          <target state="translated">Ocorre quando uma sessão é criada.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Occurs when a session is disposed.</source>
          <target state="translated">Ocorre quando uma sessão é descartada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">Adiciona um provedor de serialização personalizada para o Gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt; method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</source>
          <target state="translated">Quando o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;método é usado para solicitar um provedor de serialização, o Gerenciador de serialização consulta os provedores de serialização personalizada primeiro antes procurando nos metadados do tipo de serializador adequado.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The serialization provider to add.</source>
          <target state="translated">O provedor de serialização para adicionar.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets the context stack for this serialization session.</source>
          <target state="translated">Obtém a pilha de contexto para esta sessão de serialização.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>A context stack provides a user-defined storage area, implemented as a stack.</source>
          <target state="translated">A pilha de contexto fornece uma área de armazenamento definida pelo usuário, implementada como uma pilha.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</source>
          <target state="translated">Essa área de armazenamento é uma maneira útil para fornecer comunicação entre serializadores, como a serialização é um processo geralmente hierárquico.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that stores data.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que armazena dados.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt; method.</source>
          <target state="translated">Implementa o &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt;método.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The data type to create.</source>
          <target state="translated">O tipo de dados para criar.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">Os argumentos para passar para o construtor para este tipo.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">O nome do objeto.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later through &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">Esse nome pode ser usado para acessar o objeto mais tarde por meio de &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">Se <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for passado, o objeto ainda será criado, mas não pode ser acessado pelo nome.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add this object to the design container.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Para adicionar esse objeto para o contêiner de design.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The object must implement <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this to have any effect.</source>
          <target state="translated">O objeto deve implementar <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para que isso tenha efeito.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The newly created object instance.</source>
          <target state="translated">A instância do objeto recém-criado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Retrieves an instance of a created object of the specified name.</source>
          <target state="translated">Recupera uma instância de um objeto criado do nome especificado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">O nome do objeto a ser recuperada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object by that name can be found.</source>
          <target state="translated">Uma instância do objeto com o nome fornecido, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se nenhum objeto com esse nome pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Retrieves a name for the specified object.</source>
          <target state="translated">Recupera um nome para o objeto especificado.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the IDesignerSerializationManager.GetName method cannot find a corresponding name for the <ph id="ph1">`value`</ph> parameter, it raises the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event before it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se o método IDesignerSerializationManager.GetName não é possível localizar um nome correspondente para o <ph id="ph1">`value`</ph> parâmetro, ele gera o &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;evento antes de retornar <ph id="ph2">`null`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The object for which to retrieve the name.</source>
          <target state="translated">O objeto para o qual recuperar o nome.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The name of the object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is unnamed.</source>
          <target state="translated">O nome do objeto, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o objeto for sem nome.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">Obtém um serializador do tipo solicitado para o tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">O tipo do objeto para obter o serializador para.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">O tipo de serializador para recuperar.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>An instance of the requested serializer, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no appropriate serializer can be located.</source>
          <target state="translated">Uma instância do serializador solicitado, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se nenhum serializador adequado pode ser localizado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Gets a type of the specified name.</source>
          <target state="translated">Obtém um tipo do nome especificado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">O nome totalmente qualificado do tipo de carga.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An instance of the type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be loaded.</source>
          <target state="translated">Uma instância do tipo, ou <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o tipo não pode ser carregado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">Implementa o &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;propriedade.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the properties to be serialized.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que contém as propriedades a serem serializados.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Removes a previously added serialization provider.</source>
          <target state="translated">Remove um provedor de serialização adicionado anteriormente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDesignerSerializationManager.RemoveSerializationProvider method removes a custom serialization provider that was previously added by a call to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt; method.</source>
          <target state="translated">O método IDesignerSerializationManager.RemoveSerializationProvider remove um provedor de serialização personalizada que foi adicionado anteriormente por uma chamada para o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;método.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para remover.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Used to report a recoverable error in serialization.</source>
          <target state="translated">Usado para relatar um erro recuperável na serialização.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers can be written to handle recoverable errors gracefully by calling the IDesignerSerializationManager.ReportError method with the error information.</source>
          <target state="translated">Serializadores podem ser gravados para manipular erros recuperáveis normalmente chamando o método IDesignerSerializationManager.ReportError com as informações de erro.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</source>
          <target state="translated">O Gerenciador de serialização pode oferecer suporte a uma lista de erros de emissão de relatórios depois que ela é concluída, ou pode lançar uma exceção desse método e anular o processo de serialização.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer should continue after calling this function.</source>
          <target state="translated">O serializador deve continuar depois de chamar essa função.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDesignerSerializationManager.ReportError adds the <ph id="ph1">`errorInformation`</ph> parameter to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; collection.</source>
          <target state="translated">IDesignerSerializationManager.ReportError adiciona o <ph id="ph1">`errorInformation`</ph> parâmetro para o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;coleção.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`errorInformation`</ph> is <ph id="ph2">`null`</ph>, no action is taken.</source>
          <target state="translated">Se <ph id="ph1">`errorInformation`</ph> é <ph id="ph2">`null`</ph>, nenhuma ação será tomada.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An object containing the error information, usually of type &lt;xref:System.String&gt; or &lt;xref:System.Exception&gt;.</source>
          <target state="translated">Um objeto que contém as informações de erro, geralmente de tipo &lt;xref:System.String&gt;ou &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Sets the name for the specified object.</source>
          <target state="translated">Define o nome do objeto especificado.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDesignerSerializationManager.SetName method provides a way to set the name of an existing object.</source>
          <target state="translated">O método IDesignerSerializationManager.SetName fornece uma maneira de definir o nome de um objeto existente.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables creation of an instance of the object through a call to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt; method, avoiding the overhead of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method.</source>
          <target state="translated">Isso permite a criação de uma instância do objeto por meio de uma chamada para o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;método, evitando a sobrecarga do &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;método.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The object to set the name.</source>
          <target state="translated">O objeto para definir o nome.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; used as the name of the object.</source>
          <target state="translated">Um &lt;xref:System.String&gt;usado como o nome do objeto.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um ou ambos os parâmetros são <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The object specified by instance already has a name, or <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is already used by another named object.</source>
          <target state="translated">O objeto especificado por instância já tem um nome, ou <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> já está em uso por outro objeto nomeado.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Essa propriedade foi acessada fora de uma sessão de serialização.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the &lt;xref:System.IServiceProvider.GetService*&gt; method.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte o &lt;xref:System.IServiceProvider.GetService*&gt;método.&lt;/xref:System.IServiceProvider.GetService*&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Esse membro é uma implementação de membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt; instance is cast to an &lt;xref:System.IServiceProvider&gt; interface.</source>
          <target state="translated">Ele pode ser usado somente quando o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;instância é convertida em um &lt;xref:System.IServiceProvider&gt;interface.&lt;/xref:System.IServiceProvider&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An object that specifies the type of service object to get.</source>
          <target state="translated">Um objeto que especifica o tipo de objeto de serviço a ser obtido.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A service object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Um objeto de serviço do tipo <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no service object of type <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">- ou - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se não houver nenhum objeto de serviço do tipo <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating whether the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; method will verify that matching names refer to the same type.</source>
          <target state="translated">Obtém ou define um sinalizador que indica se o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;método vai verificar que a correspondência de nomes referem-se para o mesmo tipo.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateRecycledTypes property modifies the behavior of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method when the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; property is <ph id="ph1">`true`</ph>, as detailed in the following table.</source>
          <target state="translated">A propriedade ValidateRecycledTypes modifica o comportamento do &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;método quando o &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;é de propriedade <ph id="ph1">`true`</ph>, conforme detalhado na tabela a seguir.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>|<ph id="ph1">`RecycleInstances`</ph><ph id="ph2">|</ph><ph id="ph3">`ValidateRecycledTypes`</ph>|Behavior of <ph id="ph4">`CreateInstance`</ph>|   |------------------------|-----------------------------|----------------------------------|   |<ph id="ph5">`false`</ph><ph id="ph6">|</ph><ph id="ph7">`true`</ph> or <ph id="ph8">`false`</ph>|Always create a new instance of the specified type|   |<ph id="ph9">`true`</ph><ph id="ph10">|</ph><ph id="ph11">`false`</ph>|If a matching instance is found it is returned, regardless of its type.|   |<ph id="ph12">`true`</ph><ph id="ph13">|</ph><ph id="ph14">`true`</ph>|If a matching instance is found, it is returned only if its type is the same as specified in the method call.|       ValidateRecycledTypes is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</source>
          <target state="translated">| <ph id="ph1">`RecycleInstances`</ph><ph id="ph2">|</ph><ph id="ph3">`ValidateRecycledTypes`</ph>| Comportamento de <ph id="ph4">`CreateInstance`</ph>|   |------------------------|-----------------------------|----------------------------------|   | <ph id="ph5">`false`</ph><ph id="ph6">|</ph><ph id="ph7">`true`</ph> or <ph id="ph8">`false`</ph>| Sempre crie uma nova instância do tipo especificado |   | <ph id="ph9">`true`</ph><ph id="ph10">|</ph><ph id="ph11">`false`</ph>| Se uma instância correspondente for encontrada será retornado, independentemente de seu tipo. |   | <ph id="ph12">`true`</ph><ph id="ph13">|</ph><ph id="ph14">`true`</ph>| Se uma instância correspondente for encontrada, ele é retornado somente se seu tipo for a mesma especificada na chamada do método. |       ValidateRecycledTypes é útil para metamorfose um tipo de objeto para outro se eles têm propriedades semelhantes, mas não compartilham nenhum pai comum ou interface.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; verifies types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it does not.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;verifica tipos; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se não estiver.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">O Gerenciador de serialização tem uma sessão de serialização ativa.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>