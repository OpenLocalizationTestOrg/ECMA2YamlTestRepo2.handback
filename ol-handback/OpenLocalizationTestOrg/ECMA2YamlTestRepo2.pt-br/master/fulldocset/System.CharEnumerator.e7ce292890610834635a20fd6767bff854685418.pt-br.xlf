<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ce0b224927104a1128e11d8115c047dedbac509</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CharEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6496d4cad20c484b5b3dde327b7a84e6f96ee6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd8ffbc3a7ac62cdc2a76dc47127321c76dbd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports iterating over a &lt;xref:System.String&gt; object and reading its individual characters.</source>
          <target state="translated">Oferece suporte à iteração sobre um &lt;xref:System.String&gt;objeto e à leitura de seus caracteres individuais.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator provides read-only access to the characters in a referenced &lt;xref:System.String&gt; object.</source>
          <target state="translated">Um CharEnumerator fornece acesso somente leitura para os caracteres em uma referência &lt;xref:System.String&gt;objeto.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">`foreach`</ph> statement of the Microsoft Visual Basic and C# programming languages, which iterates through the elements of a collection, retrieves a CharEnumerator from a &lt;xref:System.String&gt; object in order to iterate through the characters in that object.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">`foreach`</ph> instrução as linguagens de programação do Microsoft Visual Basic e c#, que itera por meio dos elementos de uma coleção, recupera uma CharEnumerator de um &lt;xref:System.String&gt;objeto para iterar os caracteres nesse objeto.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no public constructor for CharEnumerator.</source>
          <target state="translated">Não há nenhum construtor público para CharEnumerator.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call a &lt;xref:System.String&gt; object's &lt;xref:System.String.GetEnumerator%2A&gt; method to obtain a CharEnumerator that is initialized to reference the string.</source>
          <target state="translated">Em vez disso, chame um &lt;xref:System.String&gt;do objeto &lt;xref:System.String.GetEnumerator%2A&gt;método para obter um CharEnumerator que é inicializado para fazer referência a cadeia de caracteres.&lt;/xref:System.String.GetEnumerator%2A&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator maintains an internal index to the characters in the string the CharEnumerator references.</source>
          <target state="translated">Um CharEnumerator mantém um índice interno para os caracteres na cadeia de referências de CharEnumerator.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of the index is invalid when it references a character position logically before the first character or after the last character in the string, and valid when it references a character within the string.</source>
          <target state="translated">O estado do índice é válidos e inválidos quando ela faz referência a uma posição de caractere logicamente antes do primeiro caractere ou depois do último caractere na cadeia de caracteres quando ela faz referência a um caractere na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is initialized to a position logically before the first character, and is set to a position after the last character when the iteration is complete.</source>
          <target state="translated">O índice é inicializado para uma posição logicamente antes do primeiro caractere e é definido para uma posição após o último caractere quando a iteração é concluída.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if you attempt to access a character while the index is invalid.</source>
          <target state="translated">Uma exceção é gerada se você tentar acessar um caractere enquanto o índice é inválido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method increments the index by one, so the first and subsequent characters are accessed in turn.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator.MoveNext%2A&gt;método incrementa o índice em um, para o primeiro e subsequente caracteres é acessado por sua vez.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Reset%2A&gt; method sets the index to a position logically before the first character.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator.Reset%2A&gt;método define o índice para uma posição logicamente antes do primeiro caractere.&lt;/xref:System.CharEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Current%2A&gt; property retrieves the character currently referenced by index.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator.Current%2A&gt;propriedade recupera o caractere atualmente referenciado por índice.&lt;/xref:System.CharEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Clone%2A&gt; method creates a copy of the CharEnumerator.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator.Clone%2A&gt;método cria uma cópia do CharEnumerator.&lt;/xref:System.CharEnumerator.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Several independent instances of CharEnumerator across one or more threads can have access to a single instance of &lt;xref:System.String&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Várias instâncias independentes do CharEnumerator em um ou mais threads podem ter acesso a uma única instância de &lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is implemented to support the &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Essa classe é implementada para dar suporte a &lt;xref:System.Collections.IEnumerator&gt;interface.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information regarding the use of an enumerator, see the &lt;xref:System.Collections.IEnumerator&gt; topic.</source>
          <target state="translated">Para obter mais informações sobre o uso de um enumerador, consulte o &lt;xref:System.Collections.IEnumerator&gt;tópico.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Cria uma cópia do atual <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is a copy of this instance of &lt;xref:System.CharEnumerator&gt; and its current state.</source>
          <target state="translated">O valor de retorno é uma cópia desta instância do &lt;xref:System.CharEnumerator&gt;e seu estado atual.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for saving your state while iterating through a &lt;xref:System.String&gt; object.</source>
          <target state="translated">Isso é útil para salvar seu estado durante a iteração por meio de um &lt;xref:System.String&gt;objeto.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose your application uses an original instance of &lt;xref:System.CharEnumerator&gt; to iterate through each character in a &lt;xref:System.String&gt;.</source>
          <target state="translated">Por exemplo, suponha que seu aplicativo usa uma instância original de &lt;xref:System.CharEnumerator&gt;percorrer cada caractere em &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When some unique character is encountered, your application pauses processing and invokes the Clone method.</source>
          <target state="translated">Quando algum caractere exclusivo é encontrado, seu aplicativo faz uma pausa o processamento e invoca o método de clonagem.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In effect, this saves the &lt;xref:System.CharEnumerator&gt; object's index in the &lt;xref:System.String&gt;.</source>
          <target state="translated">Na verdade, isso salva o &lt;xref:System.CharEnumerator&gt;índice do objeto em &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application uses the clone to navigate to another part of the <ph id="ph1">`String`</ph> to perform some auxiliary processing.</source>
          <target state="translated">Seu aplicativo usa o clone para navegar para outra parte do <ph id="ph1">`String`</ph> executar algum processamento auxiliar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The side-effect of this navigation is the clone loses track of the position where processing stopped.</source>
          <target state="translated">O efeito colateral dessa navegação é que o clone perde o controle da posição em que o processamento é interrompido.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the auxiliary processing is complete, your application discards the clone and uses the original &lt;xref:System.CharEnumerator&gt; instance to resume working on the &lt;xref:System.String&gt; where the original processing stopped.</source>
          <target state="translated">No entanto, quando o processamento auxiliar estiver concluído, seu aplicativo descarta o clone e usa o original &lt;xref:System.CharEnumerator&gt;instância para continuar a trabalhar no &lt;xref:System.String&gt;onde o processamento original é interrompida.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is implemented to support the &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Esse método é implementado para dar suporte a &lt;xref:System.ICloneable&gt;interface.&lt;/xref:System.ICloneable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um &lt;xref:System.Object&gt;que é uma cópia do atual <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Obtém o caractere atualmente referenciado na cadeia de caracteres enumerada por este <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Current property returns the character that is currently referenced by the index.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator&gt;classe mantém um índice interno para a cadeia de caracteres enumerada, e a propriedade Current retorna o caractere que está sendo referenciado por índice.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be invoked only when the index is valid; otherwise, an exception is thrown.</source>
          <target state="translated">Essa propriedade deve ser invocada somente quando o índice é válido. Caso contrário, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is always invalid for an empty string ("").</source>
          <target state="translated">O índice sempre é inválido para uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is also invalid after the &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; method is called.</source>
          <target state="translated">O índice também é inválido após o &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;ou &lt;xref:System.CharEnumerator.Reset%2A&gt;método é chamado.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>After either of these methods is called, invoke the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method to adjust the index to the first character in the enumerated string.</source>
          <target state="translated">Depois de qualquer um desses métodos é chamado, chamar o &lt;xref:System.CharEnumerator.MoveNext%2A&gt;método para ajustar o índice para o primeiro caractere na cadeia de caracteres enumerada.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is valid whenever the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">O índice é válido quando o &lt;xref:System.CharEnumerator.MoveNext%2A&gt;método retornará <ph id="ph1">`true`</ph>.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the index, and consecutive calls to Current return the same character until &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, or &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; is called.</source>
          <target state="translated">Atual não mover o índice e chamadas consecutivas atual retornam o mesmo caractere até &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, ou &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;é chamado.&lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; &lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">O caractere Unicode atualmente referenciado por este <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The index is invalid; that is, it is before the first or after the last character of the enumerated string.</source>
          <target state="translated">O índice é inválido; ou seja, ele é antes da primeira ou após o último caractere da cadeia de caracteres enumerada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual do <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">Chamar Dispose quando terminar de usar o &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.CharEnumerator&gt; in an unusable state.</source>
          <target state="translated">O método Dispose deixa a &lt;xref:System.CharEnumerator&gt;em um estado inutilizável.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.CharEnumerator&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.CharEnumerator&gt; was occupying.</source>
          <target state="translated">Depois de chamar Dispose, você deve liberar todas as referências para o &lt;xref:System.CharEnumerator&gt;para o coletor de lixo possa recuperar a memória que o &lt;xref:System.CharEnumerator&gt;estava ocupando.&lt;/xref:System.CharEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Sempre chamada Dispose antes de liberar sua última referência a &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.CharEnumerator&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o &lt;xref:System.CharEnumerator&gt;do objeto <ph id="ph1">`Finalize`</ph> método.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Increments the internal index of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the next character of the enumerated string.</source>
          <target state="translated">Incrementa o índice interno do atual <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto para o próximo caractere da cadeia de caracteres enumerada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the MoveNext method increments the index by one.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator&gt;classe mantém um índice interno para a cadeia de caracteres enumerada, e o método MoveNext incrementa o índice em um.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call MoveNext after calling &lt;xref:System.String.GetEnumerator%2A&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; to increment the current character position to the first character in the enumerated string.</source>
          <target state="translated">Chame o MoveNext depois de chamar &lt;xref:System.String.GetEnumerator%2A&gt;ou &lt;xref:System.CharEnumerator.Reset%2A&gt;para incrementar a atual posição do caractere para o primeiro caractere na cadeia de caracteres enumerada.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check that the return value is <ph id="ph1">`true`</ph> to determine that the current character position is valid.</source>
          <target state="translated">Verifique se o valor de retorno é <ph id="ph1">`true`</ph> para determinar se a atual posição do caractere é válida.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the index is already beyond the last character of the enumerated string, the index is not changed and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Se o índice já está além do último caractere da cadeia de caracteres enumerada, o índice não será alterado e <ph id="ph1">`false`</ph> é retornado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that if the enumerated string is empty (""), the state of the &lt;xref:System.CharEnumerator&gt; is always invalid.</source>
          <target state="translated">Observe que, se a cadeia de caracteres enumerada está vazia (""), o estado do &lt;xref:System.CharEnumerator&gt;sempre é inválido.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the internal index for the &lt;xref:System.CharEnumerator&gt; is initially before the first character of the enumerated string and is therefore invalid.</source>
          <target state="translated">Isso ocorre porque o índice interno para o &lt;xref:System.CharEnumerator&gt;é inicialmente antes do primeiro caractere da cadeia de caracteres enumerada e, portanto, é inválido.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext logically sets the index after the last (nonexistent) character of the enumerated string which is also invalid.</source>
          <target state="translated">MoveNext logicamente define o índice após o último caractere (que não existe) da cadeia de caracteres enumerada que também é inválido.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the index is successfully incremented and within the enumerated string; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o índice é incrementado com êxito e dentro de uma cadeia de caracteres enumerada; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes the index to a position logically before the first character of the enumerated string.</source>
          <target state="translated">Inicializa o índice para uma posição logicamente antes do primeiro caractere da cadeia de caracteres enumerada.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Reset method sets the index to the invalid state.</source>
          <target state="translated">O &lt;xref:System.CharEnumerator&gt;classe mantém um índice interno para a cadeia de caracteres enumerada, e o método Reset define o índice para o estado inválido.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Obtém o caractere atualmente referenciado na cadeia de caracteres enumerada por este <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Esse membro é uma implementação de membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.CharEnumerator&gt; instance is cast to an &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Ele pode ser usado somente quando o &lt;xref:System.CharEnumerator&gt;instância é convertida em um &lt;xref:System.Collections.IEnumerator&gt;interface.&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The boxed Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">O caractere Unicode demarcado atualmente referenciado por este <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enumeration has not started.</source>
          <target state="translated">Enumeração não foi iniciada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       Enumeration has ended.</source>
          <target state="translated">- ou - enumeração terminou.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>