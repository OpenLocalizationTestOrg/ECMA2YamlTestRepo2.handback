<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da43b1cd743b18a64a4ade7bbd474cea30fea2f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.NestedContainer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2eccf58dd2e1a892e973be9cfbab052b7bfb23a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20e1ff09577a568da8fae95447e0c184e8ef9546</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base implementation for the <bpt id="p1">&lt;xref href="System.ComponentModel.INestedContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface, which enables containers to have an owning component.</source>
          <target state="translated">Gir base implementering for den <bpt id="p1">&lt;xref href="System.ComponentModel.INestedContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> grensesnittet som aktiverer beholdere har en eier komponent.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The NestedContainer class is a simple implementation of the &lt;xref:System.ComponentModel.INestedContainer&gt; interface, which defines a component that logically contains zero or more other components and is owned by a parent component.</source>
          <target state="translated">Klassen NestedContainer er en enkel implementering av den &lt;xref:System.ComponentModel.INestedContainer&gt;grensesnittet som definerer en komponent som inneholder null eller flere komponenter logisk og eies av en overordnet komponent.&lt;/xref:System.ComponentModel.INestedContainer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of nested containers differs from a standard &lt;xref:System.ComponentModel.Container&gt; in a number of ways, including the following:      -   Site characteristics such as &lt;xref:System.ComponentModel.Component.DesignMode%2A&gt; and &lt;xref:System.ComponentModel.Component.GetService%2A&gt; are routed through the owning component’s site.</source>
          <target state="translated">Virkemåten for nestede beholdere er forskjellig fra en standard &lt;xref:System.ComponentModel.Container&gt;på en rekke måter, inkludert følgende:-område egenskaper som &lt;xref:System.ComponentModel.Component.DesignMode%2A&gt;og &lt;xref:System.ComponentModel.Component.GetService%2A&gt;rutes gjennom eier komponentens området.&lt;/xref:System.ComponentModel.Component.GetService%2A&gt; &lt;/xref:System.ComponentModel.Component.DesignMode%2A&gt; &lt;/xref:System.ComponentModel.Container&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The site’s &lt;xref:System.ComponentModel.ISite.Name%2A&gt; property is a qualified name that includes the owning component’s name followed by a period (.) and the child component’s name.</source>
          <target state="translated">-Området &lt;xref:System.ComponentModel.ISite.Name%2A&gt;egenskapen er et kvalifisert navn som inkluderer eier komponentens navnet etterfulgt av et punktum (.) og underordnede Komponentnavn.&lt;/xref:System.ComponentModel.ISite.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.NestedContainer.GetService%2A&gt; provides support for the &lt;xref:System.ComponentModel.INestedContainer&gt; as a service.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.NestedContainer.GetService%2A&gt;gir støtte for den &lt;xref:System.ComponentModel.INestedContainer&gt;som en tjeneste.&lt;/xref:System.ComponentModel.INestedContainer&gt; &lt;/xref:System.ComponentModel.NestedContainer.GetService%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When the owning component is disposed, the container is disposed as well.</source>
          <target state="translated">-Når eier komponenten er fjernet, er fjernet samt i beholderen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, designers treat nested containers differently.</source>
          <target state="translated">I tillegg behandle utviklere nestede beholdere på en annen måte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A designer host is only interested in one container—the one associated with the host.</source>
          <target state="translated">Spørringsutformer vert bare er interessert i én beholder – det som er forbundet med verten.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, component add and remove events are not raised when a component is added to or removed from a nested container.</source>
          <target state="translated">Derfor komponent legge til og fjerne hendelser, ikke aktiveres når en komponent er lagt til eller fjernes fra en nestet beholder.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because services flow through to the nested container, component change events are raised when a component in a nested container is changed.</source>
          <target state="translated">Imidlertid fordi services flyte gjennom nestede beholderen, komponenten endre hendelser registreres når en komponent i en nestet beholder er endret.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This disparity in event tracking also impacts undo functionality, which is closely tied to serialization.</source>
          <target state="translated">Denne disparity i hendelsessporing påvirker også Angre funksjonalitet, noe som er nært knyttet til serialisering.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The standard undo engine uses &lt;xref:System.ComponentModel.Design.IReferenceService&gt; to track changes made to components.</source>
          <target state="translated">Standard Angre motoren bruker &lt;xref:System.ComponentModel.Design.IReferenceService&gt;for sporing av endringer i komponenter.&lt;/xref:System.ComponentModel.Design.IReferenceService&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the undo engine cannot identify a name for a component through the reference service, the engine will ignore any changes for that component.</source>
          <target state="translated">Hvis Angre motoren ikke kan identifisere et navn for en komponent gjennom tjenesten referanse, ignorere motoren endringer for denne komponenten.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This service automatically recognizes changes to contained components only if they are exposed as public read-only properties of the same name in their owners.</source>
          <target state="translated">Denne tjenesten gjenkjenner automatisk endringer av inneholder komponenter bare hvis de vises som offentlig skrivebeskyttede egenskaper med samme navn i sine eiere.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the developer must pass component change events up to the owner.</source>
          <target state="translated">Utvikleren må ellers sendes komponent endre hendelser opptil eieren.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a nested component’s <ph id="ph1">`Text`</ph> property is resurfaced on its owning component as an <ph id="ph2">`Address`</ph> property, when the <ph id="ph3">`Text`</ph> property is changed, a property change must be programmatically made for the corresponding <ph id="ph4">`Address`</ph> property or else that change will not be tracked by undo.</source>
          <target state="translated">Hvis en nestet komponent for eksempel <ph id="ph1">`Text`</ph> egenskapen resurfaced på den eier komponenten som en <ph id="ph2">`Address`</ph> egenskapen, når den <ph id="ph3">`Text`</ph> -egenskapen, endring av en må gjøres programmatisk for den tilsvarende <ph id="ph4">`Address`</ph> egenskapen, ellers endringen ikke vil spores av Angre.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.NestedContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.ComponentModel.NestedContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor enlists in its owner's &lt;xref:System.ComponentModel.IComponent.Disposed&gt; event so that the nested container's &lt;xref:System.ComponentModel.NestedContainer.Dispose%2A&gt; method will automatically be called.</source>
          <target state="translated">Denne konstruktøren innrullerer i eieren &lt;xref:System.ComponentModel.IComponent.Disposed&gt;hendelsen slik at den nestede beholderen &lt;xref:System.ComponentModel.NestedContainer.Dispose%2A&gt;metoden vil automatisk bli kalt.&lt;/xref:System.ComponentModel.NestedContainer.Dispose%2A&gt; &lt;/xref:System.ComponentModel.IComponent.Disposed&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that owns this nested container.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som eier denne nestede beholderen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;owner&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;owner&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a site for the component within the container.</source>
          <target state="translated">Oppretter et område for komponenten i beholderen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`name`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.ComponentModel.IComponent&gt; is added to the nested container without an identifying name.</source>
          <target state="translated">Hvis den <ph id="ph1">`name`</ph> parameteren er <ph id="ph2">`null`</ph>, &lt;xref:System.ComponentModel.IComponent&gt;legges til i beholderen nestede uten et identifiserende navn.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to create a site for.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> du oppretter et område for.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name to assign to <ph id="ph1">`component`</ph>, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to skip the name assignment.</source>
          <target state="translated">Navnet skal tilordnes <ph id="ph1">`component`</ph>, eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> å hoppe over tilordningen navn.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den nyopprettede <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the nested container.</source>
          <target state="translated">Frigir ressursene som brukes av nestede beholderen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Denne metoden kalles av offentlig <ph id="ph1">`Dispose()`</ph> metoden og &lt;xref:System.Object.Finalize%2A&gt;metode.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>Aktiverer den beskyttede <ph id="ph2">`Dispose(Boolean)`</ph> metoden med den <ph id="ph3">`disposing`</ph> parameteren satt til <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;aktiverer <ph id="ph1">`Dispose`</ph> med <ph id="ph2">`disposing`</ph> satt til <ph id="ph3">`false`</ph>.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.NestedContainer&gt; references.</source>
          <target state="translated">Når den <ph id="ph1">`disposing`</ph> -parameteren er SANN, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne &lt;xref:System.ComponentModel.NestedContainer&gt;referanser.&lt;/xref:System.ComponentModel.NestedContainer&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Denne metoden starter den <ph id="ph1">`Dispose()`</ph> metode for hver referert objekt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>å frigjøre både administrerte og uforvaltede ressurser. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> frigi bare uforvaltede ressurser.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the service object of the specified type, if it is available.</source>
          <target state="translated">Henter serviceobjekt av den angitte typen hvis den er tilgjengelig.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the &lt;xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Denne metoden overstyrer den &lt;xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName&gt;metoden.&lt;/xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation only resolves requests for the &lt;xref:System.ComponentModel.INestedContainer&gt; and &lt;xref:System.ComponentModel.IContainer&gt; services.</source>
          <target state="translated">Denne implementeringen løser bare forespørsler for den &lt;xref:System.ComponentModel.INestedContainer&gt;og &lt;xref:System.ComponentModel.IContainer&gt;services.&lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.INestedContainer&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the service to retrieve.</source>
          <target state="translated">Den &lt;xref:System.Type&gt;på tjenesten som skal hente.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that implements the requested service, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service cannot be resolved.</source>
          <target state="translated">En &lt;xref:System.Object&gt;som implementerer tjenesten, eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Hvis tjenesten kan ikke løses.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the owning component for this nested container.</source>
          <target state="translated">Henter eier komponenten for denne nestede beholderen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning component is the characteristic that differentiates nested containers from ordinary containers.</source>
          <target state="translated">Eier komponenten er kjennetegn som skiller nestede beholdere fra vanlige beholdere.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that owns this nested container.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som eier denne nestede beholderen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the name of the owning component.</source>
          <target state="translated">Henter navnet på komponenten eier.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property may be overridden to provide a custom owner name.</source>
          <target state="translated">Denne egenskapen kan overstyres for å angi et eiernavn på egendefinerte.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation searches the owner's site for &lt;xref:System.ComponentModel.INestedSite&gt; and calls &lt;xref:System.ComponentModel.INestedSite.FullName%2A&gt;, or &lt;xref:System.ComponentModel.ISite.Name%2A&gt; if there is no nested site.</source>
          <target state="translated">Standard implementering søker eieren av området for &lt;xref:System.ComponentModel.INestedSite&gt;og samtaler &lt;xref:System.ComponentModel.INestedSite.FullName%2A&gt;, eller &lt;xref:System.ComponentModel.ISite.Name%2A&gt;Hvis det er ingen nestede områder.&lt;/xref:System.ComponentModel.ISite.Name%2A&gt; &lt;/xref:System.ComponentModel.INestedSite.FullName%2A&gt; &lt;/xref:System.ComponentModel.INestedSite&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither is available, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Hvis ingen er tilgjengelig, denne egenskapen returnerer <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the owning component.</source>
          <target state="translated">Navnet på komponenten eier.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>