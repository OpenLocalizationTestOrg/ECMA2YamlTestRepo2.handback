<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">097cd7321faac8cfa95104f9921f78e112607e48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.IDispatchMessageInspector.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">686949b337aa3f2ff1fa35a76110ed0a9825053d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95d22f93135e82422ad1b50c6e2cfd9d255cb044</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the methods that enable custom inspection or modification of inbound and outbound application messages in service applications.</source>
          <target state="translated">Definerer metodene som aktiverer egendefinert inspection eller endring av innkommende og utgående meldinger i tjenesteprogrammer.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement IDispatchMessageInspector to inspect or modify inbound or outbound application messages either prior to dispatching a request message to an operation or before returning a reply message to a caller.</source>
          <target state="translated">Implementere IDispatchMessageInspector for å kontrollere eller endre innkommende og utgående programmet meldinger enten før sending av en forespørselsmelding for en operasjon eller før den returnerer en svarmelding til en oppringer.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are a large number of scenarios that require intercepting messages prior to invoking the operation for which it is destined.</source>
          <target state="translated">Det finnes et stort antall tilfeller som krever avskjærer meldinger før aktivering av operasjonen som er den skal.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can log incoming application messages or perform some feature based on a message header.</source>
          <target state="translated">Du kan for eksempel logger innkommende programmet meldinger eller utføre noen funksjoner som er basert på en meldingshodet.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, message inspectors are inserted by a service behavior (&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;), an endpoint behavior (&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;), or a contract behavior (&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;).</source>
          <target state="translated">Vanligvis meldingen inspeksjoner blir satt inn av tjenestevirkemåte (&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;), en endpoint virkemåte (&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;), eller kontrakten virkemåte (&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;).&lt;/xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior then adds the message inspector to the &lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt; collection.</source>
          <target state="translated">Virkemåten legger deretter kontrolløren melding til den &lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt;samlingen.&lt;/xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about extending the runtime using behaviors, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Du finner mer informasjon om utvider kjøretiden ved hjelp av virkemåter <bpt id="p1">[</bpt>utvider ServiceHost og tjenesten modellen laget<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt; method enables custom behavior after receiving the message but before dispatching it to the intended operation.</source>
          <target state="translated">- &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;Metoden aktiverer egendefinert virkemåte etter mottak av meldingen, men før sending til den angitte operasjonen.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt; method enables custom behavior after the operation returns but before the reply is sent.</source>
          <target state="translated">- &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;Metoden aktiverer egendefinert virkemåte etter operasjonen returnerer, men før svaret sendes.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  IDispatchMessageInspector objects are always called at the same point during message dispatch regardless of whether an operation is one-way or request-reply.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; IDispatchMessageInspector objektene kalles alltid på samme punkt under sending av melding uansett om en operasjon er enveis eller forespørsel-svar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Called after an inbound message has been received but before the message is dispatched to the intended operation.</source>
          <target state="translated">Kalles når en innkommende melding er mottatt men før er meldingen sendt til den angitte operasjonen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AfterReceiveRequest method to inspect or modify the incoming message, the client channel that provided it, and the current service instance.</source>
          <target state="translated">Bruk AfterReceiveRequest-metoden til å kontrollere eller endre den innkommende meldingen, klienten kanalen som angitt, og gjeldende tjenesteforekomsten.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can be any object that you want to use for correlation purposes; it is returned to you as the <ph id="ph1">`correlationState`</ph> parameter in the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt; method.</source>
          <target state="translated">Verdien som returneres kan være et objekt som du vil bruke for korrelasjonsformål. Det returneres til deg som den <ph id="ph1">`correlationState`</ph> parameter i den &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;metoden.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You cannot use the body of the message unless you buffer the entire message and make a copy.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Du kan ikke bruke meldingsteksten i meldingen med mindre du buffer hele meldingen, og lage en kopi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, you must make two copies of the message: one to inspect, and the other to overwrite the <ph id="ph1">`request`</ph> parameter.</source>
          <target state="translated">Hvis du gjør dette, må du gjøre to kopier av meldingen: én skal undersøkes, og den andre til å skrive over den <ph id="ph1">`request`</ph> parameteren.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The request message.</source>
          <target state="translated">Forespørselsmeldingen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The incoming channel.</source>
          <target state="translated">Innkommende kanal.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The current service instance.</source>
          <target state="translated">Gjeldende tjenesteforekomsten.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object used to correlate state.</source>
          <target state="translated">Objektet som ble brukt til å koordinere tilstand.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This object is passed back in the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt; method.</source>
          <target state="translated">Dette objektet er sendt tilbake i den &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt;metoden.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Called after the operation has returned but before the reply message is sent.</source>
          <target state="translated">Kalles når operasjonen har returnert, men før svaret meldingen sendes.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the BeforeSendReply method to perform custom behavior prior to sending the return message.</source>
          <target state="translated">Bruk BeforeSendReply-metoden til å utføre egendefinert virkemåte før sending av return melding.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`correlationState`</ph> is the object returned from the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt; method that you can use to perform correlation between inbound and outbound calls to support your behavior.</source>
          <target state="translated">Den <ph id="ph1">`correlationState`</ph> er objektet som ble returnert av &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;metode som du kan bruke til å utføre korrelasjonen mellom innkommende og utgående kall til støtter din virkemåte.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The reply message.</source>
          <target state="translated">Svarmelding.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This value is null if the operation is one way.</source>
          <target state="translated">Denne verdien er null hvis operasjonen én måte.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The correlation object returned from the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt; method.</source>
          <target state="translated">Korrelasjons-objektet som ble returnert av &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt;metode.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>