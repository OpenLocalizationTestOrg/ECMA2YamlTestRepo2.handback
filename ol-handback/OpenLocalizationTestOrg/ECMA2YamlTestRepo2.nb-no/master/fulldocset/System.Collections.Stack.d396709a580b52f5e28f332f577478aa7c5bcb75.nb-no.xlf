<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d86a014a28c7d85d71d3be809df53d48b1c0214</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Stack.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90ed17a4862ac4e84d8d89967db114dbed325069</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cb911518e52431583334a585119d2d8e10ee71f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</source>
          <target state="translated">Representerer en enkel last inn første ut (LIFO)-generisk samling objekter.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;.</source>
          <target state="translated">Hvis du vil ha generell versjon i denne samlingen, kan du se &lt;xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;.&lt;/xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a Stack is the number of elements the Stack can hold.</source>
          <target state="translated">Kapasiteten i en bunke er antallet elementer stakken kan inneholde.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a Stack, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Som elementer er lagt til i en bunke, kapasiteten økes automatisk etter behov via ny tildeling.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; is less than the capacity of the stack, &lt;xref:System.Collections.Stack.Push%2A&gt; is an O(1) operation.</source>
          <target state="translated">Hvis &lt;xref:System.Collections.Stack.Count%2A&gt;er mindre enn kapasiteten i bunken, &lt;xref:System.Collections.Stack.Push%2A&gt;er en O(1)-operasjon.&lt;/xref:System.Collections.Stack.Push%2A&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, &lt;xref:System.Collections.Stack.Push%2A&gt; becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Hvis kapasiteten krever en økning for å gi plass til nye elementet &lt;xref:System.Collections.Stack.Push%2A&gt;blir en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt; &lt;/xref:System.Collections.Stack.Push%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Stack.Pop%2A&gt; is an O(1) operation.</source>
          <target state="translated">&lt;xref:System.Collections.Stack.Pop%2A&gt;er en O(1)-operasjon.&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stack accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">Stakk godtar <ph id="ph1">`null`</ph> som en gyldig verdi og tillater dupliserte elementer.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the default initial capacity.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse som er tom og har standard første kapasitet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">Kapasiteten for en &lt;xref:System.Collections.Stack&gt;er antall elementer som i &lt;xref:System.Collections.Stack&gt;kan inneholde.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Som elementer er lagt til i en &lt;xref:System.Collections.Stack&gt;, kapasiteten økes automatisk etter behov ved å tildele den interne matrisen på nytt.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Hvis størrelsen på samlingen kan beregnede, trenger ved å angi første kapasiteten utføre flere endring operasjoner ved å legge til elementer i &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Denne konstruktøren, er en O(1)-operasjon.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen som inneholder elementer fra den angitte samlingen og har samme første kapasitet som antall elementer som er overført.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">Kapasiteten for en &lt;xref:System.Collections.Stack&gt;er antall elementer som i &lt;xref:System.Collections.Stack&gt;kan inneholde.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Som elementer er lagt til i en &lt;xref:System.Collections.Stack&gt;, kapasiteten økes automatisk etter behov ved å tildele den interne matrisen på nytt.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Hvis størrelsen på samlingen kan beregnede, trenger ved å angi første kapasiteten utføre flere endring operasjoner ved å legge til elementer i &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the &lt;xref:System.Collections.Stack&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">Elementene kopieres til den &lt;xref:System.Collections.Stack&gt;i samme rekkefølge som leses av den &lt;xref:System.Collections.IEnumerator&gt;for &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Denne konstruktøren, er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er antallet elementer i <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; to copy elements from.</source>
          <target state="translated">Den &lt;xref:System.Collections.ICollection&gt;å kopiere elementer fra.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen som er tom og har den angitte opprinnelige kapasiteten eller standard første kapasiteten, avhengig av hva som er større.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">Kapasiteten for en &lt;xref:System.Collections.Stack&gt;er antall elementer som i &lt;xref:System.Collections.Stack&gt;kan inneholde.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Som elementer er lagt til i en &lt;xref:System.Collections.Stack&gt;, kapasiteten økes automatisk etter behov ved å tildele den interne matrisen på nytt.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Hvis størrelsen på samlingen kan beregnede, trenger ved å angi første kapasiteten utføre flere endring operasjoner ved å legge til elementer i &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Denne konstruktøren, er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">Startantallet med elementer som i <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan inneholde.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph>er mindre enn null.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Removes all objects from the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Fjerner alle objekter fra den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Stack.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Stack.Count%2A&gt;er satt til null, og frigis også referanser til andre objekter fra elementene i samlingen.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Denne metoden er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Oppretter en lite kopi av det <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">En lite kopi av en samling overfører bare elementer i samlingen, om de er referansetyper eller verdityper, men den ikke kopiere objektene som referansene refererer til.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Referansene i den nye samlingen peke til de samme objektene referansene i den opprinnelige samlingen henviser til.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">I motsetning overfører en dyp kopi av en samling elementene, og alt direkte eller indirekte referert til av elementene.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Denne metoden er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En lite kopi av det <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Bestemmer om et element i den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Denne metoden bestemmer likhet ved å kalle den &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;metoden.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Denne metoden utfører en lineær søket. Denne metoden er derfor en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method tests for equality by passing the <ph id="ph1">`obj`</ph> argument to the &lt;xref:System.Object.Equals%2A&gt; method of individual objects in the collection.</source>
          <target state="translated">Starter med .NET Framework 2.0, denne metoden tester likhet ved å sende den <ph id="ph1">`obj`</ph> argumentet til den &lt;xref:System.Object.Equals%2A&gt;metode for individuelle objekter i samlingen.&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the &lt;xref:System.Object.Equals%2A&gt; method of the <ph id="ph1">`obj`</ph> argument.</source>
          <target state="translated">I tidligere versjoner av .NET Framework forsøket ble opprettet ved hjelp av Kast individuelle elementer i samlingen av &lt;xref:System.Object.Equals%2A&gt;-metoden for den <ph id="ph1">`obj`</ph> argument.&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The object to locate in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Objektet i den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Verdien kan være <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an existing one-dimensional &lt;xref:System.Array&gt;, starting at the specified array index.</source>
          <target state="translated">Kopier de <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> på et eksisterende endimensjonal &lt;xref:System.Array&gt;, med Start fra angitte matriseindeksen.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to &lt;xref:System.Collections.Stack.Pop%2A&gt;.</source>
          <target state="translated">Elementene kopieres til matrisen i siste i første feil (LIFO) rekkefølge, som er lik rekkefølgen for elementer som er returnert av en rekkefølge for kall til &lt;xref:System.Collections.Stack.Pop%2A&gt;.&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Denne metoden er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den endimensjonal &lt;xref:System.Array&gt;som er målet for elementene kopieres fra <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">Den &lt;xref:System.Array&gt;må ha nullbasert indeksering.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">Den nullbaserte indeksen i <ph id="ph1">`array`</ph> som kopiering begynner.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>er mindre enn null.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>er flerdimensjonal.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- eller - antallet elementer i kilden <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> er større enn den tilgjengelige plassen fra <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> til slutten av målet <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Hva slags kilden <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan ikke endres automatisk til av målet <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Henter antallet elementer i den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is the number of elements that the &lt;xref:System.Collections.Stack&gt; can store.</source>
          <target state="translated">Kapasitet er antall elementer som i &lt;xref:System.Collections.Stack&gt;kan lagre.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Antallet er antall elementer som er egentlig i &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is always greater than or equal to Count.</source>
          <target state="translated">Kapasitet er alltid større enn eller lik antallet.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Hvis antallet er større enn kapasiteten ved å legge til elementer, økes kapasiteten automatisk ved å tildele den interne matrisen på nytt før du kopierer de gamle elementene og legge til nye elementer.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Henting av verdien for denne egenskapen er en O(1)-operasjon.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Antallet elementer i den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerer en &lt;xref:System.Collections.IEnumerator&gt;for den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic C#]       Den <ph id="ph1">`foreach`</ph> -setningen for språket C# (<ph id="ph2">`for each`</ph> i Visual Basic) skjuler av hvor komplekse enumeratorene.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Ved hjelp av derfor <ph id="ph1">`foreach`</ph> anbefales, i stedet for direkte manipulering enumeratoren.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">I utgangspunktet er enumeratoren plassert før det første elementet i samlingen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;henter også enumeratoren tilbake til denne plasseringen.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">På denne plasseringen &lt;xref:System.Collections.IEnumerator.Current%2A&gt;er udefinert.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">Du må derfor kalle &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;å flytte enumeratoren til det første elementet i samlingen før leser &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;Returnerer det samme objektet før enten &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;eller &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;kalles.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;angir &lt;xref:System.Collections.IEnumerator.Current%2A&gt;til neste element.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Hvis &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;formidler slutten av samlingen enumeratoren er plassert etter det siste elementet i samlingen og &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;returnerer <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Når enumeratoren er på denne plasseringen, etterfølgende kall til &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;også returnere <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Hvis siste kall til &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;returnerte <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;er udefinert.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Angi &lt;xref:System.Collections.IEnumerator.Current%2A&gt;til det første elementet i samlingen på nytt, kan du kalle &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;etterfulgt av &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En opplisting forblir gyldig så lenge samlingen forblir uendret.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Hvis du endrer til samlingen, for eksempel å legge til, endre eller slette elementer, enumeratoren ugyldiggjøres, og virkemåten er ikke definert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en sikker-prosedyre.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Du må implementere din egen synkronisering for å tillate samlingen for å få tilgang til flere tråder for lesing og skriving.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Denne metoden er en O(1)-operasjon.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">Henter en verdi som angir om tilgang til den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> er synkronisert (tråden trygt).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Stack&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.Stack.Synchronized%2A&gt; method.</source>
          <target state="translated">Du kan garantere at tråden av &lt;xref:System.Collections.Stack&gt;, alle operasjoner må utføres via wrapperen som er returnert av den &lt;xref:System.Collections.Stack.Synchronized%2A&gt;metoden.&lt;/xref:System.Collections.Stack.Synchronized%2A&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Lister opp i en samling vil si gjelder ikke sikker.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Stack.SyncRoot%2A&gt; during the entire enumeration.</source>
          <target state="translated">Følgende kodeeksempel viser hvordan du låser i samlingen ved hjelp av den &lt;xref:System.Collections.Stack.SyncRoot%2A&gt;under hele opplistingen.&lt;/xref:System.Collections.Stack.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_0_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_0_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_0_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_0_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_0_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_0_1.vb)</ept> <ept id="p5">]</ept> henting av verdien for denne egenskapen er en O(1)-operasjon.    </target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if access to the <bpt id="p2">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, hvis tilgang til den <bpt id="p2">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> er synkronisert (tråden trygt); ellers <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> without removing it.</source>
          <target state="translated">Returnerer objektet på toppen av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uten å fjerne den.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the &lt;xref:System.Collections.Stack.Pop%2A&gt; method, but Peek does not modify the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Denne metoden er lik &lt;xref:System.Collections.Stack.Pop%2A&gt;metoden, men kikking endrer ikke &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>kan flyttes til den &lt;xref:System.Collections.Stack&gt;som plassholder, hvis nødvendig.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between a null value and the end of the stack, check the &lt;xref:System.Collections.Stack.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Stack&gt; is empty.</source>
          <target state="translated">For å skille mellom en null-verdi og slutten av bunken, kan du se den &lt;xref:System.Collections.Stack.Count%2A&gt;egenskaps- eller catch den &lt;xref:System.InvalidOperationException&gt;, som er et når den &lt;xref:System.Collections.Stack&gt;er tom.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Denne metoden er en O(1)-operasjon.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den &lt;xref:System.Object&gt;på toppen av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> er tom.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes and returns the object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Fjerner og returnerer objektet på toppen av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the &lt;xref:System.Collections.Stack.Peek%2A&gt; method, but &lt;xref:System.Collections.Stack.Peek%2A&gt; does not modify the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Denne metoden er lik den &lt;xref:System.Collections.Stack.Peek%2A&gt;metoden, men &lt;xref:System.Collections.Stack.Peek%2A&gt;ikke endre &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Peek%2A&gt; &lt;/xref:System.Collections.Stack.Peek%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>kan flyttes til den &lt;xref:System.Collections.Stack&gt;som plassholder, hvis nødvendig.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between a null value and the end of the stack, check the &lt;xref:System.Collections.Stack.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Stack&gt; is empty.</source>
          <target state="translated">For å skille mellom en null-verdi og slutten av bunken, kan du se den &lt;xref:System.Collections.Stack.Count%2A&gt;egenskaps- eller catch den &lt;xref:System.InvalidOperationException&gt;, som er et når den &lt;xref:System.Collections.Stack&gt;er tom.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Denne metoden er en O(1)-operasjon.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; removed from the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den &lt;xref:System.Object&gt;fjernet fra toppen av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> er tom.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Inserts an object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Setter inn et objekt på toppen av den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; already equals the capacity, the capacity of the &lt;xref:System.Collections.Stack&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Hvis &lt;xref:System.Collections.Stack.Count%2A&gt;allerede er lik kapasitet, kapasiteten for den &lt;xref:System.Collections.Stack&gt;økes med automatisk tildele den interne matrisen på nytt og eksisterende elementene kopieres til den nye matrisen før det nye elementet er lagt til.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>kan flyttes til den &lt;xref:System.Collections.Stack&gt;som plassholder, hvis nødvendig.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>It occupies a slot in the stack and is treated like any object.</source>
          <target state="translated">Det tar et spor i stakken og behandles som et objekt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; is less than the capacity of the stack, Push is an O(1) operation.</source>
          <target state="translated">Hvis &lt;xref:System.Collections.Stack.Count%2A&gt;er mindre enn kapasitet i bunken Push operasjonen en O(1).&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, Push becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Hvis kapasiteten krever en økning for å gi plass til nye elementet, Push blir en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to push onto the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den &lt;xref:System.Object&gt;skyve på den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Verdien kan være <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerer et synkronisert (tråden trygt) wrapper for den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Stack&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">Du kan garantere at tråden av &lt;xref:System.Collections.Stack&gt;, alle operasjoner må utføres via denne wrapper.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Lister opp i en samling vil si gjelder ikke sikker.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Stack.SyncRoot%2A&gt; during the entire enumeration.</source>
          <target state="translated">Følgende kodeeksempel viser hvordan du låser i samlingen ved hjelp av den &lt;xref:System.Collections.Stack.SyncRoot%2A&gt;under hele opplistingen.&lt;/xref:System.Collections.Stack.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.sta_3_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/m-system.collections.sta_3_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/m-system.collections.sta_3_1.vb)</ept><ept id="p5">]</ept>       This method is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.sta_3_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p4">](~/add/codesnippet/csharp/m-system.collections.sta_3_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/m-system.collections.sta_3_1.vb)</ept> <ept id="p5">]</ept> denne metoden er en O(1)-operasjon.    </target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> skal synkroniseres.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A synchronized wrapper around the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En synkroniserte tekstbryting rundt den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stack&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stack&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Henter et objekt som kan brukes til å synkronisere tilgang til den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a synchronized version of the &lt;xref:System.Collections.Stack&gt;, use the &lt;xref:System.Collections.Stack.Synchronized%2A&gt; method.</source>
          <target state="translated">Opprette en synkronisert versjon av den &lt;xref:System.Collections.Stack&gt;, bruker den &lt;xref:System.Collections.Stack.Synchronized%2A&gt;metoden.&lt;/xref:System.Collections.Stack.Synchronized%2A&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Stack&gt; using the SyncRoot property.</source>
          <target state="translated">Avledede klasser kan imidlertid gi sin egen synkroniserte versjon av den &lt;xref:System.Collections.Stack&gt;ved hjelp av SyncRoot-egenskapen.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Stack&gt;, not directly on the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Synkronisering koden må utføre operasjoner på SyncRoot av den &lt;xref:System.Collections.Stack&gt;, ikke direkte på &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Dette sikrer ordentlig med samlinger som er avledet fra andre objekter.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Stack&gt; object.</source>
          <target state="translated">Nærmere bestemt den opprettholder riktig synkronisering med andre tråder som kan være samtidig endring av &lt;xref:System.Collections.Stack&gt;objektet.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Lister opp i en samling vil si gjelder ikke sikker.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.</source>
          <target state="translated">Følgende kodeeksempel viser hvordan du låse samlingen ved hjelp av SyncRoot under hele opplistingen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_1_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_1_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_1_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_1_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_1_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>klassisk Stack.IsSynchronized eksempel&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_1_1.vb)</ept> <ept id="p5">]</ept> henting av verdien for denne egenskapen er en O(1)-operasjon.    </target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En &lt;xref:System.Object&gt;som kan brukes til å synkronisere tilgang til den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new array.</source>
          <target state="translated">Kopier de <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> til en ny matrise.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to &lt;xref:System.Collections.Stack.Pop%2A&gt;.</source>
          <target state="translated">Elementene kopieres til matrisen i siste i første feil (LIFO) rekkefølge, som er lik rekkefølgen for elementer som er returnert av en rekkefølge for kall til &lt;xref:System.Collections.Stack.Pop%2A&gt;.&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Denne metoden er en O (<ph id="ph1">`n`</ph>) operasjonen, der <ph id="ph2">`n`</ph> er &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A new array containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En ny matrise som inneholder kopier av elementene i den <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>