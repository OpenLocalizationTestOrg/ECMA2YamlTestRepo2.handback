<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccad41ad00ba86be0f4041b848c7b9b43afa6fe1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.CommittableTransaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f6a063bfb2dd845caede00389db21813627d9a3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5dfad97f107ec792589460840ed49fc52c7bd8c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes a committable transaction.</source>
          <target state="translated">Beskriver en transaksjon som ikke kan lagres.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CommittableTransaction class provides an explicit way for applications to use a transaction, as opposed to using the &lt;xref:System.Transactions.TransactionScope&gt; class implicitly.</source>
          <target state="translated">Klassen CommittableTransaction inneholder en eksplisitt metode for programmer å bruke en transaksjon, i motsetning til ved hjelp av den &lt;xref:System.Transactions.TransactionScope&gt;klasse implisitt.&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the &lt;xref:System.Transactions.TransactionScope&gt; class, the application writer needs to specifically call the &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; and &lt;xref:System.Transactions.Transaction.Rollback%2A&gt; methods in order to commit or abort the transaction.</source>
          <target state="translated">I motsetning til det &lt;xref:System.Transactions.TransactionScope&gt;klassen, program-skriveren må kalle spesielt den &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;og &lt;xref:System.Transactions.Transaction.Rollback%2A&gt;metoder for å lagre eller avbryte transaksjonen.&lt;/xref:System.Transactions.Transaction.Rollback%2A&gt; &lt;/xref:System.Transactions.CommittableTransaction.Commit%2A&gt; &lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, only the creator of a transaction can commit the transaction.</source>
          <target state="translated">Bare oppretteren av en transaksjon kan imidlertid gjennomføre transaksjonen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, copies of a committable transaction, obtained through the &lt;xref:System.Transactions.Transaction.Clone%2A&gt; method are not committable.</source>
          <target state="translated">Derfor kopier av en transaksjon som ikke kan lagres, som er anskaffet via den &lt;xref:System.Transactions.Transaction.Clone%2A&gt;metoden er ikke som ikke kan lagres.&lt;/xref:System.Transactions.Transaction.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  It is recommended that you create implicit transactions using the &lt;xref:System.Transactions.TransactionScope&gt; class, so that the ambient transaction context is automatically managed for you.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Det anbefales at du oppretter implisitte transaksjoner ved hjelp av &lt;xref:System.Transactions.TransactionScope&gt;class, slik at de omkringliggende Transaksjonskonteksten administreres automatisk for deg.&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should also use the &lt;xref:System.Transactions.TransactionScope&gt; and &lt;xref:System.Transactions.DependentTransaction&gt; class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</source>
          <target state="translated">Du bør også bruke den &lt;xref:System.Transactions.TransactionScope&gt;og &lt;xref:System.Transactions.DependentTransaction&gt;klasse for programmer som krever bruk av den samme transaksjonen på tvers av flere funksjonskall eller flere tråd anrop.&lt;/xref:System.Transactions.DependentTransaction&gt; &lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on this model, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">For mer informasjon om denne modellen, kan du se den <bpt id="p1">[</bpt>implementere en implisitt transaksjon ved hjelp av transaksjonsområdet<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> emnet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a CommittableTransaction does not automatically set the ambient transaction, which is the transaction your code executes in.</source>
          <target state="translated">Oppretter en CommittableTransaction er satt av omkringliggende transaksjonen, som utfører koden i transaksjonen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get or set the ambient transaction by calling the static &lt;xref:System.Transactions.Transaction.Current%2A&gt; property of the global &lt;xref:System.Transactions.Transaction&gt; object.</source>
          <target state="translated">Du kan hente eller angi omkringliggende transaksjonen ved å kalle statiske &lt;xref:System.Transactions.Transaction.Current%2A&gt;-egenskapen til den globale &lt;xref:System.Transactions.Transaction&gt;objektet.&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">For mer informasjon om omkringliggende transaksjoner, i avsnittet "Behandle transaksjonen flyten ved hjelp av TransactionScopeOption" for den <bpt id="p1">[</bpt>implementere en implisitt transaksjon ved hjelp av transaksjonsområdet<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> emnet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</source>
          <target state="translated">Hvis omkringliggende transaksjonen ikke er angitt er noen operasjon på en ressursansvarlig ikke del av transaksjonen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to explicitly set and reset the ambient transaction, to ensure that resource managers operate under the right transaction context.</source>
          <target state="translated">Du må angi og tilbakestille den omsluttende transaksjonen, for å sikre at ressursbehandlinger fungere i den høyre Transaksjonskonteksten eksplisitt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Until a CommittableTransaction has been committed, all the resources involved with the transaction are still locked.</source>
          <target state="translated">Før en CommittableTransaction har blitt lagret, låses fortsatt alle ressurser som er involvert i transaksjonen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CommittableTransaction object cannot be reused.</source>
          <target state="translated">Et CommittableTransaction-objekt kan ikke brukes på nytt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</source>
          <target state="translated">Når den er iverksatt eller rullet tilbake, kan ikke brukes på nytt i en transaksjon eller angitt som omkringliggende Transaksjonskonteksten.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</source>
          <target state="translated">Et forsøk på å opprette en transaksjon under Windows 98, Windows 98 Second Edition eller installasjonen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p2">&lt;/code&gt;</ept> value.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med den angitte <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p2">&lt;/code&gt;</ept> verdi.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The maximum amount of time the transaction can exist, before it is aborted.</source>
          <target state="translated">Maksimum tid transaksjonen kan eksistere før den ble avbrutt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</source>
          <target state="translated">Et forsøk på å opprette en transaksjon under Windows 98, Windows 98 Second Edition eller installasjonen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified transaction options.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Transactions.CommittableTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> angitte transaksjonsalternativene klasse.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use for the new transaction.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -strukturen som beskriver transaksjonsalternativene skal brukes for den nye transaksjonen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</source>
          <target state="translated">Et forsøk på å opprette en transaksjon under Windows 98, Windows 98 Second Edition eller installasjonen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph>er ugyldig.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Begins an attempt to commit the transaction asynchronously.</source>
          <target state="translated">Starter et forsøk på å utføre transaksjonen asynkront.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately, before the transaction has been completed.</source>
          <target state="translated">Denne metoden returnerer umiddelbart før transaksjonen er fullført.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction then commits on a different thread, and the <ph id="ph1">`asyncCallback`</ph> delegate is invoked when it has completed.</source>
          <target state="translated">Transaksjonen deretter utfører på en annen tråd og <ph id="ph1">`asyncCallback`</ph> representanten aktiveres når den er fullført.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>After this method is called, you do not receive the outcome of the transaction until you call &lt;xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt;.</source>
          <target state="translated">Når denne metoden kalles, mottar du ikke resultatet av transaksjonen før du kaller &lt;xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt;.&lt;/xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The commit process may complete synchronously inside this method call.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Commit-prosessen kan fullføre synkront i metodekallet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the transaction completes.</source>
          <target state="translated">Den &lt;xref:System.AsyncCallback&gt;representanten aktiveres når transaksjonen er fullført.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in which case the application is not notified of the transaction's completion.</source>
          <target state="translated">Denne parameteren kan være <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, da programmet ikke blir varslet om transaksjonen er fullført.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Instead, the application must use the &lt;xref:System.IAsyncResult&gt; interface to check for completion and wait accordingly, or call &lt;xref:System.Transactions.CommittableTransaction.EndCommit*&gt; to wait for completion.</source>
          <target state="translated">I stedet programmet må bruke den &lt;xref:System.IAsyncResult&gt;grensesnitt for å se etter fullføring og vent tilsvarende, eller ring &lt;xref:System.Transactions.CommittableTransaction.EndCommit*&gt;ikke vente på fullføring.&lt;/xref:System.Transactions.CommittableTransaction.EndCommit*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object, which might contain arbitrary state information, associated with the asynchronous commitment.</source>
          <target state="translated">Et objekt som kan inneholde tilfeldig statusinformasjon, som er tilknyttet den asynkrone avtale.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This object is passed to the callback, and is not interpreted by <bpt id="p1">&lt;xref href="System.Transactions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dette objektet er sendt til tilbakeringing, og ikke tolkes av <bpt id="p1">&lt;xref href="System.Transactions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A null reference is permitted.</source>
          <target state="translated">En nullreferanse er tillatt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</source>
          <target state="translated">En &lt;xref:System.IAsyncResult&gt;grensesnitt som kan brukes av oppkalleren Kontroller statusen for den asynkrone operasjonen eller vente for å fullføre operasjonen.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Attempts to commit the transaction.</source>
          <target state="translated">Forsøk på å utføre transaksjonen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</source>
          <target state="translated">Når denne metoden kalles, alle objekter som er registrert for å delta i transaksjonen er forespurt og uavhengig kan tyde på deres stemme til lagre eller rulle tilbake transaksjonen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any participant votes to roll back the transaction, it is rolled back and this method throws a &lt;xref:System.Transactions.TransactionException&gt; exception.</source>
          <target state="translated">Hvis deltakeren anser å rulle tilbake transaksjonen, den er rullet tilbake, og denne metoden oppstår en &lt;xref:System.Transactions.TransactionException&gt;unntak.&lt;/xref:System.Transactions.TransactionException&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a normal occurrence for a transaction and your code should catch and process such exceptions.</source>
          <target state="translated">Dette er en vanlig forekomst for en transaksjon og koden skal opp og behandle slike unntak.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Commit and &lt;xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt; block until the first phase of transaction processing is complete.</source>
          <target state="translated">Lagre og &lt;xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt;blokkeres til den første fasen av transaksjonsbehandling er fullført.&lt;/xref:System.Transactions.CommittableTransaction.EndCommit%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the &lt;xref:System.Transactions.TransactionManager&gt; has durably decided to commit or abort the transaction.</source>
          <target state="translated">Den første fasen slutter etter alle ressursbehandlinger og opplistinger i transaksjonen har stemte på transaksjonsutfallet og &lt;xref:System.Transactions.TransactionManager&gt;robust har valgt å lagre eller avbryte transaksjonen.&lt;/xref:System.Transactions.TransactionManager&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second phase of processing is always asynchronous.</source>
          <target state="translated">Fase av behandlingen er alltid asynkront.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</source>
          <target state="translated">Det er derfor ikke garantere at data skrevet bare fra i en gitt transaksjon blir umiddelbart tilgjengelige etterpå når du ikke bruker en annen transaksjon for å vise disse dataene.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</source>
          <target state="translated">Fordi denne metoden blokker til den første fasen av transaksjonsbehandling er fullført, bør du passe ekstremt ved bruk av denne metoden i en Windows-skjema (WinForm)-applikasjon, eller en vranglås kan oppstå.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</source>
          <target state="translated">Hvis du kalle denne metoden i en WinForm kontrollhendelsen (for eksempel en knappen), og bruker den synkron &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;metoden direkte kontrollen for å utføre noen UI-aktiviteter (for eksempel endre farger) mens transaksjonen, skjer en vranglås.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method is synchronous and blocks the worker thread until the UI thread finishes its job.</source>
          <target state="translated">Fordi den &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;metoden er synkron og blokkerer Arbeidstråden til UI-tråden er ferdig med jobben.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</source>
          <target state="translated">Imidlertid i scenariet vårt venter UI-tråden også Arbeidstråden ikke gjennomføre transaksjonen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</source>
          <target state="translated">Resultatet er at ingen kan fortsette og omfanget venter på ubestemt tid å fullføre transaksjonen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use &lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt; rather than &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; wherever possible, because it is asynchronous and thus less prone to deadlock.</source>
          <target state="translated">Du må bruke &lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;snarere enn &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;der det er mulig, fordi den er asynkront og dermed mindre utsatt for vranglås.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt; &lt;/xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Commit is called on a transaction and the transaction becomes <bpt id="p1">&lt;xref href="System.Transactions.TransactionStatus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Lagre kalles på en transaksjon, og transaksjonen blir <bpt id="p1">&lt;xref href="System.Transactions.TransactionStatus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Commit is called and the transaction rolls back for the first time.</source>
          <target state="translated">Lagre kalles, og transaksjonen ruller tilbake for første gang.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Ends an attempt to commit the transaction asynchronously.</source>
          <target state="translated">Avslutter et forsøk på å utføre transaksjonen asynkront.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call this method in the callback delegate specified as a parameter to the &lt;xref:System.Transactions.CommittableTransaction.BeginCommit%2A&gt; method, when you have finished any cleanup work associated with the asynchronous commitment.</source>
          <target state="translated">Du må kalle denne metoden i tilbakeringing representant som er angitt som en parameter i &lt;xref:System.Transactions.CommittableTransaction.BeginCommit%2A&gt;metoden når du er ferdig oppryddingsarbeid knyttet til den asynkrone forpliktelsen.&lt;/xref:System.Transactions.CommittableTransaction.BeginCommit%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also call this method early without waiting for the delegate.</source>
          <target state="translated">Du kan også kalle denne metoden tidlig uten å vente på representanten.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If, by the time you call this method, the transaction has not completed, this method waits for its completion.</source>
          <target state="translated">Hvis transaksjonen ikke er fullført før du kalle denne metoden, venter denne metoden på at den er fullføringen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The &lt;xref:System.IAsyncResult.CompletedSynchronously%2A&gt; property returned by <ph id="ph2">`asyncResult`</ph> is always <ph id="ph3">`false`</ph>, even if the operation completed synchronously.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Den &lt;xref:System.IAsyncResult.CompletedSynchronously%2A&gt;egenskapen som er returnert av <ph id="ph2">`asyncResult`</ph> alltid <ph id="ph3">`false`</ph>, selv om operasjonen fullføres synkront.&lt;/xref:System.IAsyncResult.CompletedSynchronously%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; and EndCommit block until the first phase of transaction processing is complete.</source>
          <target state="translated">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;og EndCommit blokkerer til den første fasen av transaksjonsbehandling er fullført.&lt;/xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the &lt;xref:System.Transactions.TransactionManager&gt; has durably decided to commit or abort the transaction.</source>
          <target state="translated">Den første fasen slutter etter alle ressursbehandlinger og opplistinger i transaksjonen har stemte på transaksjonsutfallet og &lt;xref:System.Transactions.TransactionManager&gt;robust har valgt å lagre eller avbryte transaksjonen.&lt;/xref:System.Transactions.TransactionManager&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second phase of processing is always asynchronous.</source>
          <target state="translated">Fase av behandlingen er alltid asynkront.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</source>
          <target state="translated">Det er derfor ikke garantere at data skrevet bare fra i en gitt transaksjon blir umiddelbart tilgjengelige etterpå når du ikke bruker en annen transaksjon for å vise disse dataene.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; object associated with the asynchronous commitment.</source>
          <target state="translated">Den &lt;xref:System.IAsyncResult&gt;tilknyttet den asynkrone forpliktelsen.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt; is called and the transaction rolls back for the first time.</source>
          <target state="translated">&lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;kalles og transaksjonen ruller tilbake for første gang.&lt;/xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the object provided as the last parameter of the &lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt; method call.</source>
          <target state="translated">Henter objektet som ble angitt som den siste parameteren i &lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;metodekallet.&lt;/xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The object provided as the last parameter of the &lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt; method call.</source>
          <target state="translated">Objektet som ble angitt som den siste parameteren i &lt;xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;metodekallet.&lt;/xref:System.Transactions.CommittableTransaction.BeginCommit*&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Henter en &lt;xref:System.Threading.WaitHandle&gt;som brukes til å vente på en asynkron operasjon skal bli fullført.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">En &lt;xref:System.Threading.WaitHandle&gt;som brukes til å vente på en asynkron operasjon skal bli fullført.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets an indication of whether the asynchronous commit operation completed synchronously.</source>
          <target state="translated">Henter en angivelse av om asynkrone bekreftelsesoperasjonen fullført synkront.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asynchronous commit operation completed synchronously; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis den asynkrone bekreftelsesoperasjonen fullført synkront; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> even if the operation completed synchronously.</source>
          <target state="translated">Denne egenskapen returnerer alltid <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> selv om synkront fullføre operasjonen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets an indication whether the asynchronous commit operation has completed.</source>
          <target state="translated">Henter en indikasjon på om den asynkrone bekreftelsesoperasjonen er fullført.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the operation is complete; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis operasjonen er fullført; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>