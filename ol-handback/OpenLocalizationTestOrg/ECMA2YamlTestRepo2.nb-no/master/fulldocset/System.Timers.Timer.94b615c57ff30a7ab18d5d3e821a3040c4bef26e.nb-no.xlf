<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6fd5493" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f400be304e155c524c9a909ab36261e230b6edb1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Timers.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">826bcf8f328900e7727a603f770bc7592d80259f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f360dddbd4c33f6cfd312fc2e496d00a0ca07d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generates an event after a set interval, with an option to generate recurring events.</source>
          <target state="translated">Genererer en hendelse etter et angitt intervall, med mulighet for å generere regelmessige hendelser.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated">For å bla gjennom .NET Framework-kildekode for denne typen, kan du se den <bpt id="p1">[</bpt>Referansekilde<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; For å vise .NET Framework-kildekode for denne typen, kan du se den <bpt id="p1">[</bpt>Referansekilde<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">Du kan bla gjennom kildekode online Last ned referansen i frakoblet modus og gå gjennom datakilder (inkludert oppdateringer) under feilsøking; Se <bpt id="p1">[</bpt>instruksjonene<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component is a server-based timer that raises an &lt;xref:System.Timers.Timer.Elapsed&gt; event in your application after the number of milliseconds in the &lt;xref:System.Timers.Timer.Interval%2A&gt; property has elapsed.</source>
          <target state="translated">Tidtaker-komponenten er en serverbasert tidtaker som forårsaker en &lt;xref:System.Timers.Timer.Elapsed&gt;hendelse i programmets etter antall millisekunder i den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen er utløpt.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure the Timer object to raise the event just once or repeatedly using the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property.</source>
          <target state="translated">Du kan konfigurere tidtaker-objekt for å heve hendelsen bare én eller flere ganger ved hjelp av den &lt;xref:System.Timers.Timer.AutoReset%2A&gt;egenskapen.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a Timer object is declared at the class level so that it stays in scope as long as it is needed.</source>
          <target state="translated">En tidtaker-objektet er vanligvis deklarert på klassen nivå slik at det fortsatt være i området så lenge det er nødvendig.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then handle its &lt;xref:System.Timers.Timer.Elapsed&gt; event to provide regular processing.</source>
          <target state="translated">Deretter kan du behandle den &lt;xref:System.Timers.Timer.Elapsed&gt;-hendelsen for å gi vanlige behandling.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</source>
          <target state="translated">For eksempel anta at du har en kritisk server må holdes kjører 24 timer døgnet, 7 dager i uken.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could create a service that uses a Timer object to periodically check the server and ensure that the system is up and running.</source>
          <target state="translated">Du kan opprette en tjeneste som bruker en tidtaker-objektet til å regelmessig Kontroller serveren, og kontroller at systemet er aktivt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system is not responding, the service could attempt to restart the server or notify an administrator.</source>
          <target state="translated">Hvis systemet ikke svarer, kan tjenesten forsøke å starte serveren eller varsle administrator.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Timer class is available in the .NET Framework only.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; For tidtakeren klassen er tilgjengelig i .NET Framework bare.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not included in the .NET Standard Library and is not available on other platforms, such as .NET Core or the Universal Windows Platform.</source>
          <target state="translated">Det er ikke inkludert i .NET bibliotek og er ikke tilgjengelig på andre plattformer, for eksempel .NET kjerner eller Universal Windows Platform.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>On these platforms, as well as for portability across all .NET platforms, you should use the &lt;xref:System.Threading.Timer?displayProperty=fullName&gt; class instead.</source>
          <target state="translated">På disse plattformene samt like mobil på tvers av alle .NET-plattformer, bør du bruke den &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;klasse i stedet.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">Denne typen implementerer den &lt;xref:System.IDisposable&gt;grensesnittet.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Når du er ferdig ved hjelp av typen, må du fjerne den direkte eller indirekte.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Hvis du vil fjerne av typen direkte, kan du kalle den &lt;xref:System.IDisposable.Dispose%2A&gt;metoden i en <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> block.&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Hvis du vil fjerne den indirekte, bruke et språk som <ph id="ph1">`using`</ph> (i C#) eller <ph id="ph2">`Using`</ph> (i Visual Basic).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">For mer informasjon, se "Ved hjelp av et objekt som implementerer IDisposable" i den &lt;xref:System.IDisposable&gt;grensesnittet emnet.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server-based Timer class is designed for use with worker threads in a multithreaded environment.</source>
          <target state="translated">Klassen serverbasert tidtakerjobben er utviklet for bruk med arbeidstråder i et flertrådsmiljø.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server timers can move among threads to handle the raised &lt;xref:System.Timers.Timer.Elapsed&gt; event, resulting in more accuracy than Windows timers in raising the event on time.</source>
          <target state="translated">Server-tidtakerne kan flytte blant tråder til å håndtere den hevet &lt;xref:System.Timers.Timer.Elapsed&gt;hendelse, noe som førte til flere nøyaktigheten enn Windows-tidtakerne i å heve hendelsen i tide.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event, based on the value (in milliseconds) of the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Komponenten tidtakeren opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelse, basert på verdien (i millisekunder) for den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event to perform the processing you need.</source>
          <target state="translated">Du kan håndtere denne hendelsen til å utføre behandling må.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you have an online sales application that continuously posts sales orders to a database.</source>
          <target state="translated">For eksempel anta at du har en online-salgsdata programmet som legger kontinuerlig salgsdata rekkefølger til en database.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</source>
          <target state="translated">Tjenesten som kompilerer instruksjonene for levering brukes på en bunke med rekkefølger i stedet for behandling hver ordre enkeltvis.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could use a Timer to start the batch processing every 30 minutes.</source>
          <target state="translated">Du kan bruke en tidtaker for å starte gruppebehandling 30 minutter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The System.Timers.Timer class has the same resolution as the system clock.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; For System.Timers.Timer klassen har samme oppløsning som systemklokken.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the &lt;xref:System.Timers.Timer.Interval%2A&gt; property is less than the resolution of the system clock.</source>
          <target state="translated">Dette betyr at den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen vil gjelde med en intervallet som er definert av løsing av systemklokken hvis den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen er mindre enn løsing av systemklokken.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, a Timer object raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, after the first &lt;xref:System.Timers.Timer.Interval%2A&gt; has elapsed.</source>
          <target state="translated">Når &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er satt til <ph id="ph1">`false`</ph>, en tidtaker objektet opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen bare én gang, første &lt;xref:System.Timers.Timer.Interval%2A&gt;er utløpt.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To keep raising the &lt;xref:System.Timers.Timer.Elapsed&gt; event regularly at the interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt;, set &lt;xref:System.Timers.Timer.AutoReset%2A&gt; to <ph id="ph1">`true`</ph>, which is the default value.</source>
          <target state="translated">For å fortsette å heve den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen regelmessig med intervallet som er definert av den &lt;xref:System.Timers.Timer.Interval%2A&gt;, angitt &lt;xref:System.Timers.Timer.AutoReset%2A&gt;til <ph id="ph1">`true`</ph>, som er standardverdien.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component catches and suppresses all exceptions thrown by event handlers for the &lt;xref:System.Timers.Timer.Elapsed&gt; event.</source>
          <target state="translated">Komponenten tidtakeren fanger inn og skjuler alle unntak fra hendelsesbehandling for den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Dette er underlagt endring i fremtidige versjoner av .NET Framework.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note, however, that this is not true of event handlers that execute asynchronously and include the <ph id="ph1">`await`</ph> operator (in C#)  or the <ph id="ph2">`Await`</ph> operator (in Visual Basic).</source>
          <target state="translated">Vær oppmerksom på at dette ikke er true hendelsesbehandling som kjøre asynkront og inkluderer den <ph id="ph1">`await`</ph> operator (i C#) eller <ph id="ph2">`Await`</ph> operator (i Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</source>
          <target state="translated">Unntak i disse hendelsesbehandling er overført til kall tråden som følgende eksempel illustrerer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on exceptions thrown in asynchronous methods, see   <bpt id="p1">[</bpt>Exception Handling<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon om unntak i asynkron metoder, se <bpt id="p1">[</bpt>unntak behandler<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept> <ept id="p3">]</ept> hvis den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskapen <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;denne hendelsen oppstår ved en &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;  </target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If processing of the &lt;xref:System.Timers.Timer.Elapsed&gt; event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Hvis behandling av den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen varer mer enn &lt;xref:System.Timers.Timer.Interval%2A&gt;, hendelsen kan oppstå på nytt på en annen &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">I dette tilfellet skal hendelsesbehandlingen innkommende.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Hendelseshåndtering metoden kan kjøre på en tråd samtidig som en annen tråd kaller den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden eller angir den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the timer is stopped.</source>
          <target state="translated">Dette kan føre til den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelse som starter etter tidtakeren er stoppet.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Eksempelkode for den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden viser en måte å unngå problemet løp.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Selv om &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;er ikke <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;hendelser kan skje etter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;har blitt kalt eller etter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen er satt til <ph id="ph2">`false`</ph>fordi signalet opphøye den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen alltid i kø for kjøring på en tråd applikasjonsutvalget tråd.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Én måte å løse problemet løp som angir et flagg som forteller hendelsesbehandlingen for den &lt;xref:System.Timers.Timer.Elapsed&gt;-hendelsen for å ignorere etterfølgende hendelser.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the Timer class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the Timer to the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property, so that the event is marshaled to the user interface thread.</source>
          <target state="translated">Hvis du bruker tidtakeren klassen med et element i brukergrensesnittet, for eksempel et skjema eller kontroll, uten å plassere tidtakeren for at element i brukergrensesnittet, tilordne skjemaet eller kontrollen som inneholder tidtakeren til den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskapen slik at hendelsen er formidles til brukeren grensesnittet tråden.&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of default property values for an instance of Timer, see the &lt;xref:System.Timers.Timer.%23ctor%2A&gt; constructor.</source>
          <target state="translated">En liste over standard egenskapsverdier for en forekomst av Timer, kan du se den &lt;xref:System.Timers.Timer.%23ctor%2A&gt;konstruktør.&lt;/xref:System.Timers.Timer.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!TIP]</ph> &gt;  Be aware that the .NET Framework Class Library includes four classes named <ph id="ph2">`Timer`</ph>, each of which offers different functionality:   &gt;    &gt;  -   Timer (this topic): fires an event at regular intervals.</source>
          <target state="translated">&gt; <ph id="ph1">[!TIP]</ph> &gt; Vær oppmerksom på at .NET Framework klassen biblioteket inneholder fire klasser med navnet <ph id="ph2">`Timer`</ph>, hver av som tilbyr forskjellige funksjoner: &gt;&gt;-tidtaker (dette emnet): starter en hendelse med regelmessige intervaller.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Klassen er ment for bruk som en serverbasert eller komponenten i et flertrådsmiljø; Det har ingen brukergrensesnitt og ikke vises under kjøring.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: executes a single callback method on a thread pool thread at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: utfører en enkelt tilbakeringing-metode på en tråd applikasjonsutvalget tråd med regelmessige intervaller.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method is defined when the timer is instantiated and cannot be changed.</source>
          <target state="translated">Metoden tilbakeringing er definert når tidtakeren startes og kan ikke endres.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like the Timer class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Som klassen tidtakeren er denne klassen ment for bruk som en serverbasert eller komponenten i et flertrådsmiljø; Det har ingen brukergrensesnitt og ikke vises under kjøring.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: a Windows Forms component that fires an event at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: en Windows Forms-komponent som starter en hendelse med regelmessige intervaller.&lt;/xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The component has no user interface and is designed for use in a single-threaded environment.</source>
          <target state="translated">Komponenten har ingen brukergrensesnittet og er utviklet for bruk i et miljø med enkelttrådet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</source>
          <target state="translated">&gt;- &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: en ASP.NET-komponenten som utfører asynkron eller synkron websiden tilbakesendinger på en vanlig intervall.&lt;/xref:System.Web.UI.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets all the properties to their initial values.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse, og angir alle egenskapene til de opprinnelige verdiene.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">Tabellen nedenfor viser første egenskapsverdier for en forekomst av &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Timers.Timer.AutoReset%2A&gt;|<ph id="ph1">`true`</ph>|   |&lt;xref:System.Timers.Timer.Enabled%2A&gt;|<ph id="ph2">`false`</ph>|   |&lt;xref:System.Timers.Timer.Interval%2A&gt;|100 milliseconds|   |&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;|A null reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).|</source>
          <target state="translated">| Egenskapen | Standardverdi |   |--------------|-------------------|   | &lt;xref:System.Timers.Timer.AutoReset%2A&gt;| <ph id="ph1">`true`</ph>|   | &lt;xref:System.Timers.Timer.Enabled%2A&gt;| <ph id="ph2">`false`</ph>|   | &lt;xref:System.Timers.Timer.Interval%2A&gt;|&amp;100; millisekunder |   | &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;| En nullreferanse (<ph id="ph3">`Nothing`</ph> i Visual Basic). |&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets the &lt;xref:System.Timers.Timer.Interval*&gt; property to the specified number of milliseconds.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen og angir de &lt;xref:System.Timers.Timer.Interval*&gt;egenskapen til det angitte antallet millisekunder.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.Timers.Timer.Interval%2A&gt; property of the new timer instance, but does not enable the timer.</source>
          <target state="translated">Denne konstruktøren angir den &lt;xref:System.Timers.Timer.Interval%2A&gt;for den nye tidtaker-forekomsten, men aktiveres ikke tidtakeren.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between events.</source>
          <target state="translated">Tid i millisekunder mellom hendelser.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Verdien må være større enn null og mindre enn eller lik <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">interval</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero, or greater than <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">Verdien for den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">interval</ph> <ept id="p1">&lt;/code&gt;</ept> parameteren er mindre enn eller lik null, eller større enn <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event only once (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) or repeatedly (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Henter eller angir en boolsk som angir om den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan øke den <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> hendelsen bare én gang (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) eller flere ganger (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is already enabled when the &lt;xref:System.Timers.Timer.Start%2A&gt; method is called, the interval is reset.</source>
          <target state="translated">Hvis den &lt;xref:System.Timers.Timer&gt;er allerede aktivert når den &lt;xref:System.Timers.Timer.Start%2A&gt;-metoden, intervallet tilbakestilles.&lt;/xref:System.Timers.Timer.Start%2A&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AutoReset is <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer.Start%2A&gt; method must be called in order to start the count again.</source>
          <target state="translated">Hvis AutoReset <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer.Start%2A&gt;metoden må kalles for å starte antallet på nytt.&lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the interval affects when the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised.</source>
          <target state="translated">Tilbakestille intervallet påvirker når den &lt;xref:System.Timers.Timer.Elapsed&gt;denne hendelsen oppstår.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Hvis du angir intervallet for 5 sekunder, og deretter angir du for eksempel den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>, antallet starter da &lt;xref:System.Timers.Timer.Enabled%2A&gt;er angitt.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when the count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Hvis du tilbakestiller intervallet til 10 sekunder når antallet er 3 sekunder det &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen starter for første gang 13 sekunder etter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;-egenskap er satt til <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event each time the interval elapses; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> if it should raise the <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> event only once, after the first time the interval elapses.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> kan øke den <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> hendelsen hver gang intervallet går; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> hvis den skal opphøyes i <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> hendelsen bare én gang, intervallet utløper etter første gang.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Begins the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Starter kjøretid initialisering av en <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som brukes i et skjema eller av en annen komponent.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to start the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Den <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> utformingen miljøet bruker denne metoden for å starte initialisering av en komponent som brukes i et skjema eller av en annen komponent.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.EndInit%2A&gt;metoden slutter initialiseringen.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the BeginInit and &lt;xref:System.Timers.Timer.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Ved hjelp av BeginInit og &lt;xref:System.Timers.Timer.EndInit%2A&gt;metoder hindrer at kontrollen brukes før den er fullstendig initialisert.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Frigir ressursene som brukes av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Close method in turn calls the <ph id="ph1">`Dispose`</ph> method.</source>
          <target state="translated">Metoden Close kaller den <ph id="ph1">`Dispose`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Frigir alle ressursene som brukes av gjeldende <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>å frigjøre både administrerte og uforvaltede ressurser. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> frigi bare uforvaltede ressurser.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Occurs when the interval elapses.</source>
          <target state="translated">Forekommer når intervallet utløper.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Elapsed event is raised if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property is <ph id="ph1">`true`</ph> and the time interval (in milliseconds) defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property elapses.</source>
          <target state="translated">Brukt denne hendelsen oppstår hvis den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph> og tidsintervallet (i millisekunder) som er definert av den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen går.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property is <ph id="ph1">`true`</ph>, the event is raised repeatedly at an interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property; otherwise, the event is raised only once, the first time the &lt;xref:System.Timers.Timer.Interval%2A&gt; value elapses.</source>
          <target state="translated">Hvis den &lt;xref:System.Timers.Timer.AutoReset%2A&gt;egenskapen <ph id="ph1">`true`</ph>, hendelsen oppstår flere ganger i intervaller som er definert av den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskap; ellers hendelsen oppstår bare én gang ved første gang de &lt;xref:System.Timers.Timer.Interval%2A&gt;verdi går.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Interval%2A&gt; is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Hvis &lt;xref:System.Timers.Timer.Interval%2A&gt;er angitt etter den &lt;xref:System.Timers.Timer&gt;har startet, tilbakestilles antallet.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Hvis du angir intervallet for 5 sekunder, og deretter angir du for eksempel &lt;xref:System.Timers.Timer.Enabled%2A&gt;til <ph id="ph1">`true`</ph>, antallet starter da &lt;xref:System.Timers.Timer.Enabled%2A&gt;er angitt.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the Elapsed event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Hvis du tilbakestiller intervallet til 10 sekunder når antall er 3 sekunder, brukt hendelsen starter for første gang 13 sekunder etter &lt;xref:System.Timers.Timer.Enabled%2A&gt;skulle <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>,the Elapsed event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Hvis den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskapen <ph id="ph1">`null`</ph>, brukt denne hendelsen oppstår ved en &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the processing of the Elapsed event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Hvis behandling av hendelsen brukt varer lenger enn &lt;xref:System.Timers.Timer.Interval%2A&gt;, hendelsen kan oppstå på nytt på en annen &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">I dette tilfellet skal hendelsesbehandlingen innkommende.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Hendelseshåndtering metoden kan kjøre på en tråd samtidig som en annen tråd kaller den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden eller angir den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the Elapsed event being raised after the timer is stopped.</source>
          <target state="translated">Dette kan føre til at hendelsen brukt som starter etter tidtakeren er stoppet.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Eksempelkode for den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden viser en måte å unngå problemet løp.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, Elapsed events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the Elapsed event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Selv om &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;er ikke <ph id="ph1">`null`</ph>, brukt hendelser kan skje etter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;har blitt kalt eller etter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen er satt til <ph id="ph2">`false`</ph>fordi signalet opphøye hendelsen brukt alltid i kø for kjøring på en tråd applikasjonsutvalget tråd.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the Elapsed event to ignore subsequent events.</source>
          <target state="translated">Én måte å løse problemet løp er å angi et flagg som forteller hendelsesbehandlingen for hendelsen brukt til å ignorere etterfølgende hendelser.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer&gt; component catches and suppresses all exceptions thrown by event handlers for the Elapsed event.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer&gt;komponent fanger inn og skjuler alle unntak fra hendelsesbehandling for hendelsen brukt.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Dette er underlagt endring i fremtidige versjoner av .NET Framework.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som skal legges til.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Henter eller angir en verdi som angir om den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan øke den <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> hendelsen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting Enabled to <ph id="ph1">`true`</ph> is the same as calling &lt;xref:System.Timers.Timer.Start%2A&gt;, while setting Enabled to <ph id="ph2">`false`</ph> is the same as calling &lt;xref:System.Timers.Timer.Stop%2A&gt;.</source>
          <target state="translated">Sette Enabled til <ph id="ph1">`true`</ph> er den samme som kaller &lt;xref:System.Timers.Timer.Start%2A&gt;under innstillingen aktivert til <ph id="ph2">`false`</ph> er den samme som kaller &lt;xref:System.Timers.Timer.Stop%2A&gt;.&lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Signalet opphøye den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen er alltid i kø for kjøring i en &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Enabled property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Dette kan føre til den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen som som opprettes når egenskapen Enabled er satt til <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to work around this race condition.</source>
          <target state="translated">Kodeeksempel for den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden viser én måte å omgå problemet løp.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Enabled is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Hvis aktivert er satt til <ph id="ph1">`true`</ph> og &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er satt til <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen bare én gang, første gang intervallet utløper.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Hvis intervallet som er angitt etter den &lt;xref:System.Timers.Timer&gt;har startet, tilbakestilles antallet.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the Enabled property to <ph id="ph1">`true`</ph>, the count starts at the time Enabled is set.</source>
          <target state="translated">Hvis du setter intervallet til 5 sekunder, og angi egenskapen Enabled for eksempel <ph id="ph1">`true`</ph>, antallet starter da aktivert er angitt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after Enabled was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Hvis du tilbakestiller intervallet til 10 sekunder når antall er 3 sekunder det &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen starter for første gang 13 sekunder etter at aktivert skulle <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some visual designers, such as those in Microsoft Visual Studio, set the Enabled property to <ph id="ph2">`true`</ph> when inserting a new &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Noen visuelle verktøy, for eksempel de som finnes i Microsoft Visual Studio, angi egenskapen Enabled <ph id="ph2">`true`</ph> når du setter inn en ny &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> kan øke den <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> hendelsen; Ellers <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the timer has been disposed.</source>
          <target state="translated">Denne egenskapen kan ikke angis fordi tidtakeren har blitt fjernet.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Timers.Timer.Interval*&gt; property was set to a value greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> before the timer was enabled.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.Interval*&gt;-egenskap er satt til en verdi større enn <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> før tidtakeren ble aktivert.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Ends the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Slutter kjøretid initialisering av en <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som brukes i et skjema eller av en annen komponent.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to end the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Den <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> utformingen miljøet bruker denne metoden avsluttes initialisering av en komponent som brukes i et skjema eller av en annen komponent.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.BeginInit%2A&gt;metoden starter initialiseringen.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Timers.Timer.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Ved hjelp av den &lt;xref:System.Timers.Timer.BeginInit%2A&gt;og EndInit metoder hindrer at kontrollen brukes før den er fullstendig initialisert.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval, expressed in milliseconds, at which to raise the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Henter eller angir intervallet, angitt i millisekunder som opphøye den <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hendelsen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the Interval property to determine the frequency at which the &lt;xref:System.Timers.Timer.Elapsed&gt; event is fired.</source>
          <target state="translated">Du bruke egenskapen intervall for å finne hyppigheten som den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen startes.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the &lt;xref:System.Timers.Timer&gt; class depends on the system clock, it has the same resolution as the system clock.</source>
          <target state="translated">Fordi den &lt;xref:System.Timers.Timer&gt;klassen som er avhengig av systemklokke, den har samme oppløsning som systemklokken.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the Interval property is less than the resolution of the system clock.</source>
          <target state="translated">Dette betyr at den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen vil gjelde med en intervallet som er definert av løsing av systemklokken Hvis egenskapen intervall er under løsing av systemklokken.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the Interval property to 5 milliseconds.</source>
          <target state="translated">Følgende eksempel angir intervallet-egenskapen til 5 millisekunder.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When run on a <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</source>
          <target state="translated">Når du kjører en <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> systemet der systemklokke har en oppløsning på omtrent 15 millisekunder hendelsen starter ca. hver 15 millisekunder i stedet for hver 5 millisekunder.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept><ept id="p3">]</ept>       You can use the following code to determine the resolution of the system clock on the current system:       <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept>  <bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept><ept id="p7">]</ept>       If your app requires greater resolution than that offered by the &lt;xref:System.Timers.Timer&gt; class or the system clock, use the high-resolution multimedia timers; see <bpt id="p9">[</bpt>How to: Use the High-Resolution Timer<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept> <ept id="p3">]</ept> du kan bruke følgende kode til å fastsette løsing av systemklokke i gjeldende system: <bpt id="p5">[!code-cs</bpt> <bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept><bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept> <ept id="p7">]</ept> Hvis appen krever større oppløsning enn som tilbys av den &lt;xref:System.Timers.Timer&gt;klasse eller systemklokke bruk med høy oppløsning multimedia tidtakerne, se <bpt id="p9">[</bpt>slik: Bruk med høy oppløsning tidtakeren<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.&lt;/xref:System.Timers.Timer&gt;    </target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Hvis intervallet som er angitt etter den &lt;xref:System.Timers.Timer&gt;har startet, tilbakestilles antallet.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Hvis du angir intervallet for 5 sekunder, og deretter angir du for eksempel den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>, antallet starter da &lt;xref:System.Timers.Timer.Enabled%2A&gt;er angitt.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Hvis du tilbakestiller intervallet til 10 sekunder når antall er 3 sekunder det &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen starter for første gang 13 sekunder etter &lt;xref:System.Timers.Timer.Enabled%2A&gt;skulle <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Hvis &lt;xref:System.Timers.Timer.Enabled%2A&gt;er satt til <ph id="ph1">`true`</ph> og &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er satt til <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen bare én gang, første gang intervallet utløper.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Timers.Timer.Enabled%2A&gt; is then set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Timers.Timer.Enabled%2A&gt;deretter er satt til <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.Enabled%2A&gt; and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; are both set to <ph id="ph2">`false`</ph>, and the timer has previously been enabled, setting the Interval property causes the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be raised once, as if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property had been set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Hvis &lt;xref:System.Timers.Timer.Enabled%2A&gt;og &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er satt til <ph id="ph2">`false`</ph>, og tidtakeren tidligere er aktivert, innstillingen intervall egenskapen årsaker i &lt;xref:System.Timers.Timer.Elapsed&gt;-hendelse når, som om det &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen var angitt <ph id="ph3">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the interval without raising the event, you can temporarily set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, set the Interval property to the desired time interval, and then immediately set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property back to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Du kan angi intervallet uten å heve hendelsen, kan du midlertidig sette den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>egenskapen intervall til ønsket tidsintervall og deretter umiddelbart klargjøre den &lt;xref:System.Timers.Timer.Enabled%2A&gt;tilbake til <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> events.</source>
          <target state="translated">Ønsket tid i millisekunder mellom <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hendelser.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero, and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Verdien må være større enn null og mindre enn eller lik <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default is 100 milliseconds.</source>
          <target state="translated">Standarden er 100 millisekunder.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The interval is less than or equal to zero.</source>
          <target state="translated">Intervallet som er mindre enn eller lik null.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       The interval is greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, and the timer is currently enabled.</source>
          <target state="translated">- eller - intervallet som er større enn <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, og tidtakeren er aktivert.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</source>
          <target state="translated">(Hvis tidtakeren ikke er aktivert, noen unntak før den blir aktivert.)</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the site that binds the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its container in design mode.</source>
          <target state="translated">Henter eller angir området som binder den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> til beholderen i utformingsmodus.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as providing a way for the container to manage its components.</source>
          <target state="translated">Områder binde en &lt;xref:System.ComponentModel.Component&gt;til en &lt;xref:System.ComponentModel.Container&gt;og aktivere kommunikasjon mellom dem, i tillegg gir en metode for beholderen til å administrere komponentene.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface representing the site that binds the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to its container.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> grensesnitt som representerer området som binder den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> -objekt til beholderen.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Starts raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Starter opprettet av <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hendelsen ved å angi &lt;xref:System.Timers.Timer.Enabled*&gt;til <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Hvis Start kalles og &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er satt til <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer&gt;opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen bare én gang, første gang intervallet utløper.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph1">`true`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event the first time the interval elapses and continues to raise the event on the specified interval.</source>
          <target state="translated">Hvis Start kalles og &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er <ph id="ph1">`true`</ph>, &lt;xref:System.Timers.Timer&gt;opphøyer den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen første gang intervallet går og fortsetter å heve hendelsen på det angitte intervallet.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also start timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Du kan også starte tidsberegning ved å angi &lt;xref:System.Timers.Timer.Enabled%2A&gt;til <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph2">`false`</ph>, the Start method must be called in order to start the count again.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Hvis &lt;xref:System.Timers.Timer.AutoReset%2A&gt;er <ph id="ph2">`false`</ph>, Start-metoden må kalles for å starte antallet på nytt.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the Start method when the timer is enabled has no effect.</source>
          <target state="translated">Et kall til metoden Start når tidtakeren er aktivert, har ingen virkning.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is created with an interval equal to or greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1, or set to an interval less than zero.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> er opprettet med et intervall større enn eller lik <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1 eller satt til en intervallet som er mindre enn null.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Stops raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stopper å heve den <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hendelsen ved å angi &lt;xref:System.Timers.Timer.Enabled*&gt;til <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also stop timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Du kan også stoppe tidsberegning ved å angi &lt;xref:System.Timers.Timer.Enabled%2A&gt;til <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread, so the event-handling method might run on one thread at the same time that a call to the Stop method runs on another thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Signalet opphøye den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen er alltid i kø for kjøring i en &lt;xref:System.Threading.ThreadPool&gt;tråd slik hendelseshåndtering metoden kan kjøre på en tråd samtidig som et kall til Stop-metoden kjører på en annen tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Stop method is called.</source>
          <target state="translated">Dette kan føre til den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelse som starter etter Stop-metoden blir kalt.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example in the next section shows one way to work around this race condition.</source>
          <target state="translated">Kodeeksempel i delen nedenfor viser én måte å omgå problemet løp.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Henter eller angir objektet som ble brukt til å formidle hendelsesbehandlingen anrop som er utstedt når et intervall er utløpt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SynchronizingObject is <ph id="ph1">`null`</ph>, the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event is called on a thread from the system-thread pool.</source>
          <target state="translated">Når SynchronizingObject er <ph id="ph1">`null`</ph>, metoden som behandler den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen kalles på en tråd fra systemet thread pool.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on system-thread pools, see &lt;xref:System.Threading.ThreadPool&gt;.</source>
          <target state="translated">Hvis du vil ha mer informasjon om system-tråd applikasjonsutvalg, kan du se &lt;xref:System.Threading.ThreadPool&gt;.&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Timers.Timer.Elapsed&gt; event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</source>
          <target state="translated">Når den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen behandles av en visual Windows Forms-komponent, for eksempel en knapp tilgang til komponenten via system-trådutvalget kan resultatet i et unntak eller bare vil kanskje ikke fungere.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid this effect by setting SynchronizingObject to a Windows Forms component, which causes the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be called on the same thread that the component was created on.</source>
          <target state="translated">Unngå denne effekten ved å angi SynchronizingObject til en Windows Forms-komponent som fører til at metoden som behandler den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen skal kalles på den samme tråden komponenten ble opprettet på.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Even if the SynchronizingObject property is not <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph3">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Selv om egenskapen SynchronizingObject ikke <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;hendelser kan skje etter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;har blitt kalt eller etter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen er satt til <ph id="ph3">`false`</ph>fordi signalet opphøye den &lt;xref:System.Timers.Timer.Elapsed&gt;hendelsen alltid i kø for kjøring på en tråd applikasjonsutvalget tråd.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Én måte å løse problemet løp som angir et flagg som forteller hendelsesbehandlingen for den &lt;xref:System.Timers.Timer.Elapsed&gt;-hendelsen for å ignorere etterfølgende hendelser.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is used inside Visual Studio in a Windows Forms designer, SynchronizingObject is automatically set to the control that contains the &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">Hvis den &lt;xref:System.Timers.Timer&gt;er brukt i Visual Studio i Windows Forms-utforming, SynchronizingObject automatisk settes til kontrollen som inneholder &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you place a &lt;xref:System.Timers.Timer&gt; on a designer for <ph id="ph1">`Form1`</ph> (which inherits from &lt;xref:System.Windows.Forms.Form&gt;), the SynchronizingObject property of &lt;xref:System.Timers.Timer&gt; is set to the instance of <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Hvis du setter for eksempel en &lt;xref:System.Timers.Timer&gt;på en utformer for <ph id="ph1">`Form1`</ph> (som arver fra &lt;xref:System.Windows.Forms.Form&gt;), SynchronizingObject-egenskapen for &lt;xref:System.Timers.Timer&gt;er satt til forekomsten av <ph id="ph2">`Form1`</ph>.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Windows.Forms.Form&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som representerer objektet som ble brukt til å formidle hendelsesbehandlingen kall som er utstedt når et intervall er utløpt.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>