<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">869e2d13071ffdd5c6fbb3cdaec0c6cbfba8ffe0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.BufferedStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfc15ee86ba9181f690e516b871fd2be4e180055</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">578f042a0dadbb4176f263189037db06eac6b3e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adds a buffering layer to read and write operations on another stream.</source>
          <target state="translated">Lägger till ett buffring lager Läs-och skrivåtgärder i en annan dataström.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Den här klassen kan inte ärvas.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a default buffer size of 4096 bytes.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass med en standardbuffertstorlek 4096 byte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">En delad läsning och skrivning buffert har allokerats första gången en <ph id="ph1">`BufferedStream`</ph> objektet har initierats med den här konstruktorn.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Delade buffert används inte om alla läsningar och skrivningar är större än eller lika med <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">Den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified buffer size.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass med den angivna buffertstorleken.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">En delad läsning och skrivning buffert har allokerats första gången en <ph id="ph1">`BufferedStream`</ph> objektet har initierats med den här konstruktorn.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Delade buffert används inte om alla läsningar och skrivningar är större än eller lika med <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">Den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The buffer size in bytes.</source>
          <target state="translated">Läsbuffertens storlek i byte.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>är negativt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">Börjar en asynkron läsning.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Överväg att använda &lt;xref:System.IO.BufferedStream.ReadAsync*&gt;i stället, finns i avsnittet Anmärkningar.)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">I .NET Framework 4 och tidigare versioner, behöver du använda metoder som &lt;xref:System.IO.Stream.BeginRead%2A&gt;och &lt;xref:System.IO.Stream.EndRead%2A&gt;att implementera asynkron filåtgärder.&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Dessa metoder är fortfarande tillgängliga i den <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> att stödja äldre kod; men de nya asynkrona metoderna som &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, och &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, hjälp som du enkelt implementera asynkron filåtgärder.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;måste anropas en gång för varje anrop till BeginRead.&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">Att avsluta en process som skrivskyddade innan du påbörjar en annan Läs inte kan orsaka oönskat beteende, till exempel dödläge.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.BufferedStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Används den &lt;xref:System.IO.BufferedStream.CanRead%2A&gt;egenskapen för att avgöra om den aktuella instansen stöder läsning.&lt;/xref:System.IO.BufferedStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndRead%2A&gt; must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;måste anropas med den här &lt;xref:System.IAsyncResult&gt;att ta reda på hur många byte lästes.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The buffer to read the data into.</source>
          <target state="translated">Den buffert som används för att läsa data i.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data read from the stream.</source>
          <target state="translated">Byte-förskjutning i <ph id="ph1">`buffer`</ph> som du vill börja skriva data läses från dataströmmen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Maximalt antal byte som ska läsas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">Ett valfritt asynkront motanrop, anropas när Läs är klar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">Ett användardefinierade objekt som särskiljer den här viss asynkron läsbegäran från andra begäranden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">Ett objekt som representerar asynkron läsning, som kan fortfarande vara väntande.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Attempted an asynchronous read past the end of the stream.</source>
          <target state="translated">Ett försök gjordes en asynkron läsning efter slutet på dataströmmen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The buffer length minus <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Buffertlängd minus <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> är mindre än <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The current stream does not support the read operation.</source>
          <target state="translated">Den aktuella dataströmmen stöder inte läsningen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">Börjar en asynkron skrivning.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Överväg att använda &lt;xref:System.IO.BufferedStream.WriteAsync*&gt;i stället, finns i avsnittet Anmärkningar.)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">I .NET Framework 4 och tidigare versioner, behöver du använda metoder som &lt;xref:System.IO.Stream.BeginWrite%2A&gt;och &lt;xref:System.IO.Stream.EndWrite%2A&gt;att implementera asynkron filåtgärder.&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Dessa metoder är fortfarande tillgängliga i den <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> att stödja äldre kod; men de nya asynkrona metoderna som &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, och &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, hjälp som du enkelt implementera asynkron filåtgärder.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;måste anropas en gång för varje &lt;xref:System.IAsyncResult&gt;från BeginWrite.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; will block until the I/O operation has completed.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;blockerar tills i/o-åtgärden har slutförts.&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">Den buffert som innehåller data att skriva till den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Nollbaserade byte-förskjutning i <ph id="ph1">`buffer`</ph> som du vill börja kopiera byte till den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Maximalt antal byte att skriva.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">Metoden som ska anropas vid asynkron skrivning-åtgärden har slutförts.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">Ett användardefinierade objekt som särskiljer viss asynkron skrivning begäran från andra begäranden.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous write which could still be pending.</source>
          <target state="translated">Ett objekt som refererar till asynkron skrivning som kan fortfarande vara väntande.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>längden minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> är mindre än <ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Dataströmmen stöder inte skrivning.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">Hämtar ett värde som anger om den aktuella dataströmmen har stöd för läsning.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support reading, calls to the &lt;xref:System.IO.BufferedStream.Read%2A&gt;, &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;, &lt;xref:System.IO.Stream.BeginRead%2A&gt;, &lt;xref:System.IO.Stream.EndRead%2A&gt;, and the <ph id="ph1">`Peek`</ph> methods of &lt;xref:System.IO.StreamReader&gt;, &lt;xref:System.IO.StringReader&gt;, and &lt;xref:System.IO.TextReader&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Om en klass som härletts från &lt;xref:System.IO.Stream&gt;stöder inte läsning, anrop till den &lt;xref:System.IO.BufferedStream.Read%2A&gt;, &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;, &lt;xref:System.IO.Stream.BeginRead%2A&gt;, &lt;xref:System.IO.Stream.EndRead%2A&gt;, och <ph id="ph1">`Peek`</ph> metoder för &lt;xref:System.IO.StreamReader&gt;, &lt;xref:System.IO.StringReader&gt;, och &lt;xref:System.IO.TextReader&gt;utlösa &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Read%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Om dataströmmen är stängd visas den här egenskapen returnerar <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports reading; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om dataströmmen stöder läsning; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om dataströmmen är stängd eller öppnades med skrivtillgång.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">Hämtar ett värde som anger om den aktuella dataströmmen har stöd för sökning.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support seeking, calls to &lt;xref:System.IO.BufferedStream.Length%2A&gt;, &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Position%2A&gt;, and &lt;xref:System.IO.BufferedStream.Seek%2A&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Om en klass som härletts från &lt;xref:System.IO.Stream&gt;inte har stöd för sökning, anrop till &lt;xref:System.IO.BufferedStream.Length%2A&gt;, &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Position%2A&gt;, och &lt;xref:System.IO.BufferedStream.Seek%2A&gt;utlösa &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.Seek%2A&gt; &lt;/xref:System.IO.BufferedStream.Position%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.BufferedStream.Length%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Om dataströmmen är stängd visas den här egenskapen returnerar <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports seeking; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om strömmen har stöd för sökning; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om dataströmmen är stängd eller om strömmen skapades från en referens för operativsystemet, till exempel en pipe- eller utdata till konsolen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">Hämtar ett värde som anger om den aktuella dataströmmen har stöd för skrivning.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support writing, a call to &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Write%2A&gt;, or &lt;xref:System.IO.BufferedStream.WriteByte%2A&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Om en klass som härletts från &lt;xref:System.IO.Stream&gt;stöder inte skrivning av ett anrop till &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Write%2A&gt;, eller &lt;xref:System.IO.BufferedStream.WriteByte%2A&gt;utlöser &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.WriteByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Write%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Om dataströmmen är stängd visas den här egenskapen returnerar <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports writing; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om dataströmmen stöder skrivning; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om dataströmmen är stängd eller har öppnats med skrivskyddad åtkomst.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som ska läggas till.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">Väntar på att väntande asynkrona skrivskyddade åtgärden är klar.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Överväg att använda &lt;xref:System.IO.BufferedStream.ReadAsync*&gt;i stället, finns i avsnittet Anmärkningar.)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">I .NET Framework 4 och tidigare versioner, behöver du använda metoder som &lt;xref:System.IO.Stream.BeginRead%2A&gt;och &lt;xref:System.IO.Stream.EndRead%2A&gt;att implementera asynkron filåtgärder.&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Dessa metoder är fortfarande tillgängliga i den <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> att stödja äldre kod; men de nya asynkrona metoderna som &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, och &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, hjälp som du enkelt implementera asynkron filåtgärder.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndRead must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">EndRead måste anropas med den här &lt;xref:System.IAsyncResult&gt;att ta reda på hur många byte lästes.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">Referens till väntande asynkron begäran för att vänta på.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">Antalet byte lästes in från strömmen mellan 0 (noll) och antalet byte som du begärde.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">Dataströmmar bara returnera 0 endast i slutet på dataströmmen, annars de bör blockera tills minst 1 byte är tillgänglig.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginRead*&gt; on this class.</source>
          <target state="translated">Det här &lt;xref:System.IAsyncResult&gt;objektet skapades inte genom att anropa &lt;xref:System.IO.BufferedStream.BeginRead*&gt;på den här klassen.&lt;/xref:System.IO.BufferedStream.BeginRead*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">Avslutar en asynkron skrivning och blockerar tills i/o-åtgärden har slutförts.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Överväg att använda &lt;xref:System.IO.BufferedStream.WriteAsync*&gt;i stället, finns i avsnittet Anmärkningar.)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">I .NET Framework 4 och tidigare versioner, behöver du använda metoder som &lt;xref:System.IO.Stream.BeginWrite%2A&gt;och &lt;xref:System.IO.Stream.EndWrite%2A&gt;att implementera asynkron filåtgärder.&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Dessa metoder är fortfarande tillgängliga i den <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> att stödja äldre kod; men de nya asynkrona metoderna som &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, och &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, hjälp som du enkelt implementera asynkron filåtgärder.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndWrite must be called exactly once for every call to &lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;.</source>
          <target state="translated">EndWrite måste anropas en gång för varje anrop till &lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;.&lt;/xref:System.IO.BufferedStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</source>
          <target state="translated">Inte att avsluta en process som skrivskyddade innan du börjar kan en annan Läsåtgärden orsaka deadlock eller andra oönskat beteende.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The pending asynchronous request.</source>
          <target state="translated">En väntande asynkron begäran.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginWrite*&gt; on this class.</source>
          <target state="translated">Det här &lt;xref:System.IAsyncResult&gt;objektet skapades inte genom att anropa &lt;xref:System.IO.BufferedStream.BeginWrite*&gt;på den här klassen.&lt;/xref:System.IO.BufferedStream.BeginWrite*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Rensar alla buffertar för den här dataströmmen och gör att alla buffrade data skrivs till den underliggande enheten.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or &lt;xref:System.IO.Stream.Close%2A&gt;.</source>
          <target state="translated">Tömmer dataströmmen kommer inte att tömma dess underliggande kodare såvida inte explicit anropa <ph id="ph1">`Flush`</ph> eller &lt;xref:System.IO.Stream.Close%2A&gt;.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the &lt;xref:System.IO.BufferedStream.%23ctor%2A&gt; constructor, thus specifying the buffer size while creating the <ph id="ph1">`BufferedStream`</ph> object, the content is flushed when it reaches the buffer size.</source>
          <target state="translated">Om du använder den &lt;xref:System.IO.BufferedStream.%23ctor%2A&gt;konstruktor, vilket anger buffertstorleken när du skapar den <ph id="ph1">`BufferedStream`</ph> objekt innehållet rensas när den når buffertstorleken.&lt;/xref:System.IO.BufferedStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, code such as <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> will flush the content when the buffer size reaches 5 bytes.</source>
          <target state="translated">Till exempel code som <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> kommer att tömma innehållet när buffertstorleken når 5 byte.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the read and write methods of <ph id="ph1">`BufferedStream`</ph> automatically maintain the buffer, so there is no need to invoke <ph id="ph2">`Flush`</ph> when switching back and forth between reading and writing.</source>
          <target state="translated">Alla Läs- och skrivbehörighet metoderna för <ph id="ph1">`BufferedStream`</ph> automatiskt Underhåll bufferten, så inte behöver att anropa <ph id="ph2">`Flush`</ph> när du växlar fram och tillbaka mellan läsning och skrivning.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Dataströmmen har avslutats.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The data source or repository is not open.</source>
          <target state="translated">Datakällan eller databasen är inte öppen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">Rensar alla buffertar för den här dataströmmen asynkront, gör att alla buffrade data skrivs till den underliggande enheten och övervakar annullering förfrågningar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token för att övervaka för annullering begäranden.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">En aktivitet som representerar den asynkrona åtgärden för tömning.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Dataströmmen har avslutats.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the stream length in bytes.</source>
          <target state="translated">Hämtar dataströmmens längd i byte.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The stream length in bytes.</source>
          <target state="translated">Dataströmmens längd i byte.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The underlying stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or closed.</source>
          <target state="translated">Den underliggande dataströmmen är <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eller stängts.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Dataströmmen stöder inte sökning.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the position within the current stream.</source>
          <target state="translated">Hämtar position inom den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`get`</ph> accessor invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt; to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</source>
          <target state="translated">Den <ph id="ph1">`get`</ph> accessor anropar &lt;xref:System.IO.BufferedStream.Seek%2A&gt;att hämta aktuell position i den underliggande dataströmmen och justerar värdet enligt aktuell position i bufferten.&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`set`</ph> accessor copies any data previously written to the buffer to the underlying stream, and then invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt;.</source>
          <target state="translated">Den <ph id="ph1">`set`</ph> accessor kopierar alla data som tidigare har skrivits till bufferten till en underliggande dataström och anropar sedan &lt;xref:System.IO.BufferedStream.Seek%2A&gt;.&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Sökning till en annan plats utanför längden på dataströmmen stöds.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The position within the current stream.</source>
          <target state="translated">Positionen i den aktuella dataströmmen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The value passed to &lt;xref:System.IO.BufferedStream.Seek*&gt; is negative.</source>
          <target state="translated">Värdet som skickas till &lt;xref:System.IO.BufferedStream.Seek*&gt;är negativt.&lt;/xref:System.IO.BufferedStream.Seek*&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ett i/o-fel inträffar, till exempel dataström stängdes.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Dataströmmen stöder inte sökning.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Copies bytes from the current buffered stream to an array.</source>
          <target state="translated">Kopior byte från den aktuella buffrat dataströmmen till en matris.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Read`</ph> method will return 0 only if the end of the stream is reached.</source>
          <target state="translated">Den <ph id="ph1">`Read`</ph> metoden returnerar 0 om slut på strömmen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, <ph id="ph1">`Read`</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">I annat fall <ph id="ph1">`Read`</ph> alltid minst en byte från strömmen innan det returneras.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>By definition, if no data is available from the stream upon a call to <ph id="ph1">`Read`</ph>, the <ph id="ph2">`Read`</ph> method returns 0 (the end of the stream is reached automatically).</source>
          <target state="translated">Per definition om inga data är tillgängliga från strömmen vid ett anrop till <ph id="ph1">`Read`</ph>, <ph id="ph2">`Read`</ph> metoden returnerar 0 (slutet på dataströmmen har nåtts automatiskt).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">En implementering är gratis att returnera färre byte än begärda även om slutet på dataströmmen har överskridits.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.IO.BinaryReader&gt; for reading primitive data types.</source>
          <target state="translated">Använd &lt;xref:System.IO.BinaryReader&gt;för att läsa primitiva datatyper.&lt;/xref:System.IO.BinaryReader&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The buffer to which bytes are to be copied.</source>
          <target state="translated">Den buffert som är byte som ska kopieras.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer at which to begin reading bytes.</source>
          <target state="translated">Byte-förskjutning i bufferten som du vill börja läsa byte.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The number of bytes to be read.</source>
          <target state="translated">Antal byte som ska läsas.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Läsa in det totala antalet byte i <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</source>
          <target state="translated">Detta kan vara mindre än antalet byte som efterfrågas om många byte är inte tillgängliga, eller 0 om du har nått slutet på dataströmmen innan alla data kan läsas.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dataströmmen är inte öppen eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Dataströmmen stöder inte läsning.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Asynkront läser en sekvens med byte från den aktuella dataströmmen avancerar position i dataströmmen med antalet lästa byte och övervakar annullering förfrågningar.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Du kan skapa en annullering token genom att skapa en instans av den &lt;xref:System.Threading.CancellationTokenSource&gt;klass och skicka den &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;egenskapen som den <ph id="ph1">`cancellationToken`</ph> parameter.&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">Den buffert som används för att skriva data till.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">Byte-förskjutning i <ph id="ph1">`buffer`</ph> som du vill börja skriva data från dataströmmen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Maximalt antal byte som ska läsas.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token för att övervaka för annullering begäranden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">En aktivitet som representerar den asynkron läsåtgärd.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept> parametern innehåller det totala antalet byte som har lästs i bufferten.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">Resultatvärdet kan vara mindre än antalet byte som efterfrågas om antalet byte som är tillgänglig för närvarande är mindre än det begärda antalet, eller det kan vara 0 (noll) om du har nått slutet på dataströmmen.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">Summan av <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> och <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> är större än buffertens längd.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Dataströmmen stöder inte läsning.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Dataströmmen har avslutats.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">Dataströmmen är för närvarande används av en tidigare läsning.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Reads a byte from the underlying stream and returns the byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or returns -1 if reading from the end of the stream.</source>
          <target state="translated">Läser en byte från den underliggande dataströmmen och returnerar byte omvandlas till ett <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, eller returnerar -1 om läsning från slutet på dataströmmen.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or -1 if reading from the end of the stream.</source>
          <target state="translated">Byten som skickas till en <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, eller -1 om läsning från slutet på dataströmmen.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ett i/o-fel inträffar, till exempel dataström stängdes.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Dataströmmen stöder inte läsning.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Sets the position within the current buffered stream.</source>
          <target state="translated">Anger positionen i den aktuella buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position will precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Om <ph id="ph1">`offset`</ph> är negativt, den nya platsen kommer föregå positionen som anges av <ph id="ph2">`origin`</ph> med antalet byte som anges av <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is 0, the new position will be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">Om <ph id="ph1">`offset`</ph> är 0 blir det nya läget positionen som anges av <ph id="ph2">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position will follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Om <ph id="ph1">`offset`</ph> är positivt, den nya positionen följer positionen som anges av <ph id="ph2">`origin`</ph> med antalet byte som anges av <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.IO.BufferedStream&gt; object is the base stream for a &lt;xref:System.IO.StreamReader&gt; object, calling the Seek method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</source>
          <target state="translated">När en &lt;xref:System.IO.BufferedStream&gt;objektet är Basdataströmmen för en &lt;xref:System.IO.StreamReader&gt;objekt anropar metoden Seek kan orsaka positionen för dataström som inte längre matchar positionen för den interna bufferten i läsaren.&lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.BufferedStream&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset the internal buffer, call the &lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt; method; however, this method slows performance and should be called only when absolutely necessary.</source>
          <target state="translated">Om du vill återställa den interna bufferten anropa den &lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;metoden, men den här metoden minskar prestandan och ska bara anropas om absolut nödvändigt.&lt;/xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Sökning till en annan plats utanför längden på dataströmmen stöds.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A byte offset relative to <ph id="ph1">`origin`</ph>.</source>
          <target state="translated">En byte-förskjutning förhållande till <ph id="ph1">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point from which to obtain the new position.</source>
          <target state="translated">Ett värde av typen &lt;xref:System.IO.SeekOrigin&gt;som anger referenspunkten som du vill hämta den nya platsen.&lt;/xref:System.IO.SeekOrigin&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The new position within the current buffered stream.</source>
          <target state="translated">Ny plats i den aktuella buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dataströmmen är inte öppen eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Dataströmmen stöder inte sökning.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets the length of the buffered stream.</source>
          <target state="translated">Anger längden på buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buffer is flushed before setting the length of the underlying data source or repository.</source>
          <target state="translated">Bufferten töms innan du anger längden på den underliggande datakällan eller databasen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</source>
          <target state="translated">Om det angivna värdet är mindre än den aktuella längden på dataströmmen buffrat, trunkerad buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</source>
          <target state="translated">Om det angivna värdet är större än den aktuella längden på dataströmmen buffrat expanderas buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</source>
          <target state="translated">Om buffrade dataströmmen är expanderat definieras inte innehållet i buffrat dataströmmen mellan gammalt och nya längder.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SetLength`</ph> flushes any buffered writes if necessary.</source>
          <target state="translated"><ph id="ph1">`SetLength`</ph>Rensar alla buffrade skrivningar om det behövs.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">En dataström måste ha stöd för både skrivning och sökning för <ph id="ph1">`SetLength`</ph> ska fungera.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An integer indicating the desired length of the current buffered stream in bytes.</source>
          <target state="translated">Ett heltal som anger längden för den aktuella buffrat dataströmmen i byte.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>är negativt.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dataströmmen är inte öppen eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">Dataströmmen stöder inte både skrivning och sökning.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</source>
          <target state="translated">Kopierar byte till buffrat dataströmmen och framsteg aktuell position i dataströmmen buffrat med antalet skrivna byte.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The byte array from which to copy <ph id="ph1">`count`</ph> bytes to the current buffered stream.</source>
          <target state="translated">Bytematrisen som du vill kopiera <ph id="ph1">`count`</ph> byte till den aktuella buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The offset in the buffer at which to begin copying bytes to the current buffered stream.</source>
          <target state="translated">Förskjutningen i bufferten som du vill börja kopiera byte till den aktuella buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current buffered stream.</source>
          <target state="translated">Antal byte som ska skrivas till den aktuella buffrat dataströmmen.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The stream is closed or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dataströmmen är stängd eller <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Dataströmmen stöder inte skrivning.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Asynkront skriver en byte-sekvens till den aktuella dataströmmen avancerar aktuell position i dataströmmen med antalet skrivna byte och övervakar annullering förfrågningar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Du kan skapa en annullering token genom att skapa en instans av den &lt;xref:System.Threading.CancellationTokenSource&gt;klass och skicka den &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;egenskapen som den <ph id="ph1">`cancellationToken`</ph> parameter.&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">Den buffert som används för att skriva data från.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">Nollbaserade byte-förskjutning i <ph id="ph1">`buffer`</ph> som du vill börja kopiera byte till dataströmmen.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Maximalt antal byte att skriva.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token för att övervaka för annullering begäranden.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">En aktivitet som representerar asynkron skrivning-åtgärden.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>eller <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> är negativt.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">Summan av <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> och <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> är större än buffertens längd.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Dataströmmen stöder inte skrivning.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Dataströmmen har avslutats.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">Dataströmmen är för närvarande används av en tidigare skrivning.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the buffered stream.</source>
          <target state="translated">Skriver en byte till aktuell position i dataströmmen buffrade.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A byte to write to the stream.</source>
          <target state="translated">En byte att skriva till dataströmmen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Dataströmmen stöder inte skrivning.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Metoder har anropas när dataströmmen är stängd.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>