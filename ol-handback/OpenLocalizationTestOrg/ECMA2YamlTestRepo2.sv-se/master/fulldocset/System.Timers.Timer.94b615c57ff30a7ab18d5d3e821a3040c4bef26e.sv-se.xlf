<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f400be304e155c524c9a909ab36261e230b6edb1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Timers.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">826bcf8f328900e7727a603f770bc7592d80259f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f360dddbd4c33f6cfd312fc2e496d00a0ca07d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generates an event after a set interval, with an option to generate recurring events.</source>
          <target state="translated">Generera en händelse efter ett angivet intervall, med ett alternativ för att generera återkommande händelser.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated">Om du vill bläddra .NET Framework källkoden för den här typen finns i <bpt id="p1">[</bpt>referenskälla<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;.NET Framework källkoden för den här typen finns i <bpt id="p1">[</bpt>referenskälla<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">Du kan bläddra igenom källkoden online, hämta referens för visning offline och gå igenom källor (inklusive korrigeringarna och programvaruuppdateringarna) vid felsökning. Se <bpt id="p1">[</bpt>instruktioner<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component is a server-based timer that raises an &lt;xref:System.Timers.Timer.Elapsed&gt; event in your application after the number of milliseconds in the &lt;xref:System.Timers.Timer.Interval%2A&gt; property has elapsed.</source>
          <target state="translated">Timer-komponenten är en serverbaserad timer som aktiverar en &lt;xref:System.Timers.Timer.Elapsed&gt;händelse i ditt program efter antal millisekunder i den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen har förflutit.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure the Timer object to raise the event just once or repeatedly using the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property.</source>
          <target state="translated">Du kan konfigurera Timer-objekt för att höja händelsen en gång eller flera gånger med hjälp av den &lt;xref:System.Timers.Timer.AutoReset%2A&gt;egenskapen.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a Timer object is declared at the class level so that it stays in scope as long as it is needed.</source>
          <target state="translated">Vanligtvis har ett Timer-objekt deklarerats på klassnivå så att den inte i omfånget så länge som det behövs.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then handle its &lt;xref:System.Timers.Timer.Elapsed&gt; event to provide regular processing.</source>
          <target state="translated">Du kan sedan hantera dess &lt;xref:System.Timers.Timer.Elapsed&gt;händelse att ge regelbundna bearbetning.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</source>
          <target state="translated">Anta att du har en kritisk server som måste hållas kör dygnet runt, 7 dagar i veckan.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could create a service that uses a Timer object to periodically check the server and ensure that the system is up and running.</source>
          <target state="translated">Du kan skapa en tjänst som använder Timer-objekt för att regelbundet kontrollera servern och kontrollera att systemet är igång.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system is not responding, the service could attempt to restart the server or notify an administrator.</source>
          <target state="translated">Om systemet inte svarar kan tjänsten försöka starta om servern eller meddelar administratör.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Timer class is available in the .NET Framework only.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Det tidsinställda klass är tillgänglig i .NET-Framework.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not included in the .NET Standard Library and is not available on other platforms, such as .NET Core or the Universal Windows Platform.</source>
          <target state="translated">Den ingår inte i .NET-standardbibliotek och är inte tillgängligt för andra plattformar, till exempel .NET Core eller universella Windows-plattformen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>On these platforms, as well as for portability across all .NET platforms, you should use the &lt;xref:System.Threading.Timer?displayProperty=fullName&gt; class instead.</source>
          <target state="translated">På dessa plattformar, samt för överföring av alla .NET-plattformar, bör du använda den &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;klassen i stället.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">Den här typen implementerar den &lt;xref:System.IDisposable&gt;gränssnitt.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">När du är klar med typ, ta bort den direkt eller indirekt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Om du vill ta bort av typen direkt, anropa dess &lt;xref:System.IDisposable.Dispose%2A&gt;metod i en <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> block.&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Om du vill ta hand om den indirekt, använda en språk-konstruktion som <ph id="ph1">`using`</ph> (i C#) eller <ph id="ph2">`Using`</ph> (i Visual Basic).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">Mer information finns i avsnittet "Med hjälp av ett objekt som implementerar IDisposable" i den &lt;xref:System.IDisposable&gt;gränssnittet avsnittet.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server-based Timer class is designed for use with worker threads in a multithreaded environment.</source>
          <target state="translated">Klassen serverbaserade är avsedd för användning med trådar i en flertrådsmiljö.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server timers can move among threads to handle the raised &lt;xref:System.Timers.Timer.Elapsed&gt; event, resulting in more accuracy than Windows timers in raising the event on time.</source>
          <target state="translated">Servern timers kan flytta mellan trådar att hantera den upphöjda &lt;xref:System.Timers.Timer.Elapsed&gt;händelse, vilket ger mer exakt än Windows timers i aktivering av händelsen i tid.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event, based on the value (in milliseconds) of the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Timer-komponenten aktiverar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse, baserat på värdet (i millisekunder) för den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event to perform the processing you need.</source>
          <target state="translated">Du kan hantera den här händelsen för att utföra bearbetningen som du behöver.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you have an online sales application that continuously posts sales orders to a database.</source>
          <target state="translated">Anta att du har ett online försäljning program som skickar kontinuerligt order till en databas.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</source>
          <target state="translated">Den tjänst som sammanställer instruktioner för leverans fungerar för en grupp av order i stället för att behandla varje beställning individuellt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could use a Timer to start the batch processing every 30 minutes.</source>
          <target state="translated">Du kan använda en Timer för att starta batchbearbetning var 30: e minut.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The System.Timers.Timer class has the same resolution as the system clock.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; I System.Timers.Timer klassen har samma upplösning som systemklockan.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the &lt;xref:System.Timers.Timer.Interval%2A&gt; property is less than the resolution of the system clock.</source>
          <target state="translated">Detta innebär att den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses vid ett intervall som definieras av lösning av systemklockan om den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen är mindre än lösning av systemklockan.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Mer information finns i &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskap.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, a Timer object raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, after the first &lt;xref:System.Timers.Timer.Interval%2A&gt; has elapsed.</source>
          <target state="translated">När &lt;xref:System.Timers.Timer.AutoReset%2A&gt;har angetts till <ph id="ph1">`false`</ph>, ett Timer-objekt som genererar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse bara en gång, efter först &lt;xref:System.Timers.Timer.Interval%2A&gt;har förflutit.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To keep raising the &lt;xref:System.Timers.Timer.Elapsed&gt; event regularly at the interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt;, set &lt;xref:System.Timers.Timer.AutoReset%2A&gt; to <ph id="ph1">`true`</ph>, which is the default value.</source>
          <target state="translated">Att fortsätter att höja den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse regelbundet med det intervall som definieras av den &lt;xref:System.Timers.Timer.Interval%2A&gt;, Ställ in &lt;xref:System.Timers.Timer.AutoReset%2A&gt;till <ph id="ph1">`true`</ph>, vilket är standardvärdet.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component catches and suppresses all exceptions thrown by event handlers for the &lt;xref:System.Timers.Timer.Elapsed&gt; event.</source>
          <target state="translated">Komponenten Timer fångar och förhindrar alla undantag som utlöses av händelsehanterare för den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Detta beteende kan ändras i framtida versioner av .NET Framework.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note, however, that this is not true of event handlers that execute asynchronously and include the <ph id="ph1">`await`</ph> operator (in C#)  or the <ph id="ph2">`Await`</ph> operator (in Visual Basic).</source>
          <target state="translated">Observera att detta inte gäller för händelsehanterare som asynkront och inkludera den <ph id="ph1">`await`</ph> operatorn (i C#) eller <ph id="ph2">`Await`</ph> operatorn (i Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</source>
          <target state="translated">Undantag i dessa händelsehanterare sprids tillbaka till den anropande tråden som i följande exempel visas.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on exceptions thrown in asynchronous methods, see   <bpt id="p1">[</bpt>Exception Handling<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om undantag i asynkrona metoder finns <bpt id="p1">[</bpt>undantagshantering<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept> <ept id="p3">]</ept> om den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskapen är <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen höjs vid ett &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;  </target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If processing of the &lt;xref:System.Timers.Timer.Elapsed&gt; event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Om bearbetningen av den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen varar längre än &lt;xref:System.Timers.Timer.Interval%2A&gt;, händelsen kan aktiveras igen på en annan &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">I det här fallet ska händelsehanteraren fleraktivt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Metoden händelsehantering kan köra på en tråd samtidigt som en annan tråd anropar den &lt;xref:System.Timers.Timer.Stop%2A&gt;metod eller anger den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the timer is stopped.</source>
          <target state="translated">Detta kan resultera i den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse som aktiveras när timern har avbrutits.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Kodexempel för den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden visar ett sätt att undvika det här konkurrenstillstånd.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Även om &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;är inte <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;händelser efter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden har anropats eller efter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen har angetts <ph id="ph2">`false`</ph>eftersom signalen att öka den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse är alltid i kö för körning på en tråd pooltråd.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Ett sätt att lösa det här konkurrenstillstånd är att ange en flagga som anger händelsehanteraren för den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse att ignorera efterföljande händelser.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the Timer class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the Timer to the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property, so that the event is marshaled to the user interface thread.</source>
          <target state="translated">Om du använder klassen med användargränssnittselementet, till exempel ett formulär eller en kontroll utan att placera timern på det användargränssnittselementet, tilldela formuläret eller kontrollen som innehåller klockan så att den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskap, så att händelsen konverteras till användaren gränssnittet tråd.&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of default property values for an instance of Timer, see the &lt;xref:System.Timers.Timer.%23ctor%2A&gt; constructor.</source>
          <target state="translated">En lista över standardegenskapsvärden för en instans av Timer, finns det &lt;xref:System.Timers.Timer.%23ctor%2A&gt;konstruktor.&lt;/xref:System.Timers.Timer.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!TIP]</ph> &gt;  Be aware that the .NET Framework Class Library includes four classes named <ph id="ph2">`Timer`</ph>, each of which offers different functionality:   &gt;    &gt;  -   Timer (this topic): fires an event at regular intervals.</source>
          <target state="translated">&gt; <ph id="ph1">[!TIP]</ph> &gt; Vara medveten om att .NET Framework-Klassbiblioteket innehåller fyra klasser med namnet <ph id="ph2">`Timer`</ph>, varje av som erbjuder olika funktioner: &gt;&gt;-Timer (det här avsnittet): utlöses en händelse med jämna mellanrum.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Klassen är avsedd för användning som en server-baserad eller tjänstkomponent i en flertrådsmiljö; den har inget användargränssnitt och visas inte vid körning.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: executes a single callback method on a thread pool thread at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: kör en enda metod på en tråd pooltråd med jämna mellanrum.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method is defined when the timer is instantiated and cannot be changed.</source>
          <target state="translated">Motringningsmetoden definieras när timern instansieras och kan inte ändras.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like the Timer class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Liksom klassen Timer är den här klassen avsedd för användning som en server-baserad eller tjänstkomponent i en flertrådsmiljö; den har inget användargränssnitt och visas inte vid körning.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: a Windows Forms component that fires an event at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: en Windows Forms-komponent som utlöses en händelse med jämna mellanrum.&lt;/xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The component has no user interface and is designed for use in a single-threaded environment.</source>
          <target state="translated">Komponenten har inget användargränssnitt och är avsedd för användning i en enkeltrådad miljö.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</source>
          <target state="translated">&gt;- &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: ett ASP.NET-komponenten som utför asynkrona och synkrona webbsida återanslag med jämna mellanrum.&lt;/xref:System.Web.UI.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets all the properties to their initial values.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen och anger alla egenskaper till sina ursprungliga värden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">I följande tabell visas första egenskapsvärden för en instans av &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Timers.Timer.AutoReset%2A&gt;|<ph id="ph1">`true`</ph>|   |&lt;xref:System.Timers.Timer.Enabled%2A&gt;|<ph id="ph2">`false`</ph>|   |&lt;xref:System.Timers.Timer.Interval%2A&gt;|100 milliseconds|   |&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;|A null reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).|</source>
          <target state="translated">| Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | &lt;xref:System.Timers.Timer.AutoReset%2A&gt;| <ph id="ph1">`true`</ph>|   | &lt;xref:System.Timers.Timer.Enabled%2A&gt;| <ph id="ph2">`false`</ph>|   | &lt;xref:System.Timers.Timer.Interval%2A&gt;|&amp;100; millisekunder |   | &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;| En null-referens (<ph id="ph3">`Nothing`</ph> i Visual Basic). |&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets the &lt;xref:System.Timers.Timer.Interval*&gt; property to the specified number of milliseconds.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass och anger den &lt;xref:System.Timers.Timer.Interval*&gt;egenskapen till det angivna antalet millisekunder.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.Timers.Timer.Interval%2A&gt; property of the new timer instance, but does not enable the timer.</source>
          <target state="translated">Anger den här konstruktorn i &lt;xref:System.Timers.Timer.Interval%2A&gt;-egenskapen för den nya timer-instansen, men inte aktiverar timern.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between events.</source>
          <target state="translated">Tid i millisekunder, mellan händelser.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Värdet måste vara större än noll och mindre än eller lika med <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">interval</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero, or greater than <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">Värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">interval</ph> <ept id="p1">&lt;/code&gt;</ept> parametern är mindre än eller lika med noll, eller större än <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event only once (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) or repeatedly (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Hämtar eller anger ett booleskt värde som anger om den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> bör öka den <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> händelse bara en gång (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) eller flera gånger (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is already enabled when the &lt;xref:System.Timers.Timer.Start%2A&gt; method is called, the interval is reset.</source>
          <target state="translated">Om den &lt;xref:System.Timers.Timer&gt;är redan aktiverat när den &lt;xref:System.Timers.Timer.Start%2A&gt;metoden anropas, intervallet återställs.&lt;/xref:System.Timers.Timer.Start%2A&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AutoReset is <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer.Start%2A&gt; method must be called in order to start the count again.</source>
          <target state="translated">Om AutoReset <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer.Start%2A&gt;metoden måste anropas för att starta beräkningen igen.&lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the interval affects when the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised.</source>
          <target state="translated">Återställer intervallet påverkar när den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Om du anger intervallet till 5 sekunder och sedan ange till exempel den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>, antalet startar när &lt;xref:System.Timers.Timer.Enabled%2A&gt;har angetts.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when the count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Om du återställer intervallet till 10 sekunder när antalet är 3 sekunder i &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses för första gången 13 sekunder efter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen har ställts in på <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event each time the interval elapses; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> if it should raise the <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> event only once, after the first time the interval elapses.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> bör öka den <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> händelse varje gång som det ska gå att intervallet; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> om den ska öka den <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> händelse när efter första gången intervallet långa.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Begins the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Startar körning initieringen av en <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som används i ett formulär eller av en annan komponent.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to start the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Den <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design miljö använder den här metoden för att starta initieringen av en komponent som används i ett formulär eller av en annan komponent.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.EndInit%2A&gt;metoden slutar initieringen.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the BeginInit and &lt;xref:System.Timers.Timer.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Med BeginInit och &lt;xref:System.Timers.Timer.EndInit%2A&gt;metoder som förhindrar att kontrollen används innan den har initierats.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Släpper de resurser som används av den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Close method in turn calls the <ph id="ph1">`Dispose`</ph> method.</source>
          <target state="translated">Close-metoden i sin tur anropar den <ph id="ph1">`Dispose`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Frigör alla resurser som används av aktuellt <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Frisläpp både hanterade och ohanterade resurser. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> att släppa endast resurser som inte hanteras.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Occurs when the interval elapses.</source>
          <target state="translated">Inträffar när intervallet långa.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Elapsed event is raised if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property is <ph id="ph1">`true`</ph> and the time interval (in milliseconds) defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property elapses.</source>
          <target state="translated">Förfluten händelsen aktiveras om den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen är <ph id="ph1">`true`</ph> och tidsintervall (i millisekunder) som definieras av den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen förflutit.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property is <ph id="ph1">`true`</ph>, the event is raised repeatedly at an interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property; otherwise, the event is raised only once, the first time the &lt;xref:System.Timers.Timer.Interval%2A&gt; value elapses.</source>
          <target state="translated">Om den &lt;xref:System.Timers.Timer.AutoReset%2A&gt;egenskapen är <ph id="ph1">`true`</ph>, händelsen visas flera gånger med ett intervall som definieras av den &lt;xref:System.Timers.Timer.Interval%2A&gt;egenskapen; annars händelsen visas bara en gång, första gången den &lt;xref:System.Timers.Timer.Interval%2A&gt;värde är slut.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Interval%2A&gt; is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Om &lt;xref:System.Timers.Timer.Interval%2A&gt;anges efter den &lt;xref:System.Timers.Timer&gt;har startats nollställs.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Om du anger intervallet till 5 sekunder och sedan ange till exempel &lt;xref:System.Timers.Timer.Enabled%2A&gt;till <ph id="ph1">`true`</ph>, antalet startar när &lt;xref:System.Timers.Timer.Enabled%2A&gt;har angetts.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the Elapsed event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Om du återställer intervallet till 10 sekunder när antalet är 3 sekunder gått händelsen utlöses för första gången 13 sekunder efter &lt;xref:System.Timers.Timer.Enabled%2A&gt;har ställts in på <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>,the Elapsed event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Om den &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;egenskapen är <ph id="ph1">`null`</ph>, förfluten-händelse genereras i en &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the processing of the Elapsed event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Om bearbetningen av händelsen gått varar längre än &lt;xref:System.Timers.Timer.Interval%2A&gt;, händelsen kan aktiveras igen på en annan &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">I det här fallet ska händelsehanteraren fleraktivt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Metoden händelsehantering kan köra på en tråd samtidigt som en annan tråd anropar den &lt;xref:System.Timers.Timer.Stop%2A&gt;metod eller anger den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the Elapsed event being raised after the timer is stopped.</source>
          <target state="translated">Detta kan resultera i gått händelse som aktiveras när timern har avbrutits.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Kodexempel för den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden visar ett sätt att undvika det här konkurrenstillstånd.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, Elapsed events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the Elapsed event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Även om &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;inte <ph id="ph1">`null`</ph>, Elapsed-händelser som kan inträffa efter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden har anropats eller efter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen har angetts <ph id="ph2">`false`</ph>eftersom signal för att generera en gått händelsen alltid i kö för körning på en tråd pooltråd.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the Elapsed event to ignore subsequent events.</source>
          <target state="translated">Ett sätt att lösa det här konkurrenstillstånd är att ange en flagga som anger händelsehanteraren för händelsen gått att ignorera efterföljande händelser.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer&gt; component catches and suppresses all exceptions thrown by event handlers for the Elapsed event.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer&gt;komponenten fångar och förhindrar alla undantag som utlöses av händelsehanterare för händelsen gått.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Detta beteende kan ändras i framtida versioner av .NET Framework.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som ska läggas till.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Hämtar eller anger ett värde som anger om den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> bör öka den <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> händelse.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting Enabled to <ph id="ph1">`true`</ph> is the same as calling &lt;xref:System.Timers.Timer.Start%2A&gt;, while setting Enabled to <ph id="ph2">`false`</ph> is the same as calling &lt;xref:System.Timers.Timer.Stop%2A&gt;.</source>
          <target state="translated">Ställa in aktiverat på <ph id="ph1">`true`</ph> är samma som anropar &lt;xref:System.Timers.Timer.Start%2A&gt;, medan inställningen aktiverad till <ph id="ph2">`false`</ph> är samma som anropar &lt;xref:System.Timers.Timer.Stop%2A&gt;.&lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Signal att öka den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse är alltid i kö för körning på en &lt;xref:System.Threading.ThreadPool&gt;tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Enabled property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Detta kan resultera i den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse som aktiveras när egenskapen Enabled har angetts <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to work around this race condition.</source>
          <target state="translated">Kodexempel för den &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden visar ett sätt att komma runt detta konkurrenstillstånd.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Enabled is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Om aktiverad är inställd på <ph id="ph1">`true`</ph> och &lt;xref:System.Timers.Timer.AutoReset%2A&gt;är inställd på <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;genererar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen när först tidsintervall långa.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Om intervallet anges efter den &lt;xref:System.Timers.Timer&gt;har startats nollställs.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the Enabled property to <ph id="ph1">`true`</ph>, the count starts at the time Enabled is set.</source>
          <target state="translated">Om du anger intervallet till 5 sekunder och sedan ange egenskapen Enabled exempelvis <ph id="ph1">`true`</ph>, antalet startar när aktiverad har angetts.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after Enabled was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Om du återställer intervallet till 10 sekunder när antalet är 3 sekunder i &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses för första gången 13 sekunder efter aktiverad har ställts in på <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some visual designers, such as those in Microsoft Visual Studio, set the Enabled property to <ph id="ph2">`true`</ph> when inserting a new &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Vissa visual designers, till exempel de som finns i Microsoft Visual Studio, ange egenskapen Enabled till <ph id="ph2">`true`</ph> när du infogar ett nytt &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> bör öka den <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> händelse, annars <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the timer has been disposed.</source>
          <target state="translated">Den här egenskapen kan inte anges eftersom timern har tagits bort.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Timers.Timer.Interval*&gt; property was set to a value greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> before the timer was enabled.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.Interval*&gt;egenskapen har angetts till ett värde större än <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> innan timern har aktiverats.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Ends the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Avslutar körning initieringen av en <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som används i ett formulär eller av en annan komponent.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to end the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Den <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design miljö använder den här metoden för att avsluta initieringen av en komponent som används i ett formulär eller av en annan komponent.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">Den &lt;xref:System.Timers.Timer.BeginInit%2A&gt;metoden startar initieringen.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Timers.Timer.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Med hjälp av den &lt;xref:System.Timers.Timer.BeginInit%2A&gt;och EndInit metoder som förhindrar att kontrollen används innan den har initierats.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval, expressed in milliseconds, at which to raise the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Hämtar eller anger intervallet, uttryckt i millisekunder som du vill öka det <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> händelse.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the Interval property to determine the frequency at which the &lt;xref:System.Timers.Timer.Elapsed&gt; event is fired.</source>
          <target state="translated">Du använder egenskapen intervall för att fastställa frekvensen med vilken den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the &lt;xref:System.Timers.Timer&gt; class depends on the system clock, it has the same resolution as the system clock.</source>
          <target state="translated">Eftersom den &lt;xref:System.Timers.Timer&gt;klass beror på systemklockan, den har samma upplösning som systemklockan.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the Interval property is less than the resolution of the system clock.</source>
          <target state="translated">Detta innebär att den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses vid ett intervall som definieras av lösning av systemklockan om egenskapen intervall är mindre än lösning av systemklockan.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the Interval property to 5 milliseconds.</source>
          <target state="translated">I följande exempel anger egenskapen intervall till 5 millisekunder.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When run on a <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</source>
          <target state="translated">När det körs på en <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> system vars systemklockan har en upplösning på ungefär 15 millisekunder händelsen utlöses ungefär var 15: e millisekund i stället för varje 5 millisekunder.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept><ept id="p3">]</ept>       You can use the following code to determine the resolution of the system clock on the current system:       <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept>  <bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept><ept id="p7">]</ept>       If your app requires greater resolution than that offered by the &lt;xref:System.Timers.Timer&gt; class or the system clock, use the high-resolution multimedia timers; see <bpt id="p9">[</bpt>How to: Use the High-Resolution Timer<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept> <ept id="p3">]</ept> du kan använda följande kod för att fastställa en lösning med systemklockan på systemets aktuella: <bpt id="p5">[!code-cs</bpt> <bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept><bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept> <ept id="p7">]</ept> om din app kräver högre upplösning än som erbjuds av den &lt;xref:System.Timers.Timer&gt;klass eller systemklockan, använda högupplösta multimedia timers, se <bpt id="p9">[</bpt>så här: använda högupplösningsbläckbehållaren timern<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.&lt;/xref:System.Timers.Timer&gt;    </target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Om intervallet anges efter den &lt;xref:System.Timers.Timer&gt;har startats nollställs.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Om du anger intervallet till 5 sekunder och sedan ange till exempel den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>, antalet startar när &lt;xref:System.Timers.Timer.Enabled%2A&gt;har angetts.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Om du återställer intervallet till 10 sekunder när antalet är 3 sekunder i &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen utlöses för första gången 13 sekunder efter &lt;xref:System.Timers.Timer.Enabled%2A&gt;har ställts in på <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Om &lt;xref:System.Timers.Timer.Enabled%2A&gt;är inställd på <ph id="ph1">`true`</ph> och &lt;xref:System.Timers.Timer.AutoReset%2A&gt;är inställd på <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;genererar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen när först tidsintervall långa.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Timers.Timer.Enabled%2A&gt; is then set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Timers.Timer.Enabled%2A&gt;sedan är inställd på <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.Enabled%2A&gt; and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; are both set to <ph id="ph2">`false`</ph>, and the timer has previously been enabled, setting the Interval property causes the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be raised once, as if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property had been set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om &lt;xref:System.Timers.Timer.Enabled%2A&gt;och &lt;xref:System.Timers.Timer.AutoReset%2A&gt;båda är inställda på <ph id="ph2">`false`</ph>, och timern har tidigare har aktiverats, ställa in intervall för egenskapen orsaker i &lt;xref:System.Timers.Timer.Elapsed&gt;händelse ska uppstå en gång, som om den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen har angetts <ph id="ph3">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the interval without raising the event, you can temporarily set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, set the Interval property to the desired time interval, and then immediately set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property back to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Om du vill ange intervallet utan att händelsen kan du tillfälligt ange den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen <ph id="ph1">`true`</ph>, ange egenskapen intervall för önskat tidsintervall och ange sedan omedelbart den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen tillbaka till <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> events.</source>
          <target state="translated">Tid i millisekunder, mellan <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> händelser.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero, and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Värdet måste vara större än noll och mindre än eller lika med <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default is 100 milliseconds.</source>
          <target state="translated">Standardvärdet är 100 millisekunder.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The interval is less than or equal to zero.</source>
          <target state="translated">Intervallet är mindre än eller lika med noll.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       The interval is greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, and the timer is currently enabled.</source>
          <target state="translated">- eller - intervallet är större än <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, och timern har aktiverats.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</source>
          <target state="translated">(Om timern inte är för närvarande aktiverad, ingen undantag förrän den aktiveras.)</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the site that binds the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its container in design mode.</source>
          <target state="translated">Hämtar eller anger den plats som binder den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> till dess behållare i designläge.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as providing a way for the container to manage its components.</source>
          <target state="translated">Platser binda ett &lt;xref:System.ComponentModel.Component&gt;till en &lt;xref:System.ComponentModel.Container&gt;och aktivera kommunikation mellan dem, samt att tillhandahålla ett sätt för behållaren att hantera dess komponenter.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface representing the site that binds the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to its container.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gränssnitt som representerar den plats som binder den <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> objekt till dess behållare.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Starts raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Startar höja den <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> händelsen genom att ange &lt;xref:System.Timers.Timer.Enabled*&gt;till <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Om Start anropas och &lt;xref:System.Timers.Timer.AutoReset%2A&gt;är inställd på <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer&gt;genererar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen när först tidsintervall långa.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph1">`true`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event the first time the interval elapses and continues to raise the event on the specified interval.</source>
          <target state="translated">Om Start anropas och &lt;xref:System.Timers.Timer.AutoReset%2A&gt;är <ph id="ph1">`true`</ph>, &lt;xref:System.Timers.Timer&gt;genererar den &lt;xref:System.Timers.Timer.Elapsed&gt;första händelsetid intervallet långa och fortsätter att öka händelsen på det angivna intervallet.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also start timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Du kan också starta tidsinställning genom att ange &lt;xref:System.Timers.Timer.Enabled%2A&gt;till <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph2">`false`</ph>, the Start method must be called in order to start the count again.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om &lt;xref:System.Timers.Timer.AutoReset%2A&gt;är <ph id="ph2">`false`</ph>, Start-metod måste anropas för att starta beräkningen igen.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the Start method when the timer is enabled has no effect.</source>
          <target state="translated">Ett anrop till metoden Start när timern aktiveras har ingen effekt.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is created with an interval equal to or greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1, or set to an interval less than zero.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har skapats med ett intervall som är lika med eller större än <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1 eller ange ett intervall som är mindre än noll.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Stops raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stoppar höja den <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> händelsen genom att ange &lt;xref:System.Timers.Timer.Enabled*&gt;till <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also stop timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Du kan också avbryta tidsinställning genom att ange &lt;xref:System.Timers.Timer.Enabled%2A&gt;till <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread, so the event-handling method might run on one thread at the same time that a call to the Stop method runs on another thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Signal att öka den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse är alltid i kö för körning på en &lt;xref:System.Threading.ThreadPool&gt;tråden så att metoden händelsehantering kan köra på en tråd samtidigt som ett anrop till metoden Stop körs på en annan tråd.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Stop method is called.</source>
          <target state="translated">Detta kan resultera i den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse som aktiveras efter att Stop-metoden anropas.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example in the next section shows one way to work around this race condition.</source>
          <target state="translated">Kodexempel i nästa avsnitt visas ett sätt att komma runt detta konkurrenstillstånd.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Hämtar eller anger det objekt som används för att konvertera händelsehanteraren anrop som utfärdas när ett intervall har förflutit.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SynchronizingObject is <ph id="ph1">`null`</ph>, the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event is called on a thread from the system-thread pool.</source>
          <target state="translated">När SynchronizingObject är <ph id="ph1">`null`</ph>, metoden som hanterar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse anropas på en tråd från system-trådpoolen.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on system-thread pools, see &lt;xref:System.Threading.ThreadPool&gt;.</source>
          <target state="translated">Mer information om system-tråd pooler finns &lt;xref:System.Threading.ThreadPool&gt;.&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Timers.Timer.Elapsed&gt; event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</source>
          <target state="translated">När den &lt;xref:System.Timers.Timer.Elapsed&gt;händelsen hanterats av en visual Windows Forms-komponenten, till exempel en knapp och ansluter till komponenten via system-trådpoolen resultatet i ett undantag eller bara kanske inte fungerar.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid this effect by setting SynchronizingObject to a Windows Forms component, which causes the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be called on the same thread that the component was created on.</source>
          <target state="translated">Undvik detta genom att ange SynchronizingObject till en Windows Forms-komponent, vilket gör att metoden som hanterar den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse anropas på samma tråd som komponenten som skapades på.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Even if the SynchronizingObject property is not <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph3">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Även om egenskapen SynchronizingObject inte är <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;händelser efter den &lt;xref:System.Timers.Timer.Dispose%2A&gt;eller &lt;xref:System.Timers.Timer.Stop%2A&gt;metoden har anropats eller efter den &lt;xref:System.Timers.Timer.Enabled%2A&gt;egenskapen har angetts <ph id="ph3">`false`</ph>eftersom signalen att öka den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse är alltid i kö för körning på en tråd pooltråd.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Ett sätt att lösa det här konkurrenstillstånd är att ange en flagga som anger händelsehanteraren för den &lt;xref:System.Timers.Timer.Elapsed&gt;händelse att ignorera efterföljande händelser.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is used inside Visual Studio in a Windows Forms designer, SynchronizingObject is automatically set to the control that contains the &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">Om den &lt;xref:System.Timers.Timer&gt;är används i Visual Studio i en Windows Forms-designer SynchronizingObject anges automatiskt till den kontroll som innehåller &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you place a &lt;xref:System.Timers.Timer&gt; on a designer for <ph id="ph1">`Form1`</ph> (which inherits from &lt;xref:System.Windows.Forms.Form&gt;), the SynchronizingObject property of &lt;xref:System.Timers.Timer&gt; is set to the instance of <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Till exempel om du placerar en &lt;xref:System.Timers.Timer&gt;på en designer för <ph id="ph1">`Form1`</ph> (som ärver från &lt;xref:System.Windows.Forms.Form&gt;), egenskapen SynchronizingObject för &lt;xref:System.Timers.Timer&gt;är inställd på instansen av <ph id="ph2">`Form1`</ph>.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Windows.Forms.Form&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som representerar den används för att konvertera händelsehanteraren anrop som utfärdas när ett intervall har förflutit.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>