<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f29254e4c77a62e24dea1389ef9600a714c596c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.IErrorHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4aec507f557f6cdc0e6abc42005d5e48a0cba73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22f3fdfa3c121ba6baf2019a628d603c86da3fa9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</source>
          <target state="translated">Kan en implementerare att styra felmeddelande som returneras till anroparen och du kan också utföra anpassade fel vid bearbetning, till exempel loggning.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To explicitly control the behavior of the application when an exception is thrown, implement the IErrorHandler interface and add it to the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;’s &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt; property.</source>
          <target state="translated">För att styra beteendet för programmet explicit när ett undantag måste implementera gränssnittet IErrorHandler och lägger till den i den &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;'s &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;egenskap.&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt; &lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>IErrorHandler enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</source>
          <target state="translated">IErrorHandler kan du uttryckligen styra SOAP-fel genereras, Bestäm om du vill skicka tillbaka till klienten och utföra tillhörande uppgifter, t.ex loggning.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Error handlers are called in the order in which they were added to the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt; property.</source>
          <target state="translated">Felhanterare anropas i den ordning som de har lagts till i &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;egenskap.&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt; method to control the fault message that is returned to the client.</source>
          <target state="translated">Implementera den &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;metod för att styra felmeddelande som returneras till klienten.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt; method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</source>
          <target state="translated">Implementera den &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;metod för att se till att fel-relaterade funktioner, inklusive fel loggar, så en misslyckas snabbt, stänger av programmet, och så vidare.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because the &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt; method can be called from many different places there are no guarantees made about which thread the method is called on.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Eftersom den &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;metod kan anropas från flera olika ställen det finns inga garantier görs om vilka tråd metoden anropas på.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not depend on &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt; method being called on the operation thread.</source>
          <target state="translated">Är inte beroende &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;metoden anropas på åtgärden tråd.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>All &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt; implementations are called first, prior to sending a response message.</source>
          <target state="translated">Alla &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;implementeringar kallas först innan du skickar ett svarsmeddelande.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When all &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt; implementations have been called and return, and if <ph id="ph1">`fault`</ph> is non-<ph id="ph2">`null`</ph>, it is sent back to the client according to the operation contract.</source>
          <target state="translated">När alla &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;implementeringar har anropats och returnera, och om <ph id="ph1">`fault`</ph> är icke -<ph id="ph2">`null`</ph>, skickas tillbaka till klienten enligt Åtgärdskontraktet.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`fault`</ph> is <ph id="ph2">`null`</ph> after all implementations have been called, the response message is controlled by the &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt; property value.</source>
          <target state="translated">Om <ph id="ph1">`fault`</ph> är <ph id="ph2">`null`</ph> efter att alla implementeringar har anropats svarsmeddelandet styrs av den &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;egenskapsvärde.&lt;/xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Exceptions can occur after all &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt; implementations are called and a response message is handed to the channel.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Undantag kan inträffa när alla &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;implementeringar kallas och ett svarsmeddelande överlämnas till kanalen.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a channel exception occurs (for example, difficulty serializing the message) IErrorHandler objects are notified.</source>
          <target state="translated">Om en kanal-undantag inträffar (till exempel svårt serialisering meddelandet) IErrorHandler objekt meddelas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</source>
          <target state="translated">I så fall måste kontrollera du fortfarande som gör att användning av spårning för att identifiera problemet utvecklingsmiljön fångar in och visar sådana undantag eller.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about tracing, see <bpt id="p1">[</bpt>Using Tracing to Troubleshoot Your Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om spårning finns <bpt id="p1">[</bpt>med hjälp av spårning för att felsöka ditt program<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the response message has been sent, all &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt; implementations are called in the same order.</source>
          <target state="translated">När svarsmeddelandet har skickats, alla &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;implementeringar kallas i samma ordning.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, an IErrorHandler implementation is added to the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt; property on the service (and the client in the case of duplex communication).</source>
          <target state="translated">Normalt en IErrorHandler-implementering har lagts till i den &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;egenskapen för tjänsten (och klienten vid duplexkommunikation).&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the IErrorHandler to the runtime by implementing a behavior (either an &lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;, &lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;, &lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;, or &lt;xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName&gt; object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your IErrorHandler.</source>
          <target state="translated">Du kan lägga till IErrorHandler körningsmiljön genom att implementera ett beteende (antingen en &lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;, &lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;, &lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;, eller &lt;xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName&gt;objekt) och använder funktionen programmässigt, från en konfigurationsfil eller med ett anpassat attribut för att koppla din IErrorHandler.&lt;/xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using behaviors to modify the runtime, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om hur du använder beteenden för att ändra körningsmiljön finns <bpt id="p1">[</bpt>konfigurera och utöka Runtime med beteenden<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</source>
          <target state="translated">Aktiverar fel nätverksrelaterad bearbetning och returnerar ett värde som anger om dispatcher avbryter sessionen och instans kontexten i vissa fall.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the HandleError method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</source>
          <target state="translated">Använda HandleError-metoden för att implementera fel relaterade beteenden, till exempel felloggning systemmeddelanden avstängning av program och så vidare, och returnerar ett värde som anger om undantaget hanteras på rätt sätt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because the HandleError method can be called from many different places there are no guarantees made about which thread the method is called on.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Eftersom HandleError-metod kan anropas från flera olika ställen det finns inga garantier görs om vilka tråd metoden anropas på.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not depend on HandleError method being called on the operation thread.</source>
          <target state="translated">Är inte beroende av HandleError-metoden anropas på åtgärden tråd.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>All &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt; implementations are called.</source>
          <target state="translated">Alla &lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;implementeringar kallas.&lt;/xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default (when the return value is <ph id="ph1">`false`</ph>), if there is an exception, the dispatcher aborts any session and aborts the &lt;xref:System.ServiceModel.InstanceContext&gt; if the &lt;xref:System.ServiceModel.InstanceContextMode&gt; is anything other than &lt;xref:System.ServiceModel.InstanceContextMode&gt;.</source>
          <target state="translated">Som standard (när det returnera värdet är <ph id="ph1">`false`</ph>), om det finns ett undantag, dispatcher avbryter alla sessioner och avbryter den &lt;xref:System.ServiceModel.InstanceContext&gt;om det &lt;xref:System.ServiceModel.InstanceContextMode&gt;är något annat än &lt;xref:System.ServiceModel.InstanceContextMode&gt;.&lt;/xref:System.ServiceModel.InstanceContextMode&gt; &lt;/xref:System.ServiceModel.InstanceContextMode&gt; &lt;/xref:System.ServiceModel.InstanceContext&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception is then considered unhandled and any state is considered corrupt.</source>
          <target state="translated">Undantaget betraktas som sedan ohanterat och några tillstånd anses vara skadad.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return <ph id="ph1">`true`</ph> from HandleError to prevent this default behavior.</source>
          <target state="translated">Returnera <ph id="ph1">`true`</ph> från HandleError att förhindra det här standardbeteendet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any error handler returns <ph id="ph1">`true`</ph> it instructs <ph id="ph2">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> that it is safe to continue using state associated with the failed request.</source>
          <target state="translated">Om en felhanterare returnerar <ph id="ph1">`true`</ph> instruktion <ph id="ph2">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> att det är säkert att fortsätta använda tillstånd är kopplat till den misslyckade begäranden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no error handler returns <ph id="ph1">`true`</ph> from the HandleError method the exception is considered unhandled and the default response applies, potentially resulting in an aborted &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; and channel when communicating on a session channel or the &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt; property is not set to &lt;xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName&gt;.</source>
          <target state="translated">Om inga felhanterare returnerar <ph id="ph1">`true`</ph> från HandleError metoden undantaget betraktas ohanterat och gäller för standardsvar, vilket kan innebära en avbrutna &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;och channel vid kommunikation på en sessionskanalen eller &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;egenskapen är inte inställd på &lt;xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName&gt;.&lt;/xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`error`</ph> parameter is never <ph id="ph2">`null`</ph> and contains the exception object that was thrown.</source>
          <target state="translated">Den <ph id="ph1">`error`</ph> parametern är aldrig <ph id="ph2">`null`</ph> och innehåller Undantagsobjektet utlöstes.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The exception thrown during processing.</source>
          <target state="translated">Undantag som uppstod under bearbetning.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> should not abort the session (if there is one) and instance context if the instance context is not <bpt id="p2">&lt;xref href="System.ServiceModel.InstanceContextMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> bör inte avsluta sessionen (om sådan finns) och instansen kontexten om instansen kontexten inte är <bpt id="p2">&lt;xref href="System.ServiceModel.InstanceContextMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enables the creation of a custom <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.FaultException%601<ph id="ph2">&amp;gt;</ph> that is returned from an exception in the course of a service method.</source>
          <target state="translated">Kan skapa en anpassad <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.FaultException%601<ph id="ph2">&amp;gt;</ph> som returneras från ett undantag under metod för en tjänst.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the ProvideFault method to create a custom fault message that is returned to the client.</source>
          <target state="translated">Implementera metoden ProvideFault för att skapa ett anpassat felmeddelande som returneras till klienten.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ProvideFault method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</source>
          <target state="translated">Metoden ProvideFault kallas alltid för undantag som lämnar åtgärder, utom när WCF-körningsmiljön identifierar undantag som särskilt allvarligt och skickas tillbaka undantaget sig själv.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When all ProvideFault implementations have been called, the fault message is sent back to the client (if <ph id="ph1">`fault`</ph> is non-<ph id="ph2">`null`</ph>).</source>
          <target state="translated">När alla ProvideFault implementeringar har anropats, felmeddelandet skickas tillbaka till klienten (om <ph id="ph1">`fault`</ph> är icke -<ph id="ph2">`null`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fault`</ph> parameter is <ph id="ph2">`null`</ph> the default fault is sent to the client.</source>
          <target state="translated">Om den <ph id="ph1">`fault`</ph> parametern är <ph id="ph2">`null`</ph> standard felet skickas till klienten.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The inbound message that caused the processing error is available during this method from the &lt;xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Det inkommande meddelandet som orsakade bearbetningsfelet är tillgänglig under den här metoden från den &lt;xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=fullName&gt;egenskapen.&lt;/xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because the ProvideFault method can be called from many different places there are no guarantees made about which thread the method is called on.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Eftersom ProvideFault-metod kan anropas från flera olika ställen det finns inga garantier görs om vilka tråd metoden anropas på.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not depend on ProvideFault method being called on the operation thread.</source>
          <target state="translated">Är inte beroende av ProvideFault-metoden anropas på åtgärden tråd.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Exception&gt; object thrown in the course of the service operation.</source>
          <target state="translated">Den &lt;xref:System.Exception&gt;objekt i en åtgärd i tjänsten.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The SOAP version of the message.</source>
          <target state="translated">Meddelandets SOAP-version.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.Message?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object that is returned to the client, or service, in the duplex case.</source>
          <target state="translated">Den <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.Message?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objekt som returneras till klienten eller tjänsten i fallet med duplex.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>