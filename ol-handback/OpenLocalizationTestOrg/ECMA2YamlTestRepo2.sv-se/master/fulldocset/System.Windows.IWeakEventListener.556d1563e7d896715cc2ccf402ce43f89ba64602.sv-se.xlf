<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b159c61361fc1aeeded8c197e1856941f66de561</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.IWeakEventListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ec4cf59c3d050f1fd6c358cd128ac4d190f61d7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d56b30d9c0ee9e4432291f21994dceab6318294</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stöder händelse lyssnande klasser som ska kunna ta emot händelser genom WeakEvent mönstret och en <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.WeakEventManager&gt; (a dispatcher) forwards an event by calling the &lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; method on classes that implement this interface, and that have been added as listeners by calling &lt;xref:System.Windows.WeakEventManager&gt; methods beforehand.</source>
          <target state="translated">Den &lt;xref:System.Windows.WeakEventManager&gt;(en dispatcher) vidarebefordrar en händelse genom att anropa den &lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;klasser som implementerar gränssnittet och som har lagts till som lyssnare genom att anropa metoden &lt;xref:System.Windows.WeakEventManager&gt;metoder i förväg.&lt;/xref:System.Windows.WeakEventManager&gt; &lt;/xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The principal reason for following the WeakEvent pattern is when the event source has an object lifetime that is potentially independent of the event listeners.</source>
          <target state="translated">Det huvudsakliga för följande WeakEvent mönstret beror på när händelsekällan har en livslängd för objekt som är potentiellt oberoende av händelseavlyssnare.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the central event dispatching of a &lt;xref:System.Windows.WeakEventManager&gt; enables the handlers for listeners to be garbage collected (or manually purged) even if the source object lifetime extends beyond the listeners.</source>
          <target state="translated">Med hjälp av centrala händelse sändning av en &lt;xref:System.Windows.WeakEventManager&gt;aktiverar hanterare för lyssnare ska skräp samlas in (eller manuellt rensas) även om källa objektlivstid sträcker sig utanför lyssnarna.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, a normal event hookup using <ph id="ph1">`+=`</ph> or equivalent language-specific event syntax causes the potentially still-connected source to hold a strong reference to the handlers.</source>
          <target state="translated">Däremot kommer en normal händelse hookup med <ph id="ph1">`+=`</ph> eller motsvarande språkspecifika händelse syntax orsakar eventuellt fortfarande ansluten källan för en stark referens till hanterare.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This keeps the listener references from being garbage collected in a timely fashion.</source>
          <target state="translated">Detta håller lyssnare referenser från att skräpinsamlats inom rimlig tid.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One common situation where the relationships between sources and listeners suggests the use of this pattern is the handling of update events coming from sources for data bindings.</source>
          <target state="translated">En gemensam situation där relationerna mellan datakällor och lyssnare föreslår användningen av det här mönstret är hantering av update-händelser som kommer från källor för databindningar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the WeakEvent pattern to listen for events that are external to your application.</source>
          <target state="translated">Du kan använda WeakEvent mönster för att lyssna efter händelser som är externa för ditt program.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only need to define a &lt;xref:System.Windows.WeakEventManager&gt; for it, provide listening behavior in &lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;, and use the &lt;xref:System.Windows.WeakEventManager&gt; to attach the handler references rather than <ph id="ph1">`+=`</ph>.</source>
          <target state="translated">Du behöver definiera en &lt;xref:System.Windows.WeakEventManager&gt;för det, anger du lyssnande beteende i &lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;, och använda den &lt;xref:System.Windows.WeakEventManager&gt;att koppla hanteraren refererar i stället <ph id="ph1">`+=`</ph>.&lt;/xref:System.Windows.WeakEventManager&gt; &lt;/xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Receives events from the centralized event manager.</source>
          <target state="translated">Tar emot händelser från centraliserad händelsehanteraren.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> calling this method.</source>
          <target state="translated">Typ av den <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> anropar den här metoden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Object that originated the event.</source>
          <target state="translated">Objektet som initierade händelsen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Event data.</source>
          <target state="translated">Händelsedata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the listener handled the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om lyssnaren hanterade händelsen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is considered an error by the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handling in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> to register a listener for an event that the listener does not handle.</source>
          <target state="translated">Är det ett fel av den <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hantering i <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> att registrera en lyssnare för en händelse som lyssnaren inte hanteras.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Regardless, the method should return <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if it receives an event that it does not recognize or handle.</source>
          <target state="translated">Oavsett vilken metod ska returnera <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om den tar emot en händelse som inte identifieras eller hantera.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>