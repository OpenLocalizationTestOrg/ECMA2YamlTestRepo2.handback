<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e75aa9863f9714064b120698ce846b61604564d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.BufferedGraphicsContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b5ae4b6bda44aeb06fcecb0c425cd4b674e9287</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ac5567ba7e61d5c0fcdb02fd2c2059eb5cbac09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods for creating graphics buffers that can be used for double buffering.</source>
          <target state="translated">提供方法來建立可用於雙重緩衝的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The BufferedGraphicsContext class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated">BufferedGraphicsContext 類別可讓您實作自訂雙重緩衝的圖形。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">使用雙重緩衝的圖形可以減少或消除閃爍因重繪顯示介面的。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The simplest way to use double buffering is to set the &lt;xref:System.Windows.Forms.ControlStyles&gt; control style flag on a control using the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 使用雙重緩衝的最簡單方式是設定&lt;xref:System.Windows.Forms.ControlStyles&gt;控制樣式旗標控制使用&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;方法。&lt;/xref:System.Windows.Forms.Control.SetStyle%2A&gt; &lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Setting the &lt;xref:System.Windows.Forms.ControlStyles&gt; control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">設定&lt;xref:System.Windows.Forms.ControlStyles&gt;控制項的控制項樣式旗標將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。&lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">若要設定此旗標<ph id="ph1">`true`</ph>預設。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The BufferedGraphicsContext class provides methods for creating and configuring a graphics buffer.</source>
          <target state="translated">BufferedGraphicsContext 類別會提供用於建立及設定圖形緩衝區的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method creates a &lt;xref:System.Drawing.BufferedGraphics&gt;, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;方法會建立&lt;xref:System.Drawing.BufferedGraphics&gt;，即也提供的方法來寫入緩衝區以及轉譯其內容至輸出裝置，您可以使用圖形緩衝區的包裝函式。&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can retrieve the BufferedGraphicsContext for the current application domain from the static &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">您可以從靜態擷取目前的應用程式定義域 BufferedGraphicsContext&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property will be sufficient.</source>
          <target state="translated">等動畫大量繪圖功能的應用程式，您可以建立專用的 BufferedGraphicsContext 使用建構函式，但大部分的應用程式&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;屬性將足以。&lt;/xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information on drawing buffered graphics and custom buffering implementations, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關繪圖已緩衝的圖形和緩衝處理的自訂實作的詳細資訊，請參閱<bpt id="p1">[</bpt>雙重緩衝的圖形<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>How to︰ 手動管理已緩衝的圖形<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt; instead of the default instance provided by the &lt;xref:System.Drawing.BufferedGraphicsManager&gt;.</source>
          <target state="translated">等動畫大量繪圖功能的應用程式，您有時可以改善效能使用專用&lt;xref:System.Drawing.BufferedGraphicsContext&gt;而不是&lt;xref:System.Drawing.BufferedGraphicsManager&gt;.&lt;/xref:System.Drawing.BufferedGraphicsManager&gt;所提供的預設執行個體&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This allows you to create and manage graphics buffers individually.</source>
          <target state="translated">這可讓您建立及管理個別的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should always call &lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt; when you finish using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;使用專用的&lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;完畢時&lt;/xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;，應該一律會呼叫您</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about dedicated graphics buffers, see <bpt id="p1">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需專用的圖形緩衝區的詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 手動管理已緩衝的圖形<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立使用指定的像素格式的指定大小的圖形緩衝區<bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you call the Allocate method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">當您呼叫具有矩形的配置方法，其大小超過的值&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;屬性、 暫存&lt;xref:System.Drawing.BufferedGraphicsContext&gt;是用來配置緩衝區，並提供暫時的內容緩衝區。&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the Allocate method is disposed.</source>
          <target state="translated">新&lt;xref:System.Drawing.BufferedGraphicsContext&gt;不同&lt;xref:System.Drawing.BufferedGraphicsContext&gt;應用程式網域和它會自動公開當&lt;xref:System.Drawing.BufferedGraphics&gt;配置處置方法所傳回。&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match the pixel format for the new buffer to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以符合新緩衝區的像素格式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the size of the buffer to create.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指出要建立之緩衝區的大小。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，可以用來繪製指定的維度的緩衝區。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立使用指定的像素格式的指定大小的圖形緩衝區<bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you call the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">當您呼叫&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;方法，其大小超過此值以矩形的&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;屬性、 暫存&lt;xref:System.Drawing.BufferedGraphicsContext&gt;是用來配置緩衝區，並提供暫時的內容緩衝區。&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method is disposed.</source>
          <target state="translated">新&lt;xref:System.Drawing.BufferedGraphicsContext&gt;不同&lt;xref:System.Drawing.BufferedGraphicsContext&gt;應用程式網域和它會自動公開當&lt;xref:System.Drawing.BufferedGraphics&gt;傳回&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;處置方法。&lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; &lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; to a device context to match the pixel format of the new buffer to.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;裝置內容，以符合新緩衝區的像素格式。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the size of the buffer to create.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指出要建立之緩衝區的大小。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，可以用來繪製指定的維度的緩衝區。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">當您完成使用&lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;呼叫 Dispose</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法會使&lt;xref:System.Drawing.BufferedGraphicsContext&gt;中無法使用的狀態。&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; was occupying.</source>
          <target state="translated">在呼叫 Dispose 之後，您必須釋放所有參考&lt;xref:System.Drawing.BufferedGraphicsContext&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.Drawing.BufferedGraphicsContext&gt;所佔用。&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 永遠呼叫 Dispose 之後，再放開您的最後一個參考至&lt;xref:System.Drawing.BufferedGraphicsContext&gt;。&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Object.Finalize%2A&gt; method of the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">否則，它所使用的資源將不會釋放記憶體回收行程呼叫&lt;xref:System.Object.Finalize%2A&gt;&lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;方法&lt;/xref:System.Object.Finalize%2A&gt;之前</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</source>
          <target state="translated">如果緩衝區已配置，且尚未處置，處置目前的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</source>
          <target state="translated">如果正在使用中的圖形緩衝區，它會被標示為處置只要是完全免費。否則，它會處置立即。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum size of the buffer to use.</source>
          <target state="translated">取得或設定要使用之緩衝區的大小上限。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</source>
          <target state="translated">這個屬性可讓您取得或設定應該保留在記憶體中緩衝區的最大維度。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the &lt;xref:System.Drawing.BufferedGraphics&gt; object is released.</source>
          <target state="translated">您可以將任何大小的緩衝區配置，不過任何大於 MaximumBuffer 大小維度的緩衝處理將會暫時使用後即捨棄時&lt;xref:System.Drawing.BufferedGraphics&gt;釋放物件。&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the maximum size of the buffer dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指出緩衝區大小的最大大小。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The height or width of the size is less than or equal to zero.</source>
          <target state="translated">高度或寬度的大小小於或等於零。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>