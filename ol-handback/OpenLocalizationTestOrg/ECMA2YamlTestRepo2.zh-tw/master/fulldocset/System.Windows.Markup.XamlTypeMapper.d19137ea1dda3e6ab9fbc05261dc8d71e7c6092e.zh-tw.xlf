<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1245680de30d058b656087aa3abd774676cc28ba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.XamlTypeMapper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff8d2625fc7213493048ccee2b999f195af91124</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa32ef088b74b44fc3aed6338e08adabd7c22ca9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Maps a XAML element name to the appropriate CLR &lt;xref:System.Type&gt; in assemblies.</source>
          <target state="translated">將 XAML 項目名稱對應至適當的 CLR&lt;xref:System.Type&gt;組件中。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XamlTypeMapper is part of an advanced WPF scenario that supplies alternate context for &lt;xref:System.Windows.Markup.XamlReader&gt; and &lt;xref:System.Windows.Markup.XamlWriter&gt;.</source>
          <target state="translated">XamlTypeMapper 是進階的 WPF 案例，提供替代的內容和&lt;xref:System.Windows.Markup.XamlReader&gt;&lt;xref:System.Windows.Markup.XamlWriter&gt;.&lt;/xref:System.Windows.Markup.XamlWriter&gt;&lt;/xref:System.Windows.Markup.XamlReader&gt;的一部分</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> WPF applications, you should consider overriding &lt;xref:System.Xaml.XamlSchemaContext&gt; for this scenario, rather than attempting to use XamlTypeMapper.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>WPF 應用程式，您應該考慮覆寫&lt;xref:System.Xaml.XamlSchemaContext&gt;此案例中，而不是嘗試使用 XamlTypeMapper。&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XamlTypeMapper can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of &lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt; values on the assembly code.</source>
          <target state="translated">XamlTypeMapper 可以用來提供更直接的技術的應用程式比透過自訂的對應資訊的 XAML 剖析器&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;組譯程式碼的值。&lt;/xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add &lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt; attributing.</source>
          <target state="translated">這可能是適用於組件中的所有 CLR 命名空間的彙總或參考型別，是為了增加而不必重新編譯時的現有組件中的 XAML 已備妥&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;屬性設定。&lt;/xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You typically create a XamlTypeMapper instance in order to specify the &lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt; property value for a &lt;xref:System.Windows.Markup.ParserContext&gt;.</source>
          <target state="translated">您通常會以指定&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;&lt;xref:System.Windows.Markup.ParserContext&gt;。&lt;/xref:System.Windows.Markup.ParserContext&gt;屬性值&lt;/xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;建立 XamlTypeMapper 執行個體</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Markup.ParserContext&gt; in turn can be used as the context for a &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName&gt;call.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.ParserContext&gt;依次可用做為環境&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName&gt;呼叫。&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName&gt; &lt;/xref:System.Windows.Markup.ParserContext&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Default Mapper    You can obtain a default mapper using the &lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt; static property.</source>
          <target state="translated">預設對應程式您可以使用預設對應程式來取得&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;靜態屬性。&lt;/xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">預設對應工具只適用於預設組件清單。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>No specific information about assemblies (as is specified in XamlTypeMapper constructors) is used.</source>
          <target state="translated">沒有特定組件 （如 XamlTypeMapper 建構函式中指定） 會使用相關資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文字用法</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by specifying an array of assembly names that the <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should use.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>藉由指定的組件陣列的類別名稱<bpt id="p2">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>應該使用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The array of assembly names the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should use.</source>
          <target state="translated">組件名稱陣列<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>應該使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyNames&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyNames&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, using the specified array of assembly names and the specified namespace maps.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，使用指定的組件名稱陣列，並將對應指定的命名空間。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The array of assembly names the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should use.</source>
          <target state="translated">組件名稱陣列<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>應該使用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The array of namespace maps the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should use.</source>
          <target state="translated">命名空間對應陣列<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>應該使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyNames&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyNames&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">定義 XML 命名空間與 CLR 命名空間之間的對應中的組件，並加入這些<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>資訊。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>AddMappingProcessingInstruction is a programmatic way to add a mapping.</source>
          <target state="translated">AddMappingProcessingInstruction 是程式設計方式來新增對應。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, the different parts of the following XAML mapping instruction correspond to the parameters of the AddMappingProcessingInstruction:      <ph id="ph1">```   &lt;Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples"&gt;   ...   ```</ph>       The <ph id="ph2">`xmlNamespace`</ph> is <ph id="ph3">`SDK`</ph>, the <ph id="ph4">`clrNamespace`</ph> is <ph id="ph5">`Samples`</ph>, and the <ph id="ph6">`assemblyName`</ph> is <ph id="ph7">`SDKSamples`</ph>.</source>
          <target state="translated">例如，下列 XAML 對應指令的不同部分對應到 AddMappingProcessingInstruction 的參數︰ <ph id="ph1">```   &lt;Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples"&gt;   ...   ```</ph> <ph id="ph2">`xmlNamespace`</ph>是<ph id="ph3">`SDK`</ph>、<ph id="ph4">`clrNamespace`</ph>是<ph id="ph5">`Samples`</ph>，和<ph id="ph6">`assemblyName`</ph>是<ph id="ph7">`SDKSamples`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The prefix for the XML namespace..</source>
          <target state="translated">XML 命名空間前置詞...</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The CLR  namespace that contains the types to map.</source>
          <target state="translated">包含要對應的型別之 CLR 命名空間。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The assembly that contains the CLR  namespace.</source>
          <target state="translated">包含 CLR 命名空間的組件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;clrNamespace&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>       -or-       <ph id="ph3">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;clrNamespace&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>       -or-       <ph id="ph3">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Requests permission for a <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived type that is called under full trust to access a specific internal type.</source>
          <target state="translated">要求的權限<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生型別在完全信任來存取特定的內部型別下所呼叫。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If not overridden by a subclass, AllowInternalType always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果未覆寫由子類別，AllowInternalType 一律會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When overridden by a subclass, the behavior should be that AllowInternalType should return <ph id="ph1">`true`</ph> if the internal type can be accessed; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated">行為時的子類別覆寫，應該是應傳回 AllowInternalType<ph id="ph1">`true`</ph>內部型別可存取; 否則如果<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The type to access.</source>
          <target state="translated">存取類型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the internal type can be accessed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以存取內部型別。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets an instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use if one has not been specified.</source>
          <target state="translated">取得執行個體<bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用其中一個尚未指定。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">預設對應工具只適用於預設組件清單。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>No specific information about assemblies (as is specified in &lt;xref:System.Windows.Markup.XamlTypeMapper&gt; constructors) is used.</source>
          <target state="translated">沒有組件的特定資訊 (如中所指定&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;建構函式) 會使用。&lt;/xref:System.Windows.Markup.XamlTypeMapper&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the current implementation the default assembly list is: <ph id="ph1">`WindowsBase`</ph>, <ph id="ph2">`PresentationCore`</ph>, <ph id="ph3">`PresentationFramework`</ph>.</source>
          <target state="translated">在目前的實作是預設組件清單︰ <ph id="ph1">`WindowsBase`</ph>， <ph id="ph2">`PresentationCore`</ph>， <ph id="ph3">`PresentationFramework`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</source>
          <target state="translated">使用預設對應工具並不表示您無法使用自訂的組件類型在 XAML 中完全。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as <ph id="ph1">`xmlns`</ph> attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</source>
          <target state="translated">它僅表示如果您使用自訂類型/組件，您必須再使用傳統的 XAML 技巧，建立做為對應的<ph id="ph1">`xmlns`</ph>每個類型/組件所參考位置，而不是型別對應器應用程式開發介面的 XAML 頁面中的屬性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XAML 命名空間和 WPF XAML 命名空間對應<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default type mapper.</source>
          <target state="translated">預設的型別對應器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the CLR &lt;xref:System.Type&gt; that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</source>
          <target state="translated">取得在 CLR&lt;xref:System.Type&gt;給定的 XAML 項目對應到，使用指定的 XML 命名空間前置詞和項目名稱。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a type cannot be found that maps to the provided information, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">如果型別無法對應至提供的資訊，找到<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Do not include the prefix as part of <ph id="ph1">`localName`</ph>.</source>
          <target state="translated">一部分，不包含前置詞<ph id="ph1">`localName`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For any prefixed XAML element information, separate it into <ph id="ph1">`xmlNamespace`</ph> and <ph id="ph2">`localName`</ph> components for this API call.</source>
          <target state="translated">針對任何前置 XAML 項目資訊時，區隔到<ph id="ph1">`xmlNamespace`</ph>和<ph id="ph2">`localName`</ph>此應用程式開發介面呼叫的元件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The specified XML namespace prefix.</source>
          <target state="translated">指定的 XML 命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The "local" name of the XAML element to obtain the mapped &lt;xref:System.Type&gt; for.</source>
          <target state="translated">若要取得對應的&lt;xref:System.Type&gt;for...in&lt;/xref:System.Type&gt; XAML 項目 「 本機 」 名稱</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Local in this context means as mapped versus the provided <ph id="ph1">`xmlNamespace`</ph>.</source>
          <target state="translated">在此內容中的本機表示因為對應與提供<ph id="ph1">`xmlNamespace`</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; for the object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no mapping could be resolved.</source>
          <target state="translated">&lt;xref:System.Type&gt;物件，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果沒有對應可加以解析。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;localName&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;localName&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the path to use when loading an assembly.</source>
          <target state="translated">指定要載入的組件時所使用的路徑。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The short name of the assembly without an extension or path specified (equivalent to <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>).</source>
          <target state="translated">未經擴充或指定路徑的組件的簡短名稱 (相當於<ph id="ph1">&amp;lt;</ph>xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The file path of the assembly.</source>
          <target state="translated">組件的檔案路徑。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The assembly path must be a full file path containing a file extension.</source>
          <target state="translated">組件路徑必須包含副檔名的完整檔案路徑。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       -or-       <ph id="ph2">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref:System.String&gt;</ph>       -or-       <ph id="ph3">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <ph id="ph4">&lt;xref:System.String&gt;</ph>       -or-       <ph id="ph5">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is not a full file path containing a file extension.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>是<ph id="ph2">&lt;xref:System.String&gt;</ph>-<ph id="ph3">&lt;code&gt;assemblyPath&lt;/code&gt;</ph>是<ph id="ph4">&lt;xref:System.String&gt;</ph>-或-<ph id="ph5">&lt;code&gt;assemblyPath&lt;/code&gt;</ph>不包含副檔名的完整檔案路徑。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>