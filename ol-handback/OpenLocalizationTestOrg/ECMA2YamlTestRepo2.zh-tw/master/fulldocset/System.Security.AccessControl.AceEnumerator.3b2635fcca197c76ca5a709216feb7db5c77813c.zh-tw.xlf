<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4736c2735cf188d5cdcd8bf7d866c85b11e0817</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.AceEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ce3d04223103e04a906deeb0edce99b4692c407</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76922cfb96bd81241f747e491e4e10bf4012631c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the ability to iterate through the access control entries (ACEs) in an access control list (ACL).</source>
          <target state="translated">存取控制清單 (ACL) 中提供了可逐一查看存取控制項目 (Ace)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the current element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">取得目前的項目中<bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This property gets the type-friendly version of the object.</source>
          <target state="translated">這個屬性會取得物件的型別易記版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The current element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">目前的項目<bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">將列舉值前移至下一個項目<bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a call to the &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; method, an enumerator is positioned before the first element of the collection, and the first call to the MoveNext method moves the enumerator over the first element of the collection.</source>
          <target state="translated">建立列舉值之後，或呼叫後&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;方法，列舉程式位於集合中，第一個項目之前和 MoveNext 方法的第一個呼叫移到集合的第一個元素的列舉值。&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After the end of the collection is passed, subsequent calls to MoveNext return <ph id="ph1">`false`</ph> until &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">集合的末端後，後續呼叫 MoveNext 傳回<ph id="ph1">`false`</ph>直到&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除項目，列舉程式會永久失效，且下次呼叫 MoveNext 或&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果列舉值成功前移至下一個元素;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果列舉值已跳過集合結尾。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，已修改集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">設定列舉值至它的初始位置，這是中的第一個項目之前<bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If , such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to the &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; method or the Reset method throws an &lt;xref:System.InvalidOperationException&gt;</source>
          <target state="translated">如果，例如加入、 修改或刪除元素，會對集合進行的列舉程式會永久失效，且下次呼叫&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;方法或重設方法會擲回&lt;xref:System.InvalidOperationException&gt;&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，已修改集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">取得目前的項目集合中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a call to the &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; method, you must call the &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of IEnumerator.Current; otherwise, IEnumerator.Current is undefined.</source>
          <target state="translated">建立列舉值之後，或呼叫後&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;方法，您必須呼叫&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;方法，以將列舉值前進的第一個元素的集合，才能讀取 IEnumerator.Current; 值否則 IEnumerator.Current 未定義。&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>IEnumerator.Current also throws an exception if the last call to &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">IEnumerator.Current 也擲回例外狀況，如果最後一個呼叫&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>，表示集合的結尾。&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>IEnumerator.Current does not move the position of the enumerator, and consecutive calls to IEnumerator.Current return the same object until either &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">IEnumerator.Current 不會移動位置的列舉值，並對 IEnumerator.Current 連續呼叫會傳回相同的物件直到&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;或&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated, and the next call to &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除項目，列舉程式會永久失效，並在下一個呼叫&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;或&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; and IEnumerator.Current, IEnumerator.Current returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;和 IEnumerator.Current，IEnumerator.Current 傳回的項目設定為時，即使列舉值已經無效。&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the current element in the collection.</source>
          <target state="translated">傳回目前的項目集合中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，已修改集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>