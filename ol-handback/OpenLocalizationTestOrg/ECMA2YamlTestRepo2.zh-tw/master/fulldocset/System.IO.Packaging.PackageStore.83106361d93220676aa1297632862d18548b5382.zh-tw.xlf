<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9ae2a41373d525c6f3658914f55aced08abc50a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Packaging.PackageStore.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ab1970ca66b5ffe5b04fe36eb7c96453eb0366b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2174cf495547397055709800573510084c573622</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of application-specific <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances used in combination with <bpt id="p2">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示應用程式特定的集合<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與搭配使用的執行個體<bpt id="p2">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The PackageStore defines a reference collections of package that are open and active in the application.</source>
          <target state="translated">PackageStore 定義封裝會開啟並作用中應用程式參考的集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Packages added to the PackageStore are accessed is by their key URI value.</source>
          <target state="translated">套件新增至 PackageStore 存取是由其索引鍵的 URI 值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The PackageStore supports three common uses:      1.</source>
          <target state="translated">PackageStore 支援三種常見的用法︰ 1。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Accessing &lt;xref:System.IO.Packaging.PackagePart&gt; data through &lt;xref:System.IO.Packaging.PackWebRequest&gt;.</source>
          <target state="translated">存取&lt;xref:System.IO.Packaging.PackagePart&gt;透過&lt;xref:System.IO.Packaging.PackWebRequest&gt;.&lt;/xref:System.IO.Packaging.PackWebRequest&gt;資料&lt;/xref:System.IO.Packaging.PackagePart&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The application obtaining an instance of a &lt;xref:System.IO.Packaging.Package&gt; given the package's URI.</source>
          <target state="translated">取得執行個體的應用程式&lt;xref:System.IO.Packaging.Package&gt;指定封裝的 URI。&lt;/xref:System.IO.Packaging.Package&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Accessing packages that are created and stored in a &lt;xref:System.IO.MemoryStream&gt;.</source>
          <target state="translated">存取封裝所建立和儲存在&lt;xref:System.IO.MemoryStream&gt;.&lt;/xref:System.IO.MemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by &lt;xref:System.IO.Packaging.PackWebRequest&gt; and directly by the application.</source>
          <target state="translated">若要改善效能，並重複的檔案開啟/關閉作業的負擔降至最低，PackageStore 用來管理封裝所存取的執行個體&lt;xref:System.IO.Packaging.PackWebRequest&gt;，直接由應用程式。&lt;/xref:System.IO.Packaging.PackWebRequest&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When accessing data in a package, the &lt;xref:System.IO.Packaging.Package&gt; address of a requested &lt;xref:System.IO.Packaging.PackagePart&gt; &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; is first checked to see if the package is already defined and open in the PackageStore.</source>
          <target state="translated">存取封裝時，資料時&lt;xref:System.IO.Packaging.Package&gt;位址的要求&lt;xref:System.IO.Packaging.PackagePart&gt;&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;會先檢查封裝是否已定義且 PackageStore 中開啟。&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt; &lt;/xref:System.IO.Packaging.PackagePart&gt; &lt;/xref:System.IO.Packaging.Package&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.</source>
          <target state="translated">如果封裝定義為 PackageStore 中開啟，直接不重複開啟和關閉每個要求的封裝就能存取要求的組件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If your application opens a package with &lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;, &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; can be called to add the package to the PackageStore.</source>
          <target state="translated">如果您的應用程式開啟的封裝&lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;，&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;可以呼叫以將封裝加入 PackageStore。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; &lt;/xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; should later be called to remove the package from the PackageStore prior to calling &lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;稍後應該呼叫以從之前呼叫&lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt; PackageStore 移除封裝&lt;/xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>XPS packages opened with an &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructor are automatically added and removed from the PackageStore when the document is created and disposed.</source>
          <target state="translated">使用 XPS 封裝開啟&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;建構函式會自動加入和移除從 PackageStore 文件時建立並處置。&lt;/xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(You do not need to call &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; or &lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; separately for XPS packages opened with &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructors.)       The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.</source>
          <target state="translated">(您不需要呼叫&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;或&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;分開的 XPS 封裝以開啟&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;建構函式。)&lt;/xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; &lt;/xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; &lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;     透過 PackageStore 存取封裝的檔案 I/O 權限會維持相同的封裝上設定，開啟時的 I/O 權限。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The PackageStore only provides references to the packages that have been added the store.</source>
          <target state="translated">PackageStore 僅提供參考已加入存放區的封裝。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is up to the application to correctly open, update, and close each package.</source>
          <target state="translated">這是由要正確地開啟、 更新和關閉每個封裝的應用程式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> parser such as &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">搭配使用時，您可以在多執行緒環境中存取封裝加入至 PackageStore <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;例如剖析器</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When operating in a multithreaded environment, the application must lock the package before access.</source>
          <target state="translated">多執行緒環境中運作，當應用程式必須鎖定之前存取封裝。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the store.</source>
          <target state="translated">新增<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>存放區。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> defines the package's key URI that is compared when you call &lt;xref:System.IO.Packaging.PackWebRequest&gt;.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>定義封裝的索引鍵進行比較時呼叫&lt;xref:System.IO.Packaging.PackWebRequest&gt;.&lt;/xref:System.IO.Packaging.PackWebRequest&gt;的 URI</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`packageUri`</ph> matches the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package defined in the &lt;xref:System.IO.Packaging.PackageStore&gt; is used to access the requested part.</source>
          <target state="translated">如果<ph id="ph1">`packageUri`</ph>符合&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;&lt;xref:System.IO.Packaging.PackagePart&gt;&lt;xref:System.IO.Packaging.PackWebRequest&gt;呼叫，&lt;xref:System.IO.Packaging.PackageStore&gt;用來存取要求的組件&lt;/xref:System.IO.Packaging.PackageStore&gt;中定義封裝&lt;/xref:System.IO.Packaging.PackWebRequest&gt;中&lt;/xref:System.IO.Packaging.PackagePart&gt;&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`packageUri`</ph> does not match the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package with the specified URI is opened to access the requested part.</source>
          <target state="translated">如果<ph id="ph1">`packageUri`</ph>&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;&lt;xref:System.IO.Packaging.PackagePart&gt;中&lt;xref:System.IO.Packaging.PackWebRequest&gt;呼叫時，具有指定之 URI 的封裝會開啟到存取要求的組件&lt;/xref:System.IO.Packaging.PackWebRequest&gt;&lt;/xref:System.IO.Packaging.PackagePart&gt;&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt;不相符</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全性注意事項<ept id="p1">**</ept>這個方法會要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;所有自訂&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 型別。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The key <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> of the <ph id="ph2">`package`</ph> to compare in a <bpt id="p1">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">索引鍵<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>的<ph id="ph2">`package`</ph>中比較<bpt id="p1">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The package to add to the store.</source>
          <target state="translated">要新增至存放區的封裝。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;package&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;package&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是無效的套件<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A package with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept> is already in the store.</source>
          <target state="translated">使用指定的封裝<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">packageUri</ph> <ept id="p1">&lt;/code&gt;</ept>已經在存放區中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a specified <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與指定<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>從存放區。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>比對以 Uri 中指定&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;方法呼叫。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全性注意事項<ept id="p1">**</ept>這個方法會要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;所有自訂&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 型別。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to return.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>来傳回的封裝。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The package with a specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept>; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if a package with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">packageUri</ph><ept id="p3">&lt;/code&gt;</ept> is not in the store.</source>
          <target state="translated">具有指定的封裝<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">packageUri</ph> <ept id="p1">&lt;/code&gt;</ept>; 或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果指定的封裝<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">packageUri</ph> <ept id="p3">&lt;/code&gt;</ept>不在存放區。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是無效的套件<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Removes the <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a specified <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
          <target state="translated">移除<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與指定<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>從存放區。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>比對以 Uri 中指定&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;方法呼叫。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全性注意事項<ept id="p1">**</ept>這個方法會要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;所有自訂&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 型別。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to remove.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>来移除的封裝。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是無效的套件<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>