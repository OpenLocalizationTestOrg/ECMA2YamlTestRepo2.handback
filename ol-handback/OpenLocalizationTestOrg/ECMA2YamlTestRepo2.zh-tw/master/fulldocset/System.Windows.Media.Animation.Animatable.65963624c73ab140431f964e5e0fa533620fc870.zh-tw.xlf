<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54987b145df524e2c04721d4c6bffcfcc50ba9e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Animation.Animatable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e3af9b722338fa0314302bcbaf2d142f0430979</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7b2f884eff8b4afc58e95a4cd67f1658436c86c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">提供動畫支援的抽象類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用於<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定<bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">如果屬性已有動畫效果， <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可遞移式行為。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">請注意，使用此方法，從屬性移除時鐘時，不會停止這些時鐘。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">用來建立指定的屬性的動畫時鐘。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`clock`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果<ph id="ph1">`clock`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，所有動畫會移除指定的屬性 （但不是會停止）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用於<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定<bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">如果屬性已有動畫效果，指定<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">請注意，使用此方法來從屬性移除時鐘時，不會停止這些時鐘。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">撰寫 HandoffBehavior 時使用您套用&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;屬性使用&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，任何&lt;xref:System.Windows.Media.Animation.Clock&gt;之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統會自動移除這些時鐘。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您套用大量使用時鐘&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，在它們完成之後，您應該從動畫屬性移除組成的時鐘。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">有幾種方式移除時鐘。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">-若要從屬性移除所有時鐘，請使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;動畫物件的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">這會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要移除&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的時鐘，清單中使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;屬性&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;來擷取&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然後呼叫此&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;特定</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">這通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;時鐘的事件處理常式。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子時鐘的屬性會傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;是否有效的持續時間的時鐘永遠不會呼叫事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這是主要的動畫長的存留期的物件上的問題。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，將也會中斷其時鐘和記憶體回收。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">用來建立指定的屬性的動畫時鐘。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">`clock`</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果<ph id="ph1">`handoffBehavior`</ph>是<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<ph id="ph2">`clock`</ph>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，所有動畫會移除指定的屬性 （但不是會停止）。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and clock is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method has no effect.</source>
          <target state="translated">如果<ph id="ph1">`handoffBehavior`</ph>是<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和時鐘<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，這個方法沒有任何作用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">值，指定新動畫如何互動任何目前的動畫已經影響的屬性值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將動畫套用至指定<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">當轉譯下一個畫面格時，會啟動動畫。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">如果指定的屬性已有動畫效果， <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可遞移式行為。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果動畫的&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;小於或等於零，動畫開始後從下一個畫面格呈現時間經過的時間量。&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用來建立指定之屬性的動畫。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">如果動畫的&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，則會移除任何目前的動畫和目前屬性的值會保留。&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`animation`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">如果<ph id="ph1">`animation`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 從屬性則會移除所有的動畫和屬性值會回復為其基底值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將動畫套用至指定<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">當轉譯下一個畫面格時，會啟動動畫。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">如果指定的屬性已有動畫效果，指定<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果動畫的&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;小於或等於零，動畫開始後從下一個畫面格呈現時間經過的時間量。&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">撰寫 HandoffBehavior 時使用您套用&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;屬性使用&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，任何&lt;xref:System.Windows.Media.Animation.Clock&gt;之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統會自動移除這些時鐘。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您套用大量使用時鐘&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，在它們完成之後，您應該從動畫屬性移除組成的時鐘。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">有幾種方式移除時鐘。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">-若要從屬性移除所有時鐘，請使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;動畫物件的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">這會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要移除&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的時鐘，清單中使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;屬性&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;來擷取&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然後呼叫此&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;特定</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">這通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;時鐘的事件處理常式。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子時鐘的屬性會傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;是否有效的持續時間的時鐘永遠不會呼叫事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這是主要的動畫長的存留期的物件上的問題。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，將也會中斷其時鐘和記憶體回收。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用來建立指定之屬性的動畫。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<bpt id="p2">*</bpt>&gt; is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.       If <ph id="ph2">`handoffBehavior`</ph> is <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and <ph id="ph3">`animation`</ph> is a <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> reference, all animations will be removed from the property and the property value will revert back to its base value.       If <ph id="ph4">`handoffBehavior`</ph> is <bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, this method will have no effect if the animation or its &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<ept id="p2">*</ept>&gt; is <bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果<ph id="ph1">`handoffBehavior`</ph>是<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和動畫的&lt;&gt; <bpt id="p2">*</bpt>&gt; 是<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>則會移除任何目前的動畫，會保留目前的屬性值。     如果<ph id="ph2">`handoffBehavior`</ph>是<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>和<ph id="ph3">`animation`</ph>是<bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>參考，則會移除所有動畫，從屬性和屬性值會回復為其基底值。     如果<ph id="ph4">`handoffBehavior`</ph>是<bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p6">&lt;/xref&gt;</ept>，這個方法會有任何作用，如果動畫或其&lt;&gt; <ept id="p2">*</ept>&gt; 是<bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p7">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">值，指定新動畫如何互動任何目前的動畫已經影響的屬性值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, making deep copies of this object's values.</source>
          <target state="translated">建立可修改複製品這個<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，製作這個物件值的深層複本。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">當複製這個物件的相依性屬性，這個方法會複製資源參考和資料繫結 （但可能已不能再解析），但不是動畫或它們目前的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Clone method can be used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects.</source>
          <target state="translated">Clone 方法可以用來產生的可修改複本凍結&lt;xref:System.Windows.Freezable&gt;物件。&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For convenience, this method shadows the inherited &lt;xref:System.Windows.Freezable.Clone%2A&gt; method to provide a strongly typed implementation.</source>
          <target state="translated">為了方便起見，這個方法會遮蔽繼承&lt;xref:System.Windows.Freezable.Clone%2A&gt;方法以提供強類型的實作。&lt;/xref:System.Windows.Freezable.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">這個執行個體的可修改複本。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">傳回的複製品實際上是目前物件的深層複本。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The clone's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id="p1">*</bpt>&gt; property is <ept id="p1">*</ept><bpt id="p2">*</bpt>false<ept id="p2">*</ept>*.</source>
          <target state="translated">複製品的&lt;&gt; <bpt id="p1">*</bpt>&gt; 屬性是<ept id="p1">*</ept> <bpt id="p2">*</bpt>false<ept id="p2">*</ept>*。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Makes this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">使這個成為<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件為不可修改，或決定是否可以設為不可修改。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when &lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt; is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">這個方法會傳回<bpt id="p1">**</bpt>false<ept id="p1">**</ept>時&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;是<bpt id="p2">**</bpt>true<ept id="p2">**</ept>。&lt;/xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">請勿呼叫這個方法，直接 （只是呼叫基底實作中）。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method is called internally by &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; (with <ph id="ph1">`isChecking`</ph> equal to <ph id="ph2">`true`</ph>) and  &lt;xref:System.Windows.Freezable.Freeze%2A&gt; (with <ph id="ph3">`isChecking`</ph> equal to <ph id="ph4">`false`</ph>).</source>
          <target state="translated">這個方法在內部呼叫&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;(與<ph id="ph1">`isChecking`</ph>等於<ph id="ph2">`true`</ph>) 和&lt;xref:System.Windows.Freezable.Freeze%2A&gt;(與<ph id="ph3">`isChecking`</ph>等於<ph id="ph4">`false`</ph>)。&lt;/xref:System.Windows.Freezable.Freeze%2A&gt; &lt;/xref:System.Windows.Freezable.CanFreeze%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個方法應該只會決定是否可以凍結這個執行個體。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個執行個體本身實際上應該凍結時呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，這個方法會傳回<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果這個<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>可以設為不可修改，或<bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>如果無法設為不可修改。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，這個方法會傳回<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果 if 這<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>現在是無法修改，或<bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>如果無法設為不可修改，具有副作用，即開始變更這個物件的已凍結的狀態。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the non-animated value of the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回非動畫值，指定<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the specified property is not animated, this method returns the same result as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">如果指定的屬性不會顯示動畫，這個方法會傳回與&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;相同的結果</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">識別應該要擷取其基底 （非動畫） 值的屬性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">如果沒有建立動畫的指定的屬性將會傳回值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether one or more <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">取得值，指出是否一或多個<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件已有此物件的相依性屬性的任何相關聯。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">這個屬性不會指出這個物件是否包含動畫子物件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">指定是否應該序列化相依性物件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor&gt; class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor&gt;類別使用 ShouldSerializeStoredWeakReference 方法來判斷屬性是否應該序列化。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">代表參與相依性屬性系統的物件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>