<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74cb8ecc9e88b99a6f6547ece54a482a0fc03456</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.PresentationSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9d6f75ae768e40f2d3034a6cdd1675bd98d3237</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd9caf8a80d2810b16dbb747d9443ef39c11c1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">提供抽象基底類別，以顯示從另一種技術的內容做為互通案例的一部分。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">此外，這個類別會提供使用這些來源，以及基本層視覺呈現方式架構的靜態方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">提供基底類別值由衍生類別的建構函式呼叫時的初始設定。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance to the list of known presentation sources.</source>
          <target state="translated">新增<bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生類別執行個體的已知的簡報來源清單。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">由衍生類別，以指出需要追蹤，就應該呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to the provided element.</source>
          <target state="translated">加入的處理常式<bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件提供的項目。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">儘管此事件的語法區塊的狀態，是不合法<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>附加的屬性使用方式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (&lt;xref:System.Windows.PresentationSource&gt; ) content.</source>
          <target state="translated">您不應該嘗試將處理常式中的加入<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>，和在程式碼中的處理常式應該只放置在物件做為主機的簡報 (&lt;xref:System.Windows.PresentationSource&gt; ) 內容。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">這類處理常式只應在物件初始化期間附加，而且應該在 Dispose 方法或對等物件清除中明確移除。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使這是路由的事件時，有特殊限制放在這個事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理這個事件的一般應用程式案例中的項目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; methods to add handlers.</source>
          <target state="translated">-您無法使用&lt;xref:System.Windows.UIElement&gt;或&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;方法加入處理常式。&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt; &lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must use AddSourceChangedHandler.</source>
          <target state="translated">您必須使用 AddSourceChangedHandler。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件處理常式語法，以及相關的語言特定處理常式語法不支援，因為事件本身不會公開為公用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">只有&lt;xref:System.Windows.PresentationSource&gt;公用程式方法，用於加入和移除處理常式直接支援。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Class handlers are not allowed.</source>
          <target state="translated">不允許類別處理常式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifically, you cannot call &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt; against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">具體來說，您不能呼叫&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;針對此事件類別的建構函式中因為雖然 SourceChanged 有識別碼欄位，識別項不是公用。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">-所有註冊處理常式將會收到 SourceChanged 事件，即使其中一個處理常式會嘗試將引數標記為已處理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The element to add the handler to.</source>
          <target state="translated">若要加入的處理常式項目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The hander implementation to add.</source>
          <target state="translated">要加入的處理常式實作。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sets the list of listeners for the <bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定接聽程式的清單<bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">取得要呈現在來源中的視覺效果的視覺目標。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The return of this property relies on an implementation of &lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;.</source>
          <target state="translated">這個屬性傳回依賴&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;.&lt;/xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;的實作</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A visual target (instance of a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class).</source>
          <target state="translated">視覺目標 (執行個體<bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生的類別)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">內容已呈現且可與使用者互動時發生。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a list of sources.</source>
          <target state="translated">傳回清單的來源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with &lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;.</source>
          <target state="translated">傳回的清單唯讀、 具備執行緒安全的來源的清單複本上支援列舉值加上&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;.&lt;/xref:System.Windows.PresentationSource.AddSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">列舉值會略過清單中的任何廢弱式參考。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A list of weak references.</source>
          <target state="translated">弱式參考的清單。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">傳回來源，在其中提供<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呈現。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>找不到的來源。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the dependency object is being presented.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中的相依性物件所提供。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">傳回來源，在其中提供<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呈現。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>找不到的來源。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the visual is being presented, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">visual</ph><ept id="p3">&lt;/code&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中視覺效果所提供，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">visual</ph> <ept id="p3">&lt;/code&gt;</ept>處置。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">當在衍生類別中覆寫時，傳回指定之來源的視覺目標。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is target for rendering the visual.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>也就是呈現視覺效果的目標。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">當在衍生類別中覆寫時，取得宣告的物件是否已處置的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is disposed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果物件已處置。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance from the list of known presentation sources.</source>
          <target state="translated">移除<bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生的類別執行個體從已知的簡報來源的清單。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event from the provided element.</source>
          <target state="translated">移除的處理常式<bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件從提供的項目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使這是路由的事件時，有特殊限制放在這個事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理這個事件的一般應用程式案例中的項目。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt; methods to remove handlers.</source>
          <target state="translated">-您無法使用&lt;xref:System.Windows.UIElement&gt;或&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;方法，以移除處理常式。&lt;/xref:System.Windows.UIElement.RemoveHandler%2A&gt; &lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must use RemoveSourceChangedHandler.</source>
          <target state="translated">您必須使用 RemoveSourceChangedHandler。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件處理常式語法和其他語言特定處理常式的語法，不支援，因為事件本身不會公開為公用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">只有&lt;xref:System.Windows.PresentationSource&gt;公用程式方法，用於加入和移除處理常式直接支援。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The element to remove the handler from.</source>
          <target state="translated">若要移除處理常式項目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The handler implementation to remove.</source>
          <target state="translated">要移除的處理常式實作。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provides notification that the root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changed.</source>
          <target state="translated">提供通知的根目錄<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已變更。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Derived classes should call this method to indicate that their root &lt;xref:System.Windows.Media.Visual&gt; has changed.</source>
          <target state="translated">在衍生的類別應該呼叫此方法以指出其根&lt;xref:System.Windows.Media.Visual&gt;已變更。&lt;/xref:System.Windows.Media.Visual&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are &lt;xref:System.Windows.FrameworkElement&gt; derived classes.</source>
          <target state="translated">呼叫這個方法會導致兩個指定的根視覺效果上產生的物件存留期事件，並僅有這些根視覺效果是&lt;xref:System.Windows.FrameworkElement&gt;衍生的類別。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   The old root visual will raise the &lt;xref:System.Windows.FrameworkElement.Unloaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">將會引發-舊的根 visual&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。&lt;/xref:System.Windows.FrameworkElement.Unloaded&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   The new root visual will raise the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">-新的根 visual 將會引發&lt;xref:System.Windows.FrameworkElement.Loaded&gt;事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The old root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">舊的根<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The new root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新的根<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">當在衍生類別中覆寫時，取得或設定根 visual 要呈現在來源中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The root visual.</source>
          <target state="translated">根 visual。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>