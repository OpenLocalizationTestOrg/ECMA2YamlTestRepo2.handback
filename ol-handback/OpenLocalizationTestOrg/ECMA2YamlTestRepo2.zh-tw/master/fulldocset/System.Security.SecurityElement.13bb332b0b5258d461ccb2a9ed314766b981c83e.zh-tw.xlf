<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">227bd46500f950d75c81bb57b4687ff107a4b899</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecurityElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4086e388e4e67d39b9a7a72e122a201f01ba575b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dcd1fb32ab85f861345775e9312b22f1ecc6340</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">代表用於編碼安全性物件的 XML 物件模型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">這個類別被要簡單的 XML 物件模型用於安全性系統，而不做為一般的 XML 物件模型的輕量型實作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">這份文件會假設 XML 的基本知識。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The simple XML object model for an element consists of the following parts:      -   The tag is the element name.</source>
          <target state="translated">簡單的 XML 物件模型的項目包含下列部分:-標記是項目名稱。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">-屬性都是零或多個名稱/值項目上的屬性組。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">-子系是零或多個項目巢狀<ph id="ph1">`&lt;tag&gt;`</ph>和<ph id="ph2">`&lt;/tag&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">強烈建議屬性型 XML 表示法用來表示安全性項目和其值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">這表示項目的屬性會表示為屬性和屬性值會表示為屬性值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">避免使用巢狀標記內的文字。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">針對任何<ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph>表示的類型表示法<ph id="ph2">`&lt;tag value="text"/&gt;`</ph>通常使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">使用此屬性為基礎的 XML 表示法會增加可讀性，並可讓您輕鬆的 WMI 可攜性產生的 XML 序列化。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">屬性名稱必須是其中一個字元或更長，且不能<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">如果項目為基礎的值表示，項目文字字串<ph id="ph1">`null`</ph>表示<ph id="ph2">`&lt;tag/&gt;`</ph>形成; 否則會以分隔文字<ph id="ph3">`&lt;tag&gt;`</ph>和<ph id="ph4">`&lt;/tag&gt;`</ph>語彙基元。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">這兩種形式可以結合屬性，會顯示這些如果有的話。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">標記、 屬性和文字的項目，如果有的話，會一律區分大小寫。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">XML 格式包含引號，並在需要時來逸出。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>String values that include characters invalid for use in XML result in an &lt;xref:System.ArgumentException&gt;.</source>
          <target state="translated">在 XML 中包含使用無效的字元的字串值會導致&lt;xref:System.ArgumentException&gt;.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">這些規則適用於所有屬性和方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 基於效能考量，字元的有效性時，才檢查項目會編碼為 XML 文字格式，而不是在每個屬性或方法的集合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">可讓明確檢查所需的靜態方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified tag.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定標記的類別。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated"><ph id="ph1">`tag`</ph>參數必須包含有效的 XML 標記名稱。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">使用&lt;xref:System.Security.SecurityElement.Escape%2A&gt;從字串中移除無效的字元。&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The tag name of an XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p1">&lt;/code&gt;</ept> XML 中的參數無效。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified tag and text.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，以指定的標記和文字。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">如果<ph id="ph1">`text`</ph>參數是<ph id="ph2">`null`</ph>這個建構函式會產生預設建構函式相同的項目。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The tag name of the XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The text content within the element.</source>
          <target state="translated">在項目文字內容。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">text</ph><ept id="p2">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p1">&lt;/code&gt;</ept>參數或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">text</ph> <ept id="p2">&lt;/code&gt;</ept> XML 中的參數無效。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">將名稱/值的屬性的 XML 項目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">名稱和屬性中的值應該只包含有效的 XML 屬性字元。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>XML attribute names must be unique.</source>
          <target state="translated">XML 屬性名稱必須是唯一的。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">使用&lt;xref:System.Security.SecurityElement.Escape%2A&gt;從字串中移除無效的字元。&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the attribute.</source>
          <target state="translated">屬性的名稱。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The value of the attribute.</source>
          <target state="translated">屬性的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>參數或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p2">&lt;/code&gt;</ept> XML 中的參數無效。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-       An attribute with the name specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter already exists.</source>
          <target state="translated">-具有所指定之名稱的屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>參數已經存在。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">將子元素加入至 XML 項目。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">子元素會加入下列任何先前已存在的子元素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The child element to add.</source>
          <target state="translated">要加入的子元素。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">child</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">child</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">在 XML 項目中，依名稱尋找屬性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">使用 XML，如下所示，<ph id="ph1">`Attribute("B")`</ph>會傳回"456"。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">要搜尋的屬性名稱。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value associated with the named attribute, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no attribute with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p2">&lt;/code&gt;</ept> exists.</source>
          <target state="translated">具名的屬性，與關聯的值或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性不使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p2">&lt;/code&gt;</ept>存在。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">取得或設定 XML 項目的屬性為名稱/值組。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each attribute is stored in the &lt;xref:System.Collections.Hashtable&gt; as a name/value pair.</source>
          <target state="translated">每個屬性儲存在&lt;xref:System.Collections.Hashtable&gt;做為名稱/值配對。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">名稱與屬性中的值應該包含有效 XML 屬性的字元。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">使用&lt;xref:System.Security.SecurityElement.Escape%2A&gt;從字串中移除無效的字元。&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the attribute values of the XML element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML 元素的屬性值的物件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The name or value of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is invalid.</source>
          <target state="translated">名稱或值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件無效。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">名稱不是有效的 XML 屬性名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">取得或設定子項目的 XML 項目陣列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Security.SecurityElement&gt; contains both &lt;xref:System.Security.SecurityElement.Text%2A&gt; and Children, &lt;xref:System.Security.SecurityElement.Text%2A&gt; will appear first.</source>
          <target state="translated">如果&lt;xref:System.Security.SecurityElement&gt;同時包含&lt;xref:System.Security.SecurityElement.Text%2A&gt;和子系，&lt;xref:System.Security.SecurityElement.Text%2A&gt;會先出現。&lt;/xref:System.Security.SecurityElement.Text%2A&gt; &lt;/xref:System.Security.SecurityElement.Text%2A&gt; &lt;/xref:System.Security.SecurityElement&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">做為安全性項目 XML 項目的已排序的子項目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A child of the XML parent node is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">XML 父節點的子系是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">建立並傳回目前的相同複本<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The copy includes both the &lt;xref:System.Security.SecurityElement.Children%2A&gt; and &lt;xref:System.Security.SecurityElement.Attributes%2A&gt; properties.</source>
          <target state="translated">同時複製包含&lt;xref:System.Security.SecurityElement.Children%2A&gt;和&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;屬性。&lt;/xref:System.Security.SecurityElement.Attributes%2A&gt; &lt;/xref:System.Security.SecurityElement.Children%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A copy of the current <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目前的複本<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">比較兩個 XML 項目物件相等。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">如果有子項目，比較將遞迴地展開。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">沒有支援比較不同的 XML 表示的相同字元。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">要用來比較目前的 XML 項目物件的 XML 項目物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果標記，屬性名稱和值、 子項目和目前的 XML 項目中的文字欄位是一樣的其對應項目<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept>參數，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">取代無效的 XML 字元在字串中使用其有效的 XML 對等。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">要逸出無效的字元字串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">輸入的字串與取代無效的字元。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">建立的 XML 編碼字串的安全性項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">用來建立安全性項目 XML 編碼字串。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> created from the XML.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>從 XML 建立。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph>包含一或多個單一引號字元。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph> is<bpt id="p1">&lt;xref uid="langword_csharp_ null" name=" null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph>is<bpt id="p1">&lt;xref uid="langword_csharp_ null" name=" null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">判斷字串是否為有效的屬性名稱。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">這個方法可用來測試屬性，才能將它新增到安全性項目。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The attribute name to test for validity.</source>
          <target state="translated">要測試有效性的屬性名稱。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML attribute name; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p2">&lt;/code&gt;</ept>參數是有效的 XML 屬性名稱; 否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">判斷字串是否為有效的屬性值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">這個方法可用來測試屬性，才能將它新增到安全性項目。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The attribute value to test for validity.</source>
          <target state="translated">要測試有效性的屬性值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML attribute value; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept>參數是有效的 XML 屬性值，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">判斷字串是否為有效的標籤。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This can be used to test a &lt;xref:System.Security.SecurityElement.Tag%2A&gt; before setting it.</source>
          <target state="translated">這可以用於測試，&lt;xref:System.Security.SecurityElement.Tag%2A&gt;再設定它。&lt;/xref:System.Security.SecurityElement.Tag%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The tag to test for validity.</source>
          <target state="translated">要測試有效性的標記。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML tag; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p2">&lt;/code&gt;</ept>參數是有效的 XML 標記，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">判斷字串是否為 XML 項目內的文字。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This method can be used to test &lt;xref:System.Security.SecurityElement.Text%2A&gt; before setting it.</source>
          <target state="translated">這個方法可用來測試，&lt;xref:System.Security.SecurityElement.Text%2A&gt;再設定它。&lt;/xref:System.Security.SecurityElement.Text%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The text to test for validity.</source>
          <target state="translated">要測試有效性的文字。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML text element; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">text</ph> <ept id="p2">&lt;/code&gt;</ept>參數是有效的 XML 文字項目，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Finds a child by its tag name.</source>
          <target state="translated">它的標記名稱，尋找子系。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">使用 XML，如下所示，<ph id="ph1">`SearchForChildByTag("second")`</ph>子元素將會傳回<ph id="ph2">`&lt;second&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">要搜尋子項目中標記。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The first child XML element with the specified tag value, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no child element with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p2">&lt;/code&gt;</ept> exists.</source>
          <target state="translated">第一個子系 XML 項目，以指定的標記值，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若含有任何子元素<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p2">&lt;/code&gt;</ept>存在。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">標籤名稱尋找子項目，並傳回所包含的文字。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following:       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Security.SecurityElement#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.security.securi_0_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Security.SecurityElement#1<ept id="p4">](~/add/codesnippet/cpp/m-system.security.securi_0_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Security.SecurityElement#1<ept id="p6">](~/add/codesnippet/csharp/m-system.security.securi_0_1.cs)</ept><ept id="p5">]</ept>       With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">這個方法相當於下列︰ <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>System.Security.SecurityElement#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.security.securi_0_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Security.SecurityElement#1<ept id="p4">](~/add/codesnippet/cpp/m-system.security.securi_0_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Security.SecurityElement#1<ept id="p6">](~/add/codesnippet/csharp/m-system.security.securi_0_1.cs)</ept> <ept id="p5">]</ept>與 XML，如下所示，<ph id="ph1">`SearchForTextOfTag("second")`</ph>會傳回"文字&amp;2;"。    </target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">要搜尋子項目中標記。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">具有指定的標記值，第一個子項目的文字內容。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;tag&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;tag&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">取得或設定 XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In XML, the tag appears in the script as appears below:      <ph id="ph1">```   &lt;tag attributes&gt;text&lt;/tag&gt;   ```</ph>       If this element has child elements, the children will replace <ph id="ph2">`text`</ph>.</source>
          <target state="translated">在 XML 中，標記會出現在下面顯示的指令碼︰<ph id="ph1">```   &lt;tag attributes&gt;text&lt;/tag&gt;   ```</ph>如果這個項目具有子項目，將會取代子系<ph id="ph2">`text`</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">指定這個屬性才有效的 XML 標記字串。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">使用&lt;xref:System.Security.SecurityElement.Escape%2A&gt;從字串中移除無效的字元。&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The tag name of an XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The tag is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The tag is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The tag is not valid in XML.</source>
          <target state="translated">無法在 XML 中無效的標記。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">取得或設定 XML 項目內的文字。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">文字不應該包含 XML 特殊字元。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">使用&lt;xref:System.Security.SecurityElement.Escape%2A&gt;從字串中移除無效的字元。&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Security.SecurityElement&gt; contains both Text and &lt;xref:System.Security.SecurityElement.Children%2A&gt;, Text will appear first.</source>
          <target state="translated">如果&lt;xref:System.Security.SecurityElement&gt;包含這兩個文字和&lt;xref:System.Security.SecurityElement.Children%2A&gt;，會先出現的文字。&lt;/xref:System.Security.SecurityElement.Children%2A&gt; &lt;/xref:System.Security.SecurityElement&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value of the text within an XML element.</source>
          <target state="translated">XML 項目內文字的值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The text is not valid in XML.</source>
          <target state="translated">無法在 XML 中無效的文字。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">產生的 XML 項目和其組成屬性、 子項目和文字的字串表示法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">這個方法適用於偵錯以查看元素的 XML 表示法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The XML element and its contents.</source>
          <target state="translated">XML 項目和其內容。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>