<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19077425be79e9b066e2fcb0222744d58afc1422</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.FederatedMessageSecurityOverHttp.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee26ed71768adb512569035e5c9f4268c07cc2cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bcbed0af67ec4695e0bdf445ea9eef841ccb4d1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configures the message-level security of the <bpt id="p1">&lt;xref uid="langword_csharp_WSFederationHttpBinding" name="WSFederationHttpBinding" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> binding.</source>
          <target state="translated">設定訊息層級安全性<bpt id="p1">&lt;xref uid="langword_csharp_WSFederationHttpBinding" name="WSFederationHttpBinding" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>繫結。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.</source>
          <target state="translated">這個類別包含可提供控制用戶端和服務，包括相關的服務預期用戶端擷取聯合的認證的簽發者的詳細資料之間的安全性組態的各個層面的屬性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.FederatedMessageSecurityOverHttp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ServiceModel.FederatedMessageSecurityOverHttp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</source>
          <target state="translated">取得與設定指定訊息加密和金鑰包裝演算法的演算法套件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; object that is returned contains numerous properties that specify security algorithms to use in specific conditions.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;傳回物件含有許多可用的屬性，指定要使用的安全性演算法在特定情況。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It also describes various security capabilities of the service.</source>
          <target state="translated">它也會描述服務的各種安全性功能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;.</source>
          <target state="translated">預設值為&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a collection of the <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances for this binding.</source>
          <target state="translated">取得集合的<bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此繫結的執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service.</source>
          <target state="translated">這個屬性所傳回的集合服務用於指定任何必須核發之權杖的用戶端用來存取服務中的必要和選擇性宣告。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.</source>
          <target state="translated">如果啟用 WSDL 發行，但 WCF 不要求發行的權杖中含有指定的宣告型別，服務會公開中繼資料中的所需的宣告類型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Services wishing to enforce required claim types are present should do using authorization policy.</source>
          <target state="translated">服務希望強制需要的宣告型別要出現應有的使用授權原則。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.</source>
          <target state="translated">在聯合用戶端上此集合包含必要與選用宣告的清單會傳送給安全性權杖服務的用戶端要求發行的權杖。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>型別的<bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
          <target state="translated">預設為空集合。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets whether a security context requires being put into place.</source>
          <target state="translated">取得或設定某個安全性內容是否需要放置。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if security context requires placing; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果放置; 的安全性內容要求否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifies the type of key to be issued.</source>
          <target state="translated">指定要發行的索引鍵的類型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Valid values of &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt; are &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt; and &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;.</source>
          <target state="translated">有效的值&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;會&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;和&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyType&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityKeyType&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityKeyType&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The value is not a valid <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">值不是有效<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies the type of token which should be issued by the security token service.</source>
          <target state="translated">指定應該以安全性權杖服務發行的權杖型別。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service.</source>
          <target state="translated">這個屬性表示服務預期的語彙基元和服務上建立的 SecurityTokenAuthenticator 控制項的類型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>On the client it controls the type which is sent to the security token service in the client’s request for an issued token.</source>
          <target state="translated">在用戶端上控制傳送給安全性權杖服務的用戶端要求中發行之權杖的型別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The IssuedTokenType typically takes the form of a URI.</source>
          <target state="translated">IssuedTokenType 通常採用 URI 的格式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The type of token to be issued.</source>
          <target state="translated">要發出的權杖類型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which causes WCF to request a SAML security token from the STS.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，會讓 WCF 從 STS 要求 SAML 安全性權杖。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the endpoint address of the security token service that issues credentials for the service.</source>
          <target state="translated">取得或設定服務認證會發出安全性權杖服務的端點位址。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This address is used as the endpoint for the security token service that issues credentials for the service.</source>
          <target state="translated">這個地址用於安全性權杖服務發出服務認證做為端點。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Services expose the issuer address in metadata if WSDL is enabled but make no other use of it.</source>
          <target state="translated">服務公開中繼資料中的簽發者位址，如果 WSDL 已啟用，但不做為它的任何其他用途。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Clients use the issuer address to communicate with the security token service.</source>
          <target state="translated">用戶端使用簽發者位址與安全性權杖服務進行通訊。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.</source>
          <target state="translated">如果 IssuerAddress 為 null 的用戶端可能會改為使用透過 IssuedTokenClientCredential 上的 LocalIssuerAddress 與 LocalIssuerBinding 屬性指定的安全性權杖服務。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Setting this value to <ph id="ph1">`null`</ph> or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.</source>
          <target state="translated">此值設定為<ph id="ph1">`null`</ph>或用戶端上的 Ws-addressingidentity 匿名 URI 會使 CardSpace 啟動如果 ClientCredentials.SupportInteractive 為 true，在某些情況下。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.EndpointAddress&gt; of the security token service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.EndpointAddress&gt;的安全性權杖服務。&lt;/xref:System.ServiceModel.EndpointAddress&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals &lt;xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*&gt;.</source>
          <target state="translated">取得或設定與安全性權杖服務的端點位址等於&lt;xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*&gt;.&lt;/xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*&gt;通訊時，用戶端所使用的繫結</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.</source>
          <target state="translated">這個屬性用來指定取得服務認證時，用戶端的用戶端與安全性權杖服務之間所使用的繫結。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Note that this property does not need to be populated on the service, since it is only consumed by the client.</source>
          <target state="translated">請注意，這個屬性就不需要填入服務，因為它只供用戶端。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; to be used by the client when communicating with the security token service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;與安全性權杖服務通訊時，用戶端使用。&lt;/xref:System.ServiceModel.Channels.Binding&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the endpoint address for communicating with the security token service out of band.</source>
          <target state="translated">取得或設定與超出範圍的安全性權杖服務通訊的端點位址。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This address is used as the endpoint for the security token service that issues credentials for the service out of band.</source>
          <target state="translated">這個地址用於安全性權杖服務發行超出訊號範圍服務認證做為端點。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; to be used when communicating with the security token service out of band.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;與超出訊號範圍的安全性權杖服務通訊時使用。&lt;/xref:System.ServiceModel.Channels.Binding&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.</source>
          <target state="translated">指定訊息層級 SSL 交涉已完成，以取得服務的憑證。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This property indicates whether the service certificate is negotiated automatically between the client and the service.</source>
          <target state="translated">這個屬性會指出是否在用戶端與服務之間自動交涉服務憑證。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If this property is <ph id="ph1">`true`</ph>, then such negotiation occurs.</source>
          <target state="translated">如果這個屬性是<ph id="ph1">`true`</ph>，則會發生此種交涉。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If this property is <ph id="ph1">`false`</ph>, then the service certificate must be specified at the client before communication with the service can occur.</source>
          <target state="translated">如果這個屬性是<ph id="ph1">`false`</ph>，則必須在用戶端指定服務憑證，才會發生與服務的通訊。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Services must always specify a certificate.</source>
          <target state="translated">服務一律必須指定憑證。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.</source>
          <target state="translated">如果此屬性為 true，透過 IssuerAddress 與 IssuerBinding 屬性 （或 LocalIssuerAddress 與 LocalIssuerBinding 屬性） 指定安全性權杖服務要求，而發出安全性權杖之前，就會發生訊息層級 SSL 交涉服務憑證。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service certificate is negotiated; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the service certificate is available out of band.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果交涉服務憑證。<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果服務憑證可供超出範圍。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</source>
          <target state="translated">傳回要用於保護 SOAP 層級之訊息的演算法套件是否應該序列化。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the algorithm suite should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應序列化的演算法套件。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns that any existing claim type requirements can be serialized.</source>
          <target state="translated">傳回指示的任何現有的宣告型別需求可以序列化。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are requirements to serialize; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果有需求來序列化。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns an indication whether the security context is not the default and therefore should be serialized.</source>
          <target state="translated">傳回是否的安全性內容不是預設值，因此應該序列化的指示。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the context should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該序列化內容。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns an indication whether the issued key type is not the default and therefore should be serialized.</source>
          <target state="translated">傳回指示核發金鑰型別不是預設值，因此應該序列化。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應序列化型別。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.</source>
          <target state="translated">傳回指示交涉服務認證的程序不是預設的程序，因此應該序列化。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the process should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該序列化程序。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns an indication that any existing token request parameters can be serialized.</source>
          <target state="translated">傳回指示任何現有的權杖要求參數可以序列化。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are parameters to be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果沒有參數序列化。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</source>
          <target state="translated">取得要求權杖時，傳送給安全性權杖服務的訊息本文中的 XML 項目的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.</source>
          <target state="translated">這個屬性所傳回的集合可以用來指定要求權杖時，傳送給安全性權杖服務的訊息本文中的額外 XML 項目。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>型別的<bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>