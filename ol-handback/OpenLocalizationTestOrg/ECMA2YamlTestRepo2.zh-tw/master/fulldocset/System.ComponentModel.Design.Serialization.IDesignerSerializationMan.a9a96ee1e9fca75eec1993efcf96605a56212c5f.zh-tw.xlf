<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc96f5d826913c72f4b28898e711248f18446e84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.IDesignerSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3325d71e29da63851ddbbd328e6f975b1c257023</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0c7a907a00a6ba1e153d6d7eb21a26b8486e3ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface that can manage design-time serialization.</source>
          <target state="translated">提供介面，可管理設計階段序列化。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A designer can utilize IDesignerSerializationManager to access services useful to managing design-time serialization processes.</source>
          <target state="translated">設計工具可以利用 IDesignerSerializationManager，存取有助於管理設計階段序列化程序服務。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">例如，實作設計工具的序列化管理員的類別可以使用這個介面建立物件、 查詢型別、 識別物件，並自訂特定型別的序列化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">將指定的序列化提供者加入序列化管理員。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">這個方法會將自訂序列化提供者加入序列化管理員。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">序列化提供者可以提供自訂序列化程式的特定物件類型或類型之物件的集合。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">在序列化期間，每個自訂序列化提供者會查詢以傳回特定資料類型的序列化程式，如果它會提供一個。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">序列化管理員會使用這個方法之前使用特定型別的預設序列化程式提供的自訂序列化程式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The serialization provider to add.</source>
          <target state="translated">若要加入的序列化提供者。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">取得對於序列化程式之間的通訊很有用的堆疊為基礎、 使用者定義的存放區域。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This storage area provides communication of object context information to serializers.</source>
          <target state="translated">這個儲存體區域提供通訊物件內容資訊的序列化程式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Context information about objects that are being serialized can be stored and accessed through this &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">正在序列化的物件的相關內容資訊可儲存及存取透過此&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that stores data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>儲存資料。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">建立指定類型的執行個體，並將它加入具名執行個體的集合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Objects that implement &lt;xref:System.ComponentModel.IComponent&gt; are added to the design-time container if the <ph id="ph1">`addToContainer`</ph> parameter is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">物件，實作&lt;xref:System.ComponentModel.IComponent&gt;會加入到設計階段容器<ph id="ph1">`addToContainer`</ph>參數是<ph id="ph2">`true`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data type to create.</source>
          <target state="translated">要建立的資料類型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">要傳遞給建構函式，此類型引數。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">物件的名稱。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later through &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">這個名稱可以用來存取稍後透過&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;物件</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是傳遞時，物件仍會建立，但無法以名稱存取。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this object is added to the design container.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，此物件加入設計容器。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object must implement <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this to have any effect.</source>
          <target state="translated">物件必須實作<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，才能發生效用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The newly created object instance.</source>
          <target state="translated">新建立的物件執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets an instance of a created object of the specified name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if that object does not exist.</source>
          <target state="translated">取得指定的名稱，建立物件的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果該物件不存在。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve must have been set through a prior call to &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">要擷取之物件的名稱必須已設定透過&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;先前呼叫</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">要擷取之物件的名稱。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object by that name can be found.</source>
          <target state="translated">使用指定的名稱、 物件的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到沒有該名稱的物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object has no name.</source>
          <target state="translated">取得指定之物件的名稱或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果物件沒有名稱。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object to retrieve the name for.</source>
          <target state="translated">要擷取的名稱的物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is unnamed.</source>
          <target state="translated">物件的名稱或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未命名的物件是否。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">取得指定的物件類型的要求類型之序列化程式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">要取得序列化程式的物件類型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">要擷取的序列化程式的類型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An instance of the requested serializer, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no appropriate serializer can be located.</source>
          <target state="translated">要求的序列化程式的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以找到適當的序列化程式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a type of the specified name.</source>
          <target state="translated">取得指定之名稱的類型。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">要載入之型別的完整的名稱。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An instance of the type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be loaded.</source>
          <target state="translated">類型的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果無法載入型別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Indicates custom properties that can be serializable with available serializers.</source>
          <target state="translated">指出可使用可用的序列化程式的自訂屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property can contain an empty collection.</source>
          <target state="translated">這個屬性可以包含空的集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A serializer should never assume that such properties exist.</source>
          <target state="translated">序列化程式不應該假設這類屬性的存在。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A derived class or implementation of &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; defines the set of properties that are exposed here.</source>
          <target state="translated">在衍生的類別或實作&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;定義一組這裡所公開的屬性。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the properties to be serialized.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含要序列化之屬性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Removes a custom serialization provider from the serialization manager.</source>
          <target state="translated">將自訂序列化提供者從序列化管理員移除。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The provider to remove.</source>
          <target state="translated">要移除的提供者。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This object must have been added using &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;.</source>
          <target state="translated">此物件必須已加入使用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Reports an error in serialization.</source>
          <target state="translated">報告序列化中的錯誤。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the serialization manager supports logging multiple errors in its implementation of ReportError, it can store the error information object for a future report where all the errors encountered can be displayed at once.</source>
          <target state="translated">如果序列化管理員支援多個錯誤記錄在 ReportError 實作，它可以儲存資訊的 error 物件將來的報表，其中同時顯示發生的錯誤。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If this method stores multiple errors, serialization can continue after a call to this method.</source>
          <target state="translated">如果這個方法會儲存多個錯誤，仍可繼續序列化之後呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</source>
          <target state="translated">如果這個方法不支援記錄多個錯誤，則這個方法應該擲回例外狀況，以中止序列化。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The serialization manager should never throw an exception for errors encountered during serialization.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的序列化管理員絕不會擲回例外狀況的序列化期間遇到的錯誤。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It should only throw an exception during deserialization.</source>
          <target state="translated">它只傳回還原序列化期間的例外狀況。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Otherwise, users become confused because saving the document should never fail.</source>
          <target state="translated">否則，會變成混淆，因為儲存文件的使用者應該永遠不會失敗。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The error to report.</source>
          <target state="translated">要報告的錯誤。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This information object can be of any object type.</source>
          <target state="translated">此資訊的物件可以是任何物件類型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">如果是例外狀況，例外狀況的訊息會擷取並向使用者報告。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If it is any other type, &lt;xref:System.Object.ToString*&gt; is called to display the information to the user.</source>
          <target state="translated">如果它是任何其他型別，&lt;xref:System.Object.ToString*&gt;呼叫以向使用者顯示資訊。&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Occurs when &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt; cannot locate the specified name in the serialization manager's name table.</source>
          <target state="translated">發生時&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt;在序列化管理員的名稱表格中找不到指定的名稱。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</source>
          <target state="translated">此事件會提供視情況下，建立物件的序列化程式的方式，讓序列化程式不需要建立順序物件的相依性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The delegate for this event is cleared immediately after serialization or deserialization is complete.</source>
          <target state="translated">此事件的委派會在還原序列化後立即清除，或還原序列化已完成。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs when serialization is complete.</source>
          <target state="translated">序列化完成時，就會發生。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This event is raised when serialization or deserialization is complete.</source>
          <target state="translated">序列化或還原序列化完成時，會引發這個事件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</source>
          <target state="translated">一般來說，序列化程式碼會寫入至發出序列化資料和，通常不需要狀態相關的檢查和處理。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the SerializationComplete event, and clear the data after serialization.</source>
          <target state="translated">如果有必要整個序列化維持狀態資料，可以設定資料，以及由序列化程式，它可以接聽 SerializationComplete 事件，並清除序列化後的資料存取。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</source>
          <target state="translated">序列化可能會很重要，因為可重複使用的序列化程式在序列化期間，而且留下的狀態資料或開啟的資料流可能不正確之後，請還原正確狀態。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</source>
          <target state="translated">例如，如果序列化程式需要寫入到另一個檔案，例如資源檔，很效率不佳，設計序列化程式關閉時完成的檔案。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Serializing an object graph usually requires several serializers.</source>
          <target state="translated">序列化物件圖形，通常需要數個序列化程式。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The resource file would be opened and closed many times.</source>
          <target state="translated">資源檔會開啟和關閉的次數。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Instead, the resource file can be closed at the end of serialization by an object that listened to the SerializationComplete event.</source>
          <target state="translated">相反地，資源檔可以由接聽 SerializationComplete 事件的物件關閉序列化的結尾。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">設定指定的現有物件的名稱。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This method is useful when it is necessary to create and then name an instance of an object without using &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">這個方法時，就必須建立並命名物件的執行個體，而不使用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</source>
          <target state="translated">如果您嘗試重新命名現有的物件，或如果您嘗試將提供給新的物件已被使用的名稱，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object instance to name.</source>
          <target state="translated">物件執行個體名稱。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name to give the instance.</source>
          <target state="translated">提供給執行個體的名稱。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>