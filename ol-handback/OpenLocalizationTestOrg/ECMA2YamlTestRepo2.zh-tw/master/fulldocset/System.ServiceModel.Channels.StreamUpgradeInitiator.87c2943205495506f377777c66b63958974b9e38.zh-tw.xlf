<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28e10c1a047e1e5935818b030953d2efa1c3bb36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.StreamUpgradeInitiator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f46eb935941c8869c8068d406aefa0af84c3b8e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c08fab7906a814faac5a110b8792c1b40855ed93</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>To implement a custom upgrade initiator, inherit from this <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class.</source>
          <target state="translated">若要實作自訂升級啟動器，繼承自這個<bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</source>
          <target state="translated">資料流升級的一個範例會建立壓縮資料流直接在傳輸資料流的上方。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class is used with &lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt; and &lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt; to implement a custom stream upgrade.</source>
          <target state="translated">這個類別會搭配&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;和&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;以實作自訂資料流升級。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt; &lt;/xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a detailed description of the upgrade process, see &lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;.</source>
          <target state="translated">如需升級程序的詳細說明，請參閱&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;.&lt;/xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.StreamUpgradeInitiator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ServiceModel.Channels.StreamUpgradeInitiator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method can be implemented to do asynchronous processing that initiates an upgrade.</source>
          <target state="translated">這<bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以實作方法，以執行可啟始升級的非同步處理。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This method calls &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt; and returns.</source>
          <target state="translated">這個方法會呼叫&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;並傳回。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The stream to be upgraded.</source>
          <target state="translated">升級資料流。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The method to call when the &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade*&gt; has completed.</source>
          <target state="translated">時要呼叫的方法&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade*&gt;已完成。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>State information about the status of the asynchronous call.</source>
          <target state="translated">非同步呼叫的狀態相關狀態資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.IAsyncResult&gt; to be passed into the &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade*&gt; method.</source>
          <target state="translated">傳回&lt;xref:System.IAsyncResult&gt;要傳遞至&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade*&gt;方法。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This method is the asynchronous callback method that is called after &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt; has completed.</source>
          <target state="translated">這個方法是非同步的回呼方法之後呼叫&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt;已完成。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about using this method, see the remarks in &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;.</source>
          <target state="translated">如需使用此方法的詳細資訊，請參閱&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;.&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;的備註</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_IAsyncResult" name="IAsyncResult" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returned from the &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt; method.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_IAsyncResult" name="IAsyncResult" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>從傳回&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt;方法。&lt;/xref:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the upgraded stream.</source>
          <target state="translated">傳回升級的資料流。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns the content type of the next upgrade to be performed.</source>
          <target state="translated">傳回要執行的下一個升級的內容類型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method returns a set of upgrade content types supported by the upgrade provider in the order in which they are expected.</source>
          <target state="translated">這個方法會傳回一組升級內容型別，因此預計的順序升級提供者支援。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Upgrade providers that support a single upgrade return only a single value.</source>
          <target state="translated">支援單一升級的升級提供者會傳回單一值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Upgrade providers that support multiple upgrades return the values in order (for example, compression content type followed by the security content type).</source>
          <target state="translated">支援多個升級的升級提供者傳回的值順序 （例如，壓縮內容型別，後面的安全性內容類型）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns the content type of the next upgrade.</source>
          <target state="translated">傳回下一個升級的內容類型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer.</source>
          <target state="translated">啟始資料流的升級所要求的另一端升級通道傳輸層其連線。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method can be called multiple times for each upgrade supported by the upgrade provider.</source>
          <target state="translated">可以多次呼叫這個方法對於每個升級提供者所支援的升級。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, an upgrade provider that supports compression and security would call this method twice: first to upgrade the default transport streaming for compression, and second to upgrade the security.</source>
          <target state="translated">例如，支援壓縮和安全性升級提供者會呼叫這個方法兩次︰ 第一次升級預設傳輸資料流進行壓縮，以及第二個升級安全性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Subsequent calls to this method should pass in the upgrade stream from the previous call.</source>
          <target state="translated">後續呼叫此方法應從上次呼叫傳遞升級資料流中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The stream to be upgraded.</source>
          <target state="translated">升級資料流。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the upgraded stream.</source>
          <target state="translated">傳回升級的資料流。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>