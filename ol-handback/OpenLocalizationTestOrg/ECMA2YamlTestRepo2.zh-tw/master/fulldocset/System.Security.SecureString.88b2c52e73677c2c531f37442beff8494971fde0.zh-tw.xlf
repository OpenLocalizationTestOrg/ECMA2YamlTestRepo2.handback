<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">174f0da1081f35785157244fe1d71fc69c350a80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecureString.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b3ae2918b19cc364e0c3f26eaf8130f24750997</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d18f00588ef24993438e6e7b3941d250b8f6593</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">表示文字應該保持機密，例如藉由從不再需要時的電腦記憶體刪除。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>SecureString is a string type that provides a measure of security.</source>
          <target state="translated">SecureString 是安全性的字串類型，提供考量。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">它會嘗試避免以純文字格式的程序記憶體中儲存敏感性字串。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of SecureString is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(如限制，不過，請參閱<bpt id="p1">[</bpt>安全是 SecureString？<ept id="p1">](#HowSecure)</ept> &gt; 一節。)SecureString 執行個體的值會自動施以保護使用初始化執行個體時，基礎的平台所支援的機制，或修改值時。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your application can render the instance immutable and prevent further modification by invoking the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method.</source>
          <target state="translated">您的應用程式可以呈現執行個體的不可變，並避免其他修改叫用&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;方法。&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The maximum length of a SecureString instance is 65,536 characters.</source>
          <target state="translated">SecureString 執行個體的長度上限為 65,536 個字元。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 這個型別實作&lt;xref:System.IDisposable&gt;介面。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型的執行個體時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其&lt;xref:System.IDisposable.Dispose%2A&gt;方法中的<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>區塊。&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節&lt;xref:System.IDisposable&gt;介面 &gt; 主題。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The SecureString class and its members are not visible to COM.</source>
          <target state="translated">SecureString 類別和其成員不是為 COM 可見。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.&lt;/xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this section:       <bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept>     <bpt id="p2">[</bpt>SecureString operations<ept id="p2">](#Ops)</ept>     <bpt id="p3">[</bpt>SecureString and interop<ept id="p3">](#interop)</ept>     <bpt id="p4">[</bpt>How secure is  SecureString?<ept id="p4">](#HowSecure)</ept></source>
          <target state="translated">本章節內容︰ <bpt id="p1">[</bpt>vs 的字串。SecureString<ept id="p1">](#vsString)</ept><bpt id="p2">[</bpt>SecureString 作業<ept id="p2">](#Ops)</ept><bpt id="p3">[</bpt>SecureString 和 interop<ept id="p3">](#interop)</ept><bpt id="p4">[</bpt>安全是 SecureString 嗎？               <ept id="p4">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## String versus SecureString    An instance of the &lt;xref:System.String?displayProperty=fullName&gt; class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated"><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 字串與 SecureString 的執行個體&lt;xref:System.String?displayProperty=fullName&gt;類別會是不變，而且不再需要時，無法以程式設計方式排定進行記憶體回收; 亦即，執行個體是唯讀後建立，而且不可能預測時的執行個體將會從電腦記憶體刪除。&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.String?displayProperty=fullName&gt; instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">因為&lt;xref:System.String?displayProperty=fullName&gt;執行個體是不變，看似修改現有的執行個體的作業實際建立一份來操作。&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Consequently, if a &lt;xref:System.String&gt; object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">因此，如果&lt;xref:System.String&gt;物件包含密碼、 信用卡號碼或個人資料等機密資訊，因為您的應用程式無法從電腦記憶體刪除資料使用之後，可能會洩漏資訊的風險。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A SecureString object is similar to a &lt;xref:System.String&gt; object in that it has a text value.</source>
          <target state="translated">SecureString 物件是類似於&lt;xref:System.String&gt;物件，因為它具有文字值。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, the value of a SecureString object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method  or by the .NET Framework garbage collector.</source>
          <target state="translated">不過，SecureString 物件已釘選在記憶體中，值可能會使用保護機制，例如，可以修改基礎作業系統所提供的加密，直到您的應用程式將它標記為唯讀狀態，以及可以從電腦記憶體刪除是藉由應用程式呼叫&lt;xref:System.Security.SecureString.Dispose%2A&gt;方法或.NET Framework 記憶體回收行程。&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a discussion of the limitations of the SecureString class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">如需 SecureString 類別的限制的討論，請參閱<bpt id="p1">[</bpt>安全是 SecureString？<ept id="p1">](#HowSecure)</ept> &gt; 一節。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="Ops"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString operations    The SecureString class includes members that allow you to do the following:       Instantiate a SecureString object    You instantiate a SecureString object by calling its parameterless constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>回到頁首<ept id="p1">](#top)</ept><bpt id="p2">&lt;a name="Ops"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # SecureString operations SecureString 類別包含成員，可讓您執行下列動作︰ SecureString 物件具現化 SecureString 物件呼叫其無參數建構函式來具現化。      </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add characters to a SecureString object    You can add a single character at a time to a SecureString object  by calling its &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.InsertAt%2A&gt; method.</source>
          <target state="translated">加入字元 SecureString 物件您可以一次加入單一字元，SecureString 物件，藉由呼叫其&lt;xref:System.Security.SecureString.AppendChar%2A&gt;或&lt;xref:System.Security.SecureString.InsertAt%2A&gt;方法。&lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A SecureString object should never be constructed from a &lt;xref:System.String&gt;, because the sensitive data is already subject to the memory persistence consequences of the immutable &lt;xref:System.String&gt; class.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; SecureString 物件永遠不應該建構&lt;xref:System.String&gt;，因為機密資料已經受限於記憶體持續性的後果不可變的&lt;xref:System.String&gt;類別。&lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The best way to construct a SecureString object is from a character-at-a-time unmanaged source, such as the &lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">建構 SecureString 物件的最佳方式是從字元-一次 unmanaged 的來源，例如&lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remove characters from a SecureString object    You can replace an individual character by calling the &lt;xref:System.Security.SecureString.SetAt%2A&gt; method, remove an individual character by calling the &lt;xref:System.Security.SecureString.RemoveAt%2A&gt; method, or remove all characters from the SecureString instance by calling the  &lt;xref:System.Security.SecureString.Clear%2A&gt; method.</source>
          <target state="translated">您可以藉由呼叫來取代個別字元的移除字元 SecureString 物件&lt;xref:System.Security.SecureString.SetAt%2A&gt;方法，藉由呼叫移除個別字元&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;方法或移除所有的字元從 SecureString 執行個體呼叫&lt;xref:System.Security.SecureString.Clear%2A&gt;方法。&lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Make the SecureString object read-only    Once you have defined the string that the SecureString object represents, you call its  &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method to make the string read-only.</source>
          <target state="translated">將 SecureString 物件為唯讀之後您已經定義 SecureString 物件所代表的字串，您會呼叫其&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;方法，以讓唯讀的字串。&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get information about the SecureString object    The SecureString class has only two members that provide information about the string: its &lt;xref:System.Security.SecureString.Length%2A&gt; property, which indicates the number of UTF16-encoded code units in the string; and the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;, method, which indicates whether the instance is read-only.</source>
          <target state="translated">SecureString 物件 SecureString 類別取得的資訊已經提供字串的相關資訊的只有兩個成員︰ 其&lt;xref:System.Security.SecureString.Length%2A&gt;屬性，指出 UTF16 編碼字碼單位的字串; 字串數目而&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;，方法，指出執行個體是否為唯讀。&lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt; &lt;/xref:System.Security.SecureString.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Release the memory allocated to the SecureString instance    Because SecureString implements the &lt;xref:System.IDisposable&gt; interface, you release its memory by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">釋放的記憶體配置到 SecureString 執行個體因為 SecureString 實作&lt;xref:System.IDisposable&gt;介面，您藉由呼叫釋放其記憶體&lt;xref:System.Security.SecureString.Dispose%2A&gt;方法。&lt;/xref:System.Security.SecureString.Dispose%2A&gt; &lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The SecureString class has no members that inspect, compare, or convert the value of a SecureString.</source>
          <target state="translated">SecureString 類別具有檢查、 比較或轉換 SecureString 值的任何成員。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">如果沒有這類成員可協助防止意外或惡意公開的執行個體的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use appropriate members of the &lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt; class, such as the &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; method, to manipulate the value of a SecureString object.</source>
          <target state="translated">使用的適當成員&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;類別，例如&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;方法，來處理 SecureString 物件的值。&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; &lt;/xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The .NET Framework Class Library commonly uses SecureString instances in the following ways:      -   To provide password information to a process by using the &lt;xref:System.Diagnostics.ProcessStartInfo&gt; structure or by calling an overload of the &lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; method that has a parameter of type SecureString.</source>
          <target state="translated">.NET Framework 類別庫通常使用 SecureString 執行個體，以下列方式:-若要透過使用提供的密碼資訊至處理序&lt;xref:System.Diagnostics.ProcessStartInfo&gt;結構，或藉由呼叫的多載&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt;SecureString 類型參數的方法。&lt;/xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   To provide network password information by calling a &lt;xref:System.Net.NetworkCredential&gt; class constructor that has a parameter of type SecureString or by using the &lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">藉由呼叫提供網路密碼資訊&lt;xref:System.Net.NetworkCredential&gt;類別建構函式具有參數的型別 SecureString，或是使用&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; &lt;/xref:System.Net.NetworkCredential&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-   To provide password information for SQL Server Authentication by calling the &lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt; constructor or retrieving the value of the &lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">藉由呼叫提供的 SQL Server 驗證密碼資訊&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;建構函式或擷取的值&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   To pass a string to unmanaged code.</source>
          <target state="translated">-若要將字串傳遞至 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>SecureString 和 interop<ept id="p1">](#interop)</ept> &gt; 一節。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="interop"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString and interop    Because the operating system does not  directly support SecureString, you must convert the value of the SecureString object to the required string type before passing the string to a native method.</source>
          <target state="translated"><bpt id="p1">[</bpt>回到頁首<ept id="p1">](#top)</ept><bpt id="p2">&lt;a name="interop"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # SecureString 和 interop 因為作業系統並不直接支援 SecureString，您必須轉換 SecureString 物件的值為必要的字串類型之前將字串傳遞至原生方法。      </target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.Marshal&gt; class has five methods that do this:      -   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;, which converts the SecureString string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.Marshal&gt;類別有五個方法，執行這項操作:-&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;將 SecureString 字串到 COM 所辨識的二進位字串 (BSTR)、&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;, which copy the SecureString string value to an ANSI string in unmanaged memory.</source>
          <target state="translated">-&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;和&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;，這將 SecureString 字串值複製到 unmanaged 記憶體中的 ANSI 字串。&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;, which copy the SecureString string value to a Unicode string in unmanaged memory.</source>
          <target state="translated">-&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;和&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;，這將 SecureString 字串值複製到 unmanaged 記憶體中的 Unicode 字串。&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">每一種方法在 unmanaged 記憶體中建立純文字字串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">它是開發人員會清空，並釋放該記憶體，只要不再需要的責任。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:      |Allocation and conversion method|Zero and free method|   |--------------------------------------|--------------------------|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|       <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?</source>
          <target state="translated">字串轉換和記憶體配置方法的每個已對應的方法將會清空，並釋放配置的記憶體: |配置和轉換方法 |零，並釋放方法 |  |--------------------------------------|--------------------------|  |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|  |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|  |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|  |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|  |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|      <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When created properly, a SecureString instance provides more data protection than a &lt;xref:System.String&gt;.</source>
          <target state="translated">SecureString 執行個體正確建立時提供更多的資料保護，比&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When creating a string from a character-at-a-time source, &lt;xref:System.String&gt; creates multiple intermediate in memory, whereas  SecureString creates just a single instance.</source>
          <target state="translated">當建立字串字元-一次來源&lt;xref:System.String&gt;而 SecureString 建立只要單一執行個體，在記憶體中，建立多個中繼。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Garbage collection of &lt;xref:System.String&gt; objects  is non-deterministic.</source>
          <target state="translated">記憶體回收&lt;xref:System.String&gt;物件不具決定性。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of &lt;xref:System.String&gt; values when moving and compacting memory.</source>
          <target state="translated">此外，因為其記憶體無法釘選，記憶體回收行程將會產生多份&lt;xref:System.String&gt;值時移動和壓縮記憶體。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In contrast, the memory allocated to a SecureString object is pinned,  and that memory can be freed by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">相較之下，已釘選為 SecureString 物件配置的記憶體，並可以釋放該記憶體，藉由呼叫&lt;xref:System.Security.SecureString.Dispose%2A&gt;方法。&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Although data stored in a SecureString instance is more secure than data stored in a &lt;xref:System.String&gt; instance, there are significant limitations on how secure a SecureString instance is.</source>
          <target state="translated">雖然 SecureString 執行個體中儲存的資料是詳細資料儲存在&lt;xref:System.String&gt;執行個體，有一些重要限制如何安全 SecureString 執行個體依原樣&lt;/xref:System.String&gt;比的安全</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These include:       Platform    On the Windows operating system, the contents of a SecureString instance's internal character array is encrypted.</source>
          <target state="translated">這些活動包括︰ 平台上的 Windows 作業系統，SecureString 執行個體的內部字元陣列的內容已加密。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">不過，是否因為遺漏應用程式開發介面或金鑰管理問題，加密並不適用於所有平台。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because of this, SecureString is available on Desktop (Windows only), and not on .NET Core.</source>
          <target state="translated">因為這個緣故，SecureString 可在桌面上 (僅限 Windows)，而不是在.NET Core。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Duration    Even if the SecureString implementation is able to take advantage of encryption, the plain text assigned to the SecureString instance may be exposed at various times:      -   Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">如果 SecureString 實作是能夠充分利用的加密，指派給執行個體可能會暴露在不同時間 SecureString 的純文字的持續時間偶數:-因為 Windows 不提供的安全字串實作在作業系統層級，這是.NET Framework 仍具有將安全字串值轉換為它的純文字格式表示，才能使用。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-   Whenever the value of the secure string is modified by methods such as &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">-只要安全字串的值修改方法例如&lt;xref:System.Security.SecureString.AppendChar%2A&gt;或&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;，必須解密 （亦即，已轉換的回純文字）、 加以修改，因此再加密一次。&lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-   If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">-如果 interop 呼叫中使用的安全字串，它必須轉換為 ANSI 字串、 Unicode 字串，或二進位字串 (BSTR)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>SecureString 和 interop<ept id="p1">](#interop)</ept> &gt; 一節。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The time interval for which the SecureString instance's value is exposed  is merely shortened in comparison to the &lt;xref:System.String&gt; class.</source>
          <target state="translated">SecureString 執行個體的值會公開其時間間隔只會縮短相較於&lt;xref:System.String&gt;類別。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Storage versus usage    More generally, the SecureString class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">與使用方式的儲存體較常見地，SecureString 類別會定義儲存機制應該受保護或保持機密的字串值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports SecureString.</source>
          <target state="translated">不過，.NET Framework 本身以外沒有使用量機制支援 SecureString。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">這表示安全字串，必須轉換成可用的格式 （通常是純文字形式），其目標，可以辨識和解密和轉換必須出現在使用者空間中。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Overall, SecureString is more secure than &lt;xref:System.String&gt; because it limits the exposure of sensitive string data.</source>
          <target state="translated">整體來說，SecureString 比&lt;xref:System.String&gt;因為它會限制公開敏感的字串資料。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">不過，這些字串可能仍然會公開給任何處理程序或具有未經處理的記憶體，例如主機電腦、 處理序傾印或使用者可檢視交換檔上執行的惡意程序的存取權的作業。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Instead of using SecureString to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">除了使用 SecureString 保護的密碼，建議的替代做法是使用儲存認證時，在程序之外的不透明控制代碼。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>回到頁首<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">保護或解除保護這個執行個體的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">這個平台上不支援此作業。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a subarray of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別的子陣列<ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">這個建構函式不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The CLS-compliant alternative is <ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">符合 CLS 標準的替代方式是<ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This constructor initializes the new &lt;xref:System.Security.SecureString&gt; object to the number of characters in <ph id="ph1">`value`</ph> specified by <ph id="ph2">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">這個建構函式會初始化新&lt;xref:System.Security.SecureString&gt;物件中的字元數<ph id="ph1">`value`</ph>所指定<ph id="ph2">`length`</ph>; 執行個體的值會加密。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">在 C# 中，只在不安全的程式碼內容中定義這個建構函式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A pointer to an array of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">陣列的指標<ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The number of elements of <ph id="ph1">`value`</ph> to include in the new instance.</source>
          <target state="translated">元素數<ph id="ph1">`value`</ph>来包含在新的執行個體中。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph>小於零或大於 65,536。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">這個平台上不支援此作業。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">將字元附加至目前安全字串的結尾。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">如果實作會使用保護機制，例如加密，如果有的話，這個安全字串的值是未受保護;<ph id="ph1">`c`</ph>附加; 然後安全字串的新值並在重新保護。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A character to append to this secure string.</source>
          <target state="translated">要附加至這個安全字串的字元。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">這個安全字串為唯讀。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">執行此作業會使這個安全字串的長度大於 65,536 個字元。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">刪除目前安全字串的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">電腦記憶體，其中包含這個安全字串的值為&amp;0;，則這個安全字串的值的長度設定為零。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">這個安全字串為唯讀。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">建立目前安全字串的複本。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If an instance of a &lt;xref:System.Security.SecureString&gt; is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">如果執行個體&lt;xref:System.Security.SecureString&gt;是標示為唯讀，該執行個體的複本將不處於唯讀模式。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A duplicate of this secure string.</source>
          <target state="translated">這個安全字串的複本。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目前所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The Dispose method writes binary zeroes to the allocated memory that contains the value of this &lt;xref:System.Security.SecureString&gt; object, then frees the allocated memory.</source>
          <target state="translated">Dispose 方法寫入配置的記憶體，其中包含這個值的二進位零&lt;xref:System.Security.SecureString&gt;物件，然後釋放配置的記憶體。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>回收<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">在這個安全字串中位於指定的索引位置插入的字元。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">索引以零為起始。這個安全字串中的第一個字元是在索引位置為零。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">如果實作會使用保護機制，例如加密，如果有的話，安全字串的值是未受保護;<ph id="ph1">`c`</ph>插入指定的索引位置，則新值並在重新保護。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The InsertAt method yields the same results as the &lt;xref:System.Security.SecureString.AppendChar%2A&gt; method, which inserts a character at the end of a secure string, if the <ph id="ph1">`index`</ph> parameter of InsertAt is set to the length of this instance.</source>
          <target state="translated">InsertAt 方法就會產生相同的結果&lt;xref:System.Security.SecureString.AppendChar%2A&gt;方法，這個方法會將安全字串的結尾插入字元，如果<ph id="ph1">`index`</ph>InsertAt 的參數設定為這個執行個體的長度。&lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The index position where parameter <ph id="ph1">`c`</ph> is inserted.</source>
          <target state="translated">索引位置參數<ph id="ph1">`c`</ph>插入。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The character to insert.</source>
          <target state="translated">要插入的字元。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">這個安全字串為唯讀。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小於零或大於這個安全字串的長度。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-or-       Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">-或者-執行此作業會使這個安全字串的長度大於 65,536 個字元。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">指出是否這個安全字串標示為唯讀。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After an instance of &lt;xref:System.Security.SecureString&gt; is marked read-only by the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method, any attempt to modify the value of the instance throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">執行個體&lt;xref:System.Security.SecureString&gt;已標示為唯讀，&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;方法中，任何嘗試修改值的執行個體則會擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;&lt;/xref:System.Security.SecureString&gt;之後</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Use the IsReadOnly method to test whether a &lt;xref:System.Security.SecureString&gt; is read-only before attempting to modify it.</source>
          <target state="translated">使用 IsReadOnly 方法來測試是否&lt;xref:System.Security.SecureString&gt;為唯讀，然後再嘗試將修改它。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this secure string is marked read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個安全字串標示為唯讀。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">取得目前安全字串中的字元數。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The Length property returns the number of &lt;xref:System.Char&gt; objects in this instance, not the number of Unicode characters.</source>
          <target state="translated">Length 屬性傳回的數目&lt;xref:System.Char&gt;這個執行個體中的物件、 不是 Unicode 字元的數目。&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A Unicode character might be represented by more than one &lt;xref:System.Char&gt; object.</source>
          <target state="translated">Unicode 字元可能會表示由多個&lt;xref:System.Char&gt;物件。&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The maximum length of a &lt;xref:System.Security.SecureString&gt; instance is 65,536 characters.</source>
          <target state="translated">最大長度&lt;xref:System.Security.SecureString&gt;執行個體為 65,536 個字元。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects in this secure string.</source>
          <target state="translated">數目<ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>物件在這個安全字串。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">使這個安全字串的文字值成為唯讀。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Initialize the text value of an instance of the &lt;xref:System.Security.SecureString&gt; class with the &lt;xref:System.Security.SecureString.%23ctor%2A&gt; constructors, and modify the value with the &lt;xref:System.Security.SecureString.Clear%2A&gt;, &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, &lt;xref:System.Security.SecureString.SetAt%2A&gt;, &lt;xref:System.Security.SecureString.InsertAt%2A&gt;, and &lt;xref:System.Security.SecureString.AppendChar%2A&gt; methods.</source>
          <target state="translated">初始化的執行個體的文字值&lt;xref:System.Security.SecureString&gt;類別&lt;xref:System.Security.SecureString.%23ctor%2A&gt;建構函式，並修改此值與&lt;xref:System.Security.SecureString.Clear%2A&gt;， &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;， &lt;xref:System.Security.SecureString.SetAt%2A&gt;， &lt;xref:System.Security.SecureString.InsertAt%2A&gt;，和&lt;xref:System.Security.SecureString.AppendChar%2A&gt;方法。&lt;/xref:System.Security.SecureString.AppendChar%2A&gt; &lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.%23ctor%2A&gt; &lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>After you have made your final modifications, use the MakeReadOnly method to make the value of the instance immutable (read-only).</source>
          <target state="translated">在進行最後的修改之後，使用 MakeReadOnly 方法讓執行個體的值不可變 （唯讀）。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>After the value is marked as read-only, any further attempt to modify it throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">值會標示為唯讀之後，修改任何進一步嘗試就會擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The effect of invoking MakeReadOnly is permanent because the &lt;xref:System.Security.SecureString&gt; class provides no means to make the secure string modifiable again.</source>
          <target state="translated">叫用 MakeReadOnly 的效果是永久性因為&lt;xref:System.Security.SecureString&gt;類別會提供任何方法來執行安全字串可修改，然後再次。&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt; method to test whether an instance of &lt;xref:System.Security.SecureString&gt; is read-only.</source>
          <target state="translated">使用&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;方法來測試執行個體是否&lt;xref:System.Security.SecureString&gt;處於唯讀狀態。&lt;/xref:System.Security.SecureString&gt; &lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">從這個安全字串中移除指定的索引位置處的字元。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">索引以零為起始。這個執行個體中的第一個字元是在索引位置為零。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">如果實作會使用保護機制，例如加密，如果有的話，這個安全字串的值是未受保護;已移除指定的索引位置處的字元;然後，新值並在重新保護。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">這個安全字串中字元的索引位置。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">這個安全字串為唯讀。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小於零，或大於或等於這個安全字串的長度。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">以另一個字元，取代指定的索引位置的現有字元。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">索引以零為起始。這個執行個體中的第一個字元是在索引位置為零。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">如果實作會使用保護機制，例如加密，如果有的話，安全字串的值是未受保護;<ph id="ph1">`c`</ph>指派給指定的索引位置，則新值並在重新保護。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">這個安全字串中的 現有字元的索引位置</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A character that replaces the existing character.</source>
          <target state="translated">字元會取代現有的字元。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">已經處置這個安全字串。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">這個安全字串為唯讀。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小於零，或大於或等於這個安全字串的長度。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">保護或解除保護這個安全字串的值時發生錯誤。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>