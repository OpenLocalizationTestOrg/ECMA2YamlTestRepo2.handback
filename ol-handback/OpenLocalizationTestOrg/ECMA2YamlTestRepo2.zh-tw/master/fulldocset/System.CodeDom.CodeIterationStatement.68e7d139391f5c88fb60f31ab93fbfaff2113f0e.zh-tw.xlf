<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a89c03c7ff73694837500a0969a2844a1ecf383</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.CodeIterationStatement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c9851a11820c0dbdbe7dbfb4f76b1b3744d2120</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8df1efd4b8d59a99d3f6f393453574c48931f1d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a <bpt id="p1">&lt;xref uid="langword_csharp_for" name="for" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.</source>
          <target state="translated">代表<bpt id="p1">&lt;xref uid="langword_csharp_for" name="for" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>陳述式或迴圈陳述式，測試運算式用作迴圈繼續的條件區塊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A CodeIterationStatement can represent a <ph id="ph1">`for`</ph> loop or <ph id="ph2">`while`</ph> loop.</source>
          <target state="translated">可以表示 CodeIterationStatement<ph id="ph1">`for`</ph>迴圈或<ph id="ph2">`while`</ph>迴圈。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt; property specifies the statement to execute before the first loop iteration.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;屬性會指定要在第一次迴圈反覆運算之前執行的陳述式。&lt;/xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt; property specifies the loop continuation expression, which must evaluate to <ph id="ph1">`true`</ph> at the end of each loop iteration for another iteration to begin.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;屬性會指定迴圈接續運算式必須評估為<ph id="ph1">`true`</ph>結尾的另一個反覆項目開始，每個迴圈反覆項目。&lt;/xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt; property specifies the statement to execute at the end of each loop iteration.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;屬性會指定要在每次迴圈反覆運算結束執行的陳述式。&lt;/xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt; property specifies the collection of statements to execute within the loop.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;屬性會指定要在迴圈內執行的陳述式的集合。&lt;/xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified parameters.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的參數。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the loop initialization statement.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含迴圈的初始化陳述式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the expression to test for exit condition.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含要測試的結束條件的運算式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the per-cycle increment statement.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含每個週期遞增陳述式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the statements within the loop.</source>
          <target state="translated">類型的陣列<bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含迴圈內的陳述式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the statement that is called after each loop cycle.</source>
          <target state="translated">取得或設定每個迴圈循環之後呼叫的陳述式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This statement is called after each iteration.</source>
          <target state="translated">每個反覆項目之後呼叫此陳述式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the per cycle increment statement.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指出每個週期遞增陳述式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the loop initialization statement.</source>
          <target state="translated">取得或設定迴圈的初始化陳述式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can specify an empty initialization statement by setting this property to a &lt;xref:System.CodeDom.CodeExpressionStatement&gt; that contains a &lt;xref:System.CodeDom.CodeSnippetExpression&gt; that contains an empty string.</source>
          <target state="translated">您可以指定空白的初始化陳述式，此屬性設定為&lt;xref:System.CodeDom.CodeExpressionStatement&gt;包含&lt;xref:System.CodeDom.CodeSnippetExpression&gt;包含空字串。&lt;/xref:System.CodeDom.CodeSnippetExpression&gt; &lt;/xref:System.CodeDom.CodeExpressionStatement&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the loop initialization statement.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示迴圈的初始化陳述式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the collection of statements to be executed within the loop.</source>
          <target state="translated">取得要在迴圈中執行的陳述式的集合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the statements within the loop.</source>
          <target state="translated">類型的陣列<bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指出在迴圈內的陳述式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the expression to test as the condition that continues the loop.</source>
          <target state="translated">取得或設定要做為繼續迴圈的條件測試的運算式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this expression resolves to <ph id="ph1">`true`</ph>, the loop will continue.</source>
          <target state="translated">如果此運算式解析為<ph id="ph1">`true`</ph>，迴圈會繼續。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the expression to test.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指出要測試的運算式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>