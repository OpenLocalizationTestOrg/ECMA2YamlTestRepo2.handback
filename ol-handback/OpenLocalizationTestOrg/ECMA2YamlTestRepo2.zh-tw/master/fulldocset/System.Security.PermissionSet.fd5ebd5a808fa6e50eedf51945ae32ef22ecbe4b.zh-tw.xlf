<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17e0f07de0dbe61d72b6a52eb9880d885a825d58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.PermissionSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18634e72439059a14c96a29130fce6502d7fcc75</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5006bc484177a2945e4d9a8033dadf416489e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">代表可以包含許多不同類型的權限的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use PermissionSet to perform operations on several different permissions as a group.</source>
          <target state="translated">您可以使用使用權限集合上執行作業數個不同的權限為群組。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface, while <ph id="ph2">`None`</ph> allows no permissions.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph>狀態可讓實作的所有權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;介面，而<ph id="ph2">`None`</ph>可讓任何權限。&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; on an empty &lt;xref:System.Security.PermissionSet&gt; to define the set in greater detail.</source>
          <target state="translated">使用&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;上空&lt;xref:System.Security.PermissionSet&gt;來定義一組詳盡。&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">其中一個列舉值，指定資源的權限集的存取權。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">state</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">state</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是有效<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with initial values taken from the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">permSet</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>初始值取自類別<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">permSet</ph> <ept id="p2">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Security.PermissionSet&gt; contains copies of the permissions contained in the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;包含指定&lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;中所包含的權限的複本&lt;/xref:System.Security.PermissionSet&gt;新</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This is equivalent to &lt;xref:System.Security.PermissionSet.Copy%2A&gt; when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這相當於&lt;xref:System.Security.PermissionSet.Copy%2A&gt;時<ph id="ph2">`permSet`</ph>參數不是<ph id="ph3">`null`</ph>。&lt;/xref:System.Security.PermissionSet.Copy%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set from which to take the value of the new <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to create an empty <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要從中取得新的值集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>建立空白<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將指定的權限給<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">如果加入的權限已經與相同類型的權限會存在於&lt;xref:System.Security.PermissionSet&gt;，新的權限是現有的權限物件和指定的權限物件的 union。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">例如，如果實作的權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;加入至&lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;，產生的等位是原始<ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">若要新增權限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">加入的使用權限與已存在於相同類型的任何權限的聯集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將指定的權限給<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The AddPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; method.</source>
          <target state="translated">AddPermissionImpl 方法是實作&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;方法。&lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">如果加入的權限已經與相同類型的權限會存在於&lt;xref:System.Security.PermissionSet&gt;，新的權限是現有的權限物件和指定的權限物件的 union。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">例如，如果實作的權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;加入至&lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;，產生的等位是原始<ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">若要新增權限。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">perm</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">加入的使用權限與已存在於相同類型的任何權限的聯集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">perm</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">宣告呼叫程式碼可以存取權限要求執行程式碼會呼叫這個方法，即使堆疊中較高層的呼叫端未獲得存取資源的權限受保護的資源。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using Assert can create security vulnerabilities.</source>
          <target state="translated">使用判斷提示會造成安全性弱點。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one Assert can be active on a frame.</source>
          <target state="translated">這是唯一能判斷多個權限提示在相同的時間範圍內，因為只有一個判斷提示可能會在框架上作用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Assert is only effective for granted permissions.</source>
          <target state="translated">判斷提示的唯一有效授與權限。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt; method to cancel an active Assert.</source>
          <target state="translated">呼叫&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt;方法來取消作用中的判斷提示。&lt;/xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Because calling the Assert method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 呼叫 Assert 方法移除所有的程式碼呼叫鏈結中，必須授存取指定的資源的權限的需求，因為它可以開啟安全性漏洞如果使用不正確或不正確。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">因此，應該使用小心謹慎。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance asserted has not been granted to the asserting code.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>判斷提示的執行個體未獲得判斷提示的程式碼。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-       There is already an active Assert for the current frame.</source>
          <target state="translated">-或者-已經有使用中的判斷提示目前畫面格。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含非衍生自的權限<bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含非衍生自的權限<bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converts an encoded <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">將編碼轉換<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>從一種 XML 編碼格式到另一種 XML 編碼格式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Do not use this method.</source>
          <target state="translated">請勿使用這個方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">代表一種編碼格式的其中一個字串︰ ASCII、 Unicode 或二進位檔。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">可能的值為"XMLASCII"或"XML"、"XMLUNICODE"和"BINARY"。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An XML-encoded permission set.</source>
          <target state="translated">XML 編碼的權限集合。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">代表一種編碼格式的其中一個字串︰ ASCII、 Unicode 或二進位檔。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">可能的值為"XMLASCII"或"XML"、"XMLUNICODE"和"BINARY"。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">使用指定的輸出格式設定加密權限。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
          <target state="translated">在所有情況下。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立一份<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A copy of a &lt;xref:System.Security.PermissionSet&gt; represents the same access to resources as the original object.</source>
          <target state="translated">一份&lt;xref:System.Security.PermissionSet&gt;以原始的物件，表示資源的相同的存取權。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">複製所做的變更不會影響原始的權限集。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一份<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Copies the permission objects of the set to the indicated location in an &lt;xref:System.Array&gt;.</source>
          <target state="translated">將集合的權限物件複製到&lt;xref:System.Array&gt;.&lt;/xref:System.Array&gt;中的指定位置</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The target array to which to copy.</source>
          <target state="translated">要複製到其中的目標陣列。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">要開始複製 （以零為起始） 的陣列中的開始位置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter has more than one dimension.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>參數有多個維度。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is out of the range of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept>參數超出範圍<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">array</ph> <ept id="p2">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">取得權限集合中包含的權限物件數目。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">在<ph id="ph1">`None`</ph>或<ph id="ph2">`Unrestricted`</ph>狀態這會傳回零，因為沒有實際的權限的物件執行個體所使用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The number of permission objects contained in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中所包含的權限物件數目<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Forces a &lt;xref:System.Security.SecurityException&gt; at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">強制&lt;xref:System.Security.SecurityException&gt;所有呼叫堆疊中較高層的呼叫端未都獲得目前執行個體所指定的權限，如果在執行階段。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use Demand on a &lt;xref:System.Security.PermissionSet&gt; to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">使用要求上&lt;xref:System.Security.PermissionSet&gt;以確保所有呼叫端擁有的所有權限，只有一個作業集合中。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">不會檢查呼叫這個方法的程式碼的權限;檢查該程式碼的立即呼叫端從開始，然後進行堆疊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Demand succeeds only if no &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
          <target state="translated">要求執行成功，只有當沒有&lt;xref:System.Security.SecurityException&gt;就會擲回。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Security.PermissionSet&gt; contains permissions that do not inherit from &lt;xref:System.Security.CodeAccessPermission&gt;, the <ph id="ph1">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">如果&lt;xref:System.Security.PermissionSet&gt;包含權限，不會繼承自&lt;xref:System.Security.CodeAccessPermission&gt;、<ph id="ph1">`Demand`</ph>以及呼叫的方法，這些權限。&lt;/xref:System.Security.CodeAccessPermission&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">呼叫鏈結中的呼叫端沒有要求的權限。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">會讓任何&lt;xref:System.Security.PermissionSet.Demand*&gt;通過呼叫程式碼，如有包含在目前類型的權限交集的權限<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>失敗。&lt;/xref:System.Security.PermissionSet.Demand*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">這個方法會防止呼叫堆疊中較高層的呼叫端程式碼呼叫此方法，透過存取受保護的資源，即使這些呼叫端必須被授與存取權限。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Deny can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls Deny from being used to access the resource protected by the denied permission.</source>
          <target state="translated">拒絕可以限制程式設計人員的責任，或協助防止意外安全性漏洞，因為它可協助防止拒絕會從用來存取拒絕的權限所保護的資源呼叫的方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If a method calls Deny on a permission, and if a &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the Deny.</source>
          <target state="translated">如果方法呼叫拒絕權限，而且如果&lt;xref:System.Security.PermissionSet.Demand%2A&gt;的呼叫堆疊中較低的呼叫端所叫用該權限時，該安全性檢查失敗時已達到拒絕。&lt;/xref:System.Security.PermissionSet.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Deny is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">拒絕對該權限的要求不成功，因為未授與的權限會被忽略。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A previous call to Deny has already restricted the permissions for the current stack frame.</source>
          <target state="translated">為 拒絕先前的呼叫已限制目前堆疊框架的權限。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is equal to the current <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定是否指定<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件是否等於目前<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">設定所指定的權限中所包含的權限來判斷是否相等<ph id="ph1">`obj`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`obj`</ph> can be either a &lt;xref:System.Security.PermissionSet&gt; object or a &lt;xref:System.Security.NamedPermissionSet&gt; object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph>可以是&lt;xref:System.Security.PermissionSet&gt;物件或&lt;xref:System.Security.NamedPermissionSet&gt;物件。&lt;/xref:System.Security.NamedPermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`obj`</ph> is a &lt;xref:System.Security.NamedPermissionSet&gt;, the name and description are ignored.</source>
          <target state="translated">如果<ph id="ph1">`obj`</ph>是&lt;xref:System.Security.NamedPermissionSet&gt;，名稱和描述會被忽略。&lt;/xref:System.Security.NamedPermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要與目前比較的物件<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的物件是否等於目前<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件; 否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">重新建構具有指定狀態的 XML 編碼方式的安全性物件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">XML 編碼用來重新建構安全性物件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid permission element.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是有效的權限項目。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter's version number is not supported.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept>不支援參數的版本號碼。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">傳回的權限集的列舉值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">使用做為索引的列舉值，來存取個別的權限集合中的物件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">權限集的列舉值物件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">傳回的權限集的列舉值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The GetEnumeratorImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt; method.</source>
          <target state="translated">GetEnumeratorImpl 方法是實作&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;方法。&lt;/xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">權限集的列舉值物件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">取得的雜湊碼<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件，其適合用於雜湊演算法和資料結構，例如雜湊表。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two &lt;xref:System.Security.PermissionSet&gt; objects.</source>
          <target state="translated">兩個相同的權限集合執行個體的雜湊程式碼可能會不同，所以不會使用雜湊程式碼比較兩個&lt;xref:System.Security.PermissionSet&gt;物件。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目前的雜湊碼<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">如果它存在集合中，取得指定類型的使用權限物件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">方法會傳回<ph id="ph1">`null`</ph>如<ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">雖然<ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;有效地包含所有的權限，它並沒有任何要傳回的實際執行個體。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The type of the desired permission object.</source>
          <target state="translated">所需的權限物件的類型。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A copy of the permission object of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">所指定之類型的權限物件的複本<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept>參數中包含<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果不存在。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">如果它存在集合中，取得指定類型的使用權限物件。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The GetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetPermission%2A&gt; method.</source>
          <target state="translated">GetPermissionImpl 方法是實作&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;方法。&lt;/xref:System.Security.PermissionSet.GetPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">方法會傳回<ph id="ph1">`null`</ph>如<ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">雖然<ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;有效地包含所有的權限，它並沒有任何要傳回的實際執行個體。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The type of the permission object.</source>
          <target state="translated">權限物件的類型。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A copy of the permission object, of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter, contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">所指定之類型的權限物件的複本<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept>參數，包含在<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果不存在。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission set that is the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立並傳回的權限集合也就是目前的交集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和指定<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">兩個權限集合的交集會描述一組共同兩者描述的作業的權限集合。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">具體來說，它代表最小權限，會傳遞兩個權限的任何要求中將設定也會傳遞其交集。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">針對存在於這兩個集合中的權限的每個類型，兩個執行個體，這些權限會交集使用的權限<ph id="ph1">`Intersect`</ph>方法產生的權限會包含在產生&lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">只有其中一個兩個集合中存在的權限類型會從結果集中排除。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A permission set to intersect with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">權限設為與目前交集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified target.</source>
          <target state="translated">新的權限集合，表示目前的交集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和指定的目標。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This object is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">這個物件是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果交集是空的。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是空的。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;為空白，且尚未包含執行個體的權限，這些權限是否在完全受限制的狀態。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">權限就會處於完全限制如果其<ph id="ph1">`IsSubsetOf`</ph>方法會傳回<ph id="ph2">`true`</ph>時<ph id="ph3">`null`</ph>傳遞做為參數。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is empty; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是空的否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">取得值，指出集合是否唯讀。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; cannot be read-only, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;不可為唯讀，因此這個屬性永遠都是<ph id="ph1">`false`</ph>。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Determines whether the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a subset of the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定是否目前<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是指定的子集<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; is a subset of the target &lt;xref:System.Security.PermissionSet&gt; if all demands that succeed for the &lt;xref:System.Security.PermissionSet&gt; also succeed for the target.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;為目標的子集&lt;xref:System.Security.PermissionSet&gt;如果所有要求，都成功的&lt;xref:System.Security.PermissionSet&gt;也目標都成功。&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">也就是目標至少包含的子集中所包含的權限。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">若要測試子集關聯性設定的權限。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This must be either a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這必須是<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a subset of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p3">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果目前<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>子集<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p3">&lt;/code&gt;</ept>參數，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">取得值，指出是否保證集合具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.PermissionSet&gt; does not automatically handle thread safety, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;不會自動處理執行緒安全，因此這個屬性永遠都是<ph id="ph1">`false`</ph>。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">此方法才能支援&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;有效地包含所有實作的權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;介面。&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt; &lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for any <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is not a subset of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">會讓任何&lt;xref:System.Security.PermissionSet.Demand*&gt;通過呼叫程式碼的任何<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>不子集的目前<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>失敗。&lt;/xref:System.Security.PermissionSet.Demand*&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PermitOnly is similar to &lt;xref:System.Security.PermissionSet.Deny%2A&gt;, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated">PermitOnly 是類似於&lt;xref:System.Security.PermissionSet.Deny%2A&gt;，在於兩者會導致堆疊查核行程符合則成功時失敗。&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;xref:System.Security.PermissionSet.Deny%2A&gt; specifies permissions that will cause the stack walk to fail, but PermitOnly specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">其差異在於，&lt;xref:System.Security.PermissionSet.Deny%2A&gt;指定權限，會導致堆疊查核行程失敗，但 PermitOnly 指定不會導致堆疊查核行程失敗的唯一權限。&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">呼叫此方法，以確保您的程式碼，可用來存取指定的資源。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>PermitOnly is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">PermitOnly 會忽略該權限的要求不成功，因為未授與的權限。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>However, if code lower on the call stack later calls &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission, a &lt;xref:System.Security.SecurityException&gt; is thrown when the stack walk reaches the code that tried to call PermitOnly.</source>
          <target state="translated">不過，如果程式碼呼叫較低堆疊稍後呼叫&lt;xref:System.Security.PermissionSet.Demand%2A&gt;該權限，&lt;xref:System.Security.SecurityException&gt;堆疊查核行程到達程式碼嘗試呼叫 PermitOnly 時，會擲回。&lt;/xref:System.Security.SecurityException&gt; &lt;/xref:System.Security.PermissionSet.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is because the code that called PermitOnly has not been granted the permission, even though it called PermitOnly for that permission.</source>
          <target state="translated">這是因為呼叫 PermitOnly 的程式碼無法獲得的權限，即使它針對該權限來呼叫 PermitOnly。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">從集合中移除特定類型的權限。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 您無法移除不受限制的權限集合的權限。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">權限設定會維持為無限制之後嘗試移除權限，而不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The following C# code attempts to remove the &lt;xref:System.Security.Permissions.FileIOPermission&gt; from the <ph id="ph1">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">下列 C# 程式碼會嘗試移除&lt;xref:System.Security.Permissions.FileIOPermission&gt;從<ph id="ph1">`FullTrust`</ph>設定權限，但未移除的權限。&lt;/xref:System.Security.Permissions.FileIOPermission&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The type of permission to delete.</source>
          <target state="translated">若要刪除的權限類型。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">從集合移除的權限。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">從集合中移除特定類型的權限。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The RemovePermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt; method.</source>
          <target state="translated">RemovePermissionImpl 方法是實作&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;方法。&lt;/xref:System.Security.PermissionSet.RemovePermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 您無法移除不受限制的權限集合中的權限。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">權限設定會維持為無限制之後嘗試移除權限，而不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The type of the permission to remove.</source>
          <target state="translated">若要移除權限的類型。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">從集合移除的權限。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Causes any previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">格之任何先前&lt;xref:System.Security.CodeAccessPermission.Assert*&gt;目前的畫面格，才會移除，而且不會生效。&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If there is no &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt; for the current frame, an &lt;xref:System.ExecutionEngineException&gt; is thrown.</source>
          <target state="translated">如果沒有任何&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;目前的框架，&lt;xref:System.ExecutionEngineException&gt;就會擲回。&lt;/xref:System.ExecutionEngineException&gt; &lt;/xref:System.Security.CodeAccessPermission.Assert%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There is no previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame.</source>
          <target state="translated">沒有先前&lt;xref:System.Security.CodeAccessPermission.Assert*&gt;目前的框架。&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">若要設定權限<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取代相同類型的任何現有的權限。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">這個方法會移除任何現有的權限物件從相同型別的&lt;xref:System.Security.PermissionSet&gt;取代，它與<ph id="ph1">`perm`</ph>參數。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">如果實作的權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;上設定&lt;xref:System.Security.PermissionSet&gt;也就是&lt;xref:System.Security.Permissions.PermissionState&gt;，產生&lt;xref:System.Security.PermissionSet&gt;不再<ph id="ph1">`Unrestricted`</ph>。&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">若要設定權限。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">設定的權限。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">若要設定權限<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取代相同類型的任何現有的權限。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The SetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.SetPermission%2A&gt; method.</source>
          <target state="translated">SetPermissionImpl 方法是實作&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;方法。&lt;/xref:System.Security.PermissionSet.SetPermission%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">這個方法會移除任何現有的權限物件從相同型別的&lt;xref:System.Security.PermissionSet&gt;取代，它與<ph id="ph1">`perm`</ph>參數。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">如果實作的權限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;上設定&lt;xref:System.Security.PermissionSet&gt;也就是&lt;xref:System.Security.Permissions.PermissionState&gt;，產生&lt;xref:System.Security.PermissionSet&gt;不再<ph id="ph1">`Unrestricted`</ph>。&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">若要設定權限。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">設定的權限。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個方法從呼叫<bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">取得目前集合的根物件。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">此方法才能支援&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The root object of the current collection.</source>
          <target state="translated">目前集合的根物件。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">當整個物件 graph 已經還原序列化時執行。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
          <target state="translated">初始化回呼的物件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">此參數的功能目前尚未實作。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回的字串表示<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The string representation is useful in debugging to see the state of a &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">字串表示適用於偵錯以查看&lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;的狀態</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示法<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">建立安全性物件和其目前狀態的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">安全性物件，包含所有狀態資訊的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the union of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the specified <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>也就是目前的聯集<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和指定<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The result of a call to Union is a &lt;xref:System.Security.PermissionSet&gt; that represents all the operations represented by the current &lt;xref:System.Security.PermissionSet&gt; as well as all the operations represented by the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">要聯集呼叫的結果是&lt;xref:System.Security.PermissionSet&gt;，代表由目前&lt;xref:System.Security.PermissionSet&gt;以及指定&lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;所代表的所有作業&lt;/xref:System.Security.PermissionSet&gt;的所有作業&lt;/xref:System.Security.PermissionSet&gt;都</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">如果設定為<ph id="ph1">`Unrestricted`</ph>，等位是<ph id="ph2">`Unrestricted`</ph>以及。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The permission set to form the union with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">權限設為形成聯集，與目前<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the union of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新的權限集合，代表目前的聯集<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和指定<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>