<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c9f6caf8892a263ecf850268a486d819fd42561</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AppDomainSetup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">460944a3e2b930c3a75085d91c0b03d29a9c2da2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2f1f245328ec1275ee7b10b330ffbf5e6c025e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents assembly binding information that can be added to an instance of <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示可以加入至執行個體的組件繫結資訊<bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Changing the properties of an AppDomainSetup instance does not affect any existing &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">變更 AppDomainSetup 執行個體的屬性不會影響任何現有的&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It can affect only the creation of a new &lt;xref:System.AppDomain&gt;, when the &lt;xref:System.AppDomain.CreateDomain%2A&gt; method is called with the AppDomainSetup instance as a parameter.</source>
          <target state="translated">它可能會影響建立新的&lt;xref:System.AppDomain&gt;，當&lt;xref:System.AppDomain.CreateDomain%2A&gt;與 AppDomainSetup 執行個體做為參數呼叫方法。&lt;/xref:System.AppDomain.CreateDomain%2A&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;xref:System.IAppDomainSetup&gt; interface.</source>
          <target state="translated">這個類別會實作&lt;xref:System.IAppDomainSetup&gt;介面。&lt;/xref:System.IAppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the &lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt; property is false.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 的預設值為&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;屬性為 false。&lt;/xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This setting is unsafe for services.</source>
          <target state="translated">這項設定是不安全的服務。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To help prevent services from downloading partially trusted code, set this property to true</source>
          <target state="translated">為了避免服務下載部分信任程式碼，將此屬性設定為 true</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation context to use for manifest-based activation of an application domain.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與要用於應用程式定義域的資訊清單型啟用指定的啟用內容的類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ActivationContext&gt; object specified for <ph id="ph1">`activationContext`</ph> is used to generate an &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object containing information required to activate a new application domain.</source>
          <target state="translated">&lt;xref:System.ActivationContext&gt;物件指定<ph id="ph1">`activationContext`</ph>用來產生&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;物件，其中包含啟動新的應用程式定義域所需的資訊。&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt; &lt;/xref:System.ActivationContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">這&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;物件可以使用來存取&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt; &lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The activation context to be used for an application domain.</source>
          <target state="translated">要用於應用程式定義域的啟動內容。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation arguments required for manifest-based activation of an application domain.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的應用程式定義域的資訊清單型啟用所需的指定的啟用引數的類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object specified for <ph id="ph1">`activationArguments`</ph> can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">指定的物件<ph id="ph1">`activationArguments`</ph>可以使用來存取&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object that specifies information required for the manifest-based activation of a new application domain.</source>
          <target state="translated">物件，指定所需的資訊清單為主的啟動新的應用程式定義域的資訊。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets data about the activation of an application domain.</source>
          <target state="translated">取得或設定應用程式定義域的啟動有關的資料。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>No exception is thrown if this property is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果這個屬性設定為將會擲回任何例外狀況<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The information provided by the &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object supports manifest-based activation.</source>
          <target state="translated">所提供的資訊&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;物件支援資訊清單型啟用。&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object that contains data about the activation of an application domain.</source>
          <target state="translated">物件，包含應用程式定義域的啟動有關的資料。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ApplicationTrust<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ApplicationTrust<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">屬性設定為<bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件的應用程式識別不符合的應用程式識別<bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>所傳回物件&lt;&gt; <bpt id="p3">*</bpt>&gt; 屬性。如果擲回任何例外狀況&lt;&gt; <ept id="p3">*</ept>&gt; 屬性是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, which represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委派，表示應用程式定義域初始化時會叫用的回呼方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To pass information to the callback method, assign an array of strings to the &lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt; property.</source>
          <target state="translated">若要將資訊傳遞至回呼方法，將指定的字串陣列&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The array is passed to the callback method each time an &lt;xref:System.AppDomain&gt; is initialized.</source>
          <target state="translated">的陣列傳遞至回呼方法，每次&lt;xref:System.AppDomain&gt;已初始化。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">新建立的應用程式定義域的內容中執行的回呼方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A delegate that represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">委派，代表應用程式定義域初始化時會叫用的回呼方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the arguments passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate.</source>
          <target state="translated">取得或設定傳遞至所代表的回呼方法的引數<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委派。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The callback method is invoked when the application domain is initialized.</source>
          <target state="translated">應用程式定義域初始化時會叫用回呼方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property to specify a callback method that is invoked during &lt;xref:System.AppDomain&gt; initialization.</source>
          <target state="translated">使用&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;屬性來指定期間所叫用的回呼方法&lt;xref:System.AppDomain&gt;初始化。&lt;/xref:System.AppDomain&gt; &lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property is not set, the array assigned to this property is not used.</source>
          <target state="translated">如果&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;屬性未設定，表示未使用指派給這個屬性的陣列。&lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">新建立的應用程式定義域的內容中執行的回呼方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of strings that is passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, when the callback method is invoked during <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> initialization.</source>
          <target state="translated">字串陣列傳遞至所代表之回呼方法<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委派時的回呼方法會叫用期間<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>初始化。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得或設定用於建立使用此應用程式定義域提供的應用程式定義域管理員類型的組件的顯示名稱<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name of the assembly that provides the &lt;xref:System.Type&gt; of the application domain manager.</source>
          <target state="translated">提供的組件的顯示名稱&lt;xref:System.Type&gt;的應用程式定義域管理員。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the full name of the type that provides the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得或設定建立使用此應用程式定義域提供應用程式定義域管理員類型的完整名稱<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The full name of the type, including the namespace.</source>
          <target state="translated">類型，包括命名空間的完整名稱。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the directory containing the application.</source>
          <target state="translated">取得或設定包含應用程式的目錄名稱。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The application base directory is where the assembly manager begins probing for assemblies.</source>
          <target state="translated">應用程式基底目錄是組件管理員開始探查組件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ApplicationBase property can influence which permissions are granted to an application domain.</source>
          <target state="translated">ApplicationBase 屬性可能會影響應用程式定義域授與的權限。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</source>
          <target state="translated">例如，通常來自本機電腦的應用程式定義域收到完全信任的來源的位置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if the ApplicationBase property of that &lt;xref:System.AppDomain&gt; is set to the full name of an intranet directory, the ApplicationBase setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</source>
          <target state="translated">不過，如果該 ApplicationBase 屬性&lt;xref:System.AppDomain&gt;設為內部網路目錄中，設定會限制授與給 LocalIntranet 授與應用程式定義域，即使應用程式定義域確實來自本機電腦的權限 ApplicationBase 的完整名稱。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the application base directory.</source>
          <target state="translated">應用程式基底目錄的名稱。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the application.</source>
          <target state="translated">取得或設定應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the application.</source>
          <target state="translated">應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets an object containing security and trust information.</source>
          <target state="translated">取得或設定包含安全性和信任資訊的物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This property is <ph id="ph1">`null`</ph> when the &lt;xref:System.AppDomainSetup&gt; is created.</source>
          <target state="translated">這個屬性是<ph id="ph1">`null`</ph>時&lt;xref:System.AppDomainSetup&gt;建立。&lt;/xref:System.AppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Once changed, it cannot be reset to a null reference.</source>
          <target state="translated">一旦變更，無法重設為 null 參考。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An object that contains security and trust information.</source>
          <target state="translated">物件，包含安全性和信任資訊。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ActivationArguments<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ActivationArguments<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">屬性設定為<bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件的應用程式識別不符合的應用程式識別<bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>所傳回物件&lt;&gt; <bpt id="p3">*</bpt>&gt; 屬性。如果擲回任何例外狀況&lt;&gt; <ept id="p3">*</ept>&gt; 屬性是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">屬性設定為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an area specific to the application where files are shadow copied.</source>
          <target state="translated">取得或設定其中的檔案已陰影複製的應用程式特定區域的名稱。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In order for this property to have an effect, the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property must also be set.</source>
          <target state="translated">為了讓此屬性，讓效果，請&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;也必須設定屬性。&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property is not set, the CachePath property is ignored and the shadow copy cache location defaults to the download cache.</source>
          <target state="translated">如果&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;屬性未設定，則會忽略 CachePath 屬性陰影複本快取位置預設為下載快取。&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關陰影複製的詳細資訊，請參閱<bpt id="p1">[</bpt>陰影複製組件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the directory path and file name where files are shadow copied.</source>
          <target state="translated">其中的檔案已陰影複製的目錄路徑和檔案名稱的完整的名稱。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the configuration file for an application domain.</source>
          <target state="translated">取得或設定應用程式定義域的組態檔的名稱。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The configuration file describes the search rules and configuration data for the application domain.</source>
          <target state="translated">組態檔會描述應用程式定義域的組態資料與搜尋規則。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</source>
          <target state="translated">建立應用程式定義域的主機會負責提供這項資料，因為有意義的值不同的狀況。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</source>
          <target state="translated">例如，ASP.NET 應用程式的組態資料會儲存為每個應用程式、 網站和電腦，而可執行檔的組態資料會儲存每個應用程式、 使用者及電腦。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Only the host knows the specifics of the configuration data for a particular circumstance.</source>
          <target state="translated">只有主機才會知道組態資料的詳細資訊，為特定狀況。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the configuration file.</source>
          <target state="translated">組態檔的名稱。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</source>
          <target state="translated">指定當搜尋要載入的組件的應用程式基底路徑和私用二進位路徑是否要探查。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the DisallowApplicationBaseProbing property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property is ignored.</source>
          <target state="translated">如果 DisallowApplicationBaseProbing 屬性為<ph id="ph1">`true`</ph>，值&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;屬性會被忽略。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>That is, no assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property.</source>
          <target state="translated">也就是任何組件會探查如中所指定目錄&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In addition, the values of the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property and the &lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; property are ignored.</source>
          <target state="translated">此外，值&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;屬性和&lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt;屬性會被忽略。&lt;/xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>No assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property.</source>
          <target state="translated">所指定之目錄中任何組件探查的&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The DisallowApplicationBaseProbing property provides an additional layer of control over the loading process.</source>
          <target state="translated">DisallowApplicationBaseProbing 屬性會提供額外的控制載入程序。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the normal assembly loading sequence, the application base is probed before the &lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">標準的組件載入順序時，應用程式基底會探查之前&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;就會引發事件。&lt;/xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties.</source>
          <target state="translated">不過，某些應用程式可能需要從 OLE 複合檔案的文件，或從唯一的已知位置不在全域組件快取和所指定之目錄中載入的組件&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;和&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Such applications can use the DisallowApplicationBaseProbing property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</source>
          <target state="translated">這類應用程式可以使用 DisallowApplicationBaseProbing 屬性，以避免一般探查時，所造成的延遲，並避免載入必要可能位在一般的探查路徑中的組件的複本。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if probing is not allowed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不允許探查，否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</source>
          <target state="translated">取得或設定值，指出應用程式定義域是否允許組件繫結重新導向。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The DisallowBindingRedirects property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</source>
          <target state="translated">DisallowBindingRedirects 屬性被設計用於服務和伺服器應用程式組件繫結重新導向不是屬於應用程式的情況。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if redirection of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不允許組件重新導向，則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>被允許。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</source>
          <target state="translated">取得或設定值，指出應用程式定義域是否允許以 HTTP 下載組件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The DisallowCodeDownload property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</source>
          <target state="translated">DisallowCodeDownload 屬性被設計用於服務和伺服器應用程式從內部網路或網際網路下載的程式碼不是屬於應用程式的情況。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the DisallowCodeDownload property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; DisallowCodeDownload 屬性的預設值是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This setting is unsafe for services.</source>
          <target state="translated">這項設定是不安全的服務。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To help prevent services from downloading partially trusted code, set this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">為了避免服務下載部分信任程式碼，將此屬性設定為<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if HTTP download of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果 HTTP 下載組件不允許;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>被允許。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept> section of the configuration file is applied to an application domain.</source>
          <target state="translated">取得或設定值，指出是否<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>p<ph id="ph2">&amp;gt;</ph> <ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept>組態檔的區段是否套用至應用程式定義域。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The DisallowPublisherPolicy property specifically applies to a Web application that is loaded locally.</source>
          <target state="translated">DisallowPublisherPolicy 屬性特別適用於在本機載入 Web 應用程式。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</source>
          <target state="translated">使用這個屬性來協助防止惡意嘗試在安全模式中執行不安全的 Web 應用程式。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about bypassing publisher policy, see the <bpt id="p1">[</bpt>Redirecting Assembly Versions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">如需略過發行者原則的詳細資訊，請參閱<bpt id="p1">[</bpt>重新導向組件版本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>主題。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about safe mode, see the "Examining the Configuration Files" section of the <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">如需安全模式的詳細資訊，請參閱的 &lt; 檢查組態檔案 &gt; 一節<bpt id="p1">[</bpt>執行階段如何找出組件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>主題。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> section of the configuration file for an application domain is ignored; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the declared publisher policy is honored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>應用程式定義域組態檔區段會被忽略;<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>如果遵循所宣告的發行者原則，則為。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets the base directory where the directory for dynamically generated files is located.</source>
          <target state="translated">取得或設定基底目錄的動態產生檔案之目錄所在的位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The directory where the <ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> is located.</source>
          <target state="translated">目錄位置<ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>所在。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The return value of this property is different from the value assigned.</source>
          <target state="translated">這個屬性的傳回值是不同於指派的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See the Remarks section.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the application name on the application domain is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">無法設定這個屬性，因為應用程式定義域中的應用程式名稱是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the XML configuration information set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt; method, which overrides the application's XML configuration information.</source>
          <target state="translated">傳回所設定的 XML 組態資訊&lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt;方法，它會覆寫應用程式的 XML 組態資訊。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method provides a way to override the configuration information of an application that creates a new application domain.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法可用來建立新的應用程式定義域的應用程式的組態資訊會覆寫。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The configuration file information in <ph id="ph1">`value`</ph> overrides the configuration file information for the application.</source>
          <target state="translated">中的設定檔資訊<ph id="ph1">`value`</ph>覆寫應用程式的組態檔資訊。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</source>
          <target state="translated">例如，當 Example.exe 應用程式建立新的應用程式定義域時，它可以覆寫原先取自 Example.exe.config 檔案的組態資訊。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 部分的設定檔資訊的取用者不會使用儲存的資訊&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The runtime does not enforce this.</source>
          <target state="translated">執行階段不會強制這個屬性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To ensure that all configuration file information is overridden in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">若要確保新的應用程式定義域中會覆寫所有的設定檔資訊，請使用&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;屬性來指定組態檔。&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method does affect assembly binding.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法，並會影響組件繫結。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">中的 XML<ph id="ph1">`value`</ph>等同於一般的組態檔中的 XML 之處在於它會儲存為&lt;xref:System.Byte&gt;陣列。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To access the configuration bytes for an application domain, use the &lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt; property to get the &lt;xref:System.AppDomainSetup&gt; object for the application domain, then use the GetConfigurationBytes method.</source>
          <target state="translated">若要存取應用程式定義域的組態位元組，請使用&lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;屬性來取得&lt;xref:System.AppDomainSetup&gt;物件的應用程式定義域，然後使用 GetConfigurationBytes 方法。&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information that was set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<bpt id="p1">*</bpt>&gt; method, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<ept id="p1">*</ept>&gt; method has not been called.</source>
          <target state="translated">陣列，其中包含所設定的 XML 組態資訊&lt;&gt; <bpt id="p1">*</bpt>&gt; 方法，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果&lt;&gt; <ept id="p1">*</ept>&gt; 尚未呼叫方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the license file associated with this domain.</source>
          <target state="translated">取得或設定與這個定義域相關聯的使用權檔案的位置。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The location and name of the license file.</source>
          <target state="translated">位置和授權檔案的名稱。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the optimization policy used to load an executable.</source>
          <target state="translated">指定用來載入可執行檔的最佳化原則。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An enumerated constant that is used with the <bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">搭配使用的列舉的常數<bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of assemblies marked with the <bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag that are made visible to partial-trust code running in a sandboxed application domain.</source>
          <target state="translated">取得或設定標記的組件清單<bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>都已成為可見的沙箱化應用程式定義域中執行的部分信任程式碼的旗標。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; (APTCA) attribute can be made conditional by setting its &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt; property to &lt;xref:System.Security.PartialTrustVisibilityLevel&gt;.</source>
          <target state="translated">開頭為<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>，&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;藉由設定其&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;屬性至&lt;xref:System.Security.PartialTrustVisibilityLevel&gt;。&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt;&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;條件進行 (APTCA) 屬性&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An APTCA assembly that is marked with &lt;xref:System.Security.PartialTrustVisibilityLevel&gt; cannot be used by partially trusted code unless the host application allows it.</source>
          <target state="translated">&lt;xref:System.Security.PartialTrustVisibilityLevel&gt;除非主應用程式可讓它無法供部分信任程式碼&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt;已標記 APTCA 組件</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</source>
          <target state="translated">沙箱化應用程式定義域的主機可允許使用條件式 APTCA 屬性中的組件，藉由建立陣列，其中包含的簡單名稱和公開金鑰的每個組件，並將陣列指派給這個屬性的應用程式定義域中的程式碼。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</source>
          <target state="translated">For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you are using a subclass of &lt;xref:System.AppDomainManager&gt;, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the PartialTrustVisibleAssemblies property of the &lt;xref:System.AppDomainSetup&gt; you use to create application domains.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 如果您使用的子類別&lt;xref:System.AppDomainManager&gt;，並定義它的組件相依於以條件式 APTCA 屬性標記的組件時，您必須包含這些組件的清單中，您傳遞給 PartialTrustVisibleAssemblies 屬性&lt;xref:System.AppDomainSetup&gt;您用於建立應用程式定義域。&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomainManager&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</source>
          <target state="translated">否則會使用條件式 APTCA 屬性標示組件將會停用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you are debugging an application that is running in a sandboxed application domain, some &lt;xref:System.Security.SecurityException&gt; messages can be misleading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 偵錯的應用程式，在沙箱化應用程式網域中，執行某些&lt;xref:System.Security.SecurityException&gt;訊息可能會產生誤導。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</source>
          <target state="translated">比方說，訊息可能狀態，您完全信任組件的其中一個只具有有限的權限，當實際問題的原因是超過沙箱化應用程式網域的授權集的安全性要求有沙箱化應用程式定義域界限傳播時並失敗。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</source>
          <target state="translated">部分組件名稱，其中每一個部分名稱所組成的簡單組件名稱和公開金鑰的陣列。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets or sets the list of directories under the application base directory that are probed for private assemblies.</source>
          <target state="translated">取得或設定私用組件的應用程式基底目錄之下會探查的目錄清單。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Private assemblies are deployed in the same directory structure as the application.</source>
          <target state="translated">私用組件會部署在相同的目錄結構與應用程式。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the directories specified for PrivateBinPath are not under &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;, they are ignored.</source>
          <target state="translated">如果 PrivateBinPath 為指定的目錄不在&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;，便會予以忽略。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">以分號分隔目錄名稱的清單。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets a string value that includes or excludes &lt;xref:System.AppDomainSetup.ApplicationBase<bpt id="p1">*</bpt>&gt; from the search path for the application, and searches only &lt;xref:System.AppDomainSetup.PrivateBinPath<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">取得或設定字串值包含或排除&lt;&gt; <bpt id="p1">*</bpt>&gt; 應用程式，並僅搜尋的搜尋路徑中&lt;&gt; <ept id="p1">*</ept>&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Set this property to any non-null string value, including &lt;xref:System.String?displayProperty=fullName&gt; (""), to exclude the application directory path — that is, &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; — from the search path for the application, and to search for assemblies only in &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.</source>
          <target state="translated">將此屬性設定為任何非 null 字串值，包括&lt;xref:System.String?displayProperty=fullName&gt;("")，若要排除的應用程式的目錄路徑，也就是&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;— 應用程式，並搜尋&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;只能在組件的搜尋路徑中&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</source>
          <target state="translated">Null 參考 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 包含搜尋組件時的應用程式基底路徑; 任何非 null 字串值的路徑排除。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <ph id="ph1">`QueryInterface`</ph> is performed on each call.</source>
          <target state="translated">取得或設定值，指出是否介面快取已停用應用程式定義域中 interop 呼叫，讓<ph id="ph1">`QueryInterface`</ph>每個呼叫上執行。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Disabling interface caching has a significant impact on the performance of interop calls.</source>
          <target state="translated">停用介面快取 interop 呼叫的效能有重大影響。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This member is introduced in the <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">這個成員在引進<ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if interface caching is disabled for interop calls in application domains created with the current <bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果與目前所建立的應用程式定義域中 interop 呼叫介面快取已停用<bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件; 否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</source>
          <target state="translated">設定指定的參數，讓應用程式定義域與舊版的.NET Framework 針對指定的問題。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An enumerable set of string values that specify compatibility switches, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to erase the existing compatibility switches.</source>
          <target state="translated">指定相容性參數的字串值的可列舉集或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>清除現有的相容性參數。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Provides XML configuration information for the application domain, replacing the application's XML configuration information.</source>
          <target state="translated">提供應用程式定義域，以取代應用程式的 XML 組態資訊的 XML 組態資訊。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The SetConfigurationBytes method provides a way to replace the configuration information of an application that creates a new application domain.</source>
          <target state="translated">SetConfigurationBytes 方法可用來取代建立新的應用程式定義域的應用程式的組態資訊。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The configuration file information in <ph id="ph1">`value`</ph>replaces the configuration file information for the application.</source>
          <target state="translated">中的設定檔資訊<ph id="ph1">`value`</ph>取代應用程式的設定檔資訊。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</source>
          <target state="translated">例如，當 Example.exe 應用程式建立新的應用程式定義域時，它可以取代原本取自 Example.exe.config 檔案的組態資訊。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the SetConfigurationBytes method.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 部分的設定檔資訊的取用者不會使用 SetConfigurationBytes 方法所儲存的資訊。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The runtime does not enforce this.</source>
          <target state="translated">執行階段不會強制這個屬性。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To ensure that all configuration file information is replaced in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">若要確保所有的設定檔資訊會取代新的應用程式定義域中，使用&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;屬性來指定組態檔。&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The SetConfigurationBytes method does affect assembly binding.</source>
          <target state="translated">SetConfigurationBytes 方法，並會影響組件繫結。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">中的 XML<ph id="ph1">`value`</ph>等同於一般的組態檔中的 XML 之處在於它會儲存為&lt;xref:System.Byte&gt;陣列。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information to be used for the application domain.</source>
          <target state="translated">陣列，其中包含要用於應用程式定義域的 XML 組態資訊。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Provides the common language runtime with an alternate implementation of a string comparison function.</source>
          <target state="translated">Common language runtime 提供字串比較函式的替代實作。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following string comparison and sorting methods can be overridden by the SetNativeFunction method:      -   <ph id="ph1">`IsNLSDefinedString`</ph><ph id="ph2">      -   </ph><ph id="ph3">`CompareStringEx`</ph><ph id="ph4">      -   </ph><ph id="ph5">`LCMapStringEx`</ph><ph id="ph6">      -   </ph><ph id="ph7">`FindNLSStringEx`</ph><ph id="ph8">      -   </ph><ph id="ph9">`CompareStringOrdinal`</ph><ph id="ph10">      -   </ph><ph id="ph11">`GetNLSVersion`</ph>       For information about these functions, see <bpt id="p1">[</bpt>National Language Support Functions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>.</source>
          <target state="translated">下列的字串比較和排序方法可以覆寫 SetNativeFunction 方法:- <ph id="ph1">`IsNLSDefinedString`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`CompareStringEx`</ph> <ph id="ph4">      -   </ph> <ph id="ph5">`LCMapStringEx`</ph> <ph id="ph6">      -   </ph> <ph id="ph7">`FindNLSStringEx`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`CompareStringOrdinal`</ph> <ph id="ph10">      -   </ph> <ph id="ph11">`GetNLSVersion`</ph>這些函式的相關資訊，請參閱<bpt id="p1">[</bpt>國家語言支援函式<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The name of the string comparison function to override.</source>
          <target state="translated">若要覆寫字串比較函式的名稱。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The function version.</source>
          <target state="translated">函式版本。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>, its value must be 1 or greater.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>，其值必須大於或等於 1。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A pointer to the function that overrides <ph id="ph1">`functionName`</ph>.</source>
          <target state="translated">覆寫函式的指標<ph id="ph1">`functionName`</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph> is not 1 or greater.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph>不大於或等於 1。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph>是<ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets or sets the names of the directories containing assemblies to be shadow copied.</source>
          <target state="translated">取得或設定包含要陰影複製組件的目錄名稱。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; and &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; properties.</source>
          <target state="translated">啟用陰影複製時，預設值是要透過探查; 找到的所有組件的陰影複製也就是所指定目錄中&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;和&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;屬性。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The ShadowCopyDirectories property restricts the shadow copy to the assemblies in the directories specified by ShadowCopyDirectories.</source>
          <target state="translated">ShadowCopyDirectories 屬性會限制 ShadowCopyDirectories 所指定目錄中的組件的陰影複製。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you don’t assign a string to the ShadowCopyDirectories property, or if you set this property to <ph id="ph1">`null`</ph>, all assemblies in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties are shadow copied.</source>
          <target state="translated">如果您不指派字串給 ShadowCopyDirectories 屬性，或如果您將此屬性設定為<ph id="ph1">`null`</ph>，所指定目錄中的所有組件&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;和&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;屬性是陰影複製。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Directory paths must not contain semicolons, because the semicolon is the delimiter character.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 目錄路徑不可包含分號，因為分號是分隔符號字元。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>There is no escape character for semicolons.</source>
          <target state="translated">分號沒有逸出字元。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</source>
          <target state="translated">作用時，陰影複製，組件檔會複製到另一個位置載入組件之前。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The original assembly file is not locked, so it can be updated.</source>
          <target state="translated">原始的組件檔未鎖定，因此可以更新。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關陰影複製的詳細資訊，請參閱<bpt id="p1">[</bpt>陰影複製組件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">以分號分隔目錄名稱的清單。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that indicates whether shadow copying is turned on or off.</source>
          <target state="translated">取得或設定指示陰影複製開啟或關閉的字串。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關陰影複製的詳細資訊，請參閱<bpt id="p1">[</bpt>陰影複製組件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</source>
          <target state="translated">字串值"true"表示陰影複製為開啟，或者"false"表示陰影複製已關閉。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> constructor.</source>
          <target state="translated">取得或設定字串，指定的目標版本和.NET Framework 應用程式定義域中，設定檔可剖析的格式<ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</source>
          <target state="translated">設定這個屬性，以判斷目前正在執行版本的.NET framework 應用程式定義域，可用來載入及執行的目標版本和設定檔的已編譯的組件。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</source>
          <target state="translated">如果目前執行的.NET framework 版本有選擇性的行為會影響相容性的目標版本編譯的程式碼，它可以啟用或停用這些行為，視需要以提高相容性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</source>
          <target state="translated">當應用程式支援增益集由在個別的應用程式定義域中執行它們使用多個版本的.NET framework 編譯時，這非常有用。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For client applications, the value of the TargetFrameworkName property is inferred from the &lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt; attribute.</source>
          <target state="translated">用戶端應用程式，TargetFrameworkName 屬性的值由推斷&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;屬性。&lt;/xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and later, this attribute is added to the assembly automatically based on the setting of the project's <bpt id="p1">**</bpt>Target Framework<ept id="p1">**</ept> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph>和更新版本中，這個屬性會加入至組件會自動根據專案設定<bpt id="p1">**</bpt>目標 Framework<ept id="p1">**</ept>屬性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The target version and profile of the .NET Framework.</source>
          <target state="translated">目標版本和.NET Framework 的設定檔。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>