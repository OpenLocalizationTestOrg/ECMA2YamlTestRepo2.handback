<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">402f91690b00718ef1daf948889c058d08a9881b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.ExecutedRoutedEventHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca9c94db734a93a4f851944a8de28e74babcd1e2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3cb6e7b08d7861b9bfb9b4aafbd8adf010e152d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that will handle the <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Input.CommandBinding.PreviewExecuted"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> routed events, as well as related attached events.</source>
          <target state="translated">代表將處理的方法<bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Windows.Input.CommandBinding.PreviewExecuted"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>路由事件，以及相關附加的事件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This delegate contains the implementation logic for a &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">這個委派包含&lt;xref:System.Windows.Input.RoutedCommand&gt;.&lt;/xref:System.Windows.Input.RoutedCommand&gt;的實作邏輯</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</source>
          <target state="translated">實作邏輯分離命令可從不同來源和類型，叫用命令，並且讓命令邏輯的集中化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This delegate is also used for &lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt; and &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName&gt;, which are attached events on the &lt;xref:System.Windows.Input.CommandManager&gt; class that implements much of the commanding infrastructure.</source>
          <target state="translated">此委派也可用於&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt;和&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName&gt;，它們是附加事件上&lt;xref:System.Windows.Input.CommandManager&gt;類別可實作大部分命令的基礎結構。&lt;/xref:System.Windows.Input.CommandManager&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName&gt; &lt;/xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>But most practical handlers will handle the &lt;xref:System.Windows.Input.CommandBinding.Executed&gt; events from a particular &lt;xref:System.Windows.Input.CommandBinding&gt;, rather than work at the &lt;xref:System.Windows.Input.CommandManager&gt; level.</source>
          <target state="translated">但是大部分的實際的處理常式會處理&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;從特定事件&lt;xref:System.Windows.Input.CommandBinding&gt;，而不是在工作比&lt;xref:System.Windows.Input.CommandManager&gt;層級。&lt;/xref:System.Windows.Input.CommandManager&gt; &lt;/xref:System.Windows.Input.CommandBinding&gt; &lt;/xref:System.Windows.Input.CommandBinding.Executed&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Within &lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:      -   &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; reports the target where the command was executed.</source>
          <target state="translated">內&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;，下列屬性通常是感興趣的當您撰寫路由的事件所執行的命令產生的事件處理常式:-&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;報告命令執行所在的目標。&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt; &lt;/xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once the command is executed, you can also think of the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; more generally in routed event terms, as the object that raised a routed event.</source>
          <target state="translated">一旦執行命令之後，您也可以將&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;多通常在路由事件的詞彙，以引發路由的事件的物件。&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt; reports the command that executed.</source>
          <target state="translated">-&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;報告執行的命令。&lt;/xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</source>
          <target state="translated">如果您使用命令繫結，而且如果您撰寫處理常式，可能會處理多個命令，此屬性相當實用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt; reports any command-specific parameters that were passed by the executing command.</source>
          <target state="translated">-&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;報告執行的命令所傳送的任何特定命令的參數。&lt;/xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Not all commands use or expect command-specific parameters.</source>
          <target state="translated">並非所有命令使用，或會預期特定命令的參數。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</source>
          <target state="translated">-&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;報告執行的命令所產生的路由的事件是否已經過處理由不同的項目路徑。&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">路由的事件處理常式，對於有處理常式處理事件，以設定執行有意義的工作之建議的作法是&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;至<ph id="ph1">`true`</ph>。&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This prevents typical handlers for the event from handling the event again further along the route.</source>
          <target state="translated">這可防止路由再次進一步事件的處理事件的一般處理常式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information on handling routed events, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關處理路由的事件的詳細資訊，請參閱<bpt id="p1">[</bpt>標示路由傳送事件中當做 Handled，和類別處理<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This delegate also represents handlers for &lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt; and &lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName&gt;, which are attached events on the &lt;xref:System.Windows.Input.CommandManager&gt; class that implements much of the commanding infrastructure.</source>
          <target state="translated">此委派也表示處理常式&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt;和&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName&gt;，它們是附加事件上&lt;xref:System.Windows.Input.CommandManager&gt;類別可實作大部分命令的基礎結構。&lt;/xref:System.Windows.Input.CommandManager&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName&gt; &lt;/xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>But most practical handlers will handle the &lt;xref:System.Windows.Input.CommandBinding.Executed&gt; events from a particular &lt;xref:System.Windows.Input.CommandBinding&gt;, rather than work at the &lt;xref:System.Windows.Input.CommandManager&gt; level.</source>
          <target state="translated">但是大部分的實際的處理常式會處理&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;從特定事件&lt;xref:System.Windows.Input.CommandBinding&gt;，而不是在工作比&lt;xref:System.Windows.Input.CommandManager&gt;層級。&lt;/xref:System.Windows.Input.CommandManager&gt; &lt;/xref:System.Windows.Input.CommandBinding&gt; &lt;/xref:System.Windows.Input.CommandBinding.Executed&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information on commanding, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需命令的詳細資訊，請參閱<bpt id="p1">[</bpt>指揮概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>