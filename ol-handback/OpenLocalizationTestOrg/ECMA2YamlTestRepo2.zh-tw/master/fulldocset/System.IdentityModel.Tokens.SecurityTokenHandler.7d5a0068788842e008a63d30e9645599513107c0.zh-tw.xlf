<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4eea9ca7e256bdd61e34750d92d12a051dcbb496</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SecurityTokenHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d06a0b9ec0c9abb5ed0dc904b92734bc110ed4c1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">661aa9254f1a9b6259e85a32c3b0fb97514defd4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class for security token handlers.</source>
          <target state="translated">安全性權杖處理常式的抽象基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">從建構函式以初始化衍生類別中呼叫<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</source>
          <target state="translated">傳回值，指出所參考的 XML 項目指定的 XML 讀取器是否可以還原序列化的這個執行個體的金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`false`</ph> to indicate that the key identifier clause cannot be read.</source>
          <target state="translated">預設實作會傳回<ph id="ph1">`false`</ph>來指示將無法讀取金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</source>
          <target state="translated">在衍生的類別會檢查讀取器以判斷執行個體是否可以還原序列化金鑰識別碼子句所參考的項目。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">通常這是透過呼叫&lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;方法與指定的適當項目和命名空間字串。&lt;/xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you override CanReadKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">如果您覆寫 CanReadKeyIdentifierClause，您也必須覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;方法以提供還原序列化金鑰識別碼子句的邏輯。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element.</source>
          <target state="translated">XML 讀取器位於開始項目。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">這個方法不應該進階讀取器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt; method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt;方法可以讀取項目，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</source>
          <target state="translated">傳回值，指出指定的字串是否可以還原序列化為的這個執行個體所處理的類型語彙基元。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">預設實作一定會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you override this method, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the token.</source>
          <target state="translated">如果您覆寫這個方法，您也必須覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法，以提供邏輯以還原序列化語彙基元。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The token string to read.</source>
          <target state="translated">要讀取的語彙基元字串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法可以讀取項目，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</source>
          <target state="translated">傳回值，指出是否可以做為這個執行個體所處理之型別的權杖中讀取指定的 XML 讀取器所參考的 XML 項目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">預設實作一定會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</source>
          <target state="translated">在衍生的類別會檢查讀取器以判斷執行個體是否可以還原序列化的安全性語彙基元所參考的項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">通常這是透過呼叫&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;方法與指定的適當項目和命名空間字串。&lt;/xref:System.Xml.XmlReader.IsStartElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you override &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">如果您覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;，您也必須覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法或&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法以提供還原序列化金鑰識別碼子句的邏輯。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">XML 讀取器位於開始項目。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">這個方法不應該進階讀取器。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法可以讀取項目，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler supports validation of security tokens.</source>
          <target state="translated">取得值，指出處理常式是否支援驗證安全性權杖。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To implement validation in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method to implement the validation logic.</source>
          <target state="translated">若要在衍生類別中實作驗證，請覆寫此屬性以傳回<ph id="ph1">`true`</ph>並覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;方法來實作驗證邏輯。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of validating security tokens; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果類別是能夠驗證安全性權杖。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</source>
          <target state="translated">傳回值，指出這個執行個體是否可序列化指定的金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">預設實作一定會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you override CanWriteKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt; method to provide the logic to serialize the key identifier clause.</source>
          <target state="translated">如果您覆寫 CanWriteKeyIdentifierClause，您也必須覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;方法以提供序列化金鑰識別碼子句的邏輯。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The key identifier clause to be checked.</source>
          <target state="translated">要檢查的金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key identifier clause can be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以序列化金鑰識別碼子句。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler can serialize security tokens.</source>
          <target state="translated">取得值，指出此處理常式是否可以序列化安全性權杖。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To implement serialization in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt; methods to implement the serialization logic.</source>
          <target state="translated">若要在衍生類別中實作序列化，覆寫此屬性以傳回<ph id="ph1">`true`</ph>並覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;方法來實作序列化邏輯。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of serializing tokens; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果類別是能夠序列化語彙基元。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides configuration for the current instance.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件，提供目前的執行個體的組態。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The configuration object for the current instance.</source>
          <target state="translated">目前的執行個體的組態物件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the token handler collection that contains the current instance.</source>
          <target state="translated">取得包含目前執行個體的語彙基元處理常式集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the token handler is added to a &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt; instance, this property is automatically set.</source>
          <target state="translated">當權杖處理常式加入&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;執行個體，這個屬性會自動設定。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The token handler collection that contains the current instance.</source>
          <target state="translated">包含目前執行個體的語彙基元處理常式集合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates the security token reference for tokens processed by that class.</source>
          <target state="translated">當在衍生類別中覆寫時，會建立該類別所處理的語彙基元的安全性權杖參考。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is typically called by a security token service (STS).</source>
          <target state="translated">這個方法通常會呼叫安全性權杖服務 (STS)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Derived classes override this method to return a key identifier clause (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) that can be used to create a <ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph> element for the specified token.</source>
          <target state="translated">在衍生的類別覆寫此方法以傳回金鑰識別碼子句 (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) 可以用來建立<ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph>指定語彙基元的項目。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">從&lt;xref:System.IdentityModel.SecurityTokenService&gt;類別&lt;/xref:System.IdentityModel.SecurityTokenService&gt;的實作呼叫</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">一般而言，&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;不需要使用，除了在建立自訂安全性權杖服務時。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">當安全性權杖服務傳回安全性權杖時，所發出的安全性權杖會包含已附加及未附加之安全性權杖的參考。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">附加的參考會參考包含在 SOAP 訊息之安全性標頭內的安全性權杖，且未附加的參考參考不會包含在 SOAP 訊息之安全性標頭中的安全性權杖。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">這些參考通常會證明這些發出的安全性權杖的真實性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The token for which the reference is to be created.</source>
          <target state="translated">若要建立參考的語彙基元。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an attached reference should be created; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if an unattached reference should be created.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該建立附加的參考。<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果應該要建立未附加的參考。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A key identifier clause that references the specified token.</source>
          <target state="translated">金鑰識別碼子句與指定語彙基元的參考。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a security token using the specified token descriptor.</source>
          <target state="translated">當在衍生類別中覆寫時，會建立使用指定的語彙基元描述元的安全性權杖。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method is called by a security token service (STS).</source>
          <target state="translated">這個方法會呼叫安全性權杖服務 (STS)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">從&lt;xref:System.IdentityModel.SecurityTokenService&gt;類別&lt;/xref:System.IdentityModel.SecurityTokenService&gt;的實作呼叫</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The security token descriptor from which the token is to be created.</source>
          <target state="translated">從中語彙基元，是要建立安全性權杖描述元。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Properties of the token descriptor are set before this method is called.</source>
          <target state="translated">呼叫這個方法之前，會設定語彙基元的描述元的屬性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A security token that matches the properties of the token descriptor.</source>
          <target state="translated">安全性權杖符合語彙基元的描述元的屬性。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</source>
          <target state="translated">當在衍生類別中覆寫時，擲回例外狀況，如果所重新執行偵測到指定的語彙基元。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The token to check for replay.</source>
          <target state="translated">若要重新執行檢查語彙基元。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</source>
          <target state="translated">當在衍生類別中覆寫時，傳回所使用的 Uri 集合來識別由衍生類別中處理類型的權杖要求中。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the token processed by the current instance is accessed through the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Type&gt;處理的目前執行個體的語彙基元存取透過&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;屬性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The GetTokenTypeIdentifiers method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</source>
          <target state="translated">GetTokenTypeIdentifiers 方法會傳回一組可用的可接受識別碼來參考語彙基元類型的訊息中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, the URI value used in the <ph id="ph1">`&lt;wst:TokenType&gt;`</ph> element under the <ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph> element to request a specific kind of token (represented by the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt; property in the object model).</source>
          <target state="translated">URI 值中的使用，例如<ph id="ph1">`&lt;wst:TokenType&gt;`</ph>項目底下<ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph>要求特定種類的語彙基元的項目 (由&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;物件模型中的屬性)。&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The set of URIs that identify the token type that this handler supports.</source>
          <target state="translated">用來識別此處理常式支援的權杖型別 Uri 集合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">在衍生類別中覆寫，請從 XML 載入自訂組態。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The configuration XML elements.</source>
          <target state="translated">組態 XML 項目。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Each node in the list is of type <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在清單中的每個節點屬於型別<bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</source>
          <target state="translated">當在衍生類別中覆寫時，還原序列化金鑰識別碼子句所參考的衍生類別中處理的語彙基元的指定 XML 讀取器所參考的 XML。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a key identifier clause from XML.</source>
          <target state="translated">覆寫這個方法以提供的金鑰識別碼子句，從 XML 還原序列化邏輯。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</source>
          <target state="translated">XML 讀取器位於要還原序列化金鑰識別碼子句至 XML 的開始項目。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">從 XML 還原序列化金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</source>
          <target state="translated">當在衍生類別中覆寫時，還原序列化的型別所衍生的類別處理語彙基元指定的字串。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 呼叫此方法不受信任的資料時，會造成安全性風險。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">呼叫這個方法僅使用信任的資料。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>不受信任的資料安全性風險<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Override this method to provide functionality that can deserialize a security token from a string.</source>
          <target state="translated">覆寫這個方法以提供可還原序列化安全性權杖從字串的功能。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you override, this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果您覆寫，此方法中，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The string to be deserialized.</source>
          <target state="translated">要還原序列化的字串。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the specified string.</source>
          <target state="translated">從指定的字串還原序列化安全性權杖。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</source>
          <target state="translated">當在衍生類別中覆寫時，還原序列化的型別所衍生的類別處理語彙基元的指定 XML 讀取器所參考的 XML。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 呼叫此方法不受信任的資料時，會造成安全性風險。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">呼叫這個方法僅使用信任的資料。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>不受信任的資料安全性風險<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">覆寫這個方法以提供安全性權杖從 XML 還原序列化邏輯。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">一般而言，在衍生類別中，如果方法無法還原序列化的語彙基元從參考的 XML，它會擲回&lt;xref:System.Xml.XmlException&gt;.&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">XML 讀取器位於權杖的開始項目。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">從 XML 還原序列化安全性權杖。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</source>
          <target state="translated">當在衍生類別中覆寫時，還原序列化指定的 XML 讀取器，使用指定的語彙基元解析程式在衍生類別來處理類型的語彙基元所參考的 XML。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 呼叫此方法不受信任的資料時，會造成安全性風險。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">呼叫這個方法僅使用信任的資料。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>不受信任的資料安全性風險<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default implementation ignores the <ph id="ph1">`tokenResolver`</ph> parameter and delegates the call to the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">預設實作會忽略<ph id="ph1">`tokenResolver`</ph>參數和委派呼叫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">覆寫這個方法以提供安全性權杖從 XML 還原序列化邏輯。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">一般而言，在衍生類別中，如果方法無法還原序列化的語彙基元從參考的 XML，它會擲回&lt;xref:System.Xml.XmlException&gt;.&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">XML 讀取器位於權杖的開始項目。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A token resolver that contains out-of-band and cached tokens.</source>
          <target state="translated">語彙基元解析程式，其中包含的頻外和快取權杖。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">從 XML 還原序列化安全性權杖。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the security token that is processed by this instance.</source>
          <target state="translated">當在衍生類別中覆寫時，取得安全性權杖會由這個執行個體所處理的類型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You must override this property in derived classes and return the &lt;xref:System.Type&gt; of the security token (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) that is processed by the derived class.</source>
          <target state="translated">您必須覆寫衍生類別中的這個屬性，並傳回&lt;xref:System.Type&gt;的安全性權杖 (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) 衍生類別處理的&lt;/xref:System.IdentityModel.Tokens.SecurityToken&gt;&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of the security token that is processed by this instance.</source>
          <target state="translated">安全性權杖是由這個執行個體所處理的類型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Traces the failure event during the validation of security tokens when tracing is enabled.</source>
          <target state="translated">當啟用追蹤時，追蹤失敗事件期間的安全性權杖驗證。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method when validation of the token fails.</source>
          <target state="translated">這個方法應從呼叫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;方法語彙基元的驗證失敗時。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The security token that is being validated.</source>
          <target state="translated">正在驗證安全性權杖。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The message to write to the trace.</source>
          <target state="translated">要寫入至追蹤的訊息。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Traces the successful validation of security tokens event when tracing is enabled.</source>
          <target state="translated">追蹤成功驗證的安全性語彙基元事件追蹤功能啟用時。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method after the token has been successfully validated.</source>
          <target state="translated">這個方法應從呼叫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;後權杖已成功驗證的方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The token that was validated.</source>
          <target state="translated">已驗證的語彙基元。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, validates the specified security token.</source>
          <target state="translated">當在衍生類別中覆寫時，會驗證指定的安全性權杖。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">語彙基元必須是型別所衍生的類別處理。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The token to validate.</source>
          <target state="translated">若要驗證語彙基元。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The identities contained in the token.</source>
          <target state="translated">在權杖中包含的識別。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified key identifier clause to XML.</source>
          <target state="translated">在衍生類別中覆寫，將序列化為 XML 的指定之金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The key identifier clause must be of the type supported by the derived class.</source>
          <target state="translated">在衍生類別所支援必須是類型的金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a key identifier clause to XML.</source>
          <target state="translated">覆寫這個方法以提供要序列化成 XML 的金鑰識別碼子句的邏輯。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt; method.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML 寫入器。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">序列化金鑰識別碼子句。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to a string.</source>
          <target state="translated">在衍生類別中覆寫，將序列化為字串指定的安全性權杖。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">語彙基元必須是型別所衍生的類別處理。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">覆寫這個方法以提供要序列化成 XML 的安全性權杖的邏輯。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;屬性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的語彙基元。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The serialized token.</source>
          <target state="translated">序列化的權杖。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to XML.</source>
          <target state="translated">當在衍生類別中覆寫時，序列化至 XML 指定的安全性權杖。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">語彙基元必須是型別所衍生的類別處理。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">依預設這個方法會擲回&lt;xref:System.NotImplementedException&gt;例外狀況。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">覆寫這個方法以提供要序列化成 XML 的安全性權杖的邏輯。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">如果您覆寫這個方法，您也應該覆寫&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;屬性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML 寫入器。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的語彙基元。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>