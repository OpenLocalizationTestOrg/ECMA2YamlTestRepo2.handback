<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">374eb1b43b33ea113bf7babe1da894a751bf1790</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Management.Instrumentation.InstrumentationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc0836d753334b76864c2b17b9a3e338784c728e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f26e0b3e4d6fd2b6ba5058255556ca645075297b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that manage the lifetime and the model used for decoupled providers.</source>
          <target state="translated">提供方法，可管理存留期與低耦合提供者所使用的模型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</source>
          <target state="translated">注意︰ WMI.NET 程式庫目前被認為在最終狀態，而且沒有進一步開發之用，增強功能，或更新可供非安全性相關問題會影響這些程式庫。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>MI APIs<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.</source>
          <target state="translated"><bpt id="p1">[</bpt>MI Api<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept>適用於所有新的開發。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Decoupled providers are hosted by an application.</source>
          <target state="translated">低耦合提供者會裝載應用程式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Two methods can be used by the application to make instances of WMI classes available: publish/revoke or the callback method.</source>
          <target state="translated">將 WMI 類別的執行個體提供應用程式可以用兩種方法︰ 發佈/撤銷或回呼方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The callback method uses the &lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt; and &lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt; methods.</source>
          <target state="translated">回呼方法會使用&lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;和&lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;方法。&lt;/xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt; &lt;/xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the publish/revoke model, the WMI infrastructure provides default behavior for many of the methods you have to write yourself in the callback method.</source>
          <target state="translated">在發佈/revoke 模型中，WMI 基礎結構提供預設行為的許多方法，您不必自行撰寫在回呼方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These include the enumeration and bind methods.</source>
          <target state="translated">這些包括列舉型別，以及繫結方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this model, the application creates instances and publishes them.</source>
          <target state="translated">在此模型中，應用程式會建立執行個體，並將其發行。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The application is responsible for ensuring that the key properties of the classes are respected.</source>
          <target state="translated">應用程式會負責確保會遵守類別的索引鍵的屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The application is also responsible for deleting instances.</source>
          <target state="translated">應用程式也會負責刪除執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the callback model, the WMI infrastructure expects the application to have methods that handle enumeration, binding and any other methods required to implement the functionality of the provider.</source>
          <target state="translated">在回呼模型中，是 WMI 基礎結構必須要有應用程式有處理列舉型別、 繫結和實作的提供者的功能所需的任何其他方法的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It calls into the application for this functionality and fails if it does not exist or is not implemented properly.</source>
          <target state="translated">它呼叫這項功能的應用程式，而如果它不存在或未正確實作會失敗。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The application registers the type of its WMI classes with the infrastructure by calling &lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt; and indicates that it no longer wants the WMI classes exposed by calling &lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;.</source>
          <target state="translated">應用程式與基礎結構註冊其 WMI 類別的類型，藉由呼叫&lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;，並指出它不再想要藉由呼叫&lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;.&lt;/xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;公開的 WMI 類別&lt;/xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Makes an instance of a provider available within the WMI infrastructure.</source>
          <target state="translated">WMI 基礎結構可讓提供者執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An instance of the class that implements the provider to publish.</source>
          <target state="translated">若要發行的提供者會實作類別的執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Registers an assembly with the WMI infrastructure.</source>
          <target state="translated">WMI 基礎結構中註冊組件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The assembly to register.</source>
          <target state="translated">要註冊的組件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Registers a class with the WMI infrastructure.</source>
          <target state="translated">使用 WMI 基礎結構，註冊類別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the class.</source>
          <target state="translated">類別的類型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</source>
          <target state="translated">執行個體的目前可用的提供者，並使其無法 WMI 基礎結構內。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of the class that implements the provider to revoke.</source>
          <target state="translated">若要撤銷提供者會實作類別的執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Unregisters an assembly currently registered with the WMI infrastructure.</source>
          <target state="translated">移除註冊組件目前已向 WMI 基礎結構。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The registered assembly to unregister.</source>
          <target state="translated">若要取消註冊已註冊的組件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Unregisters a class registered with the WMI infrastructure.</source>
          <target state="translated">取消註冊登錄 WMI 基礎結構類別。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The registered type to unregister.</source>
          <target state="translated">若要取消註冊已註冊的型別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>