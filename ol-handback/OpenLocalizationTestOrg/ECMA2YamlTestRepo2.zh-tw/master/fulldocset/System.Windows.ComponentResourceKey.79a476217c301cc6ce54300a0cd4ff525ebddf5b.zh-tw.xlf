<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b55420315afeb95c0db4f46e0e0d108b051e98dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.ComponentResourceKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82905670938212d687b75d51e724b0ec5ffb0008</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc9948f370cf5b64dc9f9991eff2838fac36d5fc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</source>
          <target state="translated">定義或參考外部組件，與其他識別項中的類別名稱為基礎的資源索引鍵。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>的詳細資訊，請參閱<bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</source>
          <target state="translated">這個類別會實作可用於建立組件加上識別項類型為基礎的索引鍵的物件類型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because you define or reference the type, you do not need to request a specific &lt;xref:System.Windows.ResourceDictionary&gt;, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey.</source>
          <target state="translated">因為您定義或參考類型，您不需要要求特定&lt;xref:System.Windows.ResourceDictionary&gt;，而且多個資源集可以存在於組件，每個差異及其 ComponentResourceKey 的類型。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are two ways to define a ComponentResourceKey.</source>
          <target state="translated">有兩種方式可定義 ComponentResourceKey。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; that exists in the external resource assembly, and a &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;.</source>
          <target state="translated">如果您想要更容易存取的索引鍵，您可以在控制項類別程式碼會傳回 ComponentResourceKey，&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;存在於外部資源組件和&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;.&lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;&lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;建構定義靜態屬性</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</source>
          <target state="translated">索引鍵用於組件中定義控制項的替代預設樣式，藉由交換自訂原始的外部資源組件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also define a named resource part within a larger control style or template to expose a customization entry point.</source>
          <target state="translated">您也可以定義具名的資源部分在較大的控制項樣式或範本來公開自訂進入點。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you are defining a theme resource dictionary for your control.</source>
          <target state="translated">這是特別有用，如果您要為控制項定義的主題資源字典。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](../Topic/ComponentResourceKey%20Markup%20Extension.md)</ept> in verbose syntax directly to create a loose instance of the key.</source>
          <target state="translated">您也可以使用<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](../Topic/ComponentResourceKey%20Markup%20Extension.md)</ept>詳細語法來建立機碼的鬆散執行個體中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</source>
          <target state="translated">這非常有用，如果您想要宣告私用的資源，以及自訂不易搜尋的其他組件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文字使用方式，請參閱 &lt; 備註 &gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default constructor is not generally used, because a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; value and &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; value are required for proper initialization.</source>
          <target state="translated">預設建構函式使用，因為&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;值和&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;值所需的正確初始化。&lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; &lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default constructor exists primarily to support <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in named parameter form.</source>
          <target state="translated">預設建構函式存在主要是為了支援<bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>具名的參數形式的 XAML 用法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> , specifying the &lt;xref:System.Type&gt; that defines the key, and an object to use as an additional resource identifier.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，並指定&lt;xref:System.Type&gt;，定義索引鍵，並以物件來做為額外的資源識別碼。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This constructor exist for two scenarios, with the first scenario being the most important:      -   Supports creating a &lt;xref:System.Windows.ComponentResourceKey&gt; that is then exposed as a public static field on a custom control class.</source>
          <target state="translated">這個建構函式存在兩個案例中，最重要的第一個案例:-建立的&lt;xref:System.Windows.ComponentResourceKey&gt;則會公開為自訂控制項類別上的公用靜態欄位&lt;/xref:System.Windows.ComponentResourceKey&gt;的支援</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This simplifies a control's access to its own defined resources in the template through <ph id="ph1">`{x:Static}`</ph> usages for template property values.</source>
          <target state="translated">這樣可簡化自己定義的資源，透過範本中的控制存取<ph id="ph1">`{x:Static}`</ph>範本的屬性值的使用方式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   Supports <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</source>
          <target state="translated">-支援<bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>形式位置參數，也就是其中一種技術可供參考元件資源的協力廠商的 XAML 用法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type that defines the resource key.</source>
          <target state="translated">定義資源的索引鍵的型別。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A unique identifier to differentiate this <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from others associated with the <ph id="ph1">`typeInTargetAssembly`</ph> type.</source>
          <target state="translated">唯一識別碼來區別這<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與相關聯的其他人提供的<ph id="ph1">`typeInTargetAssembly`</ph>型別。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</source>
          <target state="translated">取得組件物件，這個物件表示哪些組件的字典中尋找此索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The retrieved assembly, as a reflection class.</source>
          <target state="translated">擷取的組件，以反映類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Determines whether the provided object is equal to the current <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">判斷所提供的物件是否等於目前<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Two keys are equal if they both have the same values for all their immediate settable properties (&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;, &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;).</source>
          <target state="translated">兩個索引鍵是否相等，如果兩者有相同的所有其立即可設定屬性值 (&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;， &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;)。&lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; &lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Object to compare with the current <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要比較與目前物件<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果物件相等。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns a hash code for this <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回這個雜湊程式碼<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">帶正負號的 32 位元整數值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets a unique identifier to differentiate this key from others associated with this type.</source>
          <target state="translated">取得或設定與這個類型相關聯的其他人提供的區分此金鑰的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>的詳細資訊，請參閱<bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Typically, the string used for a ResourceId value conforms to the <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">一般而言，用於 ResourceId 值在字串符合<bpt id="p1">[</bpt>XamlName 文法<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_2"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_2"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文字使用方式，請參閱 &lt; 備註 &gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A unique identifier.</source>
          <target state="translated">唯一的識別項。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically this is a string.</source>
          <target state="translated">一般而言，這是字串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the string representation of a <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得字串表示<bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The string representation.</source>
          <target state="translated">字串表示。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Type&gt; that defines the resource key.</source>
          <target state="translated">取得或設定&lt;xref:System.Type&gt;定義資源索引鍵。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>的詳細資訊，請參閱<bpt id="p1">[</bpt>ComponentResourceKey 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.ComponentResourceKey&gt; element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</source>
          <target state="translated">&lt;xref:System.Windows.ComponentResourceKey&gt;項目可由自訂元件來定義從目標組件包含的型別為基礎的外部組件來存取資源的索引鍵。&lt;/xref:System.Windows.ComponentResourceKey&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Custom components often define new types which must be in the assembly where the resource is located.</source>
          <target state="translated">自訂元件通常會定義新的類型必須是資源所在的組件中。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a &lt;xref:System.Windows.ComponentResourceKey&gt;.</source>
          <target state="translated">通常這些型別沒有其他實作，才能滿足的查閱需求&lt;xref:System.Windows.ComponentResourceKey&gt;.&lt;/xref:System.Windows.ComponentResourceKey&gt;只存在類型</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_3"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_3"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文字使用方式，請參閱 &lt; 備註 &gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The type that defines the resource key.</source>
          <target state="translated">定義資源的索引鍵的型別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>