<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b963e413235703a0285151334ad096126f40475b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.MarshalByValueComponent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38def1e1270fe0c87a8550dc044f44330433483</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f0fe29b5464b388272ab474d6427c236458d22e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and provides the base implementation for remotable components that are marshaled by value (a copy of the serialized object is passed).</source>
          <target state="translated">實作<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，並提供封送處理的值 （傳遞一份已序列化的物件） 的遠端執行元件的基底實作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">元件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">每個元件的容器中，容器會建立用來管理元件的網站。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">元件互動主要是透過容器提供與其容器&lt;xref:System.ComponentModel.ISite&gt;，這是特定容器中，每一個元件資訊的儲存機制。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">元件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">每個元件的容器中，容器會建立用來管理元件的網站。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">元件互動主要是透過容器提供與其容器&lt;xref:System.ComponentModel.ISite&gt;，這是特定容器中，每一個元件資訊的儲存機制。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the container for the component.</source>
          <target state="translated">取得元件的容器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the component's container, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the component does not have a site.</source>
          <target state="translated">實作<bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面代表元件的容器或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果元件不存在網站。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the component is currently in design mode.</source>
          <target state="translated">取得值，指出元件目前是否處於設計模式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the component does not have a site, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果元件並沒有站台，這個方法一律會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component is in design mode; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果元件是在設計模式。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">當您完成使用&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;呼叫 Dispose</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法會使&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;中無法使用的狀態。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; was occupying.</source>
          <target state="translated">在呼叫 Dispose 之後，您必須釋放所有參考&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;所佔用。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 永遠呼叫 Dispose 之後，再放開您的最後一個參考至&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;物件的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;叫用<ph id="ph1">`Dispose`</ph>與<ph id="ph2">`disposing`</ph>設<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;參考。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">`Dispose()`</ph>每個參考物件的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds an event handler to listen to the Disposed event on the component.</source>
          <target state="translated">加入事件處理常式來接聽元件上清除的事件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the list of event handlers that are attached to this component.</source>
          <target state="translated">取得事件處理常式附加至這個元件的清單。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the delegates for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>針對此元件提供的委派。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">取得&lt;xref:System.IServiceProvider&gt;.&lt;/xref:System.IServiceProvider&gt;的實施者</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on designer services you can use, see <bpt id="p1">[</bpt>Design-Time Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關您可以使用設計工具服務的詳細資訊，請參閱<bpt id="p1">[</bpt>設計階段架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of service you want.</source>
          <target state="translated">A&lt;xref:System.Type&gt;代表您想要的服務類型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;，代表&lt;xref:System.IServiceProvider&gt;.&lt;/xref:System.IServiceProvider&gt;的實施者&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the site of the component.</source>
          <target state="translated">取得或設定元件的站台。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A valid value for this property - that is, the value is not <ph id="ph1">`null`</ph>, indicates that the component has been added to a container.</source>
          <target state="translated">有效的值，這個屬性-也就是值不是<ph id="ph1">`null`</ph>，表示元件已加入至容器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the value of this property is <ph id="ph1">`null`</ph>, the property indicates that the component is being removed from a container.</source>
          <target state="translated">當這個屬性的值是<ph id="ph1">`null`</ph>，屬性會指出從容器移除元件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, this property does not remove the component from the container.</source>
          <target state="translated">不過，這個屬性不會移除該元件的容器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the site of the component.</source>
          <target state="translated">實作<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面代表元件的網站。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">傳回&lt;xref:System.String&gt;包含名稱的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，若有的話。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
          <target state="translated">這個方法不應該覆寫。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; may or may not have a name.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Component&gt;可能或可能沒有名稱。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.ComponentModel.Component&gt; is given a name, the name is unique among other &lt;xref:System.ComponentModel.Component&gt; objects within its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">如果&lt;xref:System.ComponentModel.Component&gt;是指定名稱之後，名稱是唯一的其他&lt;xref:System.ComponentModel.Component&gt;物件，其&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;內&lt;/xref:System.ComponentModel.Component&gt;&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.ISite&gt; stores the &lt;xref:System.ComponentModel.Component&gt;'s name.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ISite&gt;儲存&lt;xref:System.ComponentModel.Component&gt;的名稱。&lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; can only have a &lt;xref:System.ComponentModel.ISite&gt; if it has been added to an &lt;xref:System.ComponentModel.IContainer&gt; and the &lt;xref:System.ComponentModel.IContainer&gt; assigns an &lt;xref:System.ComponentModel.ISite&gt; to it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component&gt;&lt;xref:System.ComponentModel.ISite&gt;如果它已經加入&lt;xref:System.ComponentModel.IContainer&gt;，並&lt;xref:System.ComponentModel.IContainer&gt;指派&lt;xref:System.ComponentModel.ISite&gt;該&lt;/xref:System.ComponentModel.ISite&gt;&lt;/xref:System.ComponentModel.IContainer&gt;&lt;/xref:System.ComponentModel.IContainer&gt;&lt;/xref:System.ComponentModel.ISite&gt;只能有&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含名稱的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，若有的話。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is unnamed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>未命名。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>