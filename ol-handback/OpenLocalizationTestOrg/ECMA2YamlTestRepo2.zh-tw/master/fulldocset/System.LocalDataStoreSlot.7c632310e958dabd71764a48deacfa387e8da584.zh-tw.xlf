<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0f12d82fc6281247f79722150a1bccf98d10873</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.LocalDataStoreSlot.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdf18403dcf0f4c709542a7d77ed0e435538e1de</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2d6dc458396a116260ca6ddbd9ed520b6515596</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a memory slot to store local data.</source>
          <target state="translated">封裝記憶體位置來儲存本機資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.</source>
          <target state="translated">.NET Framework 提供兩種機制使用執行緒區域儲存區 (TLS): 執行緒相關的靜態欄位和資料位置。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   Thread-relative static fields are <ph id="ph1">`static`</ph> fields (<ph id="ph2">`Shared`</ph> fields in Visual Basic) that are marked with the &lt;xref:System.ThreadStaticAttribute&gt; attribute.</source>
          <target state="translated">-執行緒相關的靜態欄位是<ph id="ph1">`static`</ph>欄位 (<ph id="ph2">`Shared`</ph>在 Visual Basic 中的欄位)，以標記&lt;xref:System.ThreadStaticAttribute&gt;屬性。&lt;/xref:System.ThreadStaticAttribute&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>They provide better performance than data slots, and enable compile-time type checking.</source>
          <target state="translated">可提供更佳的效能比資料位置，並且可編譯時間型別檢查。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   Data slots are slower and more awkward to use than thread-relative static fields.</source>
          <target state="translated">資料位置較慢，更難以使用以外的執行緒相關的靜態欄位。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Also, data is stored as type &lt;xref:System.Object&gt;, so you must cast it to the correct type before using it.</source>
          <target state="translated">此外，資料會儲存為類型&lt;xref:System.Object&gt;，因此您必須先轉換成正確的類型，才能使用它。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, you can use data slots when you have insufficient information at compile time to allocate static fields.</source>
          <target state="translated">不過，您可以使用資料位置，當您有足夠的資訊，在編譯時期配置的靜態欄位。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about using TLS, see <bpt id="p1">[</bpt>Thread Local Storage: Thread-Relative Static Fields and Data Slots<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關如何使用 TLS 的詳細資訊，請參閱<bpt id="p1">[</bpt>執行緒區域儲存區︰ 執行緒相關的靜態欄位和資料位置<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots.</source>
          <target state="translated">同樣地，.NET Framework 提供兩種機制使用內容的本機儲存體︰ 內容的相對靜態欄位和資料位置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Context-relative static fields are static fields that are marked with the &lt;xref:System.ContextStaticAttribute&gt; attribute.</source>
          <target state="translated">內容相關的靜態欄位都是靜態的欄位，以標記&lt;xref:System.ContextStaticAttribute&gt;屬性。&lt;/xref:System.ContextStaticAttribute&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.</source>
          <target state="translated">使用這兩個機制之間的取捨的類似於使用相對執行緒的靜態欄位和資料位置之間的利弊。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The LocalDataStoreSlot structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively.</source>
          <target state="translated">LocalDataStoreSlot 結構做為執行緒本機存放區記憶體機制，並分別儲存執行緒特定與特定內容相關的資料，可以使用的內容。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The common language runtime allocates a multi-slot data store array to each process when it is created.</source>
          <target state="translated">建立時，common language runtime 會配置每個處理序的多位置資料存放區陣列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.</source>
          <target state="translated">執行緒或內容物件就會過期之後，重複使用不同的函式來配置資料存放區中的資料位置、 儲存和擷取資料中的值位置，以及釋放資料位置的執行緒或內容呼叫。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data slots are unique per thread or context; their values are not shared between the thread or context objects.</source>
          <target state="translated">每個執行緒或內容; 獨有的資料位置未在執行緒或內容物件之間共用它們的值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Data slots can be allocated by a name or by an index number.</source>
          <target state="translated">依名稱或索引編號，就可以配置資料位置。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about storing local data, see &lt;xref:System.Threading.Thread&gt; or &lt;xref:System.Runtime.Remoting.Contexts.Context&gt;.</source>
          <target state="translated">如需儲存本機資料的詳細資訊，請參閱&lt;xref:System.Threading.Thread&gt;或&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;.&lt;/xref:System.Runtime.Remoting.Contexts.Context&gt; &lt;/xref:System.Threading.Thread&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The LocalDataStoreSlot class is used with methods such as &lt;xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName&gt;, &lt;xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName&gt;, &lt;xref:System.Threading.Thread.GetData%2A?displayProperty=fullName&gt;, and &lt;xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName&gt;; it does not have any methods of its own that you need to use.</source>
          <target state="translated">這類的 LocalDataStoreSlot 類別使用的方法&lt;xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName&gt;， &lt;xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName&gt;， &lt;xref:System.Threading.Thread.GetData%2A?displayProperty=fullName&gt;，和&lt;xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName&gt;; 它沒有任何您需要使用它自己的方法。&lt;/xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.Thread.GetData%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <bpt id="p1">&lt;xref href="System.LocalDataStoreSlot"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">確認釋出資源，並在記憶體回收行程回收時執行其他清除作業<bpt id="p1">&lt;xref href="System.LocalDataStoreSlot"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The garbage collector calls Finalize when the current object is ready to be finalized.</source>
          <target state="translated">記憶體回收行程呼叫 Finalize 準備最終處理而目前的物件時。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>