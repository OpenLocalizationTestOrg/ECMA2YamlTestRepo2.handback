<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08a0c21b43d81b7ec0fa14c20c194ee5330ec10a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.DesignerTransaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72ce88bc6de1785bb2a64e5a617a24ab8cedbfdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6048d255421b46381c032019ed37779ba8a27805</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.</source>
          <target state="translated">提供用於群組一系列設計階段動作以改善效能，以及啟用大部分變更類型以復原的方式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transactions can track actions that can be undone later.</source>
          <target state="translated">交易可以追蹤稍後可以復原的動作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Changes made during a transaction can be reversed by canceling a transaction, which automatically attempts to reverse each change by setting each changed property to its pre-change value.</source>
          <target state="translated">藉由取消交易，會自動嘗試將每個已變更的屬性設定為其變更前的值來還原每個變更，便可反轉交易期間所做的變更。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Transactions can also improve performance during a series of operations by deferring updates to the display until the completion of the transaction.</source>
          <target state="translated">交易也可以將一系列的作業期間的效能改善可以延遲顯示更新，直到交易完成為止。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When a transaction is in progress, some components defer their processing until the transaction has completed by listening to the &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt; and &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; events.</source>
          <target state="translated">當交易正在進行中時，某些元件延遲其處理，直到交易完成透過接聽&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;和&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;事件。&lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Properties window, for example, does not update its display after a transaction has opened until the transaction has closed.</source>
          <target state="translated">[屬性] 視窗中，例如，不會更新它的顯示畫面直到異動關閉開啟的交易之後。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To use transactions for reversible or multiple operations, have your designer create a DesignerTransaction for each operation or series of operations which should be reversible.</source>
          <target state="translated">若要使用的交易復原或多個作業，已建立 DesignerTransaction 針對每個作業或系列的作業，這應該是可還原至設計工具。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Be careful not to perform actions outside the transactions that might prevent a sequence of undo events from completing successfully.</source>
          <target state="translated">請小心，不要執行動作可能會讓復原事件序列無法順利完成的交易之外。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can obtain a new DesignerTransaction by calling the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; method of an &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.</source>
          <target state="translated">您可以藉由呼叫&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;方法&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;來取得新 DesignerTransaction</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Be sure to obtain each DesignerTransaction from the active &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; in order to correctly integrate with the designer transaction processing mechanism, rather than creating a new DesignerTransaction directly.</source>
          <target state="translated">請務必從作用中取得每個 DesignerTransaction&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;才能正確地整合與設計工具的交易處理機制，而不是直接建立新的 DesignerTransaction。&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To perform an action within a transaction, you must first create a transaction.</source>
          <target state="translated">若要執行的動作，在交易中，您必須先建立交易。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Then you must call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt; method before each change or set of changes occurs, and the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; method after each change or set of changes occur.</source>
          <target state="translated">您必須呼叫&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;方法之前發生每個變更或一組變更，而&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;方法在每個變更或一組變更之後發生。&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Finally, complete and close the transaction by calling the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt; method.</source>
          <target state="translated">最後，完成，並藉由呼叫關閉交易&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When making changes to property values, use the &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; method of a &lt;xref:System.ComponentModel.PropertyDescriptor&gt;, which calls the component change methods of the &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt; and creates a DesignerTransaction representing the change automatically.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 屬性值變更時，使用&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;方法&lt;xref:System.ComponentModel.PropertyDescriptor&gt;，呼叫的元件變更方法&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;並建立代表變更自動 DesignerTransaction。&lt;/xref:System.ComponentModel.Design.IComponentChangeService&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To perform a transaction, complete the following steps:      1.</source>
          <target state="translated">若要執行的交易，請完成下列步驟︰ 1。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; to obtain a DesignerTransaction that can be used to control the transaction.</source>
          <target state="translated">呼叫&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;取得可以用來控制交易 DesignerTransaction。&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Within a <ph id="ph1">`try`</ph> block, for each action that you want to track with a DesignerTransaction, call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt; method, make the change or changes, then call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; method to signal that the change or changes have been made.</source>
          <target state="translated">內<ph id="ph1">`try`</ph>區塊中的，針對您想要追蹤與 DesignerTransaction 時，呼叫每個動作&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;方法，進行變更或變更，然後呼叫&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;方法來通知有已進行變更。&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To complete the transaction, call &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt; from within a <ph id="ph1">`finally`</ph> block.</source>
          <target state="translated">若要完成交易，呼叫&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;從<ph id="ph1">`finally`</ph>區塊。&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In C#, you can use the <ph id="ph1">`using`</ph> statement rather than a <ph id="ph2">`try/finally`</ph> block, such as in the following example.</source>
          <target state="translated">在 C# 中，您可以使用<ph id="ph1">`using`</ph>陳述式而非<ph id="ph2">`try/finally`</ph>區塊，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   using (host.CreateTransaction() {   // Insert your code here.   }   ```</ph>       To cancel and attempt to roll back a transaction before it has been committed, call the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">```   using (host.CreateTransaction() {   // Insert your code here.   }   ```</ph>若要取消，並嘗試回復的交易已認可之前，請呼叫&lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt; method is invoked, the actions tracked by the DesignerTransaction are reversed to attempt to roll back the changes.</source>
          <target state="translated">當&lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;叫用方法時，DesignerTransaction 所追蹤的動作會反轉嘗試回復的變更。&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To undo actions that occurred as part of earlier transactions, you must use the undo command provided by the development environment.</source>
          <target state="translated">若要復原的先前交易的一部分時發生的動作，您必須使用開發環境所提供的 [復原] 命令。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with no description.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別沒有描述。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified transaction description.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的異動描述。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This constructor initializes the transaction with the specified description.</source>
          <target state="translated">這個建構函式初始化具有指定描述交易。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A description for this transaction.</source>
          <target state="translated">這個異動的描述。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Cancels the transaction and attempts to roll back the changes made by the events of the transaction.</source>
          <target state="translated">取消異動，並嘗試復原異動事件所做的變更。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the transaction was canceled.</source>
          <target state="translated">取得值，表示異動是否已取消。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</source>
          <target state="translated">當設計工具交易被取消時，交易處理機制會嘗試回復已到目前為止在交易中的變更。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</source>
          <target state="translated">成功是每個作業類型，這類因素，是否與任何相關的程式碼狀態干擾其他作業，以及是否一連串預期的作業無法完成。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the transaction was canceled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果交易被取消;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Commits this transaction.</source>
          <target state="translated">認可這個異動。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">設計工具的交易認可時，就會被視為交易，而不會追蹤進一步的變更。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Once a transaction has been committed, further calls to this method do nothing.</source>
          <target state="translated">一旦交易已認可，進一步呼叫此方法執行任何動作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Always call this method after creating a transaction to ensure that the transaction closes properly.</source>
          <target state="translated">建立交易以確認交易會適當地關閉之後，務必呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the transaction was committed.</source>
          <target state="translated">取得值，指出是否已認可的交易。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">設計工具的交易認可時，就會被視為交易，而不會追蹤進一步的變更。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the transaction was committed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果交易已認可。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets a description for the transaction.</source>
          <target state="translated">取得異動的描述。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A transaction can have a description that is useful in identifying the nature of the operation or operations.</source>
          <target state="translated">交易可以有一段描述以在識別或多個作業的本質非常有用。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A description for the transaction.</source>
          <target state="translated">異動的描述。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;叫用<ph id="ph1">`Dispose`</ph>與<ph id="ph2">`disposing`</ph>設<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數是<ph id="ph2">`true`</ph>，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;參考。&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">`Dispose()`</ph>每個參考物件的方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with this object.</source>
          <target state="translated">釋放這個物件相關聯的資源。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This override commits this transaction if it was not already committed.</source>
          <target state="translated">如果還沒有認可，此覆寫會認可這個異動。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; and cleans up resources by calling <ph id="ph1">`Dispose(false)`</ph>.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;並清除資源，藉由呼叫<ph id="ph1">`Dispose(false)`</ph>。&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`Dispose(Boolean)`</ph> to customize the cleanup.</source>
          <target state="translated">覆寫<ph id="ph1">`Dispose(Boolean)`</ph>以自訂清除。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">應用程式程式碼不應該呼叫這個方法。物件的<ph id="ph1">`Finalize`</ph>方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Finalize 方法和解構函式<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清除 Unmanaged 資源上<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>，和<bpt id="p3">[</bpt>覆寫 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</source>
          <target state="translated">當設計工具交易被取消時，交易處理機制會嘗試回復已到目前為止在交易中的變更。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</source>
          <target state="translated">成功是每個作業類型，這類因素，是否與任何相關的程式碼狀態干擾其他作業，以及是否一連串預期的作業無法完成。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Performs the actual work of committing a transaction.</source>
          <target state="translated">執行認可異動的實際工作。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">設計工具的交易認可時，就會被視為交易，而不會追蹤進一步的變更。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When a transaction is disposed, it is committed.</source>
          <target state="translated">當處置交易時，它就會認可。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>