<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f93ce7e9b2a0f9b0985803f63e6c190a6b0214f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.Binding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">061010c4528d07f4adb8351b37a257c152cf4c71</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17459f3f91ae940db9d8aabd12cd8d467a3666fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> elements), and any data source (for example, a database, an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> file, or any object that contains data).</source>
          <target state="translated">提供的連接屬性的繫結目標物件的繫結定義的高層級存取 (一般而言，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>項目)，和任何資料來源 (例如資料庫、<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>檔案或任何包含資料的物件)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>資料繫結會提供簡單且一致的方式呈現，並與資料互動的應用程式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Data binding enables you to synchronize the values of the properties of two different objects.</source>
          <target state="translated">資料繫結可讓您同步處理兩個不同物件的屬性值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To establish a binding, use the Binding class or one of the other classes that inherit &lt;xref:System.Windows.Data.BindingBase&gt;.</source>
          <target state="translated">若要建立的繫結，使用的繫結類別或其中一個繼承&lt;xref:System.Windows.Data.BindingBase&gt;.&lt;/xref:System.Windows.Data.BindingBase&gt;的類別</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</source>
          <target state="translated">不論什麼物件繫結，您的資料來源的本質，每個繫結會遵循模型，如下圖所示。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Basic data binding diagram<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>Basic data binding diagram<ept id="p2">")</ept>       The figure demonstrates the following fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.</source>
          <target state="translated"><bpt id="p1">![</bpt>基本資料繫結圖表<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>基本資料繫結圖表<ept id="p2">")</ept>圖示範下列基本<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>資料繫結的概念。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   Each binding typically has these four components: a binding target object, a target property, a binding source, and a &lt;xref:System.Windows.Data.Binding.Path%2A&gt; to the value in the binding source to use.</source>
          <target state="translated">-每個繫結通常會有四個元件︰ 繫結目標物件、 目標屬性、 繫結來源和&lt;xref:System.Windows.Data.Binding.Path%2A&gt;中要使用的繫結來源值。&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, if you want to bind the content of a &lt;xref:System.Windows.Controls.TextBox&gt; to the Name property of an Employee object, your target object is the &lt;xref:System.Windows.Controls.TextBox&gt;, the target property is the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property, the value to use is Name, and the source object is the Employee object.</source>
          <target state="translated">例如，如果您想要繫結的內容&lt;xref:System.Windows.Controls.TextBox&gt;Employee 物件的 Name 屬性，您的目標物件是&lt;xref:System.Windows.Controls.TextBox&gt;，目標屬性是&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;屬性，要使用的值是名稱，而來源物件是 Employee 物件。&lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   The target property must be a dependency property.</source>
          <target state="translated">-目標屬性必須是相依性屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This also means that you cannot bind a field.</source>
          <target state="translated">這也表示您無法繫結欄位。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Most properties of &lt;xref:System.Windows.UIElement&gt; objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</source>
          <target state="translated">大部分屬性&lt;xref:System.Windows.UIElement&gt;物件是相依性屬性，大多數相依性屬性，唯讀的除了預設支援資料繫結。&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(Only &lt;xref:System.Windows.DependencyObject&gt; types can define dependency properties and all &lt;xref:System.Windows.UIElement&gt; objects derive from &lt;xref:System.Windows.DependencyObject&gt;.)      -   Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object.</source>
          <target state="translated">（僅限&lt;xref:System.Windows.DependencyObject&gt;類型可以定義相依性屬性和所有&lt;xref:System.Windows.UIElement&gt;物件都衍生自&lt;xref:System.Windows.DependencyObject&gt;）。     -雖然沒有指定在圖中，但請注意繫結來源物件不受限制的自訂<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>物件。&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>資料繫結的形式支援資料<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>物件和<ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To provide some examples, your binding source may be a &lt;xref:System.Windows.UIElement&gt;, any list object, a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> data.</source>
          <target state="translated">若要提供一些範例，可能是繫結來源&lt;xref:System.Windows.UIElement&gt;，任何清單物件，<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>與其相關聯物件<ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph>資料、 Web 服務或 XmlNode，其中包含您<ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>資料。&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property to specify the direction of the data flow.</source>
          <target state="translated">使用&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;屬性，以指定資料流程的方向。&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">若要偵測來源變更單向或雙向繫結中，來源必須實作適當的屬性變更通知機制，例如&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>How to︰ 實作屬性變更告知<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property specifies the timing of source updates.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;屬性會指定來源更新的時機。&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see "Basic Data Binding Concepts" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 基本資料繫結概念 &gt; 中<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>declaration<ept id="p3">*</ept>    Zero or more attribute-assignment clauses separated by commas (,).</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>宣告<ept id="p3">*</ept>以逗號 （，） 分隔的零個或多個屬性指派子句。      </target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Binding Declarations Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>繫結標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>繫結宣告概觀<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an initial path.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用初始路徑的類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The initial &lt;xref:System.Windows.Data.Binding.Path*&gt; for the binding.</source>
          <target state="translated">初始&lt;xref:System.Windows.Data.Binding.Path*&gt;繫結。&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">加入的處理常式&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">這個方法支援附加的事件的使用中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>接聽事件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">要加入處理常式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">加入的處理常式&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">這個方法支援附加的事件的使用中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>接聽事件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">要加入處理常式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets opaque data passed to the asynchronous data dispatcher.</source>
          <target state="translated">取得或設定傳遞至非同步資料發送器的不透明資料。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Data passed to the asynchronous data dispatcher.</source>
          <target state="translated">資料傳遞至非同步資料發送器。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to evaluate the &lt;xref:System.Windows.Data.Binding.Path*&gt; relative to the data item or the <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得或設定值，這個值，指出是否要評估&lt;xref:System.Windows.Data.Binding.Path*&gt;相對於資料的項目或<bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The normal behavior (when this property is <ph id="ph1">`false`</ph>) includes special treatment for &lt;xref:System.Windows.Data.DataSourceProvider&gt; objects.</source>
          <target state="translated">正常行為 (當這個屬性是<ph id="ph1">`false`</ph>) 包含特殊處理方式&lt;xref:System.Windows.Data.DataSourceProvider&gt;物件。&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this case, the binding engine evaluates the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; relative to the object obtained from the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property.</source>
          <target state="translated">在此情況下，繫結引擎會評估&lt;xref:System.Windows.Data.Binding.Path%2A&gt;相對於物件取自&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;屬性。&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; &lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In addition, the binding listens for the &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event and reacts accordingly.</source>
          <target state="translated">此外，繫結會接聽&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;事件並據以回應。&lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`true`</ph> overrides this behavior and gives the binding access to properties of the &lt;xref:System.Windows.Data.DataSourceProvider&gt; object itself.</source>
          <target state="translated">此屬性設定為<ph id="ph1">`true`</ph>會覆寫此行為，並提供繫結存取屬性&lt;xref:System.Windows.Data.DataSourceProvider&gt;物件本身。&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to evaluate the path relative to the data item itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要評估與資料項目本身; 相對路徑否則， <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets the converter to use.</source>
          <target state="translated">取得或設定要使用的轉換子。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</source>
          <target state="translated">繫結，會隱含地使用嘗試執行類型轉換的來源值與目標值之間的預設轉換子。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a conversion cannot be made, the default converter returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果無法進行轉換，則預設值轉換器會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you want to associate a custom value converter with a binding, you should create a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface and supply implementations for the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated">如果您想要與繫結產生關聯的自訂值轉換器，您應該建立一個類別，實作&lt;xref:System.Windows.Data.IValueConverter&gt;介面，並提供實作&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;和&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;方法。&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</source>
          <target state="translated">值轉換器可以將資料從一個類型變更為另一個、 翻譯文化特性的詳細資料，例如字元集，或修改其簡報的其他層面。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For examples of typical conversion scenarios, see "Data Conversion" in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">一般轉換案例的範例，請參閱 「 資料轉換 」，在<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>    A resource reference to a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface, which includes implementations of the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>實作的類別資源參考&lt;xref:System.Windows.Data.IValueConverter&gt;介面，其中包含實作&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;和&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;方法。&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter&gt;      </target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">若要參考的值轉換器，請使用<bpt id="p1">[</bpt>StaticResource 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型別的值<bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture in which to evaluate the converter.</source>
          <target state="translated">取得或設定要在其中評估轉換器的文化特性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you do not set this property, the binding engine uses the <ph id="ph1">`Language`</ph> property of the binding target object.</source>
          <target state="translated">如果您未設定這個屬性，就會使用繫結引擎<ph id="ph1">`Language`</ph>繫結目標物件的屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>這預設為"EN-US"或繼承自 頁面上，根項目 （或任何項目） 的值，如果其中一個已明確設定。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For information about data conversion, see the Data Conversion section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">資料轉換的相關資訊，請參閱中的資料轉換 」 一節<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">取得或設定要傳遞至&lt;xref:System.Windows.Data.Binding.Converter*&gt;。&lt;/xref:System.Windows.Data.Binding.Converter*&gt;的參數</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the ConverterParameter property to specify how an object is converted.</source>
          <target state="translated">您可以使用 ConverterParameter 屬性來指定物件轉換的方式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This property passes additional information to a converter that you use on a binding.</source>
          <target state="translated">這個屬性會將其他資訊傳遞至您的繫結使用的轉換器。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When you specify a ConverterParameter, the value is passed to the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods as the <ph id="ph1">`parameter`</ph> parameter.</source>
          <target state="translated">當您指定 ConverterParameter 時，值會傳遞至&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;和&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;方法<ph id="ph1">`parameter`</ph>參數。&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>如何︰ 產生清單的繫結項目值以<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>That example shows an implementation of an &lt;xref:System.Windows.Data.IMultiValueConverter&gt; but the usage still applies.</source>
          <target state="translated">該範例會示範實作&lt;xref:System.Windows.Data.IMultiValueConverter&gt;但仍適用於使用方式。&lt;/xref:System.Windows.Data.IMultiValueConverter&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">要傳遞至&lt;xref:System.Windows.Data.Binding.Converter*&gt;。&lt;/xref:System.Windows.Data.Binding.Converter*&gt;的參數</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used as a returned value to instruct the binding engine not to perform any action.</source>
          <target state="translated">做為傳回的值，指示繫結引擎不要執行任何動作。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A binding source property or a converter can return DoNothing to instruct the binding engine not to perform any action.</source>
          <target state="translated">繫結來源屬性或轉換子可以傳回 DoNothing，指示繫結引擎不要執行任何動作。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next &lt;xref:System.Windows.Data.Binding&gt; in a &lt;xref:System.Windows.Data.PriorityBinding&gt;, or not to use the <ph id="ph1">`FallBackValue`</ph> or default value.</source>
          <target state="translated">例如，若要指示繫結引擎不要傳輸繫結目標時，不將移至下一個值&lt;xref:System.Windows.Data.Binding&gt;中&lt;xref:System.Windows.Data.PriorityBinding&gt;，或不使用<ph id="ph1">`FallBackValue`</ph>或預設值。&lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element to use as the binding source object.</source>
          <target state="translated">取得或設定要作為繫結來源物件的項目名稱。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This property is useful when you want to bind to the property of another element in your application.</source>
          <target state="translated">當您想要繫結至應用程式中的另一個項目的屬性，這個屬性是很有用。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, if you want to use a &lt;xref:System.Windows.Controls.Slider&gt; to control the height of another control in your application, or if you want to bind the &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt; of your control to the &lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt; property of your &lt;xref:System.Windows.Controls.ListBox&gt; control.</source>
          <target state="translated">例如，如果您想要使用&lt;xref:System.Windows.Controls.Slider&gt;來控制應用程式中的另一個控制項的高度或如果您想要繫結&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;至控制項的&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;屬性您&lt;xref:System.Windows.Controls.ListBox&gt;控制項。&lt;/xref:System.Windows.Controls.ListBox&gt; &lt;/xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt; &lt;/xref:System.Windows.Controls.ContentControl.Content%2A&gt; &lt;/xref:System.Windows.Controls.Slider&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">根據預設，繫結繼承所指定的資料內容<ph id="ph1">`DataContext`</ph>如果其中一個已設定的屬性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, the ElementName property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">不過，ElementName 內容是一種方式，您可以明確設定的來源&lt;xref:System.Windows.Data.Binding&gt;並覆寫繼承的資料內容。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 指定的繫結來源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.Source%2A&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt; properties of the &lt;xref:System.Windows.Data.Binding&gt; class also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;和&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;屬性&lt;xref:System.Windows.Data.Binding&gt;類別也可讓您設定的繫結來源明確。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, ElementName, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict might occur.</source>
          <target state="translated">不過，只有三個屬性，也就是項目名稱，其中&lt;xref:System.Windows.Data.Binding.Source%2A&gt;，和&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;、 應該設定為每個繫結，或可能會發生衝突。&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">如果繫結來源衝突，則這個屬性會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property or <bpt id="p2">[</bpt>x:Name Directive<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> of the element of interest.</source>
          <target state="translated">值<bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>屬性或<bpt id="p2">[</bpt>X:name 指示詞<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>感興趣的項目。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can refer to elements in code only if they are registered to the appropriate &lt;xref:System.Windows.NameScope&gt; through <bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">您可以參考程式碼中的項目才將其登錄到適當&lt;xref:System.Windows.NameScope&gt;透過<bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.</source>
          <target state="translated">傳回<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>附加到指定的物件的繫結所使用的命名空間管理員物件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">這個方法支援附加的屬性的使用方式的&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;附加屬性。&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> binding source (&lt;xref:System.Windows.Data.XmlDataProvider&gt; object).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>命名空間管理員才有意義的資料繫結中來自<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>繫結來源 (&lt;xref:System.Windows.Data.XmlDataProvider&gt;物件)。&lt;/xref:System.Windows.Data.XmlDataProvider&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling &lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt; on the binding, then this method will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果命名空間管理員沒有特別套用在原始資料來源建立或由後續呼叫&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;的繫結，則這個方法將傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method will always return <ph id="ph1">`null`</ph> if the data behind the binding is not <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">這個方法一律會傳回<ph id="ph1">`null`</ph>如果繫結背後的資料不是<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">要從中取得命名空間資訊的物件。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A returned object used for viewing <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.</source>
          <target state="translated">傳回的物件，用於檢視<ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>與傳遞的物件項目繫結相關的命名空間。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This object should be cast as <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">此物件應轉換為<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>參數不可為<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Used as the &lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt; of <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to indicate that an indexer property has changed.</source>
          <target state="translated">做為&lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;的<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> ，指出索引子屬性已變更。&lt;/xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should get and set values asynchronously.</source>
          <target state="translated">取得或設定值，指出是否<bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>應該取得並設定值，以非同步的方式。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use the IsAsync property when the <ph id="ph1">`get`</ph> accessor of your binding source property might take a long time.</source>
          <target state="translated">使用 IsAsync 屬性時<ph id="ph1">`get`</ph>存取子，您的繫結來源屬性可能需要很長的時間。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>One example is an image property with a <ph id="ph1">`get`</ph> accessor that downloads from the Web.</source>
          <target state="translated">其中一個範例是以影像屬性<ph id="ph1">`get`</ph>從網路下載的存取子。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Setting IsAsync to <ph id="ph1">`true`</ph> avoids blocking the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> while the download occurs.</source>
          <target state="translated">若要設定 IsAsync<ph id="ph1">`true`</ph>可避免<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>下載進行時。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>While waiting for the value to arrive, the binding reports the &lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;, if one is available, or the default value of the binding target property.</source>
          <target state="translated">繫結會等待到達的值，報告&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;，如果有的話，或預設值繫結的目標屬性。&lt;/xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>However, there should not be many scenarios where you need to use the IsAsync property.</source>
          <target state="translated">不過，不應該有許多案例中您需要使用 IsAsync 屬性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph>指導方針，建議您不要定義速度較慢比欄位集的屬性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you are creating your class, consider handling extremely slow operations outside of the <ph id="ph1">`get`</ph> accessor and caching the result.</source>
          <target state="translated">當您建立您的類別時，請考慮將處理的速度非常慢作業之外的<ph id="ph1">`get`</ph>存取子和快取結果。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Choosing Between Properties and Methods<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>NIB︰ 選擇之間指定屬性和方法<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the direction of the data flow in the binding.</source>
          <target state="translated">取得或設定值，指出繫結中資料流程的方向。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To support &lt;xref:System.Windows.Data.BindingMode&gt; and &lt;xref:System.Windows.Data.BindingMode&gt; bindings, the underlying data must implement &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">若要支援&lt;xref:System.Windows.Data.BindingMode&gt;，而且&lt;xref:System.Windows.Data.BindingMode&gt;基礎資料繫結必須實作&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 實作屬性變更告知<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; bindings, you can control the target-to-source updates by setting the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property.</source>
          <target state="translated">如&lt;xref:System.Windows.Data.BindingMode&gt;或&lt;xref:System.Windows.Data.BindingMode&gt;繫結，您可以設定來控制目標到來源更新&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;屬性。&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information on the different binding modes, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關不同的繫結模式的詳細資訊，請參閱<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它會傳回目標相依性屬性的預設繫結模式值。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">不過，預設值則會為每個相依性屬性而有所不同。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">一般情況下，使用者可編輯的控制項屬性，例如文字方塊和核取方塊的屬性預設雙向繫結，而其他大多數屬性預設為單向繫結。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p1">*</bpt>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault<ept id="p1">*</ept>&gt; property.</source>
          <target state="translated">若要取得的屬性使用的屬性中繼資料是程式設計的方式，來判斷是否相依性屬性預設繫結單向或雙向&lt;&gt; <bpt id="p1">*</bpt>&gt;，然後檢查的布林值&lt;&gt; <ept id="p1">*</ept>&gt; 屬性。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">取得或設定值，指出是否引發&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;值從繫結目標轉送到繫結來源時的事件。&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event should be raised when the binding source value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;更新，否則繫結來源值時，應該引發事件<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">取得或設定值，指出是否引發&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;值從繫結來源轉送到繫結目標時的事件。&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event should be raised when the binding target value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;更新，否則繫結目標值時，應該引發事件<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event on the bound object.</source>
          <target state="translated">取得或設定值，指出是否引發&lt;xref:System.Windows.Controls.Validation.Error&gt;附加繫結物件上的事件。&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the binding has &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</source>
          <target state="translated">如果繫結具有&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;與它相關聯，繫結引擎會檢查每個規則，每次傳輸來源屬性的目標屬性值。&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If a rule invalidates a value, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; object and adds it to the &lt;xref:System.Windows.Controls.Validation&gt;.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt; collection of the bound object.</source>
          <target state="translated">如果規則導致無效的值，就會建立繫結引擎&lt;xref:System.Windows.Controls.ValidationError&gt;物件，並將它加入至&lt;xref:System.Windows.Controls.Validation&gt;。&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;繫結之物件的集合。&lt;/xref:System.Windows.Controls.Validation.Errors%2A&gt; &lt;/xref:System.Windows.Controls.Validation&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; property is not empty, the &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; attached property of the object is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">當&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;屬性不是空的&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;附加的屬性的物件設定為<ph id="ph1">`true`</ph>。&lt;/xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the NotifyOnValidationError property of the &lt;xref:System.Windows.Data.Binding&gt; is set to <ph id="ph1">`true`</ph>, then the binding engine raises the &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; attached event on the object.</source>
          <target state="translated">如果 NotifyOnValidationError 屬性&lt;xref:System.Windows.Data.Binding&gt;設<ph id="ph1">`true`</ph>，然後繫結引擎引發&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;附加物件上的事件。&lt;/xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">驗證程序的詳細討論，請參閱中的資料驗證一節<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.Controls.Validation.Error&gt;附加的事件應該在來源更新期間驗證錯誤時在繫結物件上引發，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets the path to the binding source property.</source>
          <target state="translated">取得或設定繫結來源屬性的路徑。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</source>
          <target state="translated">每個繫結通常會有四個元件︰ 繫結目標物件、 目標屬性、 繫結來源、 和中要使用的繫結來源值的路徑。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information about these data binding concepts, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關這些資料繫結概念的詳細資訊，請參閱<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Use the Path property to specify the source value you want to bind to:      -   In the simplest case, the Path property value is the name of the property of the source object to use for the binding, such as <ph id="ph1">`Path=PropertyName`</ph>.</source>
          <target state="translated">使用 Path 屬性來指定您想要繫結來源值:-簡單的情況下，屬性值是使用繫結，例如來源物件的屬性名稱的路徑在<ph id="ph1">`Path=PropertyName`</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-   Subproperties of a property can be specified by a syntax similar to that used in <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>.</source>
          <target state="translated">-子屬性的屬性可以指定類似中所使用的語法<ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id="ph2">`Order`</ph> of the object or property <ph id="ph3">`ShoppingCart`</ph>.</source>
          <target state="translated">比方說，在子句<ph id="ph1">`Path=ShoppingCart.Order`</ph>設定的繫結至子屬性<ph id="ph2">`Order`</ph>物件或屬性的<ph id="ph3">`ShoppingCart`</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-   To bind to an attached property, place parentheses around the attached property.</source>
          <target state="translated">-若要繫結到附加的屬性，加上括附加屬性。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For example, to bind to the attached property &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;, the syntax is <ph id="ph1">`Path=(DockPanel.Dock)`</ph>.</source>
          <target state="translated">例如，若要附加的屬性繫結&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;，語法是<ph id="ph1">`Path=(DockPanel.Dock)`</ph>。&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-   Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</source>
          <target state="translated">-索引子的屬性可以指定在方括弧內的屬性名稱後面套用索引子的位置。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</source>
          <target state="translated">比方說，在子句<ph id="ph1">`Path=ShoppingCart[0]`</ph>設定的繫結至對應到屬性的內部索引如何處理常值字串"0"的索引。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Multiple indexers are also supported.</source>
          <target state="translated">也支援多個索引子。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-   Indexers and subproperties can be mixed in a <ph id="ph1">`Path`</ph> clause; for example, <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>      -   Inside indexers you can have multiple indexer parameters separated by commas (,).</source>
          <target state="translated">-索引子和子屬性可以混合在<ph id="ph1">`Path`</ph>子句，例如<ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>-內部索引子可以有多個以逗號 （，） 分隔的索引子參數。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The type of each parameter can be specified with parentheses.</source>
          <target state="translated">加上括弧，可以指定每個參數的型別。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example, you can have <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>, where <ph id="ph2">`sys`</ph> is mapped to the <ph id="ph3">`System`</ph> namespace.</source>
          <target state="translated">例如，您可以有<ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>，其中<ph id="ph2">`sys`</ph>對應至<ph id="ph3">`System`</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-   When the source is a collection view, the current item can be specified with a slash (/).</source>
          <target state="translated">-當來源是集合檢視，可以使用斜線 （/） 來指定目前的項目。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, the clause <ph id="ph1">`Path=/`</ph> sets the binding to the current item in the view.</source>
          <target state="translated">例如，在子句<ph id="ph1">`Path=/`</ph>設定的繫結至檢視中目前的項目。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When the source is a collection, this syntax specifies the current item of the default collection view.</source>
          <target state="translated">當來源集合，此語法會指定預設集合檢視的目前項目。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-   Property names and slashes can be combined to traverse properties that are collections.</source>
          <target state="translated">屬性名稱和斜線，都可以結合周遊是集合的屬性。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id="ph2">`Offices`</ph> property that is also a collection.</source>
          <target state="translated">例如，<ph id="ph1">`Path=/Offices/ManagerName`</ph>指定來源集合，其中包含目前的項目<ph id="ph2">`Offices`</ph>也是集合的屬性。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Its current item is an object that contains a <ph id="ph1">`ManagerName`</ph> property.</source>
          <target state="translated">其目前的項目是包含物件<ph id="ph1">`ManagerName`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-   Optionally, a period (.) path can be used to bind to the current source.</source>
          <target state="translated">-（選擇性） 的句號 （.） 的路徑可以用來繫結至目前的來源。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Text="{Binding}"`</ph> is equivalent to <ph id="ph2">`Text="{Binding Path=.}"`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Text="{Binding}"`</ph>相當於<ph id="ph2">`Text="{Binding Path=.}"`</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For information about path syntax, see <bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>PropertyPath XAML Syntax<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">路徑語法的詳細資訊，請參閱<bpt id="p1">[</bpt>繫結宣告概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>PropertyPath XAML 語法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> bindings, see the &lt;xref:System.Windows.Data.Binding.XPath%2A&gt; property.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>繫結，請參閱&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;屬性。&lt;/xref:System.Windows.Data.Binding.XPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To bind to an entire object, you do not need to specify the Path property.</source>
          <target state="translated">要繫結至整個物件時，您不需要指定路徑屬性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For more information, see "Specifying the Path to the Value" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 「 指定的路徑以值"中<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The path to the binding source.</source>
          <target state="translated">繫結來源的路徑。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets or sets the binding source by specifying its location relative to the position of the binding target.</source>
          <target state="translated">取得或設定所指定的繫結目標位置相對的繫結來源。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</source>
          <target state="translated">這個屬性常用物件的一個屬性繫結至相同的物件，另一個屬性，或在樣式或範本中定義的繫結。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">根據預設，繫結繼承所指定的資料內容<ph id="ph1">`DataContext`</ph>如果其中一個已設定的屬性。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>However, the RelativeSource property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">不過，RelativeSource 屬性是一種方式，您可以明確設定的來源&lt;xref:System.Windows.Data.Binding&gt;並覆寫繼承的資料內容。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 指定的繫結來源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;和&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt;屬性也可讓您設定的繫結來源明確。&lt;/xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and RelativeSource, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">不過，只有三個屬性，其中&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;， &lt;xref:System.Windows.Data.Binding.Source%2A&gt;，和 RelativeSource，應設定為每個繫結，或可能會發生衝突。&lt;/xref:System.Windows.Data.Binding.Source%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">如果繫結來源衝突，則這個屬性會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>的詳細資訊，請參閱<bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文字用法</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specifying the relative location of the binding source to use.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，指定要使用的繫結來源相對位置。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">移除的處理常式&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">這個方法支援附加的事件的使用中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>接聽事件。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">若要移除處理常式。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">移除的處理常式&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">這個方法支援附加的事件的使用中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>接聽事件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">若要移除處理常式。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Sets a namespace manager object used by the binding attached to the provided element.</source>
          <target state="translated">設定所提供的項目附加的繫結使用的命名空間管理員物件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">這個方法支援附加的屬性的使用方式的&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;附加屬性。&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">要從中取得命名空間資訊的物件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to use for namespace evaluation in the passed element.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>用於命名空間評估傳遞的項目中。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Path*&gt; property should be persisted.</source>
          <target state="translated">指出是否&lt;xref:System.Windows.Data.Binding.Path*&gt;屬性必須永續性。&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property does not have a simple default value.</source>
          <target state="translated">這<ph id="ph1">`ShouldSerialize`</ph>方法提供，因為&lt;xref:System.Windows.Data.Binding.Path%2A&gt;屬性並沒有簡單的預設值。&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">這個方法會指出屬性是否已變更其預設值。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">如果您開發的設計工具&lt;xref:System.Windows.Data.Binding&gt;或開發您自己的 control 納入&lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt;&lt;/xref:System.Windows.Data.Binding&gt;通常呼叫這個方法</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性值已經從其預設值;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Source*&gt; property should be persisted.</source>
          <target state="translated">指出是否&lt;xref:System.Windows.Data.Binding.Source*&gt;屬性必須永續性。&lt;/xref:System.Windows.Data.Binding.Source*&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Source%2A&gt; property does not have a simple default value.</source>
          <target state="translated">這<ph id="ph1">`ShouldSerialize`</ph>方法提供，因為&lt;xref:System.Windows.Data.Binding.Source%2A&gt;屬性並沒有簡單的預設值。&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">這個方法會指出屬性是否已變更其預設值。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">如果您開發的設計工具&lt;xref:System.Windows.Data.Binding&gt;或開發您自己的 control 納入&lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt;&lt;/xref:System.Windows.Data.Binding&gt;通常呼叫這個方法</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性值已經從其預設值;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.ValidationRules*&gt; property should be persisted.</source>
          <target state="translated">指出是否&lt;xref:System.Windows.Data.Binding.ValidationRules*&gt;屬性必須永續性。&lt;/xref:System.Windows.Data.Binding.ValidationRules*&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; property does not have a simple default value.</source>
          <target state="translated">這<ph id="ph1">`ShouldSerialize`</ph>方法提供，因為&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;屬性並沒有簡單的預設值。&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">這個方法會指出屬性是否已變更其預設值。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">如果您開發的設計工具&lt;xref:System.Windows.Data.Binding&gt;或開發您自己的 control 納入&lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt;&lt;/xref:System.Windows.Data.Binding&gt;通常呼叫這個方法</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性值已經從其預設值;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets or sets the object to use as the binding source.</source>
          <target state="translated">取得或設定要作為繫結來源物件。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">根據預設，繫結繼承所指定的資料內容<ph id="ph1">`DataContext`</ph>如果其中一個已設定的屬性。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>However, the Source property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">不過，來源屬性是一種方式，您可以明確設定的來源&lt;xref:System.Windows.Data.Binding&gt;並覆寫繼承的資料內容。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the Source property instead of the <ph id="ph1">`DataContext`</ph> property.</source>
          <target state="translated">如果您不需要建立的領域，在其中幾個屬性繼承相同的資料內容的功能，您可以使用 [來源] 屬性，而不是<ph id="ph1">`DataContext`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;和&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt;屬性也可讓您設定的繫結來源明確。&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, Source, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">不過，只有三個屬性，其中&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;，來源和&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;、 應該設定為每個繫結，或可能會發生衝突。&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">如果繫結來源衝突，則這個屬性會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>To clear this property, set it to &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;.</source>
          <target state="translated">若要清除此屬性，將它設定為&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>object<ept id="p3">*</ept>    An existing object.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>物件<ept id="p3">*</ept>現有的物件。      </target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To refer to an existing object, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></source>
          <target state="translated">若要參考現有的物件，使用<bpt id="p1">[</bpt>StaticResource 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The object to use as the binding source.</source>
          <target state="translated">要作為繫結來源物件。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">識別&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">識別&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;附加事件。&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">取得或設定可用來提供自訂邏輯以處理繫結引擎在更新繫結來源值期間所遇到的例外狀況處理常式。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This is only applicable if you have associated an <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with your binding.</source>
          <target state="translated">這個內容僅適用於具有相關聯<bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與繫結。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;是內建的驗證規則會檢查繫結來源屬性更新期間擲回的例外狀況。&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If you have associated the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; with your &lt;xref:System.Windows.Data.Binding&gt; object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">如果您有相關聯&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;與您&lt;xref:System.Windows.Data.Binding&gt;物件，您可以使用這個屬性設定來提供自訂邏輯以處理這些例外狀況處理常式。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If an UpdateSourceExceptionFilter is not specified on the &lt;xref:System.Windows.Data.Binding&gt;, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">上未指定 UpdateSourceExceptionFilter &lt;xref:System.Windows.Data.Binding&gt;，建立繫結引擎&lt;xref:System.Windows.Controls.ValidationError&gt;與例外狀況並將它加入&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;繫結項目的集合。&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">提供自訂邏輯以處理繫結引擎在更新繫結來源值期間所遇到之例外狀況的方法。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">取得或設定值，這個值會判斷繫結來源更新的時機。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Bindings that are &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; listen for changes in the target property and propagate them back to the source.</source>
          <target state="translated">繫結&lt;xref:System.Windows.Data.BindingMode&gt;或&lt;xref:System.Windows.Data.BindingMode&gt;接聽中的目標屬性的變更，並將它們傳播回來源。&lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This is known as updating the source.</source>
          <target state="translated">這稱為更新來源。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Usually, these updates happen whenever the target property changes.</source>
          <target state="translated">通常，當目標屬性變更時，就可能發生這些更新。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</source>
          <target state="translated">這是正常的核取方塊和其他簡單的控制項，但它通常不是適用於文字欄位。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</source>
          <target state="translated">每個按鍵動作可能會降低效能，並拒絕使用者一般機會退格鍵並認可新的值之前修正輸入錯誤之後更新。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Therefore, the default UpdateSourceTrigger value of the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property is &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt; and not &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">因此的預設 UpdateSourceTrigger 值&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;屬性是&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;而非&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If you set the UpdateSourceTrigger value to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;, you must call the &lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt; method or the changes will not propagate back to the source.</source>
          <target state="translated">如果您將設定 UpdateSourceTrigger 值&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;，您必須呼叫&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;方法或所做的變更將不會傳播到來源。&lt;/xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt; &lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value of the target dependency property.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它會傳回預設<bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>目標相依性屬性的值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>However, the default value for most dependency properties is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, while the &lt;xref:System.Windows.Controls.TextBox.Text<bpt id="p2">*</bpt>&gt; property has a default value of <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.       A programmatic way to determine the default UpdateSourceTrigger value of a dependency property is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<ept id="p2">*</ept>&gt; and then check the value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt; property.</source>
          <target state="translated">不過，大多數相依性屬性的預設值是<bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，雖然&lt;&gt; <bpt id="p2">*</bpt>&gt; 屬性具有預設值是<bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。     若要取得屬性中繼資料屬性使用的是程式設計的方式，以判斷相依性屬性的預設 UpdateSourceTrigger 值&lt;&gt; <ept id="p2">*</ept>&gt;，然後檢查值&lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;屬性。&lt;/xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定值，指出是否要包含<bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; element explicitly.</source>
          <target state="translated">設定這個屬性提供替代&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;元素明確。&lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; is a built-in validation rule that checks for errors that are raised by the &lt;xref:System.ComponentModel.IDataErrorInfo&gt; implementation of the source object.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;是內建的驗證規則，以檢查所引發的錯誤&lt;xref:System.ComponentModel.IDataErrorInfo&gt;來源物件的實作。&lt;/xref:System.ComponentModel.IDataErrorInfo&gt; &lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If an error is raised, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">如果會引發錯誤，就會建立繫結引擎&lt;xref:System.Windows.Controls.ValidationError&gt;發生錯誤並將它加入&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;繫結項目的集合。&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">錯誤缺乏清除這個驗證回應，除非另一項規則會引發驗證問題。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">.NET Framework 3.5 版中引進 ValidatesOnDataErrors。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>.NET Framework 版本和相依性<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要包含<bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定值，指出是否要包含<bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; element explicitly.</source>
          <target state="translated">設定這個屬性提供替代&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;元素明確。&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;是內建的驗證規則會檢查來源屬性更新期間所擲回的例外狀況。&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If an exception is thrown, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">如果擲回例外狀況，就會建立繫結引擎&lt;xref:System.Windows.Controls.ValidationError&gt;與例外狀況並將它加入&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;繫結項目的集合。&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">錯誤缺乏清除這個驗證回應，除非另一項規則會引發驗證問題。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>ValidatesOnExceptions is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">.NET Framework 3.5 版中引進 ValidatesOnExceptions。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>.NET Framework 版本和相依性<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要包含<bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定值，指出是否要包含<bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>When ValidatesOnNotifyDataErrors is <ph id="ph1">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.</source>
          <target state="translated">ValidatesOnNotifyDataErrors 時<ph id="ph1">`true`</ph>，繫結檢查，並報告的資料來源所實作&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.&lt;/xref:System.ComponentModel.INotifyDataErrorInfo&gt;所引發的錯誤</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要包含<bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets a collection of rules that check the validity of the user input.</source>
          <target state="translated">取得檢查使用者輸入有效性的規則集合。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate ValidationRules with your &lt;xref:System.Windows.Data.Binding&gt; or &lt;xref:System.Windows.Data.MultiBinding&gt; object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>資料繫結模型可讓您將使用 ValidationRules 您&lt;xref:System.Windows.Data.Binding&gt;或&lt;xref:System.Windows.Data.MultiBinding&gt;物件。&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can create custom rules by deriving from the &lt;xref:System.Windows.Controls.ValidationRule&gt; class and implementing the &lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; method, or you can use the built-in &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;, which invalidates a value if there are exceptions during source updates.</source>
          <target state="translated">您可以建立自訂規則衍生自&lt;xref:System.Windows.Controls.ValidationRule&gt;類別，並實作&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;方法，或者您可以使用內建&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;，這會使值，如果在來源更新期間有例外狀況。&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt; &lt;/xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; &lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The binding engine checks each &lt;xref:System.Windows.Controls.ValidationRule&gt; associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</source>
          <target state="translated">繫結引擎會檢查每個&lt;xref:System.Windows.Controls.ValidationRule&gt;每次輸入的值 （繫結目標屬性值） 轉送到繫結來源屬性的繫結相關聯。&lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">驗證程序的詳細討論，請參閱中的資料驗證一節<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;，可以設定這個屬性<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>只能使用集合語法所示，或藉由存取的集合物件，使用的各種方法，例如<ph id="ph3">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The property to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">要存取的集合物件的屬性是唯讀的而集合本身則是讀寫。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Controls.ValidationRule&gt; objects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性項目用法<ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>一或多個&lt;xref:System.Windows.Controls.ValidationRule&gt;物件。&lt;/xref:System.Windows.Controls.ValidationRule&gt;      </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class or create custom rules by subclassing the &lt;xref:System.Windows.Controls.ValidationRule&gt; class.</source>
          <target state="translated">您可以使用&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;類別或建立自訂規則的子類別化&lt;xref:System.Windows.Controls.ValidationRule&gt;類別。&lt;/xref:System.Windows.Controls.ValidationRule&gt; &lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">集合<bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt; attached property.</source>
          <target state="translated">識別&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;附加屬性。&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query that returns the value on the <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> binding source to use.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>傳回的值的查詢<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>繫結來源使用。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>When the binding source is <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, the XPath property is used instead of the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property to indicate the path to the value on the binding source to use.</source>
          <target state="translated">繫結來源時<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>資料，而非<ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>物件，而不是使用 XPath 屬性&lt;xref:System.Windows.Data.Binding.Path%2A&gt;屬性，指出要使用的繫結來源上的值的路徑。&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>By setting the XPath property, you are creating an <ph id="ph1">`XPath`</ph> query to select a node or a collection of nodes (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt; and &lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; both derive from &lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;).</source>
          <target state="translated">藉由設定 [XPath] 屬性，您要建立<ph id="ph1">`XPath`</ph>查詢，以選取的節點的集合 (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt;和&lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt;兩者都衍生自&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;)。&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlElement?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt; is a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;是<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>物件，這表示您可以使用其屬性的繫結&lt;xref:System.Windows.Data.Binding.Path%2A&gt;屬性。&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; method handles the <ph id="ph1">`XPath`</ph> expressions from the XPath property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;方法會處理<ph id="ph1">`XPath`</ph>XPath 屬性中的運算式。&lt;/xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath`</ph> functions are not supported.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph>不支援函式。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XPath`</ph> expression information, see the &lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt; documentation and some examples provided in the Example section.</source>
          <target state="translated">如<ph id="ph1">`XPath`</ph>運算式的詳細資訊，請參閱&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;文件集和範例 &gt; 一節中提供一些範例。&lt;/xref:System.Xml.XmlNode.SelectNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>LINQ to XML objects &lt;xref:System.Xml.Linq.XDocument&gt; and &lt;xref:System.Xml.Linq.XElement&gt; do not use <ph id="ph1">`XPath`</ph>.</source>
          <target state="translated">LINQ to XML 物件&lt;xref:System.Xml.Linq.XDocument&gt;和&lt;xref:System.Xml.Linq.XElement&gt;不要使用<ph id="ph1">`XPath`</ph>。&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to: for XML 查詢結果繫結至 XDocument、 XElement 或 LINQ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>查詢。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>