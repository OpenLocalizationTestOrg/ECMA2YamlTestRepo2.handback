<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a311318563ae7911a01b48ef53acf92cf9e9ccdb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.Protocols.SoapHttpClientProtocol.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">666f0e473fe0297bd333bde4f82e74131c1f4cc8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8bc895695e22f10437368ef9180f5ba50e103ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">指定當使用 SOAP proxy 是衍生自類別用戶端。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; must be created for the XML Web service.</source>
          <target state="translated">如果您要建立 XML Web 服務用戶端，然後 proxy 類別的間接或衍生直接從&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;必須建立 XML Web service。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from SoapHttpClientProtocol, which derives from &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;.</source>
          <target state="translated">當使用 SOAP 呼叫 XML Web 服務用戶端時，proxy 類別必須衍生自 SoapHttpClientProtocol，衍生自&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;.&lt;/xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;, in turn, derives from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;又，衍生自&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;.&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;&lt;/xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; for the XML Web service you want to call.</source>
          <target state="translated">若要使用 XML Web 服務通訊，建立 proxy 類別，衍生自的間接或直接&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;您想要呼叫 XML Web 服務。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">而不是手動建立 proxy 類別，使用 Web 服務描述語言工具 (Wsdl.exe) 來建立指定的 XML Web 服務的服務描述的 proxy 類別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt; method, whereas asynchronous calls are made using the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; method and the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; method.</source>
          <target state="translated">SOAP 通訊協定產生 proxy 類別時，對同步呼叫 XML Web 服務方法會透過&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;方法，而非同步呼叫會使用&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;方法和&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;方法。&lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; &lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; &lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">啟動 XML Web 服務方法使用 SOAP 的非同步引動過程。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you would not call the BeginInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">一般而言，您會 BeginInvoke 直接呼叫方法，除非您已建立您自己的 XML Web service 的 proxy 類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">從服務描述 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別會公開 XML Web service 方法為衍生自 proxy 類別以同步方式呼叫 XML Web 服務方法的名稱。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">若要以非同步方式呼叫 XML Web service 方法，兩個額外的方法加入至每個 XML Web service 方法，其中使用的 proxy 類別<ph id="ph1">`Begin`</ph>的 XML Web service 方法，而另一個為名稱加上前置詞<ph id="ph2">`End`</ph>加入前置詞。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The proxy class calls the BeginInvoke method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">Proxy 類別呼叫 BeginInvoke 方法，開始呼叫 XML Web 服務方法的非同步引動過程。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">例如，如果 XML Web service 公開 （expose） 名為 XML Web 服務方法<ph id="ph1">`Add`</ph>，proxy 類別包含名為的方法<ph id="ph2">`BeginAdd`</ph>，啟動在引動過程 XML Web 服務方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the BeginInvoke method and the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的程式碼<ph id="ph1">`BeginAdd`</ph>BeginInvoke 方法進行呼叫，結果會放入預期的傳回類型為<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>用來尋找可能已經加入至方法，例如&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;的自訂屬性</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;提供有關在衍生方法的 SOAP 通訊協定所需的其他資訊。&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the &lt;xref:System.IAsyncResult&gt; that is returned from the BeginInvoke method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph>傳遞至<ph id="ph2">`callback`</ph>納入&lt;xref:System.IAsyncResult&gt;從 BeginInvoke 方法傳回。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph>參數可以用來傳遞內容的非同步呼叫，在指定的資訊<ph id="ph2">`callback`</ph>參數，以處理結果的委派。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method in the derived class that is invoking the BeginInvoke method.</source>
          <target state="translated">XML Web 服務方法叫用 BeginInvoke 方法在衍生類別中的名稱。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">物件陣列，包含要傳遞到 XML Web 服務的參數。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">在衍生類別呼叫方法的參數對應於陣列中值的順序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">完成非同步叫用時呼叫委派。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`callback`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the delegate is not called.</source>
          <target state="translated">如果<ph id="ph1">`callback`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，不會呼叫的委派。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">呼叫端所提供的額外資訊。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that is passed to the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt; method to obtain the return values from the remote method call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;傳遞至&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt;方法，以取得從遠端方法呼叫傳回的值。&lt;/xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">要求到達伺服器電腦，但並未成功處理。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">不是有效的物件的目前狀態的要求。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">存取網路時發生錯誤。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Dynamically binds to an XML Web service described in the discovery document at &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;.</source>
          <target state="translated">動態繫結至&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;.&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;探索文件中所描述的 XML Web service</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the Discover method.</source>
          <target state="translated">XML Web 服務用戶端可以動態地繫結至以外使用的探索方法在 proxy 類別中參考 XML Web 服務。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property refers to the base address of the XML Web service.</source>
          <target state="translated">一般而言，&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;屬性指的是 XML Web 服務的基底位址。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>However, before invoking the Discover method, set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to a URL of a discovery document.</source>
          <target state="translated">不過，在之前叫用探索方法，請設定&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;屬性以探索文件的 URL。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Discover method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated">Discover 方法會嘗試在 proxy 類別中定義的繫結的探索文件中尋找相符項目並將動態繫結它。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">如果成功，後續的方法呼叫會被導向至 XML Web 服務探索文件中所述。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;.</source>
          <target state="translated">如果使用 Web 服務描述語言工具 (Wsdl.exe) 來建置 proxy 類別時，proxy 類別會定義 XML Web service 方法，它會叫用使用&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;.&lt;/xref:System.Web.Services.WebServiceBindingAttribute&gt;所實作的繫結</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">當 XML Web service 實作多個繫結時，Wsdl.exe 建立 proxy 類別，每個繫結。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Applied to each proxy class is a &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt; that defines the name of the binding and its namespace.</source>
          <target state="translated">套用至每個 proxy 類別是&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;所定義的繫結和它的命名空間名稱。&lt;/xref:System.Web.Services.WebServiceBindingAttribute&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The discovery document you set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">您所設定的探索文件&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;屬性必須包含實作相同的繫結名稱和命名空間、 XML Web 服務的參考，否則會擲回例外狀況。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">Proxy 類別並沒有定義的繫結。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">結束 XML Web 服務方法使用 SOAP 的非同步引動過程。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Typically, you would not call the EndInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">一般而言，您會 EndInvoke 方法直接呼叫，除非您已建立您自己的 XML Web service 的 proxy 類別。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">由 XML Web service 的 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別會公開 XML Web service 方法，為開 proxy 類別以同步方式呼叫 XML Web 服務方法的名稱。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">以非同步方式呼叫 XML Web service 方法，兩個額外的方法加入至每個 XML Web service 方法，一個使用的 proxy 類別<ph id="ph1">`Begin`</ph>的 XML Web service 方法，而另一個為名稱加上前置詞<ph id="ph2">`End`</ph>加入前置詞。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The proxy class calls the EndInvoke method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">Proxy 類別呼叫以完成 XML Web service 方法的非同步引動過程呼叫 EndInvoke 方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">例如，如果 XML Web service 公開 （expose） 名為 XML Web 服務方法<ph id="ph1">`Add`</ph>，proxy 類別包含名為的方法<ph id="ph2">`EndAdd`</ph>，完成的非同步引動過程的 XML Web 服務方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the EndInvoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的程式碼<ph id="ph1">`EndAdd`</ph>EndInvoke 方法進行呼叫，然後結果會放入預期的傳回類型為<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;從傳回&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;方法。&lt;/xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any by-reference or <bpt id="p1">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
          <target state="translated">物件的陣列，其中包含傳回值和任何依參考或<bpt id="p1">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生的類別方法的參數。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is not the return value from the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>不是從傳回的值<ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">要求到達伺服器電腦，但並未成功處理。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">不是有效的物件的目前狀態的要求。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">存取網路時發生錯誤。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">傳回&lt;xref:System.Xml.XmlReader&gt;以初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;屬性<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供所&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;要初始化&lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; &lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamReader&gt; used by the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">&lt;xref:System.IO.StreamReader&gt; &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;所使用&lt;/xref:System.IO.StreamReader&gt;的初始的緩衝區大小</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlReader&gt;以初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">message</ph> <ept id="p1">&lt;/code&gt;</ept>參數。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creates a &lt;xref:System.Net.WebRequest&gt; for the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">建立&lt;xref:System.Net.WebRequest&gt;指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">uri</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method can be overridden to customize the &lt;xref:System.Net.WebRequest&gt; before the XML Web service request is made.</source>
          <target state="translated">這個方法會覆寫自訂&lt;xref:System.Net.WebRequest&gt;之前 XML Web 服務要求。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">例如，您無法將自訂標頭加入要求。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; to use when creating the &lt;xref:System.Net.WebRequest&gt;.</source>
          <target state="translated">&lt;xref:System.Uri&gt;若要建立&lt;xref:System.Net.WebRequest&gt;.&lt;/xref:System.Net.WebRequest&gt;時使用&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.WebRequest&gt; for the specified URI.</source>
          <target state="translated">&lt;xref:System.Net.WebRequest&gt;為指定的 URI。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">傳回&lt;xref:System.Xml.XmlWriter&gt;以初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;屬性<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供所&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;要初始化&lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamWriter&gt; used by the &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">&lt;xref:System.IO.StreamWriter&gt; &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;所使用&lt;/xref:System.IO.StreamWriter&gt;的初始的緩衝區大小</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlWriter&gt;以初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">message</ph> <ept id="p1">&lt;/code&gt;</ept>參數。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">叫用 XML Web 服務方法使用 SOAP，以同步方式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Typically, you do not call the Invoke method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">一般而言，您不要叫用方法直接呼叫，除非您正在建置您自己的 XML Web service 的 proxy 類別。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">由 XML Web service 的 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別會公開 XML Web service 方法，為開 proxy 類別的名稱。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The proxy class calls the Invoke method to invoke an XML Web service method call.</source>
          <target state="translated">Proxy 類別會呼叫叫用方法來叫用 XML Web 服務方法呼叫。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">例如，如果 XML Web service 公開 （expose） 名為 XML Web 服務方法<ph id="ph1">`Add`</ph>，proxy 類別也包含名為的方法<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the Invoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的程式碼<ph id="ph1">`Add`</ph>方法中的 proxy 類別，同步呼叫透過 XML Web 服務方法叫用方法，然後結果會放入預期的傳回類型為<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>參數用來找出可能已經加入至方法，例如&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;的自訂屬性</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;在衍生方法所需的 SOAP 通訊協定提供其他資訊。&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method.</source>
          <target state="translated">XML Web 服務方法的名稱。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">物件的陣列，包含要傳遞至 XML Web 服務的參數。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">陣列中值的順序對應於呼叫方法的衍生類別中的參數順序。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any <bpt id="p1">&lt;xref uid="langword_csharp_reference" name="reference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
          <target state="translated">物件的陣列，其中包含傳回的值以及任何<bpt id="p1">&lt;xref uid="langword_csharp_reference" name="reference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>衍生的類別方法的參數。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">要求到達伺服器電腦，但並未成功處理。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">不是有效的物件的目前狀態的要求。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">存取網路時發生錯誤。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">以非同步方式叫用指定的方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
          <target state="translated">要叫用方法的名稱。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">要傳遞至方法的參數。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">方法引動過程完成時呼叫的委派。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">以非同步方式叫用指定的方法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
          <target state="translated">要叫用方法的名稱。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">要傳遞至方法的參數。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">方法引動過程完成時呼叫的委派。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An object used to pass state information into the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">用來傳遞到的狀態資訊的物件<ph id="ph1">`callback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">取得或設定用來對 XML Web 服務的 SOAP 要求的 SOAP 通訊協定版本。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The SoapVersion property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated">以 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別中設定 SoapVersion 屬性&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;依預設，當 XML Web 服務的 WSDL 文件支援 SOAP 1.1 版。&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.</source>
          <target state="translated">不過，當 XML Web 服務只支援 SOAP 1.2，Wsdl.exe 將 SoapVersion 屬性設為&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; and &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;, respectively.</source>
          <target state="translated">若要產生 proxy 類別，使用 Wsdl.exe 時，請選擇 SOAP 通訊協定版本，請使用<ph id="ph1">`/protocol`</ph>參數搭配<ph id="ph2">`SOAP`</ph>或<ph id="ph3">`SOAP12`</ph>SoapVersion 屬性設定的設定&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;和&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;分別。&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; &lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>