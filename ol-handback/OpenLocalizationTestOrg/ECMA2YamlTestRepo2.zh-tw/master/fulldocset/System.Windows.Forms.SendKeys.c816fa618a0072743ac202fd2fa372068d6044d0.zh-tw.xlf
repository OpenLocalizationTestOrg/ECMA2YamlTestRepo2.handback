<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e4f31994a036ce0ec8acfb3e4f81d9245b4039d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.SendKeys.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08abf70e02face41ab8cf687b54b6dc9d6946cf0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">535fd4f7ecb4aeb1266cec4c7e0ca8d932b50e53</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods for sending keystrokes to an application.</source>
          <target state="translated">提供傳送按鍵至應用程式的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use SendKeys to send keystrokes and keystroke combinations to the active application.</source>
          <target state="translated">使用 SendKeys 傳送按鍵和按鍵組合，作用中的應用程式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class cannot be instantiated.</source>
          <target state="translated">這個類別無法具現化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To send a keystroke to a class and immediately continue with the flow of your program, use &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;.</source>
          <target state="translated">按鍵動作傳送至類別，並且立即繼續您的程式流程，請使用&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;.&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To wait for any processes started by the keystroke, use &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;.</source>
          <target state="translated">若要等待按鍵動作來啟動任何處理序，請使用  &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;.&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters.</source>
          <target state="translated">每個索引鍵是由一個或多個字元表示。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To specify a single keyboard character, use the character itself.</source>
          <target state="translated">若要指定鍵盤字元，請使用字元本身。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, to represent the letter A, pass in the string "A" to the method.</source>
          <target state="translated">例如，代表字母 A，傳遞字串"A"中方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To represent more than one character, append each additional character to the one preceding it.</source>
          <target state="translated">若要顯示多個字元，將附加至先前的每個字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To represent the letters A, B, and C, specify the parameter as "ABC".</source>
          <target state="translated">若要表示字母 A、 B 和 C，指定為"ABC"的參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to SendKeys.</source>
          <target state="translated">加號 （+）、 插入號 (^)、 百分比符號 （%）、 波狀符號 （~） 和括號 （） 有特殊意義 SendKeys。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To specify one of these characters, enclose it within braces ({}).</source>
          <target state="translated">若要指定其中一個字元，請將它括在括號 （{}）。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, to specify the plus sign, use "{+}".</source>
          <target state="translated">例如，若要指定加號，使用"{+}"。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To specify brace characters, use "{{}" and "{}}".</source>
          <target state="translated">指定的大括號字元，使用"{{}"和"{}}"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Brackets ([ ]) have no special meaning to SendKeys, but you must enclose them in braces.</source>
          <target state="translated">括號 ([]) 有 SendKeys，沒有特殊意義，但您必須將其括在括號中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</source>
          <target state="translated">其他應用程式，在方括號沒有特殊意義，特別是當動態資料交換 (DDE)，就會發生。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  If your application is intended for international use with a variety of keyboards, the use of &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; could yield unpredictable results and should be avoided.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 如果您的應用程式用於各種不同的鍵盤，則使用可搭配國際&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;可能會產生無法預期的結果，應該予以避免。&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</source>
          <target state="translated">若要指定不會顯示當您按下 ENTER 或索引標籤上，等動作，而不是字元，代表索引鍵的索引鍵的字元使用下表中的代碼。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |BACKSPACE|{BACKSPACE}, {BS}, or {BKSP}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |DEL or DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER|{ENTER}or ~|   |ESC|{ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS or INSERT|{INSERT} or {INS}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |PRINT SCREEN|{PRTSC} (reserved for future use)|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1|{F1}|   |F2|{F2}|   |F3|{F3}|   |F4|{F4}|   |F5|{F5}|   |F6|{F6}|   |F7|{F7}|   |F8|{F8}|   |F9|{F9}|   |F10|{F10}|   |F11|{F11}|   |F12|{F12}|   |F13|{F13}|   |F14|{F14}|   |F15|{F15}|   |F16|{F16}|   |Keypad add|{ADD}|   |Keypad subtract|{SUBTRACT}|   |Keypad multiply|{MULTIPLY}|   |Keypad divide|{DIVIDE}|       To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</source>
          <target state="translated">|索引鍵 |程式碼 |  |---------|----------|  |退格鍵 |{退格鍵}，{BS，} 或 {BKSP} |  |中斷 |{中斷} |  |CAPS LOCK |{CAPSLOCK} |  |DEL 或 DELETE |{刪除} 或 {DEL} |  |向下箭號 |{向下} |  |結束 |{結束} |  |輸入 |{輸入} 或 ~ |  |ESC |{ESC} |  |說明 |{協助} |  |首頁 |{首頁} |  |單元或插入 |{插入} 或 {單元} |  |向左箭號 |{LEFT} |  |NUM LOCK |{NUMLOCK} |  |向下翻頁 |{PGDN} |  |向上翻頁 |{PGUP} |  |PRINT SCREEN 鍵 |{PRTSC}（保留供日後使用） |  |向右箭號 |{右邊} |  |SCROLL LOCK |{SCROLLLOCK} |  |索引標籤 |{TAB} |  |向上鍵 |{啟動} |  |F1 |{F1} |  |F2 |{F2} |  |F3 |{F3} |  |F4 |{F4} |  |F5 |{F5} |  |F6 |{F6} |  |F7 |{F7} |  |F8 |{F8} |  |F9 |{F9} |  |F10 |{F10} |  |F11 |{F11} |  |F12 |{F12} |  |F13 |{F13} |  |F14 |{F14} |  |F15 |{F15} |  |F16 |{F16} |  |數字鍵台將加入 |{新增} |  |數字鍵台減去 |{減去} |  |數字鍵台乘 |{乘} |  |數字鍵台除以 |{分割} |      若要指定索引鍵結合的 SHIFT、 CTRL 和 ALT 鍵的任何組合，在之前的按鍵碼和一或多個下列的程式碼。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |SHIFT|+|   |CTRL|^|   |ALT|%|       To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</source>
          <target state="translated">|索引鍵 |程式碼 |  |---------|----------|  |SHIFT | + |  |CTRL | ^ |  |ALT | %|      若要指定的任何組合的 SHIFT、 CTRL 和 alt 鍵應該按住時按下其他幾個索引鍵，將這些機碼的程式碼括在括號中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</source>
          <target state="translated">例如，若要指定按住 shift 鍵，E 和 C 按下時，使用"+ (EC)"。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</source>
          <target state="translated">若要指定按住 shift 鍵，E 按下，後面接著不 shift 鍵，C 時使用"+ EC"。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form {key number}.</source>
          <target state="translated">若要指定重複的索引鍵，使用表單 {索引鍵的數目}。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You must put a space between key and number.</source>
          <target state="translated">您必須將索引鍵和數字之間的空格。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</source>
          <target state="translated">例如，{左 42} 表示 42 倍; 按向左鍵{h 10} 表示按下 H 10 倍。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為沒有可啟動另一個應用程式的 managed 的方法，您可以使用這個類別，在目前應用程式或使用原生 Windows 方法，例如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>，強制將焦點放在其他應用程式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The SendKeys class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SendKeys 類別已進行更新的.NET Framework 3.0，以便能夠在 Windows Vista 執行的應用程式中使用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">如預期般，Windows Vista （又稱為使用者帳戶控制或 UAC） 的增強式的安全性可防止工作從之前的實作。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The SendKeys class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt; SendKeys 類別容易受到時間問題，某些開發人員必須解決。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新的實作仍然容易受到時間問題，但是會稍微快一些，而且可能需要變更才能因應措施。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The SendKeys class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">SendKeys 類別會先嘗試使用之前的實作，以及如果失敗，請使用新的實作。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a result, the SendKeys class may behave differently on different operating systems.</source>
          <target state="translated">如此一來，SendKeys 類別可能會有不同的行為在不同作業系統上。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Additionally, when the SendKeys class uses the new implementation, the &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，當 SendKeys 類別會使用新的實作，&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;方法將不會等候要傳送至另一個處理序時處理的訊息。&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the SendKeys class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果您的應用程式依賴一致的行為，不論作業系統為何，您可以強制使用新的實作方法是加入 app.config 檔案中的下列應用程式設定的 SendKeys 類別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the SendKeys class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 若要強制 SendKeys 類別使用之前的實作，使用值<ph id="ph4">`"JournalHook"`</ph>改為。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Processes all the Windows messages currently in the message queue.</source>
          <target state="translated">處理目前在訊息佇列中的所有 Windows 訊息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use Flush to wait for the application to process keystrokes and other operating system messages that are in the message queue.</source>
          <target state="translated">用於排清等候處理的按鍵輸入與訊息佇列中的其他作業系統訊息應用程式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt; until there are no more keys to process.</source>
          <target state="translated">這就相當於呼叫&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;之前有未處理的更多索引鍵。&lt;/xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為沒有可啟動另一個應用程式的 managed 的方法，您可以使用這個類別，在目前應用程式或使用原生 Windows 方法，例如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>，強制將焦點放在其他應用程式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sends keystrokes to the active application.</source>
          <target state="translated">將按鍵傳送至作用中的應用程式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters.</source>
          <target state="translated">每個索引鍵是由一個或多個字元表示。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To specify a single keyboard character, use the character itself.</source>
          <target state="translated">若要指定鍵盤字元，請使用字元本身。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, to represent the letter A, pass in the string "A" to the method.</source>
          <target state="translated">例如，代表字母 A，傳遞字串"A"中方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To represent more than one character, append each additional character to the one preceding it.</source>
          <target state="translated">若要顯示多個字元，將附加至先前的每個字元。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To represent the letters A, B, and C, specify the parameter as "ABC".</source>
          <target state="translated">若要表示字母 A、 B 和 C，指定為"ABC"的參數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to &lt;xref:System.Windows.Forms.SendKeys&gt;.</source>
          <target state="translated">加號 （+）、 插入號 (^)、 百分比符號 （%）、 波狀符號 （~） 和括號 （） 有特殊意義&lt;xref:System.Windows.Forms.SendKeys&gt;.&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To specify one of these characters, enclose it within braces ({}).</source>
          <target state="translated">若要指定其中一個字元，請將它括在括號 （{}）。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, to specify the plus sign, use "{+}".</source>
          <target state="translated">例如，若要指定加號，使用"{+}"。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To specify brace characters, use "{{}" and "{}}".</source>
          <target state="translated">指定的大括號字元，使用"{{}"和"{}}"。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Brackets ([ ]) have no special meaning to &lt;xref:System.Windows.Forms.SendKeys&gt;, but you must enclose them in braces.</source>
          <target state="translated">括號 ([]) 有沒有特殊意義&lt;xref:System.Windows.Forms.SendKeys&gt;，但您必須將其括在括號中。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</source>
          <target state="translated">其他應用程式，在方括號沒有特殊意義，特別是當動態資料交換 (DDE)，就會發生。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  If your application is intended for international use with a variety of keyboards, the use of Send could yield unpredictable results and should be avoided.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 的各種鍵盤可搭配國際供您的應用程式，如果傳送的使用可能會產生無法預期的結果，且應予以避免。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</source>
          <target state="translated">若要指定不會顯示當您按下 ENTER 或索引標籤上，等動作，而不是字元，代表索引鍵的索引鍵的字元使用下表中的代碼。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |BACKSPACE|{BACKSPACE}, {BS}, or {BKSP}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |DEL or DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER|{ENTER}or ~|   |ESC|{ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS or INSERT|{INSERT} or {INS}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |PRINT SCREEN|{PRTSC} (reserved for future use)|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1|{F1}|   |F2|{F2}|   |F3|{F3}|   |F4|{F4}|   |F5|{F5}|   |F6|{F6}|   |F7|{F7}|   |F8|{F8}|   |F9|{F9}|   |F10|{F10}|   |F11|{F11}|   |F12|{F12}|   |F13|{F13}|   |F14|{F14}|   |F15|{F15}|   |F16|{F16}|   |Keypad add|{ADD}|   |Keypad subtract|{SUBTRACT}|   |Keypad multiply|{MULTIPLY}|   |Keypad divide|{DIVIDE}|       To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</source>
          <target state="translated">|索引鍵 |程式碼 |  |---------|----------|  |退格鍵 |{退格鍵}，{BS，} 或 {BKSP} |  |中斷 |{中斷} |  |CAPS LOCK |{CAPSLOCK} |  |DEL 或 DELETE |{刪除} 或 {DEL} |  |向下箭號 |{向下} |  |結束 |{結束} |  |輸入 |{輸入} 或 ~ |  |ESC |{ESC} |  |說明 |{協助} |  |首頁 |{首頁} |  |單元或插入 |{插入} 或 {單元} |  |向左箭號 |{LEFT} |  |NUM LOCK |{NUMLOCK} |  |向下翻頁 |{PGDN} |  |向上翻頁 |{PGUP} |  |PRINT SCREEN 鍵 |{PRTSC}（保留供日後使用） |  |向右箭號 |{右邊} |  |SCROLL LOCK |{SCROLLLOCK} |  |索引標籤 |{TAB} |  |向上鍵 |{啟動} |  |F1 |{F1} |  |F2 |{F2} |  |F3 |{F3} |  |F4 |{F4} |  |F5 |{F5} |  |F6 |{F6} |  |F7 |{F7} |  |F8 |{F8} |  |F9 |{F9} |  |F10 |{F10} |  |F11 |{F11} |  |F12 |{F12} |  |F13 |{F13} |  |F14 |{F14} |  |F15 |{F15} |  |F16 |{F16} |  |數字鍵台將加入 |{新增} |  |數字鍵台減去 |{減去} |  |數字鍵台乘 |{乘} |  |數字鍵台除以 |{分割} |      若要指定索引鍵結合的 SHIFT、 CTRL 和 ALT 鍵的任何組合，在之前的按鍵碼和一或多個下列的程式碼。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |SHIFT|+|   |CTRL|^|   |ALT|%|       To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</source>
          <target state="translated">|索引鍵 |程式碼 |  |---------|----------|  |SHIFT | + |  |CTRL | ^ |  |ALT | %|      若要指定的任何組合的 SHIFT、 CTRL 和 alt 鍵應該按住時按下其他幾個索引鍵，將這些機碼的程式碼括在括號中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</source>
          <target state="translated">例如，若要指定按住 shift 鍵，E 和 C 按下時，使用"+ (EC)"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</source>
          <target state="translated">若要指定按住 shift 鍵，E 按下，後面接著不 shift 鍵，C 時使用"+ EC"。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form {key number}.</source>
          <target state="translated">若要指定重複的索引鍵，使用表單 {索引鍵的數目}。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You must put a space between key and number.</source>
          <target state="translated">您必須將索引鍵和數字之間的空格。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</source>
          <target state="translated">例如，{左 42} 表示 42 倍; 按向左鍵{h 10} 表示按下 H 10 倍。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為沒有可啟動另一個應用程式的 managed 的方法，您可以使用這個類別，在目前應用程式或使用原生 Windows 方法，例如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>，強制將焦點放在其他應用程式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Windows.Forms.SendKeys&gt;類別已針對.NET Framework 3.0，以便能夠在 Windows Vista 執行的應用程式中使用已更新。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">如預期般，Windows Vista （又稱為使用者帳戶控制或 UAC） 的增強式的安全性可防止工作從之前的實作。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;類別容易受到時間問題，某些開發人員必須解決。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新的實作仍然容易受到時間問題，但是會稍微快一些，而且可能需要變更才能因應措施。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.SendKeys&gt; class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.SendKeys&gt;類別先嘗試使用之前的實作，以及如果失敗，請使用新的實作。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a result, the &lt;xref:System.Windows.Forms.SendKeys&gt; class may behave differently on different operating systems.</source>
          <target state="translated">如此一來，&lt;xref:System.Windows.Forms.SendKeys&gt;類別方式的行為可能在不同作業系統上。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Additionally, when the &lt;xref:System.Windows.Forms.SendKeys&gt; class uses the new implementation, the &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，當&lt;xref:System.Windows.Forms.SendKeys&gt;類別會使用新的實作，&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;方法將不會等候要傳送至另一個處理序時處理的訊息。&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; &lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果您的應用程式依賴一致的行為，不論作業系統為何，您可以強制&lt;xref:System.Windows.Forms.SendKeys&gt;類別，以使用新的實作方法是加入 app.config 檔案中的下列應用程式設定。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 強制&lt;xref:System.Windows.Forms.SendKeys&gt;類別使用之前的實作，使用值<ph id="ph4">`"JournalHook"`</ph>改用。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The string of keystrokes to send.</source>
          <target state="translated">要傳送的按鍵字串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>There is not an active application to send keystrokes to.</source>
          <target state="translated">沒有任何作用中傳送按鍵至應用程式。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keys&lt;/code&gt;</ph> does not represent valid keystrokes</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;keys&lt;/code&gt;</ph>不是有效的按鍵</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Sends the given keys to the active application, and then waits for the messages to be processed.</source>
          <target state="translated">傳送指定的按鍵至使用中的應用程式，並再等待要處理的訊息。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use SendWait to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</source>
          <target state="translated">使用 SendWait 將按鍵組合傳送到作用中的應用程式，並等待要處理的按鍵輸入訊息。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</source>
          <target state="translated">您可以使用這個方法來傳送按鍵至應用程式，並等候完成的按鍵啟動任何處理程序。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This can be important if the other application must finish before your application can continue.</source>
          <target state="translated">這可以是很重要，如果其他應用程式必須完成才能繼續執行您的應用程式。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為沒有可啟動另一個應用程式的 managed 的方法，您可以使用這個類別，在目前應用程式或使用原生 Windows 方法，例如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>，強制將焦點放在其他應用程式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Windows.Forms.SendKeys&gt;類別已針對.NET Framework 3.0，以便能夠在 Windows Vista 執行的應用程式中使用已更新。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">如預期般，Windows Vista （又稱為使用者帳戶控制或 UAC） 的增強式的安全性可防止工作從之前的實作。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;類別容易受到時間問題，某些開發人員必須解決。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新的實作仍然容易受到時間問題，但是會稍微快一些，而且可能需要變更才能因應措施。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.SendKeys&gt; class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.SendKeys&gt;類別先嘗試使用之前的實作，以及如果失敗，請使用新的實作。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>As a result, the &lt;xref:System.Windows.Forms.SendKeys&gt; class may behave differently on different operating systems.</source>
          <target state="translated">如此一來，&lt;xref:System.Windows.Forms.SendKeys&gt;類別方式的行為可能在不同作業系統上。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Additionally, when the &lt;xref:System.Windows.Forms.SendKeys&gt; class uses the new implementation, the SendWait method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，當&lt;xref:System.Windows.Forms.SendKeys&gt;類別使用新的實作、 SendWait 方法將不會等候要傳送至另一個處理序時處理的訊息。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果您的應用程式依賴一致的行為，不論作業系統為何，您可以強制&lt;xref:System.Windows.Forms.SendKeys&gt;類別，以使用新的實作方法是加入 app.config 檔案中的下列應用程式設定。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 強制&lt;xref:System.Windows.Forms.SendKeys&gt;類別使用之前的實作，使用值<ph id="ph4">`"JournalHook"`</ph>改用。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The string of keystrokes to send.</source>
          <target state="translated">要傳送的按鍵字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>