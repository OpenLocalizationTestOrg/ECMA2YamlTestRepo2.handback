<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15fcc10a38d11e8cf4f78a212ce2c850111af79e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlSchemaContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a17cc21f668d2bc3f2e7aa719b644a324bc9a04c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a62bdab0182a10917c82ce00ad3bd46758325ad3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">定義可重複使用內容解譯，或將 XAML 類型和構成這些組件中的型別對應。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">XAML 結構描述內容提供結構描述或詞彙，針對 XAML 和特定的剖析器實作之間的抽象的層。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">插入結構描述內容的概念、 結構描述可以搭配不同的 XAML 剖析器並結構描述內容填入所需的特定 XAML 剖析器與互動的詳細資料。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">例如，XAML 結構描述內容會提供查詢與 XAML 概念或 XAML 類型系統的 CLR 繫結相關的 Api。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">也負責維護載入的組件的組件清單會定義 XAML 剖析器尋找支援類型的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a set of reference assemblies.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，根據一組的參考組件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">組件資訊項目的可列舉集合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">每個組件資訊項目由指定&lt;xref:System.Reflection.Assembly&gt;值。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a settings object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，根據設定物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">設定物件會儲存文字轉換器和標記延伸模組的詳細資訊的結構描述內容的資訊。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Xaml.XamlSchemaContextSettings&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;.&lt;/xref:System.Xaml.XamlSchemaContextSettings&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The settings object to use to construct the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定要使用的物件來建構<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，根據一組參考組件和設定物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">組件資訊的可列舉集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">每個組件資訊項目由指定&lt;xref:System.Reflection.Assembly&gt;值。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The settings object to use to construct the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定要使用的物件來建構<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides a nonstandard <bpt id="p1">&lt;xref uid="langword_csharp_Finalize" name="Finalize" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that does not invoke <bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供的非標準<bpt id="p1">&lt;xref uid="langword_csharp_Finalize" name="Finalize" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>不叫用的實作<bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">自動記憶體回收，或是手動作業，不應該受到處置 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Although XAML schema contexts  have no unmanaged resources, &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">雖然 XAML 結構描述內容不有任何 unmanaged 的資源，但是&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;屬性可能仍在作用中，並處置 XAML 結構描述內容可能會干擾相關的延後載入作業。&lt;/xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AppDomain.AssemblyLoad&gt; event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated">&lt;xref:System.AppDomain.AssemblyLoad&gt;事件處理常式，其會做為弱式參考內部連結，此實作會清除。&lt;/xref:System.AppDomain.AssemblyLoad&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">取得值，指定是否 XAML 結構描述和其內容使用完整組件名稱查閱 API 所傳回的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.</source>
          <target state="translated">這個屬性會傳回&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;所建立的設定值&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;建構函式簽章。&lt;/xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; &lt;/xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If other signatures were used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; is not specifically set to <ph id="ph1">`true`</ph>, the value of this property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果其他的簽章用於建構或&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;不特別設<ph id="ph1">`true`</ph>，這個屬性的值是<ph id="ph2">`false`</ph>。&lt;/xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value of this property influences the strings that are returned by &lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;.</source>
          <target state="translated">這個屬性的值會影響&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;.&lt;/xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;所傳回的字串</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If FullyQualifyAssemblyNamesInClrNamespaces is <ph id="ph1">`true`</ph>, the assembly portion of the string reports the equivalent of &lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">如果是 FullyQualifyAssemblyNamesInClrNamespaces <ph id="ph1">`true`</ph>，字串的組件部分報告&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.&lt;/xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;的對等項目</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果 XAML 結構描述和其內容 Api; 該查詢所傳回的值中使用完整組件名稱否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Searches the assemblies that are held by this <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns a set of namespaces.</source>
          <target state="translated">搜尋此所持有的組件<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並傳回一組命名空間。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">如果它們透過建構或屬性的設定傳入這個方法只會搜尋參考組件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this &lt;xref:System.Xaml.XamlSchemaContext&gt; is active.</source>
          <target state="translated">如果任何組件不建立做為參考組件，這個方法的邏輯會檢查所有已載入的組件，這&lt;xref:System.Xaml.XamlSchemaContext&gt;為作用中。&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">命名空間識別項的可列舉集合。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">以字串的形式提供這些識別項。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Searches the assemblies that are held by this <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">搜尋此所持有的組件<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和傳回類型的集合，從指定的 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">傳回類型的 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">XAML 類型的可列舉集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each XAML type in the set is represented by a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">每個集合中的 XAML 型別由<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">取得會回報為取用者使用這些對應指定的 XAML 命名空間時的慣用前置詞的字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">最立即的取用者的資訊通常是 XAML 寫入器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">其他間接取用者包含設計工具。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying &lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt; at the assembly level.</source>
          <target state="translated">Common language runtime (CLR) 的 XAML 繫結的一部分，您可以指定這項資訊藉由套用&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;組件層級。&lt;/xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">若要取得的慣用前置詞 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">使用這些對應指定之標記的 XAML 命名空間時，取用者應該使用的字串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlns&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlns&lt;/code&gt;</ph>為 null。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示指示詞，為 XAML 語言或特定實作的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Override this method if you create a derived class from &lt;xref:System.Xaml.XamlDirective&gt; as part of a XAML type system extension scenario.</source>
          <target state="translated">如果您建立衍生的類別中覆寫這個方法&lt;xref:System.Xaml.XamlDirective&gt;XAML 類型系統的延伸案例的一部分。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">XAML 命名空間包含具名指示詞。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of the directive to obtain.</source>
          <target state="translated">若要取得指示詞的名稱。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the requested directive.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，代表所要求的指示詞。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a CLR type identifier.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>為基礎的 CLR 型別識別碼。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">這個多載會假設您使用 CLR 的支援類型系統。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you are not using the CLR type system, use &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;.</source>
          <target state="translated">如果您未使用的 CLR 型別系統，使用&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;.&lt;/xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The type to get a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">要取得之類型<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>符合輸入<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a XAML system type name.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>為基礎的 XAML 系統類型名稱。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The XAML type name to get a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">若要取得的 XAML 型別名稱<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>符合輸入<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlTypeName</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p1">&lt;/code&gt;</ept> (&lt;xref:System.Xaml.Schema.XamlTypeName.Name<bpt id="p2">*</bpt>&gt; or &lt;xref:System.Xaml.Schema.XamlTypeName.Namespace<ept id="p2">*</ept>&gt;) is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p1">&lt;/code&gt;</ept> (&lt;&gt;<bpt id="p2">*</bpt>&gt; or &lt;&gt;<ept id="p2">*</ept>&gt;) is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlTypeName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlTypeName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，根據 XAML 命名空間和類型名稱的字串。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">此簽章可以指定的型別引數的情況，所需的類型是泛型型別。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">XAML 命名空間，其中包含所需的類型。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The string name of the desired type.</source>
          <target state="translated">所需的類型字串名稱。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">泛型型別初始化型別引數。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input criteria.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>符合輸入的準則。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">作業會使用此結構描述內容來解析，才能解決它所包含的 XAML 命名空間的組件時呼叫。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the &lt;xref:System.Reflection.AssemblyName&gt; construction behavior.</source>
          <target state="translated">根據基礎的組件解析技術，這是內部的 API，有不同的字串形式的組件名稱的內建容錯&lt;xref:System.Reflection.AssemblyName&gt;建構行為。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">此 API 的目的是啟用第一個機會解析針對已知集組件，例如，針對參考組件而不是針對全域組件快取。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">如果已填入的參考組件清單的預設實作可以存取的已知的參考組件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The name of the assembly to load.</source>
          <target state="translated">要載入的組件名稱。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The resolved assembly.</source>
          <target state="translated">解析的組件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">取得可列舉集合的 XAML 結構描述內容的參考組件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">結構描述內容的參考組件的可列舉集合。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">每個組件資訊項目由指定&lt;xref:System.Reflection.Assembly&gt;值。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">取得指定的 XAML 結構描述和其內容是否支援有兩個建構函式相同的引數數目 （輸入參數數目） 的標記延伸的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.</source>
          <target state="translated">這個屬性會傳回&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;所建立的設定值&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;建構函式簽章。&lt;/xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; &lt;/xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If other signatures are used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; is not specifically set to <ph id="ph1">`true`</ph>, the value of this property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果其他的簽章可用來建構或&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;不特別設<ph id="ph1">`true`</ph>，這個屬性的值是<ph id="ph2">`false`</ph>。&lt;/xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">XAML 規格 [MS-XAML]，6.6.7.2 節，特別是無法解決重複 arity 的標記延伸。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">這是因為不論在標記延伸實作中可能存在的重複 arity 的標記延伸的 XAML 資訊項目形成等同。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">標記延伸的實際叫用及其<ph id="ph1">`ProvideValue`</ph>公開重複 arity 相關聯的任何問題。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">處理重複 arity 行為因此為未定義，且會維持到每個實作的 XAML 結構描述內容和 XAML 寫入器整合。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">預設 XAML 結構描述內容的.NET Framework XAML 服務作業實作不支援重複的引數數目。處理具有基礎重複 arity 的標記延伸使用方式時，各種不同的.NET Framework XAML 服務 Api 將會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需定義標記延伸的詳細資訊，請參閱<bpt id="p1">[</bpt>標記延伸 XAML 概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schema context permits markup extensions that have duplicate arity; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果結構描述內容允許有重複 arity; 的標記延伸否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">傳回成功或失敗的要求相容的 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">成功的要求會報告該 XAML 命名空間，做為 out 參數。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Internally, this method uses the following lookup order:      1.</source>
          <target state="translated">就內部而言，這個方法會使用下列搜尋順序︰ 1。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">已透過先前的查詢填入內部實作的相容性字典。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt; parameter evaluation.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;參數評估。&lt;/xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">如果不找到任何其他相容的命名空間，這個方法會傳回<ph id="ph1">`false`</ph>、<ph id="ph2">`compatibleNamespace`</ph>參數輸出可能會有相同的值<ph id="ph3">`xamlNamespace`</ph>輸入。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 命名空間是要檢查相容的結果字串。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, the <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string for a compatible XAML namespace request.</source>
          <target state="translated">此方法傳回時， <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>相容的 XAML 命名空間要求的字串。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This might be identical to <ph id="ph1">`xamlNamespace`</ph> if the method returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這可能是等於<ph id="ph1">`xamlNamespace`</ph>如果該方法會傳回<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">compatibleNamespace</ph><ept id="p2">&lt;/code&gt;</ept> contains a usable result; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">compatibleNamespace</ph> <ept id="p2">&lt;/code&gt;</ept>包含可用的結果，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>