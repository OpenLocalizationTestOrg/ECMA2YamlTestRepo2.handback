<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e380be4474237c2f088cb14445641a67f71425b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.ParameterizedThreadStart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46773aa3a880c892075b4e961922644b90ed743e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44c10de7aee5cd9759c15f18c6f0a26c87b5d110</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that executes on a <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">代表在執行的方法<bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When a managed thread is created, the method that executes on the thread is represented by:      -   A &lt;xref:System.Threading.ThreadStart&gt; delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">建立 managed 的執行緒時，所表示的執行緒執行的方法:-&lt;xref:System.Threading.ThreadStart&gt;委派傳遞給&lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt;建構函式。&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; &lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Any method that has no parameters and that returns <ph id="ph1">`void`</ph> in C# or is a <ph id="ph2">`Sub`</ph> procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">任何方法沒有參數並傳回<ph id="ph1">`void`</ph>在 C# 或<ph id="ph2">`Sub`</ph>在 Visual Basic 中的程序可以表示的委派。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   A ParameterizedThreadStart delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">-A ParameterizedThreadStart 委派傳遞給&lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;建構函式。&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Any method that has a single parameter of type &lt;xref:System.Object&gt; and that returns void in C# or is a Sub procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">具有單一參數類型的任何方法&lt;xref:System.Object&gt;，而且可傳回 void，在 C# 或 Visual Basic 中的子程序可代表委派。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The thread does not begin executing until the &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">執行緒不會開始執行之前&lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;方法呼叫。&lt;/xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate is invoked on the thread, and execution begins at the first line of the method represented by the delegate.</source>
          <target state="translated">&lt;xref:System.Threading.ThreadStart&gt;或 ParameterizedThreadStart 委派執行緒上叫用，委派所表示之方法的第一行中開始執行。&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the case of the ParameterizedThreadStart delegate, the object that is passed to the &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt; method is passed to the delegate.</source>
          <target state="translated">如果是 ParameterizedThreadStart 委派物件傳遞至&lt;xref:System.Threading.Thread.Start%28System.Object%29&gt;方法傳遞給委派。&lt;/xref:System.Threading.Thread.Start%28System.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Visual Basic and C# users can omit the &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate constructor when creating a thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 可以省略 Visual Basic 和 C# 使用者&lt;xref:System.Threading.ThreadStart&gt;或 ParameterizedThreadStart 委派建構函式建立執行緒時。&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the &lt;xref:System.Threading.Thread.%23ctor%2A&gt; constructor; for example, <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">在 Visual Basic 使用<ph id="ph1">`AddressOf`</ph>運算子傳遞自己的方法時&lt;xref:System.Threading.Thread.%23ctor%2A&gt;建構函式，例如<ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>。&lt;/xref:System.Threading.Thread.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">在 C# 中，只需要指定執行緒的程序的名稱。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">編譯器會選擇正確的委派建構函式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you create a ParameterizedThreadStart delegate for an instance method in C++, the first parameter of the constructor is the instance variable.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的第一個參數的建構函式建立時 ParameterizedThreadStart 委派執行個體方法的 c + + 中，是執行個體變數。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For a static method, the first parameter of the constructor is zero.</source>
          <target state="translated">對於靜態方法，建構函式的第一個參數為零。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a static method, the delegate constructor requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">對於靜態方法，委派建構函式只需要一個參數︰ 回呼方法，類別名稱所限定的位址。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The ParameterizedThreadStart delegate and the &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; method overload make it easy to pass data to a thread procedure, but this technique is not type safe because any object can be passed to &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">ParameterizedThreadStart 委派，並&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;輕鬆地將資料傳遞給執行緒的程序，但這項技術是不是類型安全，因為任何物件可以傳遞至&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;。&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;方法多載請&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</source>
          <target state="translated">將執行緒的程序與資料欄位放入背景工作物件是更穩固的方式，將資料傳遞給執行緒的程序。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>建立執行緒和開始時間傳遞資料<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ParameterizedThreadStart delegate supports only a single parameter.</source>
          <target state="translated">ParameterizedThreadStart 委派支援只有一個參數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can pass multiple data items to the ParameterizedThreadStart by making that parameter one of the following:      -   An array.</source>
          <target state="translated">您可以將多個資料欄位至 ParameterizedThreadStart 藉由下列其中一個參數:-的陣列。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   A collection type, if all of the data items are of the same type.</source>
          <target state="translated">的如果所有資料的項目都是相同類型集合類型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   A tuple type, such as &lt;xref:System.Tuple%602&gt; or &lt;xref:System.Tuple%604&gt;.</source>
          <target state="translated">位元組型別，例如&lt;xref:System.Tuple%602&gt;或&lt;xref:System.Tuple%604&gt;.&lt;/xref:System.Tuple%604&gt; &lt;/xref:System.Tuple%602&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>