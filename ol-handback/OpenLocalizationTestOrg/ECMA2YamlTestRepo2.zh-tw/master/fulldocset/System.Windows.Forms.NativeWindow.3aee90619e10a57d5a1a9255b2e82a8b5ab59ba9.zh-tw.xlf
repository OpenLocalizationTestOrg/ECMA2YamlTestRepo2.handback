<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da3f5e768d7b79b86950d81fdcfab1f93b1ef198</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.NativeWindow.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d918613cbc30ebe4b658446b504a86cb511684c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e18895f06f339bfde3bd4084de4643a9542e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a low-level encapsulation of a window handle and a window procedure.</source>
          <target state="translated">提供低階封裝的視窗控制代碼與視窗程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class automatically manages window class creation and registration.</source>
          <target state="translated">這個類別會自動管理視窗類別建立與註冊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A window is not eligible for garbage collection when it is associated with a window handle.</source>
          <target state="translated">與視窗控制代碼相關聯時，就無法進行記憶體回收的視窗。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To ensure proper garbage collection, handles must either be destroyed manually using &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; or released using &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">若要確保適當的記憶體回收，控制代碼必須被終結使用手動&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;或釋出使用&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; method is called when the WM_NCDESTROY message is processed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;控制訊息處理時，呼叫方法。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means there are cases in which when you do not need to manually call &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;, but it is good practice to do so.</source>
          <target state="translated">這表示在當您不需要手動呼叫的情況下&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;，但它是不錯的作法，並未&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The NativeWindow class provides the following properties and methods to manage handles: &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;, and &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">NativeWindow 類別提供了下列屬性和方法，以管理控制代碼︰ &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;，和&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的執行個體<bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is the default NativeWindow constructor provided by the compiler.</source>
          <target state="translated">這是由編譯器提供的預設 NativeWindow 建構函式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.NativeWindow&gt; class also has a static constructor that initializes application domain-wide message handlers and hash tables.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow&gt;類別也有靜態的建構函式，以初始化應用程式全網域的訊息處理常式和雜湊表。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Assigns a handle to this window.</source>
          <target state="translated">指派到這個視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt; intercepts window messages sent to the <ph id="ph1">`handle`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;攔截視窗訊息傳送至<ph id="ph1">`handle`</ph>參數。&lt;/xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; to reset the handle's window procedure to the default window procedure.</source>
          <target state="translated">使用&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;重設為預設視窗程序的控制代碼的視窗程序。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The AssignHandle method calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to indicate that the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">AssignHandle 方法呼叫&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;方法表示的值&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;屬性已變更。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The handle to assign cannot be in a different application process.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 中不同的應用程式處理序不能指派的控制代碼。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handle to assign to this window.</source>
          <target state="translated">若要指派給此視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This window already has a handle.</source>
          <target state="translated">這個視窗已經有控制代碼。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The windows procedure for the associated native window could not be retrieved.</source>
          <target state="translated">無法擷取相關聯的原生視窗的視窗程序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a window and its handle with the specified creation parameters.</source>
          <target state="translated">建立視窗和其控制代碼與指定的建立參數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cp`</ph> parameter specifies the values that are passed to the native Win32 <ph id="ph2">`CreateWindowEx`</ph> method to create a window and its handle.</source>
          <target state="translated"><ph id="ph1">`cp`</ph>參數指定的值傳遞至原生 Win32<ph id="ph2">`CreateWindowEx`</ph>方法來建立其控制代碼和視窗。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; field is not <ph id="ph1">`null`</ph>, the newly created window handle inherits from the specified class.</source>
          <target state="translated">當&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;欄位不是<ph id="ph1">`null`</ph>，繼承自指定類別的新建立的視窗控制代碼&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, if &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; is set to <ph id="ph1">`BUTTON`</ph>, the newly created window is based on the Win32 <ph id="ph2">`BUTTON`</ph> window class.</source>
          <target state="translated">例如，如果&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;設為<ph id="ph1">`BUTTON`</ph>，新建立的視窗根據 Win32<ph id="ph2">`BUTTON`</ph>視窗類別&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt; property of the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; object must either be <ph id="ph1">`null`</ph> or reference an instance of a class that was declared as a structure.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;屬性&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;物件必須是<ph id="ph1">`null`</ph>或參考的已宣告為結構的類別執行個體。&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; &lt;/xref:System.Windows.Forms.CreateParams.Param%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This code is an excerpt from the example shown in the &lt;xref:System.Windows.Forms.NativeWindow&gt; class overview.</source>
          <target state="translated">此程式碼是摘錄自中顯示的範例&lt;xref:System.Windows.Forms.NativeWindow&gt;類別概觀。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">為了簡潔起見，不會顯示一些程式碼。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Forms.NativeWindow&gt; for the whole code listing.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Forms.NativeWindow&gt;整個程式碼清單。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The class name provided is registered with the operating system.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 所提供的類別名稱向作業系統註冊。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the creation parameters for this window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指定此視窗的建立參數。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The operating system ran out of resources when trying to create the native window.</source>
          <target state="translated">嘗試建立原生視窗時，作業系統會已用完資源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The native Win32 API could not create the specified window.</source>
          <target state="translated">原生 Win32 API 無法建立指定的視窗。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The handle of the current native window is already assigned; in explanation, the &lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt; property is not equal to &lt;xref:System.IntPtr.Zero&gt;.</source>
          <target state="translated">已指定目前的原生視窗的控制代碼;中的&lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt;屬性是否不等於&lt;xref:System.IntPtr.Zero&gt;.&lt;/xref:System.IntPtr.Zero&gt;&lt;/xref:System.Windows.Forms.NativeWindow.Handle*&gt;的說明</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">叫用此視窗相關聯的預設視窗程序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Typically, you only call the DefWndProc method when you are intercepting window messages and would like the default window procedure to handle the message.</source>
          <target state="translated">一般而言，只有 DefWndProc 時呼叫方法，您會攔截視窗訊息，而且想要以處理訊息的預設視窗程序。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>DefWndProc should not be called to send a window message to the window; call the Win32 <ph id="ph1">`SendMessage`</ph> function instead.</source>
          <target state="translated">不應該將視窗訊息傳送至視窗; 呼叫 DefWndProc呼叫 Win32<ph id="ph1">`SendMessage`</ph>函式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It is an error to call DefWndProc when the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property is 0.</source>
          <target state="translated">它會呼叫 DefWndProc 發生錯誤時&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;屬性為 0。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The message that is currently being processed.</source>
          <target state="translated">目前正在處理訊息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Destroys the window and its handle.</source>
          <target state="translated">終結視窗和其控制代碼。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This method destroys the window associated with the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0, and calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to reflect the change.</source>
          <target state="translated">這個方法會終結與關聯的視窗&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;，設定&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;屬性設為 0，並呼叫&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;方法，以反映變更。&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Typically, you only call DestroyHandle when you are done with the native window.</source>
          <target state="translated">通常您只會呼叫 DestroyHandle 當您在使用原生的視窗。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow&gt; class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Windows.Forms.NativeWindow&gt;類別會自動將損毀相關聯的視窗並釋放其資源，以回應 WM_DESTROY 訊息。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with this window.</source>
          <target state="translated">釋放與此視窗相關聯的資源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Finalize method removes the Win32 derived class associated with the current &lt;xref:System.Windows.Forms.NativeWindow&gt; instance, releases the handle, and posts a WM_CLOSE message to the associated window.</source>
          <target state="translated">Finalize 方法移除目前相關聯的 Win32 衍生類別&lt;xref:System.Windows.Forms.NativeWindow&gt;執行個體，釋放的控制代碼，並將 WM_CLOSE 訊息張貼至相關聯的視窗。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves the window associated with the specified handle.</source>
          <target state="translated">擷取與指定的控制代碼關聯的視窗。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a handle from another method, use this method to retrieve the window associated with the handle.</source>
          <target state="translated">如果您接收的控制代碼的另一種方法時，使用這個方法來擷取與控制代碼關聯的視窗。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The handle must already be owned by another &lt;xref:System.Windows.Forms.NativeWindow&gt; in the current process; otherwise, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">控制代碼必須已經由另一個擁有&lt;xref:System.Windows.Forms.NativeWindow&gt;在目前處理，否則<ph id="ph1">`null`</ph>傳回。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A handle to a window.</source>
          <target state="translated">視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified handle.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與指定的控制代碼相關聯。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the handle does not have an associated window.</source>
          <target state="translated">這個方法會傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>時控制代碼沒有相關聯的視窗。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the handle for this window.</source>
          <target state="translated">取得此視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Use this method when calling Windows API methods that require a handle for a window or control.</source>
          <target state="translated">呼叫 Windows API 方法需要之控制代碼的視窗或控制項時，請使用這個方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If successful, an &lt;xref:System.IntPtr&gt; representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</source>
          <target state="translated">如果成功的話，&lt;xref:System.IntPtr&gt;代表控制代碼相關聯的原生 Win32 視窗; 否則即為 0，如果沒有控制代碼與視窗相關聯。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies a notification method that is called when the handle for a window is changed.</source>
          <target state="translated">指定視窗的控制代碼已變更時呼叫的通知方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is invoked when the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">這個方法會叫用時的值&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;屬性已變更。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, manages an unhandled thread exception.</source>
          <target state="translated">當在衍生類別中覆寫時，會管理執行緒未處理例外狀況。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Typically, &lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt; handles thread exceptions.</source>
          <target state="translated">一般而言，&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;控制代碼的執行緒例外狀況。&lt;/xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that specifies the unhandled thread exception.</source>
          <target state="translated">&lt;xref:System.Exception&gt;所指定的執行緒未處理例外狀況。&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the handle associated with this window.</source>
          <target state="translated">釋放與此視窗相關聯的控制代碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method does not destroy the window handle.</source>
          <target state="translated">這個方法不會終結的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, it sets the handle's window procedure to the default window procedure.</source>
          <target state="translated">相反地，它將控制代碼的視窗程序設定為預設視窗程序。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0 and calls &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; to reflect the change.</source>
          <target state="translated">它會設定&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;屬性設為 0 並呼叫&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;以反映變更。&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</source>
          <target state="translated">視窗會自動呼叫這個方法，如果收到指出 Windows 已終結的控制代碼的原生 Win32 控制訊息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">叫用此視窗相關聯的預設視窗程序。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This method is called when a window message is sent to the handle of the window.</source>
          <target state="translated">視窗訊息傳送至視窗的控制代碼時，會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with the current Windows message.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與目前的 Windows 訊息相關聯。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>