<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">240cb01b67f3abf3da391c82f2d161450765f3a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f34c5406c822ebc58926a76c691f68573b60879</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2049bca0cb4e08ccb7c2174b1d632ea6a401253f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a WPF framework-level set of properties, events, and methods for <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elements.</source>
          <target state="translated">提供屬性、 事件和方法的 WPF 架構層級組<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class represents the provided WPF framework-level implementation that is built on the WPF core-level <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> that are defined by <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此類別代表所提供的 WPF 架構層級實作建置 WPF 核心層級的<ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph>所定義<bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>FrameworkElement is the connecting point between WPF framework-level element classes and the WPF core-level set of &lt;xref:System.Windows.UIElement&gt; presentation services.</source>
          <target state="translated">FrameworkElement 是 WPF 架構層級項目類別以及的 WPF 核心層級設定之間的連接點&lt;xref:System.Windows.UIElement&gt;展示服務。&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about these concepts, see <bpt id="p1">[</bpt>WPF Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關這些概念的詳細資訊，請參閱<bpt id="p1">[</bpt>WPF 架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>FrameworkElement extends &lt;xref:System.Windows.UIElement&gt; and adds the following capabilities:      -   <bpt id="p1">**</bpt>Layout system definition<ept id="p1">**</ept>: FrameworkElement provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">FrameworkElement 擴充&lt;xref:System.Windows.UIElement&gt;並加入下列功能:-<bpt id="p1">**</bpt>版面配置系統定義<ept id="p1">**</ept>: FrameworkElement 提供特定的 WPF 架構層級實作某些方法&lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;中的虛擬成員所定義的&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most notably, FrameworkElement seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead.</source>
          <target state="translated">最值得注意的是，FrameworkElement 密封特定 WPF 核心層級配置覆寫，並改為提供 WPF 架構層級對等項目，衍生類別應該改為覆寫。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, FrameworkElement seals &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; but provides &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.</source>
          <target state="translated">例如，FrameworkElement 密封&lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;但提供&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any FrameworkElement derived class.</source>
          <target state="translated">這些變更會反映在 WPF 架構層級沒有完整的版面配置系統可呈現任何 FrameworkElement 備妥的事實衍生的類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>At the WPF core level, certain members that will structure a general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> based layout solution are in place, but the actual engine of the layout system is not defined.</source>
          <target state="translated">在 WPF 核心層級，特定的成員，將結構一般<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>根據的配置方案的位置，但未定義的版面配置系統實際引擎。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>配置<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>The logical tree:<ept id="p1">**</ept> The general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> programming model is often expressed in terms of being a tree of elements.</source>
          <target state="translated">-<bpt id="p1">**</bpt>邏輯樹狀結構︰<ept id="p1">**</ept>一般<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>程式設計模型通常表示在樹狀目錄中的項目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the FrameworkElement level.</source>
          <target state="translated">隨附在標記中定義該樹狀結構的支援 FrameworkElement 層級實作與支援表示邏輯樹狀結構的項目樹狀結構。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Note however that FrameworkElement deliberately does not define a content model, and leaves that responsibility to derived classes.</source>
          <target state="translated">但是請注意 FrameworkElement 刻意未定義內容的模型，而且會保留該衍生類別的責任。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>中 WPF 樹狀架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Object lifetime events:<ept id="p1">**</ept> It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree.</source>
          <target state="translated">-<bpt id="p1">**</bpt>物件存留期的事件︰<ept id="p1">**</ept>通常是很有幫助 初始化項目時 （稱為建構函式），或項目時先載入到邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>FrameworkElement defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements.</source>
          <target state="translated">FrameworkElement 定義數個事件物件存留期與相關，提供有用的攔截程序牽涉到項目，例如新增更多的子元素的程式碼後置作業。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>物件存留期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Support for data binding and dynamic resource references:<ept id="p1">**</ept> The property-level support for data binding and resources is implemented by the &lt;xref:System.Windows.DependencyProperty&gt; class and embodied in the property system, but the ability to resolve a member value that is stored as an &lt;xref:System.Windows.Expression&gt; (the programming construct that underlies both data binding and dynamic resources) is implemented by FrameworkElement.</source>
          <target state="translated">-<bpt id="p1">**</bpt>支援資料繫結和動態資源參考︰<ept id="p1">**</ept>屬性層級的支援資料繫結和資源實作由&lt;xref:System.Windows.DependencyProperty&gt;類別和屬性系統，但能夠解析成員值儲存為具體化&lt;xref:System.Windows.Expression&gt;（做為資料繫結和動態資源的程式設計建構） 藉由 FrameworkElement。&lt;/xref:System.Windows.Expression&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>XAML 資源<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Styles:<ept id="p1">**</ept> FrameworkElement defines the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.</source>
          <target state="translated">-<bpt id="p1">**</bpt>樣式︰<ept id="p1">**</ept> FrameworkElement 定義&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, FrameworkElement does not yet define support for templates, or support decorators.</source>
          <target state="translated">不過，FrameworkElement 還不會定義支援範本，或支援裝飾項目。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These features are introduced by control classes such as &lt;xref:System.Windows.Controls.Control&gt; and &lt;xref:System.Windows.Controls.ContentControl&gt;.</source>
          <target state="translated">控制項類別，例如&lt;xref:System.Windows.Controls.Control&gt;和&lt;xref:System.Windows.Controls.ContentControl&gt;.&lt;/xref:System.Windows.Controls.ContentControl&gt;&lt;/xref:System.Windows.Controls.Control&gt;所導入這些功能</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>More animation support:<ept id="p1">**</ept> Some animation support was already defined at the WPF core level, but FrameworkElement extends this by implementing &lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt; and related members.</source>
          <target state="translated">-<bpt id="p1">**</bpt>更多的動畫支援︰<ept id="p1">**</ept>某些動畫支援已定義在 WPF 核心層級，但 FrameworkElement 延伸此實作&lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;和相關的成員。&lt;/xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As can be seen from the class hierarchy, many <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> classes derive from FrameworkElement, either directly or through intermediate base classes such as &lt;xref:System.Windows.Controls.Panel&gt; or &lt;xref:System.Windows.Controls.Control&gt;.</source>
          <target state="translated">從類別階層架構，可以看出許多<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>從 FrameworkElement，直接或透過中繼的基底類別，例如&lt;xref:System.Windows.Controls.Panel&gt;或&lt;xref:System.Windows.Controls.Control&gt;.&lt;/xref:System.Windows.Controls.Control&gt;&lt;/xref:System.Windows.Controls.Panel&gt;衍生的類別</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you intend to use FrameworkElement as a base class, you might want to first examine the existing derived classes.</source>
          <target state="translated">如果您想要 FrameworkElement 做為基底類別，您可能想要先檢查現有的衍生的類別。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>FrameworkElement provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an "element" in the sense of a building block that you use to create <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">FrameworkElement 的基本案例中，提供支援，但也缺少一些功能 」 中的項目 」 的意義的建置組塊，用來建立適合<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>中<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For instance, a FrameworkElement does not define any true content model; FrameworkElement as a base class does not define a property that can create <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> child elements.</source>
          <target state="translated">比方說，FrameworkElement 並未定義任何真實的內容模型。FrameworkElement 的基底類別不會定義可以建立內容<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>子項目。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In particular, you might want to look at &lt;xref:System.Windows.Controls.Control&gt; and &lt;xref:System.Windows.Controls.ContentControl&gt;.</source>
          <target state="translated">特別是，您可能想要查看&lt;xref:System.Windows.Controls.Control&gt;和&lt;xref:System.Windows.Controls.ContentControl&gt;。&lt;/xref:System.Windows.Controls.ContentControl&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the rendered height of this element.</source>
          <target state="translated">取得這個項目的呈現的高度。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This property is a calculated value based on other height inputs, and the layout system.</source>
          <target state="translated">這個屬性是其他高度輸入和版面配置系統為基礎的導出的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; that are the basis of the input change.</source>
          <target state="translated">值，由配置系統本身，根據實際呈現階段，並可能因此落後稍微設定值的屬性例如&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;所輸入變更的基礎。&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because ActualHeight is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">因為 ActualHeight 是計算的值，您應該注意可能有多個，或累加變更，各種作業之後所報告的版面配置系統。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">版面配置系統可能會計算所需的量值的空間項目子系、 條件約束的父項目，依此類推。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a &lt;xref:System.Windows.Trigger&gt; upon its value in a style.</source>
          <target state="translated">雖然您無法設定此屬性從<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，您可以根據&lt;xref:System.Windows.Trigger&gt;樣式中的值。&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The element's height, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的高度，以值<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value is 0 (zero).</source>
          <target state="translated">預設值為 0 （零）。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ActualHeight*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.ActualHeight*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.ActualHeight*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the rendered width of this element.</source>
          <target state="translated">取得這個項目的呈現的寬度。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This property is a calculated value based on other width inputs, and the layout system.</source>
          <target state="translated">這個屬性是其他寬度輸入和版面配置系統為基礎的導出的值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; that are the basis of the input change.</source>
          <target state="translated">值，由配置系統本身，根據實際呈現階段，並可能因此落後稍微設定值的屬性例如&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;所輸入變更的基礎。&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because ActualWidth is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">因為 ActualWidth 是計算的值，您應該注意可能有多個，或累加變更，各種作業之後所報告的版面配置系統。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">版面配置系統可能會計算所需的量值的空間項目子系、 條件約束的父項目，依此類推。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a &lt;xref:System.Windows.Trigger&gt; upon its value in a style.</source>
          <target state="translated">雖然您無法設定此屬性從<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，您可以根據&lt;xref:System.Windows.Trigger&gt;樣式中的值。&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The element's width, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的寬度，以值<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default value is 0 (zero).</source>
          <target state="translated">預設值為 0 （零）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ActualWidth*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.ActualWidth*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.ActualWidth*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adds the provided object to the logical tree of this element.</source>
          <target state="translated">將所提供的物件加入至這個項目的邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use this method for the implementation of collections on objects that represent logical child elements of an element.</source>
          <target state="translated">使用這個方法的物件，代表項目的邏輯子項目集合的實作。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.</source>
          <target state="translated">屬性 getter 或 setter，處理已變更事件，建構函式，或將集合型別本身內的類別可能透過集合維護的子元素的集合。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario.</source>
          <target state="translated">控制作者的處理邏輯樹狀結構，此層級不是建議的作法，除非可用控制項的基底類別的內容模型都適用於程式控制項案例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Consider subclassing at the level of &lt;xref:System.Windows.Controls.ContentControl&gt;, &lt;xref:System.Windows.Controls.ItemsControl&gt;, and &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;.</source>
          <target state="translated">請考慮在層級的子類別化&lt;xref:System.Windows.Controls.ContentControl&gt;， &lt;xref:System.Windows.Controls.ItemsControl&gt;，和&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;。&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; &lt;/xref:System.Windows.Controls.ItemsControl&gt; &lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These classes provide a content model with particular enforcement of logical tree child elements through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">這些類別提供特定的強制執行的邏輯樹狀結構子項目，透過專用的內容模型<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>，以及通常希望出現在其他功能的支援<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>控制項，例如透過範本的樣式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information on how to use &lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt; and AddLogicalChild, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關如何使用&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;和 AddLogicalChild，請參閱<bpt id="p1">[</bpt>中 WPF 樹狀架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>AddLogicalChild may throw an exception if called at a time when the logical tree is being iterated by another process.</source>
          <target state="translated">AddLogicalChild 可能擲回例外狀況，如果呼叫時之邏輯樹狀結構正在反覆執行另一個處理序一次。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Child element to be added.</source>
          <target state="translated">要加入的子項目。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</source>
          <target state="translated">建置目前範本的視覺化樹狀結構，如有必要，並傳回值，指出此呼叫是否已重建視覺化樹狀結構。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Applications can call this method to guarantee that the visual tree of an element is complete.</source>
          <target state="translated">應用程式可以呼叫這個方法，以保證視覺化樹狀結構項目的已完成。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This guarantee step might be necessary if code will be checking the child elements in the tree.</source>
          <target state="translated">此保證步驟可能需要如果程式碼會檢查樹狀結構中的子項目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For typical element logic within applications, calling ApplyTemplate is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.</source>
          <target state="translated">典型的項目邏輯的應用程式中，呼叫 ApplyTemplate 並非必要，因為範本將會在適當的時間點的項目在其存留期自動套用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ApplyTemplate is called on every Measure pass by the WPF framework-level layout system.</source>
          <target state="translated">每個量值上呼叫 ApplyTemplate 傳 WPF 架構層級配置系統。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; derived classes can use the &lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt; class handler to be notified of cases where this method was called explicitly, or by the layout system.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;在衍生的類別可以使用&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;的情況下，明確地呼叫這個方法後，或由配置系統通知的類別處理常式。&lt;/xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt; is called after the template is completely generated and attached to the logical tree.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;是範本完全產生，並附加至邏輯樹狀結構後呼叫。&lt;/xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if visuals were added to the tree; returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果視覺項目已加入到樹狀結構。傳回<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>否則。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Implements &lt;xref:System.Windows.UIElement.ArrangeCore*&gt; (defined as virtual in <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and seals the implementation.</source>
          <target state="translated">實作&lt;xref:System.Windows.UIElement.ArrangeCore*&gt;(定義為在虛擬<bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) 和根據實作。&lt;/xref:System.Windows.UIElement.ArrangeCore*&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method is sealed.</source>
          <target state="translated">這個方法是密封格式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In order to override the logic in your custom element specifically for the arrange pass of element layout, your &lt;xref:System.Windows.FrameworkElement&gt; derived class must override &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.</source>
          <target state="translated">若要覆寫項目配置，您的&lt;xref:System.Windows.FrameworkElement&gt;衍生的類別必須覆寫&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;&lt;/xref:System.Windows.FrameworkElement&gt;的排列傳遞特別針對您自訂項目中的邏輯</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">這個項目應該用來排列本身和其子系之父系內的最終區域。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, positions child elements and determines a size for a <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class.</source>
          <target state="translated">在衍生類別中覆寫，放置子項目，並決定的大小<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>衍生的類別。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">這個項目應該用來排列本身和其子系之父系內的最終區域。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual size used.</source>
          <target state="translated">使用的實際大小。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Starts the initialization process for this element.</source>
          <target state="translated">啟動初始化處理程序的這個項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree.</source>
          <target state="translated">如果您正在調整它們的方式仍未公開或連線到任何項目樹狀結構項目，您可以在個別的項目上呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For instance, you might have created a new &lt;xref:System.Windows.FrameworkElement&gt;, but have not yet attached it to any logical tree.</source>
          <target state="translated">比方說，您可能已建立新&lt;xref:System.Windows.FrameworkElement&gt;，但不是尚未將它附加到任何邏輯樹狀結構。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</source>
          <target state="translated">或者，您的項目所在的子元素，在其中之邏輯樹狀結構可能未連線至視窗或應用程式頁面。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions that are contained in the provided storyboard.</source>
          <target state="translated">開始所提供的分鏡腳本中所包含的動作順序。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">最常見的動畫案例不會使用這個方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常您會建立&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素標記，然後再將這些做為&lt;xref:System.Windows.EventTrigger&gt;內容項目上。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">事件所觸發，動畫就會執行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">在控制方面的大部分&lt;xref:System.Windows.Media.Animation.Storyboard&gt;標記中公開的屬性可以定址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">請勿使用簽章<ph id="ph1">`isControllable`</ph>，參數，或指定該參數時， <ph id="ph2">`false`</ph>，一旦動畫到達"填滿 」 期間，會移除相關聯的動畫時間軸時鐘。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此動畫無法重新啟動之後執行一次。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">控制動畫也必須要有分鏡腳本<bpt id="p1">[</bpt>X:name 指示詞<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可供程式碼中參考。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要開始分鏡腳本。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</source>
          <target state="translated">開始使用選項指定如果屬性已有動畫效果要採取的動作中提供的分鏡腳本，包含的動作順序。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">最常見的動畫案例不會使用這個方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常您會建立&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素標記，然後再將這些做為&lt;xref:System.Windows.EventTrigger&gt;內容項目上。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">事件所觸發，動畫就會執行。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">在控制方面的大部分&lt;xref:System.Windows.Media.Animation.Storyboard&gt;標記中公開的屬性可以定址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">請勿使用簽章<ph id="ph1">`isControllable`</ph>，參數，或指定該參數時， <ph id="ph2">`false`</ph>，一旦動畫到達"填滿 」 期間，會移除相關聯的動畫時間軸時鐘。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此動畫無法重新啟動之後執行一次。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">控制動畫也必須要有分鏡腳本<bpt id="p1">[</bpt>X:name 指示詞<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可供程式碼中參考。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Handoff behavior can be specified as an attribute of &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.</source>
          <target state="translated">遞移式行為可指定為&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.&lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt;的屬性</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property by using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">撰寫 HandoffBehavior 時使用您套用&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;屬性使用&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，任何&lt;xref:System.Windows.Media.Animation.Clock&gt;之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統不會自動移除時鐘。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks by using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您藉由套用大量時鐘&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，在它們完成之後，您應該從動畫屬性移除組成的時鐘。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock:      -   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">有數種方式可移除時鐘:-若要從屬性移除所有時鐘，請使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;動畫物件的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">這會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要移除&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的時鐘，清單中使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;屬性&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;來擷取&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然後呼叫此&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;特定</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">這通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;時鐘的事件處理常式。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子時鐘的屬性會傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;是否有效的持續時間的時鐘永遠不會引發事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In that case, the user must determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這是主要的動畫長的存留期的物件上的問題。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要開始分鏡腳本。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">描述使用分鏡腳本中所述的屬性已有動畫效果的行為在列舉值。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</source>
          <target state="translated">開始提供分鏡腳本的指定控制項的動畫啟動之後的狀態中包含的動作順序。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">最常見的動畫案例不會使用這個方法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常您會建立&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素標記，然後再將這些做為&lt;xref:System.Windows.EventTrigger&gt;內容項目上。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">事件所觸發，動畫就會執行。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">在控制方面的大部分&lt;xref:System.Windows.Media.Animation.Storyboard&gt;標記中公開的屬性可以定址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">請勿使用簽章<ph id="ph1">`isControllable`</ph>，參數，或指定該參數時， <ph id="ph2">`false`</ph>，一旦動畫到達"填滿 」 期間，會移除相關聯的動畫時間軸時鐘。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此動畫無法重新啟動之後執行一次。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">控制動畫也必須要有分鏡腳本<bpt id="p1">[</bpt>X:name 指示詞<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可供程式碼中參考。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Handoff behavior can be specified as an attribute of &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.</source>
          <target state="translated">遞移式行為可指定為&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.&lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt;的屬性</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property by using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">撰寫 HandoffBehavior 時使用您套用&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;屬性使用&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，任何&lt;xref:System.Windows.Media.Animation.Clock&gt;之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統不會自動移除時鐘。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks by using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您藉由套用大量時鐘&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，在它們完成之後，您應該從動畫屬性移除組成的時鐘。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock:      -   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">有數種方式可移除時鐘:-若要從屬性移除所有時鐘，請使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;動畫物件的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">這會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要移除&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的時鐘，清單中使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;屬性&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;來擷取&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然後呼叫此&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;特定</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">這通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;時鐘的事件處理常式。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子時鐘的屬性會傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;是否有效的持續時間的時鐘永遠不會引發事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In that case, the user must determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這是主要的動畫長的存留期的物件上的問題。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要開始分鏡腳本。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">描述使用分鏡腳本中所述的屬性已有動畫效果的行為在列舉值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Declares whether the animation is controllable (can be paused) after it is started.</source>
          <target state="translated">宣告動畫是否可控制 （暫停） 啟動後。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used for the element.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>所用的項目。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Data.BindingGroup&gt; can be used to validate the values of multiple properties of an object.</source>
          <target state="translated">A&lt;xref:System.Windows.Data.BindingGroup&gt;可以用來驗證物件的多個屬性的值。&lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For example, suppose that an application prompts the user to enter an address and then populates an object of type <ph id="ph1">`Address`</ph>, which has the properties <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, and <ph id="ph5">`Country`</ph>, with the values that the user provided.</source>
          <target state="translated">例如，假設應用程式會提示使用者輸入的位址，然後填入型別的物件<ph id="ph1">`Address`</ph>，其中包含屬性<ph id="ph2">`Street`</ph>， <ph id="ph3">`City`</ph>， <ph id="ph4">`ZipCode`</ph>，和<ph id="ph5">`Country`</ph>，與使用者提供的值。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The application has a panel that contains four &lt;xref:System.Windows.Controls.TextBox&gt; controls, each of which is bound to one of the object’s properties.</source>
          <target state="translated">應用程式必須包含四個面板&lt;xref:System.Windows.Controls.TextBox&gt;控制項，其中每個繫結至其中一個物件的屬性。&lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can use a &lt;xref:System.Windows.Controls.ValidationRule&gt; in a &lt;xref:System.Windows.Data.BindingGroup&gt; to validate the <ph id="ph1">`Address`</ph> object.</source>
          <target state="translated">您可以使用&lt;xref:System.Windows.Controls.ValidationRule&gt;中&lt;xref:System.Windows.Data.BindingGroup&gt;驗證<ph id="ph1">`Address`</ph>物件。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Windows.Controls.ValidationRule&gt; can ensure that the zip code is valid for the country of the address.</source>
          <target state="translated">例如，&lt;xref:System.Windows.Controls.ValidationRule&gt;可以確保，郵遞區號就是有效的地址的國家/地區。&lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Child elements inherit the &lt;xref:System.Windows.Data.BindingGroup&gt; from their parent elements, just as with any other inheritable property.</source>
          <target state="translated">子項目會繼承&lt;xref:System.Windows.Data.BindingGroup&gt;從其父項目，就如同任何其他可繼承的屬性。&lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BindingGroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;|   |Metadata properties set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BindingGroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;|  |中繼資料屬性設定為<bpt id="p2">**</bpt>true<ept id="p2">**</ept>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used for the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>所用的項目。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.BindingGroup*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.BindingGroup*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.BindingGroup*&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Attempts to bring this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">嘗試將這個項目帶入檢視中，它包含在任何可捲動區域內。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>By calling this method, you raise a &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event that originates from the current element.</source>
          <target state="translated">藉由呼叫這個方法，您將提高&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件來自 目前的項目。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This event is raised so that it can be handled by a &lt;xref:System.Windows.Controls.ScrollViewer&gt;, or a derived or similar class.</source>
          <target state="translated">會引發這個事件，以便可由處理&lt;xref:System.Windows.Controls.ScrollViewer&gt;，或衍生或類似類別&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the &lt;xref:System.Windows.Controls.ScrollViewer&gt; control.</source>
          <target state="translated">預期的行為是，父項目，標示為已處理的事件資料，在處理事件和事件的來源資料被引進的邏輯內嵌在透過檢視&lt;xref:System.Windows.Controls.ScrollViewer&gt;控制項。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event nor the BringIntoView method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">既不&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件或 BringIntoView 方法傳輸相關的成功或失敗，而不是，事件通常是標示為成功處理上的任何資訊。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Reasons for failure can include the element settings, such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; being some value other than &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">失敗的原因可包含的項目設定，例如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;位於某些&lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt;以外的值&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) will be made visible.</source>
          <target state="translated">如果您使用未指定的簽章<ph id="ph1">`targetRectangle`</ph>，然後整個項目大小 (其&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) 將會看見。&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>By calling this method, you potentially will call &lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt; on any parent scrollable area that contains the element.</source>
          <target state="translated">藉由呼叫這個方法，您可能會呼叫&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;上包含之項目的任何父可捲動區域。&lt;/xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If this element is not contained in a scrollable area, the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">如果這個項目不包含在可捲動區域，&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;仍然會引發事件，但沒有作用，因為會不有任何事件接聽程式。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">嘗試將帶入檢視中，它包含在任何可捲動區域內的這個項目提供的區域大小。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>By calling this method, you raise a &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event that originates from the current element.</source>
          <target state="translated">藉由呼叫這個方法，您將提高&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件來自 目前的項目。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This event is raised so that it can be handled by a &lt;xref:System.Windows.Controls.ScrollViewer&gt;, or a derived or similar class.</source>
          <target state="translated">會引發這個事件，以便可由處理&lt;xref:System.Windows.Controls.ScrollViewer&gt;，或衍生或類似類別&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the &lt;xref:System.Windows.Controls.ScrollViewer&gt; control.</source>
          <target state="translated">預期的行為是，父項目，標示為已處理的事件資料，在處理事件和事件的來源資料被引進的邏輯內嵌在透過檢視&lt;xref:System.Windows.Controls.ScrollViewer&gt;控制項。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event nor the &lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt; method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">既不&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件和&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;方法傳輸相關的成功或失敗，而不是，事件通常是標示為成功處理上的任何資訊。&lt;/xref:System.Windows.FrameworkElement.BringIntoView%2A&gt; &lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Reasons for failure can include the element settings, such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; being some value other than &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">失敗的原因可包含的項目設定，例如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;位於某些&lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt;以外的值&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) will be made visible.</source>
          <target state="translated">如果您使用未指定的簽章<ph id="ph1">`targetRectangle`</ph>，然後整個項目大小 (其&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) 將會看見。&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>By calling this method, you potentially will call &lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt; on any parent scrollable area that contains the element.</source>
          <target state="translated">藉由呼叫這個方法，您可能會呼叫&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;上包含之項目的任何父可捲動區域。&lt;/xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If this element is not contained in a scrollable area, the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">如果這個項目不包含在可捲動區域，&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;仍然會引發事件，但沒有作用，因為會不有任何事件接聽程式。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specified size of the element that should also be brought into view.</source>
          <target state="translated">指定的項目也帶入檢視的大小。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets or sets the context menu element that should appear whenever the context menu is requested through <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> from within this element.</source>
          <target state="translated">取得或設定透過要求的操作功能表時應該出現操作功能表項目的<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>從這個項目中。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, and it is technically possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a ContextMenu property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;衍生類別，而且是可行的&lt;xref:System.Windows.Controls.ContextMenu&gt;本身具有 ContextMenu 屬性。&lt;/xref:System.Windows.Controls.ContextMenu&gt; &lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>However, this creates a confusing context menu experience for the user and this practice is not recommended.</source>
          <target state="translated">不過，這會建立令人混淆的內容功能表經驗的使用者並不建議此做法。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ContextMenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ContextMenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The context menu assigned to this element.</source>
          <target state="translated">指派給此項目的操作功能表。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Occurs just before any context menu on the element is closed.</source>
          <target state="translated">項目上的任何操作功能表關閉之前發生。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To suppress closing context menus, handlers of the event should mark it as handled.</source>
          <target state="translated">若要隱藏關閉內容功能表的 事件處理常式應將其標記為已處理。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To use this event as an &lt;xref:System.Windows.EventTrigger&gt; in a style, you must reference the underlying service's definition of the event:       <bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>CorePseudocode#FEContextMenuClosing<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuclosing)</ept><ept id="p1">]</ept>       (This usage is required because the event implementation on &lt;xref:System.Windows.FrameworkElement&gt; that exposes the underlying service event does not map the ContextMenuClosing identifier such that you can use it as a trigger).</source>
          <target state="translated">若要使用此事件為&lt;xref:System.Windows.EventTrigger&gt;在樣式中，您必須參考事件的基礎服務定義︰ <bpt id="p1">[!code-xml</bpt> <bpt id="p2">[</bpt>CorePseudocode #FEContextMenuClosing<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuclosing)</ept> <ept id="p1">]</ept> (需要這種使用方式，因為上的事件實作&lt;xref:System.Windows.FrameworkElement&gt;會公開基礎服務事件，您可以使用它的觸發程序未對應的 ContextMenuClosing 識別項)。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, but the ContextMenuClosing event will not be raised by a context menu directly.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;衍生的類別，但 ContextMenuClosing 將不會引發此事件的內容功能表直接。&lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Instead, the event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to close a context menu in the UI.</source>
          <target state="translated">相反地，會引發事件，從 「 擁有 」 做為屬性的內容功能表，且只會在使用者嘗試以關閉在 UI 中的內容功能表時所引發的項目。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>However it is possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property (a nested context menu).</source>
          <target state="translated">但是它可能是&lt;xref:System.Windows.Controls.ContextMenu&gt;本身有&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;屬性 （巢狀的內容功能表）。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>In this case the &lt;xref:System.Windows.Controls.ContextMenu&gt; really does own the nested &lt;xref:System.Windows.Controls.ContextMenu&gt; and might raise the event, with the source of the event being the nested context menu.</source>
          <target state="translated">在此情況下&lt;xref:System.Windows.Controls.ContextMenu&gt;實際上並擁有巢狀&lt;xref:System.Windows.Controls.ContextMenu&gt;然後可能會引發事件，與正在巢狀的內容功能表上的事件來源。&lt;/xref:System.Windows.Controls.ContextMenu&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ContextMenu&gt; class itself also has a similar event (&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;) but the &lt;xref:System.Windows.Controls.ContextMenu.Closed&gt; event does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;類別本身也有類似的事件 (&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;) 但&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;事件不會為您提供取消的使用者動作的機會。&lt;/xref:System.Windows.Controls.ContextMenu.Closed&gt; &lt;/xref:System.Windows.Controls.ContextMenu.Closed&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;|  |路由策略 |反昇 |  |委派 |&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|     -覆寫&lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt;實作在衍生類別中這個事件的類別處理。&lt;/xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenuEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Occurs when any context menu on the element is opened.</source>
          <target state="translated">項目上的任何操作功能表開啟時發生。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To manually open context menus, handlers of the events should mark the relevant event as handled.</source>
          <target state="translated">若要手動開啟內容功能表，為已處理的事件處理常式時，應該標記相關的事件。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Otherwise, the existing value of the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property will be used to automatically open a context menu.</source>
          <target state="translated">否則，現有的值&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;屬性會用來自動開啟內容功能表。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property and then open the new &lt;xref:System.Windows.Controls.ContextMenu&gt;.</source>
          <target state="translated">標記處理的事件會有效地取消的預設動作，並可能得以重設的&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;屬性，然後開啟新的&lt;xref:System.Windows.Controls.ContextMenu&gt;。&lt;/xref:System.Windows.Controls.ContextMenu&gt;&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;的值</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>However, there is a timing issue you should be aware of.</source>
          <target state="translated">不過，是您應該注意的時間問題。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In order to completely replace the context menu through a ContextMenuOpening handler, the initial context menu must not be null / empty.</source>
          <target state="translated">為了完全取代透過 ContextMenuOpening 處理常式的內容功能表，初始的內容功能表不得為 null 或空白。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Alternatively, you might need to handle the event and then manually open a new context menu.</source>
          <target state="translated">或者，您可能需要處理事件，並手動開啟新的內容功能表。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Handle the ContextMenuOpening Event<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何︰ 處理 ContextMenuOpening 事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To use this event as an &lt;xref:System.Windows.EventTrigger&gt; in a style, you must reference the underlying attached event:       <bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>CorePseudocode#FEContextMenuOpening<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuopening)</ept><ept id="p1">]</ept>       (This usage is required because the event implementation on &lt;xref:System.Windows.FrameworkElement&gt; that exposes the underlying service event does not map the ContextMenuOpening identifier such that you can use it in triggers).</source>
          <target state="translated">若要使用此事件為&lt;xref:System.Windows.EventTrigger&gt;在樣式中，您必須參考基礎的附加的事件︰ <bpt id="p1">[!code-xml</bpt> <bpt id="p2">[</bpt>CorePseudocode #FEContextMenuOpening<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuopening)</ept> <ept id="p1">]</ept> (需要這種使用方式，因為上的事件實作&lt;xref:System.Windows.FrameworkElement&gt;會公開基礎服務事件，您可以將它使用觸發程序中沒有對應 ContextMenuOpening 識別項)。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, but this event will not be raised from the context menu being opened as a source.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;衍生的類別，但不是會從內容功能表開啟做為來源引發這個事件。&lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to open a context menu in the UI.</source>
          <target state="translated">從 「 擁有 」 做為屬性的內容功能表，且只會在使用者嘗試在 UI 中開啟內容功能表時所引發的項目，會引發事件。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It is possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property, but you should avoid this scenario (for details, see &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt;).</source>
          <target state="translated">可能會&lt;xref:System.Windows.Controls.ContextMenu&gt;本身有&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;屬性，但是您應該避免這種情況 (如需詳細資訊，請參閱&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt;)。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ContextMenu&gt; class itself also has a similar event (&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;) but &lt;xref:System.Windows.Controls.ContextMenu.Opened&gt; does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;類別本身也有類似的事件 (&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;) 但&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;不會為您提供取消的使用者動作的機會。&lt;/xref:System.Windows.Controls.ContextMenu.Opened&gt; &lt;/xref:System.Windows.Controls.ContextMenu.Opened&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;|  |路由策略 |反昇 |  |委派 |&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|     -覆寫&lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt;實作在衍生類別中這個事件的類別處理。&lt;/xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenuEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ContextMenu*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.ContextMenu*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.ContextMenu*&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets or sets the cursor that displays when the mouse pointer is over this element.</source>
          <target state="translated">取得或設定當滑鼠指標位於此項目上方時所顯示的游標。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you set this property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor relies on type conversion for the &lt;xref:System.Windows.Input.Cursor&gt; class to evaluate the string.</source>
          <target state="translated">當您設定此屬性<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>、<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理器依賴的型別轉換&lt;xref:System.Windows.Input.Cursor&gt;類別來評估的字串。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The provided string should evaluate to a &lt;xref:System.Windows.Input.CursorType&gt; value.</source>
          <target state="translated">提供的字串應評估為&lt;xref:System.Windows.Input.CursorType&gt;值。&lt;/xref:System.Windows.Input.CursorType&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Input.Cursor&gt; for details.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Input.Cursor&gt;如需詳細資訊。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the &lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; property.</source>
          <target state="translated">這個屬性所建立的資料指標將還是不會顯示當滑鼠指標位在這個項目也是取決於值的&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</source>
          <target state="translated">此外，事件相關的考量，例如使用中拖曳滑鼠擷取、 文字編輯模式中的控制項，並依此類推，也會影響資料指標具有較高的優先順序比您指定這個屬性的值。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To revert the behavior of setting this property to the eventual default, set it to <ph id="ph1">`null`</ph> again.</source>
          <target state="translated">若要還原的此屬性設定為最終的預設行為，將它設定為<ph id="ph1">`null`</ph>一次。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`null`</ph> default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</source>
          <target state="translated"><ph id="ph1">`null`</ph>預設真的表示實際的資料指標的值判斷此處延後，應該從別處取得。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If presented without programmatic values from any source, the default cursor that is visually over a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> application will be an arrow.</source>
          <target state="translated">如果看到不含以程式設計方式從任何來源的值，預設資料指標，是以視覺化方式超過<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式將會箭號。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>However, the transient cursor changes are not set to the Cursor values of the elements when they are passed over.</source>
          <target state="translated">不過，暫時性游標會變更未設定為資料指標的值的項目時透過傳送。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The Cursor property will only report non null values in cases where it was actually set, for instance through code or a style.</source>
          <target state="translated">屬性只會報告中的非 null 值的資料指標狀況下，它是實際設定，例如透過程式碼或樣式。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Each movement of the mouse over a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> application raises a &lt;xref:System.Windows.UIElement.QueryCursor&gt; event.</source>
          <target state="translated">每次移動滑鼠停留<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>應用程式引發&lt;xref:System.Windows.UIElement.QueryCursor&gt;事件。&lt;/xref:System.Windows.UIElement.QueryCursor&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event.</source>
          <target state="translated">事件反昇，且此路由上的任何項目都有機會處理事件，並設定資料指標到這個事件的引數的值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This is the mechanism that produces the visually apparent cursor in most cases.</source>
          <target state="translated">這是會產生在大部分情況下以視覺化方式明顯的資料指標的機制。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Windows.UIElement.QueryCursor&gt; handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the Cursor property at any level, unless &lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; is set.</source>
          <target state="translated">如果&lt;xref:System.Windows.UIElement.QueryCursor&gt;處理常式傳回一個資料指標結果，則事件處理，而且引數中已變更的值優先順序高於在任何層級中，資料指標屬性的值除非&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;設定。&lt;/xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; &lt;/xref:System.Windows.UIElement.QueryCursor&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If not are not creating a custom cursor, you typically set this property to a static property value of the &lt;xref:System.Windows.Input.Cursors&gt; class.</source>
          <target state="translated">您如果不建立自訂的資料指標，通常有設定此屬性設為靜態屬性的值&lt;xref:System.Windows.Input.Cursors&gt;類別。&lt;/xref:System.Windows.Input.Cursors&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Setting Cursor in code requires one of the following:      -   Call the &lt;xref:System.Windows.Input.Cursor&gt; constructor to get a &lt;xref:System.Windows.Input.Cursor&gt; instance.</source>
          <target state="translated">程式碼中設定資料指標需要下列其中之一:-呼叫&lt;xref:System.Windows.Input.Cursor&gt;建構函式來取得&lt;xref:System.Windows.Input.Cursor&gt;執行個體。&lt;/xref:System.Windows.Input.Cursor&gt; &lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Both signatures of the &lt;xref:System.Windows.Input.Cursor&gt; constructor use streams or files, in anticipation that you are creating the &lt;xref:System.Windows.Input.Cursor&gt; object for a custom cursor.</source>
          <target state="translated">這兩個簽章&lt;xref:System.Windows.Input.Cursor&gt;建構函式使用資料流或檔案，您所建立的頁數&lt;xref:System.Windows.Input.Cursor&gt;自訂的資料指標的物件。&lt;/xref:System.Windows.Input.Cursor&gt; &lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>-   Use the &lt;xref:System.Windows.Input.CursorConverter&gt; class and its &lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt; method to specify a cursor by &lt;xref:System.Windows.Input.CursorType&gt;, or a string that can evaluate to a &lt;xref:System.Windows.Input.CursorType&gt;, and cast the return to &lt;xref:System.Windows.Input.Cursor&gt;.</source>
          <target state="translated">-使用&lt;xref:System.Windows.Input.CursorConverter&gt;類別和其&lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;方法，以指定的資料指標&lt;xref:System.Windows.Input.CursorType&gt;，或可以評估為字串&lt;xref:System.Windows.Input.CursorType&gt;，並轉換至&lt;xref:System.Windows.Input.Cursor&gt;。&lt;/xref:System.Windows.Input.Cursor&gt;傳回&lt;/xref:System.Windows.Input.CursorType&gt;&lt;/xref:System.Windows.Input.CursorType&gt;&lt;/xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;&lt;/xref:System.Windows.Input.CursorConverter&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Setting the &lt;xref:System.Windows.Input.Cursor&gt; to a custom value is not enabled in partial trust.</source>
          <target state="translated">設定&lt;xref:System.Windows.Input.Cursor&gt;自訂值中未啟用部分信任。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For more information on custom cursors, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關自訂的資料指標的詳細資訊，請參閱<bpt id="p1">[</bpt>輸入概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Cursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.CursorProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Cursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.CursorProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.CursorProperty&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The cursor to display.</source>
          <target state="translated">要顯示的游標。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default value is defined as <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> per this dependency property.</source>
          <target state="translated">預設值定義為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>每個此相依性屬性。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>However, the practical default at run time will come from a variety of factors.</source>
          <target state="translated">不過，實際的預設值，在執行階段將來自各種不同的因素。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets or sets the data context for an element when it participates in data binding.</source>
          <target state="translated">取得或設定參與資料繫結中時的資料內容的項目。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Data context<ept id="p1">*</ept> is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.</source>
          <target state="translated"><bpt id="p1">*</bpt>資料內容<ept id="p1">*</ept>是一種概念，可讓項目繼承其父項目，用於繫結，以及其他特性，例如路徑繫結的資料來源的相關資訊。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Data context can be set directly to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, with the bindings evaluating to properties of that object.</source>
          <target state="translated">資料內容設為直接<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>物件，並將該物件的內容來評估的繫結。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set the data context to a &lt;xref:System.Windows.Data.DataSourceProvider&gt; object.</source>
          <target state="translated">或者，您可以將資料內容設&lt;xref:System.Windows.Data.DataSourceProvider&gt;物件。&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">這個相依性屬性會繼承屬性值。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for DataContext established through local values or styles, then the property system will set the value to be the DataContext value of the nearest parent element with this value assigned.</source>
          <target state="translated">如果有子項目不含 DataContext 透過本機值或樣式建立的其他值，對屬性系統將會設定要指派此值與最接近的父元素的 DataContext 值的值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use one of the following properties of the &lt;xref:System.Windows.Data.Binding&gt; class to specify the binding source explicitly: &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, or &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;.</source>
          <target state="translated">或者，您可以使用下列的屬性之一&lt;xref:System.Windows.Data.Binding&gt;類別來明確指定繫結來源︰ &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;， &lt;xref:System.Windows.Data.Binding.Source%2A&gt;，或&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;.&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 指定的繫結來源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, DataContext is most typically set to as a &lt;xref:System.Windows.Data.Binding&gt; declaration.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，DataContext 大部分都是設為&lt;xref:System.Windows.Data.Binding&gt;宣告。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can use either property element syntax or attribute syntax.</source>
          <target state="translated">您可以使用屬性項目語法或屬性語法。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Attribute syntax is shown in the example on this page.</source>
          <target state="translated">在範例中，此頁面上顯示屬性語法。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You can also use code to set DataContext.</source>
          <target state="translated">您也可以使用程式碼，若要設定 DataContext。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>DataContext is a bindable property, to facilitate scenarios where one context might be bound to another.</source>
          <target state="translated">DataContext 是可繫結的屬性，以便在其中一個內容可能繫結至另一個案例。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>However, if you bind to DataContext, be careful to not create circular binding references (do not bind a DataContext to itself, which is possible to do because of the property value inheritance nature of the DataContext property).</source>
          <target state="translated">不過，如果您繫結到 DataContext，小心建立循環繫結參考 （請不要繫結 DataContext 本身，也就是基於 DataContext 屬性的屬性值繼承本質這麼做）。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.DataContext&gt;       &lt;dataContextObject /&gt;     &lt;/object.DataContext&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlAttributeUsage_DataContext"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph2">```   &lt;object DataContext="bindingUsage"/&gt;   - or -   &lt;object DataContext="{resourceExtension contextResourceKey}"/&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_DataContext"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>dataContextObject<ept id="p4">*</ept>    A directly embedded object that serves as data context for any bindings within the parent element.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性項目用法<ph id="ph1">```   &lt;object&gt;     &lt;object.DataContext&gt;       &lt;dataContextObject /&gt;     &lt;/object.DataContext&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlAttributeUsage_DataContext"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 屬性使用方式<ph id="ph2">```   &lt;object DataContext="bindingUsage"/&gt;   - or -   &lt;object DataContext="{resourceExtension contextResourceKey}"/&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_DataContext"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>dataContextObject<ept id="p4">*</ept>直接內嵌的物件做為父項目中的任何繫結的資料內容。            </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Typically, this object is a &lt;xref:System.Windows.Data.Binding&gt; or another &lt;xref:System.Windows.Data.BindingBase&gt; derived class.</source>
          <target state="translated">一般而言，這個物件是&lt;xref:System.Windows.Data.Binding&gt;或另一個&lt;xref:System.Windows.Data.BindingBase&gt;衍生類別。&lt;/xref:System.Windows.Data.BindingBase&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Alternatively, raw data of any <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object type intended for binding may be placed here, with the actual bindings defined later.</source>
          <target state="translated">或者，任何未經處理資料<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>物件適用於繫結，可能會放在這裡，以實際的繫結稍後所定義的類型。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept>    A binding usage that evaluates to an appropriate data context.</source>
          <target state="translated"><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept>評估為適當的資料內容的繫結使用方式。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>繫結標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept>    One of the following:  or .</source>
          <target state="translated"><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept>下列其中之一︰ 或。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This usage is used when referring to raw data defined as an object in resources.</source>
          <target state="translated">定義為資源中之物件的未經處理資料時，就會使用這種使用方式。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XAML 資源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept>    The key identifier for the object being requested from within a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated"><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept> &lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;內從所要求之物件的金鑰識別碼</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.DataContextProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.DataContextProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.DataContextProperty&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The object to use as data context.</source>
          <target state="translated">要做為資料內容的物件。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Occurs when the data context for this element changes.</source>
          <target state="translated">此元素的資料內容變更時發生。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>For an explanation of data contexts and data binding, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需資料內容和資料繫結的說明，請參閱<bpt id="p1">[</bpt>資料繫結概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; for an element changes, all data-bound properties on this element are potentially affected.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 時&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;潛在影響的項目變更時，這個項目上的所有資料繫結屬性。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself.</source>
          <target state="translated">這適用於任何項目邏輯樹狀結構中，目前項目的子項目繼承的資料內容，以及目前的項目本身。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>All such existing bindings must re-interpret the new &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; and will reevaluate the binding results.</source>
          <target state="translated">所有這類的現有繫結必須重新解譯新&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;並會重新評估繫結結果。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the DataContextChanged event.</source>
          <target state="translated">資料繫結引擎不具決定性的這些處，相對於 DataContextChanged 事件的引發順序。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The reevaluations can occur before the event, after the event, or in any mixture.</source>
          <target state="translated">重新評估可能可以事件之前、 發生事件之後，或以任何混合。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.DataContext*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.DataContext*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.DataContext*&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</source>
          <target state="translated">取得或設定要用來使用或定義佈景主題樣式時參考這個控制項的樣式的索引鍵。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>This property is typically not set through any of its direct property accessors.</source>
          <target state="translated">這個屬性通常是透過其直接屬性存取子的任何不設定。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Instead, you override the type-specific metadata of this dependency property every time you create a new &lt;xref:System.Windows.FrameworkElement&gt; derived class.</source>
          <target state="translated">相反地，您覆寫這個相依性屬性的特定類型的中繼資料每次您建立&lt;xref:System.Windows.FrameworkElement&gt;衍生之類別的&lt;/xref:System.Windows.FrameworkElement&gt;新</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>When you derive a control, call the &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; method against the &lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt; identifier, within the static constructor of the control derived class (or equivalent class initialization).</source>
          <target state="translated">當您衍生的控制項時，呼叫&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;方法針對&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;控制項中的靜態建構函式中的識別項，衍生類別 （或對等的類別初始化）。&lt;/xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists.</source>
          <target state="translated">控制項通常會覆寫它自己的型別，這個屬性的預設值，但在某些情況下也可以使用基底類型有主題字典中的樣式。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.</source>
          <target state="translated">如果基底控制項的 [控制項] 範本已完整定義該衍生的控制項的視覺表示法，而且衍生的型別公開的任何其他成員不需要額外的項目控制項範本的一部分，這樣做只實際。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If you want your element or control to deliberately not use theme styles, set the &lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">如果您想要您的項目或故意不使用佈景主題樣式的控制項，設定&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_DefaultStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_DefaultStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The style key.</source>
          <target state="translated">樣式索引鍵。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To work correctly as part of theme style lookup, this value is expected to be the &lt;xref:System.Type&gt; of the control being styled.</source>
          <target state="translated">佈景主題樣式查閱一部分正常運作，這個值必須是&lt;xref:System.Type&gt;要加上樣式的控制項。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Indicates that the initialization process for the element is complete.</source>
          <target state="translated">表示初始化程序項目的已完成。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was previously called, the base implementation will raise the &lt;xref:System.Windows.FrameworkElement.Initialized&gt; event.</source>
          <target state="translated">如果&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;之前已呼叫過，基底實作將會引發&lt;xref:System.Windows.FrameworkElement.Initialized&gt;事件。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was not called or it could not be determined whether &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was called, &lt;xref:System.Windows.FrameworkElement.Initialized&gt; is not raised and an exception is thrown instead.</source>
          <target state="translated">否則，如果&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;，不會呼叫或找不取決於是否&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;已呼叫&lt;xref:System.Windows.FrameworkElement.Initialized&gt;就不會引發，並改為擲回例外狀況。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>EndInit was called without &lt;xref:System.Windows.FrameworkElement.BeginInit*&gt; having previously been called on the element.</source>
          <target state="translated">呼叫 EndInit，但沒有&lt;xref:System.Windows.FrameworkElement.BeginInit*&gt;先前項目上呼叫。&lt;/xref:System.Windows.FrameworkElement.BeginInit*&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Finds an element that has the provided identifier name.</source>
          <target state="translated">尋找具有所提供的識別項名稱的項目。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If the element has child elements, these child elements are all searched recursively for the requested named element.</source>
          <target state="translated">如果項目具有子項目，這些子項目會遞迴搜尋所有要求的具名項目。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>FindName operates within the current element's namescope.</source>
          <target state="translated">FindName 命名目前的項目範圍中的運作方式。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The name of the requested element.</source>
          <target state="translated">要求之項目的名稱。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The requested element.</source>
          <target state="translated">要求的項目。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no matching element was found.</source>
          <target state="translated">這可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到任何相符的元素。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</source>
          <target state="translated">搜尋具有指定的索引鍵的資源，並擲回例外狀況，如果找不到要求的資源。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 如果找不到機碼中呼叫這個方法，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If you do not want to handle exceptions that result from calling FindResource, call &lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt; instead.</source>
          <target state="translated">如果您不想處理的例外狀況所導致的呼叫 FindResource，呼叫&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;改用。&lt;/xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt; returns <ph id="ph1">`null`</ph> when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;傳回<ph id="ph1">`null`</ph>當找不到要求的資源，並不會擲回例外狀況。&lt;/xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources.</source>
          <target state="translated">如果呼叫的項目上找不到資源，父項目邏輯樹狀結構中是搜尋下一步，然後應用程式，然後佈景主題，和最後系統資源。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup.</source>
          <target state="translated">這項查閱方法等同於樹狀結構會如何搜尋如果所要求資源標記中動態資源參考。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For more information about resource lookup, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需資源查閱的詳細資訊，請參閱<bpt id="p1">[</bpt>XAML 資源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Typically, you immediately cast a FindResource return value to the type of the property that you setting with the returned resource value.</source>
          <target state="translated">一般而言，您立即轉換的 FindResource，傳回值之屬性的型別您設定與傳回的資源。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Resource keys are not necessarily strings.</source>
          <target state="translated">資源索引鍵不一定是字串。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>For instance, styles for controls at the theme level are deliberately keyed to the &lt;xref:System.Type&gt; of the control, and application or page styles for controls typically use this same key convention.</source>
          <target state="translated">例如，樣式的佈景主題層級的控制項索引鍵，&lt;xref:System.Type&gt;的控制項，和應用程式或網頁的樣式的控制項通常會使用這個相同的金鑰慣例。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](../Topic/XAML%20Resources.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>設定樣式和範本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>XAML 資源<ept id="p2">](../Topic/XAML%20Resources.md)</ept>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The key identifier for the requested resource.</source>
          <target state="translated">要求之資源的索引鍵的識別碼。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The requested resource.</source>
          <target state="translated">要求的資源。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If no resource with the provided key was found, an exception is thrown.</source>
          <target state="translated">如果找不到具有提供之索引鍵的資源，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value might also be returned in the exception case.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>也可能會在例外狀況的情況下傳回值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> was not found and an event handler does not exist for the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>找不到與事件處理常式不存在的<bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> was not found and the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled*&gt;</ph> property is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the <bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>找不到和<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled*&gt;</ph>屬性是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>中<bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Gets or sets the direction that text and other <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements flow within any parent element that controls their layout.</source>
          <target state="translated">取得或設定文字和其他的方向<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>流程控制其配置的任何父項目中的項目。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The direction that text and other <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements flow within their parent element, as a value of the enumeration.</source>
          <target state="translated">方向文字和其他<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>項目中的流向其父項目，做為列舉值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.FlowDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.FlowDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</source>
          <target state="translated">取得或設定此屬性，可自訂外觀、 效果或其他樣式特性，捕捉到鍵盤焦點時，會套用至這個項目。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This property affects visual appearance but does not report &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt; in metadata.</source>
          <target state="translated">這個屬性會影響視覺外觀，但不會報告&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;中繼資料中。&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.</source>
          <target state="translated">這是因為視覺外觀變更是事件驅動和在任何時候，可能不適用，因此通常不應報告中繼資料中的任何視覺效果或版面配置資訊。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Conceptually, the visual behavior of focus applied to a control should be coherent from control to control.</source>
          <target state="translated">在概念上，套用至控制項的焦點視覺行為應該保持一致控制項。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</source>
          <target state="translated">如果您正在撰寫整個佈景主題，只變更焦點視覺化樣式為最實用的方式，來強制執行一致性。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</source>
          <target state="translated">設定這個屬性上個別控制項樣式，而非佈景主題的部分不是預定的使用方式，這個屬性，因為它可能會造成混淆的使用者經驗，關於鍵盤焦點。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; or &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;, and to do so in a way that does not visually interfere with any existing focus visual style.</source>
          <target state="translated">如果您打算是刻意不一致的佈景主題的控制項特定行為，更好的方法是使用觸發程序在樣式為個別的輸入的狀態的屬性，例如&lt;xref:System.Windows.UIElement.IsFocused%2A&gt;或&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;，以及若要這樣做不以視覺化方式會干擾任何現有的焦點視覺化樣式的方式。&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; &lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>For more information on the design intention of FocusVisualStyle and alternative focus properties, see <bpt id="p1">[</bpt>Styling for Focus in Controls, and FocusVisualStyle<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">FocusVisualStyle 和替代焦點屬性的設計用意的資訊，請參閱<bpt id="p1">[</bpt>樣式的焦點在控制項和 FocusVisualStyle<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object FocusVisualStyle="{resourceExtension styleResourceKey}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_FocusVisualStyle"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <bpt id="p3">&lt;a name="xamlValues_FocusVisualStyle"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>    One of the following: , or .</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object FocusVisualStyle="{resourceExtension styleResourceKey}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_FocusVisualStyle"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 屬性項目用法<bpt id="p3">&lt;a name="xamlValues_FocusVisualStyle"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>下列其中之一:、 或。      </target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XAML 資源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>    The key that identifies the style being requested.</source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>識別所要求的樣式的索引鍵。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The key refers to an existing resource in a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">索引鍵參考&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;中現有的資源</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Property element syntax is technically possible, but not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 屬性項目語法是可行，但不是建議。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>內嵌樣式和樣板<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A binding reference using  or &lt;xref:System.Windows.Data.Binding&gt; is also possible, but uncommon.</source>
          <target state="translated">使用繫結參考或&lt;xref:System.Windows.Data.Binding&gt;也是可行的但不常見。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The desired style to apply on focus.</source>
          <target state="translated">若要將焦點套用樣式。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The default value as declared in the dependency property is an empty static <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">相依性屬性中所宣告的預設值是空的靜態<bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</source>
          <target state="translated">不過，在執行階段有效的值是通常 （但並非一定） 提供佈景主題支援為控制項的樣式。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should force the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> to render the cursor as declared by the &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; property.</source>
          <target state="translated">取得或設定值，指出是否此<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>應強制<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>來呈現所宣告的資料指標&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>If you set this property to <ph id="ph1">`true`</ph> you will override the cursor preferences established by child elements.</source>
          <target state="translated">如果您將此屬性設定為<ph id="ph1">`true`</ph>將會覆寫子項目所建立的資料指標喜好設定。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Doing so in general application <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> might be confusing for the user, particularly if child elements are attempting to specify cursors.</source>
          <target state="translated">這樣做，一般應用程式<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>可能會造成混淆的使用者，特別是如果子元素嘗試以指定資料指標。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Setting ForceCursor is more appropriate in control subclassing or compositing scenarios.</source>
          <target state="translated">在控制項的子類別化或複合 （compositing） 的情況下更適合設定 ForceCursor。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ForceCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ForceCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if cursor presentation while over this element is forced to use current &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; settings for the cursor (including on all child elements); otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個項目上方的資料指標簡報強制使用目前&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;設定資料指標 （包括所有子系項目上）; 否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ForceCursor*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.ForceCursor*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.ForceCursor*&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the binding on the specified property.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，代表指定之屬性的繫結。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Checking the return value for <ph id="ph1">`null`</ph> is a technique you can use to determine whether a property has an active binding.</source>
          <target state="translated">檢查傳回值<ph id="ph1">`null`</ph>是一種技術可用來判斷屬性是否有作用中的繫結。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This method is really just a convenience wrapper around the &lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">這個方法是其實只是方便包裝&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>GetBindingExpression passes the current instance and the <ph id="ph1">`dp`</ph> parameter to &lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">GetBindingExpression 傳遞目前執行個體和<ph id="ph1">`dp`</ph>至&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;參數</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The target <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to get the binding from.</source>
          <target state="translated">目標<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>取得從繫結。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the target property has an active binding; otherwise, returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>如果目標屬性具有作用中的繫結; 否則會傳回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; attached property for the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得值&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;附加屬性指定<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The main purpose of this method is to support attached property syntax for the &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; property, therefore allowing child elements of a provided &lt;xref:System.Windows.FrameworkElement&gt; to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">這個方法的主要用途為支援附加的屬性的語法&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;屬性，因此允許的提供項目子系&lt;xref:System.Windows.FrameworkElement&gt;以指定的排列方式，其父項目中的資料流程方向。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>To get the value on the current &lt;xref:System.Windows.FrameworkElement&gt;, use the direct <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> accessor &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.</source>
          <target state="translated">若要取得值，在目前&lt;xref:System.Windows.FrameworkElement&gt;，使用 direct<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>存取子&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The element to return a &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; for.</source>
          <target state="translated">要傳回&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;for...in&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;項目</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The requested flow direction, as a value of the enumeration.</source>
          <target state="translated">要求的資料流程方向，做為列舉值。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Returns a geometry for a clipping mask.</source>
          <target state="translated">傳回幾何裁剪遮罩。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</source>
          <target state="translated">版面配置系統嘗試排列大於可用的顯示空間的項目套用遮罩。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Margins will be subtracted from the <ph id="ph1">`layoutSlotSize`</ph> as part of layout system behavior.</source>
          <target state="translated">將減去邊界<ph id="ph1">`layoutSlotSize`</ph>版面配置系統行為的一部分。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>A returned null reference indicates that no clipping will occur.</source>
          <target state="translated">傳回的 null 參考會指出沒有裁剪部分會發生。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`null`</ph> when &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">預設實作一定會傳回<ph id="ph1">`null`</ph>時&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;是<ph id="ph2">`false`</ph>。&lt;/xref:System.Windows.UIElement.ClipToBounds%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation uses &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; in its calculations.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;實作會使用&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;在其計算中。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Several subclasses of &lt;xref:System.Windows.FrameworkElement&gt; override this method again.</source>
          <target state="translated">數個類別的子&lt;xref:System.Windows.FrameworkElement&gt;覆寫這個方法一次。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;, overrides to always return <ph id="ph1">`null`</ph> because adorners are often deliberately outside the ordinary bounds.</source>
          <target state="translated">&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;會覆寫永遠傳回<ph id="ph1">`null`</ph>因為裝飾項通常會刻意一般範圍外。&lt;/xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt; return <ph id="ph1">`null`</ph> if &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt;and &lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt; return <ph id="ph1">`null`</ph> if &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.UIElement.ClipToBounds%2A&gt;&lt;/xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The size of the part of the element that does visual presentation.</source>
          <target state="translated">視覺呈現的項目之部分的大小。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The clipping geometry.</source>
          <target state="translated">裁剪幾何。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Returns the named element in the visual tree of an instantiated <bpt id="p1">&lt;xref href="System.Windows.Controls.ControlTemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回的具現化的視覺化樹狀結構中具名的項目<bpt id="p1">&lt;xref href="System.Windows.Controls.ControlTemplate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Templates in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> have a self-contained namescope.</source>
          <target state="translated">中的範本<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>有獨立的名稱範圍。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template.</source>
          <target state="translated">這是因為樣板是重複使用，而且在範本中定義的任何名稱不能是唯一的當多個執行個體，每個控制項的具現化的範本。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Call the GetTemplateChild method to return references to objects that come from the template after it is instantiated.</source>
          <target state="translated">呼叫 GetTemplateChild 方法來傳回來自樣板具現化後的物件參考。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>You cannot use the &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; method to find items from templates because &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; acts in a more general scope, and there is no connection between the &lt;xref:System.Windows.Controls.ControlTemplate&gt; class itself and the instantiated template once it is applied.</source>
          <target state="translated">您無法使用&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;方法來尋找範本中的項目，因為&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;扮演更常見的範圍，而且之間沒有連線&lt;xref:System.Windows.Controls.ControlTemplate&gt;類別本身和具現化的範本，一旦套用。&lt;/xref:System.Windows.Controls.ControlTemplate&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; supplies the same function as this method.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;提供這個方法與相同的功能。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;已受到保護而不是公用，並使用正確名稱範圍，使其得以存取的範本內的項目和尋找名為項目的考量。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; when you need to get an element outside of its parent control.</source>
          <target state="translated">使用&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;當您需要取得其父控制項以外的項目。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Name of the child to find.</source>
          <target state="translated">若要尋找的子系的名稱。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The requested element.</source>
          <target state="translated">要求的項目。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no element of the requested name exists.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果要求的名稱項目不存在。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Returns an alternative logical parent for this element if there is no visual parent.</source>
          <target state="translated">如果沒有視覺父代，則傳回此項目的替代邏輯父。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The default &lt;xref:System.Windows.FrameworkElement&gt; implementation returns the expected single visual parent, which is the same result as getting the &lt;xref:System.Windows.FrameworkElement.Parent%2A&gt; value.</source>
          <target state="translated">預設值&lt;xref:System.Windows.FrameworkElement&gt;實作會傳回預期單一視覺化父項目，也就是相同的結果，以取得&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;值。&lt;/xref:System.Windows.FrameworkElement.Parent%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Derived class implementations might return alternate parent relationships.</source>
          <target state="translated">在衍生的類別實作可能會傳回替代的父代關聯性。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Returns something other than <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</source>
          <target state="translated">傳回的項目以外<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>每當這個方法的 WPF 架構層級實作具有非視覺父連線時。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.GetVisualChild%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, and returns a child at the specified index from a collection of child elements.</source>
          <target state="translated">覆寫<ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.GetVisualChild%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，並從子項目集合傳回指定索引處的子系。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>In the &lt;xref:System.Windows.FrameworkElement&gt; implementation, the only valid index is zero.</source>
          <target state="translated">在&lt;xref:System.Windows.FrameworkElement&gt;實作中，唯一有效的索引為零。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The content model for GetVisualChild supports either zero or one child elements, not a collection.</source>
          <target state="translated">內容模型的 GetVisualChild 支援零個或一個子項目不是集合。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The zero-based index of the requested child element in the collection.</source>
          <target state="translated">要求的子項目集合中以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The requested child element.</source>
          <target state="translated">要求的子項目。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This should not return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; if the provided index is out of range, an exception is thrown.</source>
          <target state="translated">這應該不會傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 如果提供的索引超出範圍，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Gets or sets the suggested height of the element.</source>
          <target state="translated">取得或設定項目的建議的高度。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Height is one of three writable properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">高度位於三個可寫入屬性的其中一個&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定高度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is that first &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;, and finally, if it is within bounds, Height.</source>
          <target state="translated">如果之間的衝突這些值，應用程式的實際高度決定的順序是第一個&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;必須能接受，然後&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;，最後，如果它是高度的範圍內。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>If this element is a child element within some other element, then setting this property to a value is really only a suggested value.</source>
          <target state="translated">如果這個項目是一些其他項目內的子元素，然後將此屬性設定為值其實只是建議的值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process.</source>
          <target state="translated">版面配置系統，以及特定配置的邏輯父項目會使用值為非繫結輸入配置程序期間。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>In practical terms, a &lt;xref:System.Windows.FrameworkElement&gt; is almost always the child element of something else; even when you set the Height on &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">實際上，&lt;xref:System.Windows.FrameworkElement&gt;是幾乎的其他項目; 即使設定於&lt;xref:System.Windows.Window&gt;。&lt;/xref:System.Windows.Window&gt;高度的子項目&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>(For &lt;xref:System.Windows.Window&gt;, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)       In addition to acceptable &lt;xref:System.Double&gt; values, this property can also be &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.</source>
          <target state="translated">(如&lt;xref:System.Windows.Window&gt;，基礎的應用程式模型建立建立 Hwnd 基本呈現假設時，會使用值主控應用程式。)&lt;/xref:System.Windows.Window&gt;     除了可接受&lt;xref:System.Double&gt;的值，這個屬性也可以是&lt;xref:System.Double.NaN?displayProperty=fullName&gt;.&lt;/xref:System.Double.NaN?displayProperty=fullName&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This is how you specify auto sizing behavior in code.</source>
          <target state="translated">這是您在程式碼中指定自動調整大小行為的方式。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>您設定值的字串 「 自動 」 （不區分大小寫） 若要啟用自動調整大小行為。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Auto sizing behavior implies that the element will fill the height available to it.</source>
          <target state="translated">自動調整大小行為表示項目將會填入可用的高度。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">不過請注意，特定控制項通常會提供預設值，透過其預設佈景主題樣式，將會停用自動調整大小行為，除非它是特別重新啟用。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">這個屬性傳回的值一律為任何已設定為它的值相同。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>In contrast, the value of the &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; may vary.</source>
          <target state="translated">相較之下，值&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;而異。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>This can happen either statically because the layout rejected the suggested size for some reason, or momentarily.</source>
          <target state="translated">這種情形是以靜態方式因為配置基於某些原因，拒絕建議的大小或立刻顯示。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The layout system itself works asynchronously relative to the property system's set of Height and may not have processed that particular sizing property change yet.</source>
          <target state="translated">版面配置系統本身會相對於高度的屬性系統的組以非同步方式運作，且可能有處理該特定尚未調整大小屬性變更。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">值限制&lt;xref:System.Double&gt;值會強制執行&lt;xref:System.Windows.ValidateValueCallback&gt;機制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果您嘗試設定無效的值時，會擲回執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for Height that is enforced by the layout system (this is a very large number, larger than &lt;xref:System.Single.MaxValue?displayProperty=fullName&gt; but smaller than &lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;).</source>
          <target state="translated">驗證檢查，除了沒有繫結會強制執行由配置系統的高度不具決定性的上限值 (這是非常大數目，大於&lt;xref:System.Single.MaxValue?displayProperty=fullName&gt;但小於&lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;)。&lt;/xref:System.Double.MaxValue?displayProperty=fullName&gt; &lt;/xref:System.Single.MaxValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">如果超過此限制，將不會呈現項目，並擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Do not set Height to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">請勿將高度設為明顯地大於任何可能的視覺顯示的大小上限的值，或您可能會超過此不具決定性的上限。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Height="double"/&gt;   - or -   &lt;object Height="qualifiedDouble"/&gt;   - or -   &lt;object Height="Auto"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Height"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Height="double"/&gt;   - or -   &lt;object Height="qualifiedDouble"/&gt;   - or -   &lt;object Height="Auto"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Height"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">如需上限資訊，請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這個值會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px       <bpt id="p1">**</bpt>Auto<ept id="p1">**</ept>    Enables autosizing behavior.</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px<bpt id="p1">**</bpt>自動<ept id="p1">**</ept>啟用自動調整大小行為。       </target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.HeightProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.HeightProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.HeightProperty&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的高度，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">預設值是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">此值必須等於或大於 0.0。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">如需上限資訊，請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Height*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Height*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Height*&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</source>
          <target state="translated">取得或設定套用至此元素在父項目，例如面板或項目控制項組成時的水平對齊特性。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting HorizontalAlignment to &lt;xref:System.Windows.HorizontalAlignment&gt;.</source>
          <target state="translated">當&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;項目上明確設定屬性&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;，這些度量需要較高優先順序在配置期間，將會取消設定至&lt;xref:System.Windows.HorizontalAlignment&gt;。&lt;/xref:System.Windows.HorizontalAlignment&gt;水平對齊的典型的效果&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>HorizontalAlignment is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">水平對齊是<ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph>實際上會相依性屬性的屬性存取子。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in subclassed elements, particularly controls.</source>
          <target state="translated">這個特定的相依性屬性經常會有子類別化項目，特別是控制項中以不同方式設定其明顯"default"值。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">這通常發生在兩種方式之一︰ 重新登錄相依性屬性的特定子類別，但具有不同的中繼資料來設定其預設值。或以不同的方式設定該相依性屬性的值為預設樣式套用。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>For example, the apparent "default" of HorizontalAlignment for a &lt;xref:System.Windows.Controls.Label&gt; control will be &lt;xref:System.Windows.HorizontalAlignment&gt;, even though &lt;xref:System.Windows.Controls.Label&gt; inherits HorizontalAlignment direct from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">例如，明顯 「 預設 」 的水平對齊的&lt;xref:System.Windows.Controls.Label&gt;控制項將會是&lt;xref:System.Windows.HorizontalAlignment&gt;，即使&lt;xref:System.Windows.Controls.Label&gt;繼承 HorizontalAlignment 直接從&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Controls.Label&gt; &lt;/xref:System.Windows.HorizontalAlignment&gt; &lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>This is because that value was reset within the default style of &lt;xref:System.Windows.Controls.Label&gt;, within the style's control template.</source>
          <target state="translated">這是因為該值重設的預設樣式中&lt;xref:System.Windows.Controls.Label&gt;，樣式的控制項範本內。&lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas&gt; does not use HorizontalAlignment when composing layout, because &lt;xref:System.Windows.Controls.Canvas&gt; is based on absolute positioning.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas&gt;時不會使用水平對齊撰寫版面配置，因為&lt;xref:System.Windows.Controls.Canvas&gt;根據絕對位置。&lt;/xref:System.Windows.Controls.Canvas&gt;&lt;/xref:System.Windows.Controls.Canvas&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>When inherited by &lt;xref:System.Windows.Controls.Label&gt; or derived classes, &lt;xref:System.Windows.Controls.Label&gt; redefines the default value of this dependency property to be &lt;xref:System.Windows.HorizontalAlignment&gt;.</source>
          <target state="translated">當&lt;xref:System.Windows.Controls.Label&gt;或衍生的類別，&lt;xref:System.Windows.Controls.Label&gt;會重新定義為&lt;xref:System.Windows.HorizontalAlignment&gt;.&lt;/xref:System.Windows.HorizontalAlignment&gt;這個相依性屬性的預設值&lt;/xref:System.Windows.Controls.Label&gt;&lt;/xref:System.Windows.Controls.Label&gt;繼承</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; &lt;/xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A horizontal alignment setting, as a value of the enumeration.</source>
          <target state="translated">水平對齊方式設定，做為列舉值。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.HorizontalAlignment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</source>
          <target state="translated">取得或設定屬性值繼承、 資源索引鍵查閱和 RelativeSource FindAncestor 查閱的範圍限制。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Certain boundaries in the element tree set InheritanceBehavior to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further.</source>
          <target state="translated">項目樹狀結構中的特定界限設定 InheritanceBehavior 刻意限制的繼承行為，強制資源查閱來檢查應用程式資源，或防止 RelativeSource FindAncestor 查閱查詢目前的項目，或任何進一步的範圍。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>RelativeSource FindAncestor lookup occurs when a binding uses a &lt;xref:System.Windows.Data.RelativeSource&gt; that has its &lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt; property set to the &lt;xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt; value.</source>
          <target state="translated">使用繫結，就會發生 RelativeSource FindAncestor 查閱&lt;xref:System.Windows.Data.RelativeSource&gt;具有其&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;屬性設定為&lt;xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt;值。&lt;/xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.RelativeSource.Mode%2A&gt; &lt;/xref:System.Windows.Data.RelativeSource&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</source>
          <target state="translated">如果您想要將此屬性設定衍生的類別，您應該在靜態建構函式或其他初始化常式中如此做。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">列舉值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.InheritanceBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.InheritanceBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Occurs when this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">發生時這<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已初始化。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>This event coincides with cases where the value of the &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt; property changes from <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (or undefined) to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此事件會伴隨的情況下其中的值&lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt;屬性從變更<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （或未定義） 至<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.IsInitialized*&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>This event will be raised whenever the &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt; or &lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt; methods are called.</source>
          <target state="translated">此事件將在每次引發&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;或&lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt;呼叫的方法。&lt;/xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt; &lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Calls to either method could have come from application code, or through the <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> processor behavior when a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> page is processed.</source>
          <target state="translated">任一種方法的呼叫可以有來自應用程式程式碼，或透過<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>處理器的行為時<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理網頁。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Whether you choose to handle &lt;xref:System.Windows.FrameworkElement.Loaded&gt; or Initialized depends on your requirements.</source>
          <target state="translated">您是否選擇處理&lt;xref:System.Windows.FrameworkElement.Loaded&gt;或初始化取決於您的需求。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, Initialized might be the better event to act upon.</source>
          <target state="translated">如果您不需要讀取項目屬性、 想要重設的屬性，而且不需要任何配置資訊，初始化可能會更好的事件，以根據採取行動。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, &lt;xref:System.Windows.FrameworkElement.Loaded&gt; might be the better event to act upon.</source>
          <target state="translated">如果您需要的項目，才能使用，所有屬性，而且您將設定重設配置，可能是屬性&lt;xref:System.Windows.FrameworkElement.Loaded&gt;可能會更好的事件，以根據採取行動。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">請小心重新進入的如果您的處理常式會由配置系統表示新的配置傳遞需要解譯任何屬性重設。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>(You might need to check the &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; values on the property if you are unsure of which properties can require a new layout pass if they are changed.)       For more information about the sequence of object events for a &lt;xref:System.Windows.FrameworkElement&gt;, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">(您可能需要檢查&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;屬性，如果您不確定哪些屬性可以要求新的版面配置上的值通過，在變更時。)&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;     如需詳細資訊有關順序的物件事件&lt;xref:System.Windows.FrameworkElement&gt;，以及是否有數個相關應用程式和項目類別，請參閱<bpt id="p1">[</bpt>物件存留期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Gets or sets the context for input used by this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定所使用的輸入內容<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">這個相依性屬性會繼承屬性值。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for InputScope established through local values or styles, then the property system will set the value to be the InputScope value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">如果有子項目不含 InputScope 透過本機值或樣式建立的其他值，對屬性系統將會設定要指派此值與最接近的祖系項目的 InputScope 值的值。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Although a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax usage is listed and is syntactically allowed, setting this property in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is not common.</source>
          <target state="translated">雖然<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>語法使用量列為和語法上允許中, 設定這個屬性<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>並不常見。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputScope"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.InputScopeProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputScope"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.InputScopeProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.InputScopeProperty&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The input scope, which modifies how input from alternative input methods is interpreted.</source>
          <target state="translated">輸入的範圍，修改替代的輸入方法中輸入的解譯方式。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (which results in a default handling of commands).</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （結果會在預設的命令處理）。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.InputScope*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.InputScope*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.InputScope*&gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this element has been initialized, either during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor, or by explicitly having its &lt;xref:System.Windows.FrameworkElement.EndInit*&gt; method called.</source>
          <target state="translated">取得值，指出是否已初始化這個項目，根據處理期間<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理器，或是明確地其&lt;xref:System.Windows.FrameworkElement.EndInit*&gt;呼叫方法。&lt;/xref:System.Windows.FrameworkElement.EndInit*&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>This property may also be <ph id="ph1">`true`</ph> if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.</source>
          <target state="translated">這個屬性也可能<ph id="ph1">`true`</ph>如果此項目已移動邏輯樹狀結構內，使它有新的父項目，並且因此變成一次重新載入。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>This property is useful if you also are using &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; and &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;.</source>
          <target state="translated">此屬性相當實用，如果您也會使用&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;和&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Elements in the logical tree that is loaded by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor are assured to be initialized.</source>
          <target state="translated">邏輯樹狀結構中所載入的項目<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理器會確保進行初始化。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Elements not in the logical tree are initialized when &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt; is called.</source>
          <target state="translated">不在邏輯樹狀結構中的元素會初始化時&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;稱為。&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>In absence of any specific handling of &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; and &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;, this will happen as soon as the constructor returns the initialized result.</source>
          <target state="translated">沒有任何特定處理的情況下&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;和&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;，建構函式會傳回初始化的結果時，會發生此情況。&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is initialized per the aforementioned <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processing or method calls; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果項目初始化每個先前提及<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理或方法呼叫，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this element has been loaded for presentation.</source>
          <target state="translated">取得值，指出這個項目是否已載入的簡報。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>From a newly constructed &lt;xref:System.Windows.FrameworkElement&gt;, this property starts off <ph id="ph1">`false`</ph>, and remains <ph id="ph2">`true`</ph> after it is set to <ph id="ph3">`true`</ph>, even if the element is subsequently removed from a connected logical tree by code.</source>
          <target state="translated">從新建構&lt;xref:System.Windows.FrameworkElement&gt;，這個屬性一開始<ph id="ph1">`false`</ph>，且會維持<ph id="ph2">`true`</ph>設為它之後<ph id="ph3">`true`</ph>，即使之後移除元素已連線的邏輯樹狀結構中程式碼。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> state is set by the general presentation logic when elements are loaded into the presentation engine.</source>
          <target state="translated"><ph id="ph1">`true`</ph>狀態是項目會載入簡報引擎時設定的一般呈現邏輯。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Typically, loaded elements are rendered, but not all &lt;xref:System.Windows.FrameworkElement&gt; derived classes have a presentation, and other properties such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; can influence presentation.</source>
          <target state="translated">一般而言，載入項目會轉譯，但不是全部&lt;xref:System.Windows.FrameworkElement&gt;衍生的類別中有一份簡報和其他屬性，例如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;可能會影響簡報。&lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current element is attached to an element tree; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the element has never been attached to a loaded element tree.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果目前的項目附加至項目樹狀結構中;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果項目已永遠不會附加到載入的項目樹狀結構。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets or sets localization/globalization language information that applies to an element.</source>
          <target state="translated">取得或設定套用至項目的當地語系化/全球化語言資訊。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The string formats follow the RFC 3066 standard.</source>
          <target state="translated">字串格式會依照 RFC 3066 標準。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>For example, U.S. English is "en-US".</source>
          <target state="translated">例如，美國英文是"EN-US"。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>For more information on the values and format, see &lt;xref:System.Windows.Markup.XmlLanguage&gt;.</source>
          <target state="translated">如需值和格式的詳細資訊，請參閱&lt;xref:System.Windows.Markup.XmlLanguage&gt;.&lt;/xref:System.Windows.Markup.XmlLanguage&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">這個相依性屬性會繼承屬性值。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for Language established through local values or styles, the property system will set the value to be the Language value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">如果有子項目不含其他語言建立透過本機值或樣式的值，對屬性系統將會設定要指派此值與最接近上階元素的語言值的值。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> defines the general meaning of the <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>定義的一般意義<ph id="ph2">`xml:lang`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Language essentially exposes the meaning of this attribute as a dependency property.</source>
          <target state="translated">語言基本上會公開這個屬性為相依性屬性的意義。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Language can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the <ph id="ph1">`xml:lang`</ph> attribute can inherit to child element scope in <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">語言可以透過程式設計的方式，調整，而且可以參與平行設計的方式的屬性系統值繼承如何<ph id="ph1">`xml:lang`</ph>屬性可以繼承中的子系項目範圍<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>If you set Language, that value becomes the <ph id="ph1">`xml:lang`</ph> and overwrites any previous value.</source>
          <target state="translated">如果您設定的語言，此值會變成<ph id="ph1">`xml:lang`</ph>並覆寫任何先前的值。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>xml:lang Handling in XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>xml: lang 處理在 XAML 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CultureInfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LanguageProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CultureInfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.LanguageProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.LanguageProperty&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The language information for this element.</source>
          <target state="translated">這個項目的語言資訊。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The default value is an <bpt id="p1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with its &lt;xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt; value set to the string "en-US".</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有其&lt;xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt;值設定為字串"EN-US"。&lt;/xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt;</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Language*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Language*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Language*&gt;</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Gets or sets a graphics transformation that should apply to this element when  layout is performed.</source>
          <target state="translated">取得或設定圖形轉換執行配置時應套用至這個項目。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;, LayoutTransform will affect results of layout.</source>
          <target state="translated">相對於&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;，LayoutTransform 會影響結果的版面配置。&lt;/xref:System.Windows.UIElement.RenderTransform%2A&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Setting a transform provides powerful capabilities of scaling and rotating.</source>
          <target state="translated">設定轉換提供強大的縮放和旋轉的功能。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>However, LayoutTransform ignores &lt;xref:System.Windows.Media.TranslateTransform&gt; operations.</source>
          <target state="translated">不過，會忽略 LayoutTransform&lt;xref:System.Windows.Media.TranslateTransform&gt;作業。&lt;/xref:System.Windows.Media.TranslateTransform&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>This is because the layout system behavior for child elements of a &lt;xref:System.Windows.FrameworkElement&gt; auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.</source>
          <target state="translated">這是因為子項目的的版面配置系統行為&lt;xref:System.Windows.FrameworkElement&gt;自動更正任何位移的縮放或旋轉項目到配置的位置和父項目的座標系統。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>LayoutTransform can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system.</source>
          <target state="translated">如果您不需要完全傳遞配置系統案例中叫用 LayoutTransform 可能會導致效能不佳的應用程式。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>When you apply a LayoutTransform to the &lt;xref:System.Windows.Controls.Panel.Children%2A&gt; collection of the &lt;xref:System.Windows.Controls.Panel&gt;, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged.</source>
          <target state="translated">當您將套用至 LayoutTransform&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;集合&lt;xref:System.Windows.Controls.Panel&gt;觸發新的行程由配置系統，強制所有螢幕物件 remeasured 和重新排列。&lt;/xref:System.Windows.Controls.Panel&gt; &lt;/xref:System.Windows.Controls.Panel.Children%2A&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>If you are updating the complete application <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>, this functionality might be exactly what you need.</source>
          <target state="translated">如果您要更新的完整應用程式<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>，這項功能可能完全您的需要。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>However, if you do not need a full layout pass, use the &lt;xref:System.Windows.UIElement.RenderTransform%2A&gt; property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.</source>
          <target state="translated">不過，如果您不需要完整的配置傳遞，使用&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;屬性，它不會叫用這個版面配置系統，並因此，通常是比較好的選擇，此案例。&lt;/xref:System.Windows.UIElement.RenderTransform%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Example scenarios where LayoutTransform would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.      <bpt id="p1">&lt;a name="dependencyPropertyInfo_LayoutTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated">會有幫助 LayoutTransform 的範例案例包括︰ 旋轉元素，例如功能表元件從水平為垂直或反之亦然，縮放比例元素 （拉近） 焦點，提供編輯行為，依此類推。     <bpt id="p1">&lt;a name="dependencyPropertyInfo_LayoutTransform"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The transform this element should use.</source>
          <target state="translated">轉換應該使用這個項目。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.Windows.Media.Transform.Identity*&gt;.</source>
          <target state="translated">預設值為&lt;xref:System.Windows.Media.Transform.Identity*&gt;.&lt;/xref:System.Windows.Media.Transform.Identity*&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.LayoutTransform*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.LayoutTransform*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.LayoutTransform*&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Occurs when the element is laid out, rendered, and ready for interaction.</source>
          <target state="translated">項目已配置版面、 呈現以及可以互動時發生。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Loaded is usually the last event raised in an element initialization sequence.</source>
          <target state="translated">載入通常是最後一個事件中引發的項目初始化順序。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>It will always be raised after &lt;xref:System.Windows.FrameworkElement.Initialized&gt;.</source>
          <target state="translated">它將會引發這個事件之後&lt;xref:System.Windows.FrameworkElement.Initialized&gt;.&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Whether you choose to handle Loaded or &lt;xref:System.Windows.FrameworkElement.Initialized&gt; depends on your requirements.</source>
          <target state="translated">您是否選擇處理 Loaded 或&lt;xref:System.Windows.FrameworkElement.Initialized&gt;取決於您的需求。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, &lt;xref:System.Windows.FrameworkElement.Initialized&gt; might be the better event to act upon.</source>
          <target state="translated">如果您不需要讀取項目屬性，想要重設的屬性，並不需要任何配置資訊，&lt;xref:System.Windows.FrameworkElement.Initialized&gt;可能會更好的事件，以根據採取行動。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, Loaded might be the better event to act upon.</source>
          <target state="translated">如果您需要的所有屬性的項目，才能使用，而且您將會設定屬性都可能會重設配置、 載入可能會更好的事件，以根據採取行動。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">請小心重新進入的如果您的處理常式會由配置系統表示新的配置傳遞需要解譯任何屬性重設。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>(You might need to check the &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; values on the property if you are unsure of which properties can require a new layout pass if they are changed.)       For more information about the sequence of object events for a &lt;xref:System.Windows.FrameworkElement&gt;, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">(您可能需要檢查&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;屬性，如果您不確定哪些屬性可以要求新的版面配置上的值通過，在變更時。)&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;     如需詳細資訊有關順序的物件事件&lt;xref:System.Windows.FrameworkElement&gt;，以及是否有數個相關應用程式和項目類別，請參閱<bpt id="p1">[</bpt>物件存留期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不會遵循路由，才會處理在引發相同的項目內。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件並支援其他路由的事件的行為︰ 它們支援可存取的處理常式集合中，且可用來當作&lt;xref:System.Windows.EventTrigger&gt;樣式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Loaded and &lt;xref:System.Windows.FrameworkElement.Unloaded&gt; might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated">載入和&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;可能同時會引發控制項，因為使用者起始的系統主題變更。&lt;/xref:System.Windows.FrameworkElement.Unloaded&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">佈景主題變更會導致控制項樣板和自主視覺化樹狀結構，因此使得卸載再重新載入整個控制項的失效。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Therefore Loaded cannot be assumed to occur only when a page is first loaded through navigation to the page.</source>
          <target state="translated">因此無法假設 Loaded 發生只頁面第一次載入時透過巡覽至頁面。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Loaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LoadedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Loaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.LoadedEvent&gt;|  |路由策略 |直接 |  |委派 |&lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.LoadedEvent&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Gets an enumerator for logical child elements of this element.</source>
          <target state="translated">取得這個元素的邏輯子元素的列舉值。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>LogicalChildren allows you to iterate over child elements.</source>
          <target state="translated">LogicalChildren 可讓您逐一查看項目子系。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly &lt;xref:System.Windows.FrameworkContentElement&gt; child elements.</source>
          <target state="translated">這適用於項目可能沒有定義且固定的集合，但仍然會包含一個以上的子元素，特別是&lt;xref:System.Windows.FrameworkContentElement&gt;子項目。&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>For more information on how to use LogicalChildren and &lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關如何使用 LogicalChildren 和&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;，請參閱<bpt id="p1">[</bpt>中 WPF 樹狀架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>An enumerator for logical child elements of this element.</source>
          <target state="translated">此項目的邏輯子項目列舉值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Gets or sets the outer margin of an element.</source>
          <target state="translated">取得或設定項目的外的邊界。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The margin is the space between this element and other elements that will be adjacent when layout creates the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">邊界是這個項目和其他配置建立時將相鄰的項目之間的間距<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element's parent.</source>
          <target state="translated">共用的項目可能是對等項目 （例如中其他項目的一般父控制項的集合），或也可能是此項目的父代。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Margin is set as a &lt;xref:System.Windows.Thickness&gt; structure rather than as a number so that the margin can be set asymmetrically.</source>
          <target state="translated">邊界設定為&lt;xref:System.Windows.Thickness&gt;結構，而不是數字，以便可以設定邊界對稱性。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Thickness&gt; structure itself supports string type conversion so that you can specify an asymmetric Margin in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> attribute syntax also.</source>
          <target state="translated">&lt;xref:System.Windows.Thickness&gt;結構本身支援字串型別轉換，好讓您可以指定非對稱的邊界，以<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>也屬性語法。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>A non-zero margin applies space outside the element layout's &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;.</source>
          <target state="translated">非零邊界適用於外部項目配置&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;空間</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.</source>
          <target state="translated">邊界會加總的同層級項目在版面配置。例如，都與 30 的邊界設定邊緣相鄰的兩個相鄰項目會有 60 之間的空間單位。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Elements that have margins set will not typically constrain the size of the specified Margin if the allotted rectangle space is not large enough for the margin plus the element content area.</source>
          <target state="translated">如果配置的矩形空間沒有夠大，邊界以及元素內容區域，則已設定邊界的項目將會不通常限制指定的邊界的大小。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The element content area will be constrained instead when layout is calculated.</source>
          <target state="translated">計算配置時，將會改為限制項目的內容區域。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The only case where margins would be constrained also is if the content is already constrained all the way to zero.</source>
          <target state="translated">邊界會被限制的唯一情況也是內容已被限制到零。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Margin="left,top,right,bottom"/&gt;   - or -   &lt;object Margin="left,top"/&gt;   - or -   &lt;object Margin="thicknessReference"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Margin"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.Margin&gt;       &lt;Thickness Left="left" Top="top" Right="right" Bottom="bottom"/&gt;     &lt;/object.Margin&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_Margin"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>left, top, right, bottom<ept id="p4">*</ept>    Number values between 0 and &lt;xref:System.Double.PositiveInfinity&gt; that specify the four possible dimension properties of a &lt;xref:System.Windows.Thickness&gt; structure.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Margin="left,top,right,bottom"/&gt;   - or -   &lt;object Margin="left,top"/&gt;   - or -   &lt;object Margin="thicknessReference"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Margin"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 屬性項目用法<ph id="ph2">```   &lt;object&gt;     &lt;object.Margin&gt;       &lt;Thickness Left="left" Top="top" Right="right" Bottom="bottom"/&gt;     &lt;/object.Margin&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_Margin"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>左、 上方，以滑鼠右鍵、 下方<ept id="p4">*</ept>數字值介於 0 和&lt;xref:System.Double.PositiveInfinity&gt;旗標會指定四個可能維度屬性的&lt;xref:System.Windows.Thickness&gt;結構。&lt;/xref:System.Windows.Thickness&gt; &lt;/xref:System.Double.PositiveInfinity&gt;            </target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically.</source>
          <target state="translated">屬性使用方式也會接受縮寫對稱與邏輯上提供的順序套用的值。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Margin="20"`</ph> will be interpreted to mean a &lt;xref:System.Windows.Thickness&gt; with all properties set to 20.</source>
          <target state="translated">比方說，<ph id="ph1">`Margin="20"`</ph>會解譯成表示&lt;xref:System.Windows.Thickness&gt;且其所有屬性設定為 20。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Margin="20,50"`</ph> will be interpreted to mean a &lt;xref:System.Windows.Thickness&gt; with &lt;xref:System.Windows.Thickness.Left%2A&gt; and &lt;xref:System.Windows.Thickness.Right%2A&gt; set to 20, and &lt;xref:System.Windows.Thickness.Top%2A&gt; and &lt;xref:System.Windows.Thickness.Bottom%2A&gt; set to 50.</source>
          <target state="translated"><ph id="ph1">`Margin="20,50"`</ph>將解譯成表示&lt;xref:System.Windows.Thickness&gt;與&lt;xref:System.Windows.Thickness.Left%2A&gt;和&lt;xref:System.Windows.Thickness.Right%2A&gt;設為 20，和&lt;xref:System.Windows.Thickness.Top%2A&gt;和&lt;xref:System.Windows.Thickness.Bottom%2A&gt;設定為 50。&lt;/xref:System.Windows.Thickness.Bottom%2A&gt; &lt;/xref:System.Windows.Thickness.Top%2A&gt; &lt;/xref:System.Windows.Thickness.Right%2A&gt; &lt;/xref:System.Windows.Thickness.Left%2A&gt; &lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The default unit for a &lt;xref:System.Windows.Thickness&gt; measure is <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>.</source>
          <target state="translated">預設單位&lt;xref:System.Windows.Thickness&gt;量值是<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>You can also specify other units by appending the unit type strings <ph id="ph1">`cm`</ph>, <ph id="ph2">`in`</ph>, or <ph id="ph3">`pt`</ph> to any measure.</source>
          <target state="translated">您也可以藉由附加單位類型字串來指定其他單位<ph id="ph1">`cm`</ph>， <ph id="ph2">`in`</ph>，或<ph id="ph3">`pt`</ph>任何量值。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Number values provided as <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0).</source>
          <target state="translated">數字作為值<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>屬性不需要指定小數位數 （0 是可以接受的並沒有提供的 0.0)。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> usage, see &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated">如需有關<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>使用量，請參閱&lt;xref:System.Windows.Thickness&gt;.&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept>    An object reference to an existing &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated"><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept>至現有的&lt;xref:System.Windows.Thickness&gt;。&lt;/xref:System.Windows.Thickness&gt;物件參考</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>This might be a <ph id="ph1">`}`</ph>, a , or <ph id="ph2">`}`</ph> reference.</source>
          <target state="translated">這可能是<ph id="ph1">`}`</ph>、 a、 或<ph id="ph2">`}`</ph>參考。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> usage, see &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated">如需有關<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>使用量，請參閱&lt;xref:System.Windows.Thickness&gt;.&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MarginProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.MarginProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MarginProperty&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Provides margin values for the element.</source>
          <target state="translated">提供項目的邊界值。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The default value is a <bpt id="p1">&lt;xref href="System.Windows.Thickness"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with all properties equal to 0 (zero).</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.Thickness"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用所有屬性皆等於 0 （零）。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Margin*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Margin*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Margin*&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum height constraint of the element.</source>
          <target state="translated">取得或設定項目的最大高度限制。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">這是三個屬性的其中一個上&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定高度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is first &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; must be honored, then MaxHeight, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">如果這些值之間沒有衝突，實際高度判斷應用程式的順序是第一個&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;必須能接受的則 MaxHeight，最後如果&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;的範圍內每一種&lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">值限制&lt;xref:System.Double&gt;值會強制執行&lt;xref:System.Windows.ValidateValueCallback&gt;機制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value a run-time exception is thrown.</source>
          <target state="translated">如果您嘗試設定無效的值會擲回執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MaxHeight="double"/&gt;   - or –   &lt;object MaxHeight ="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MaxHeight"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object MaxHeight="double"/&gt;   - or –   &lt;object MaxHeight ="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MaxHeight"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> if you need to explicitly set the value to be &lt;xref:System.Double.PositiveInfinity&gt;.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;套用屬性值 &gt; 一節中所述的範圍限制，只不過您必須使用<bpt id="p1">[</bpt>X:static 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>如果您需要明確地設定這個值為&lt;xref:System.Double.PositiveInfinity&gt;.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxHeight"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;|  |中繼資料屬性設定為<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;       </target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The maximum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">最大高度的項目，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Double&gt;.</source>
          <target state="translated">預設值是&lt;xref:System.Double&gt;.&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">這個值可以是等於或大於 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Double&gt; is also valid.</source>
          <target state="translated">&lt;xref:System.Double&gt;仍有效。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MaxHeight*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.MaxHeight*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.MaxHeight*&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum width constraint of the element.</source>
          <target state="translated">取得或設定項目的最大寬度限制。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">這是三個屬性的其中一個上&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定寬度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; must be honored, then MaxWidth, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">如果這些值之間沒有衝突，應用程式的實際寬度決定的順序是第一個&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;必須能接受的則 MaxWidth，最後如果&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;的範圍內每一種&lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">值限制&lt;xref:System.Double&gt;值會強制執行&lt;xref:System.Windows.ValidateValueCallback&gt;機制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果您嘗試設定無效的值時，會擲回執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MaxWidth="double"/&gt;   - or -   &lt;object MaxWidth="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MaxWidth"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object MaxWidth="double"/&gt;   - or -   &lt;object MaxWidth="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MaxWidth"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> to set the value to be &lt;xref:System.Double.PositiveInfinity&gt;.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;套用屬性值 &gt; 一節中所述的範圍限制，只不過您必須使用<bpt id="p1">[</bpt>X:static 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>來設定這個值為&lt;xref:System.Double.PositiveInfinity&gt;.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxWidth"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;|  |中繼資料屬性設定為<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;       </target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The maximum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的最大寬度，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Double&gt;.</source>
          <target state="translated">預設值是&lt;xref:System.Double&gt;.&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">這個值可以是等於或大於 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Double&gt; is also valid.</source>
          <target state="translated">&lt;xref:System.Double&gt;仍有效。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MaxWidth*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.MaxWidth*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.MaxWidth*&gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Implements basic measure-pass layout system behavior for <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">實作基本的測量傳遞配置系統行為<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt; to connect the  WPF core-level and WPF framework-level layout measure implementations.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;連接 WPF 核心層級和 WPF 架構層級配置量值實作。&lt;/xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation seals the method.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;實作密封方法。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; instead.</source>
          <target state="translated">若要調整 WPF 架構層級為基礎的任何項目的測量行程配置行為，請覆寫&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;改用。&lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use &lt;xref:System.Windows.FrameworkElement&gt;, override &lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">若要調整量值傳遞的項目之刻意不 WPF 架構層級上建立或使用&lt;xref:System.Windows.FrameworkElement&gt;，請覆寫&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.FrameworkElement&gt;配置行為</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>The available size that the parent element can give to the child elements.</source>
          <target state="translated">父項目可以提供給子項目使用的大小。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The desired size of this element in layout.</source>
          <target state="translated">版面配置中此項目所需的大小。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-derived class.</source>
          <target state="translated">當在衍生類別中覆寫時，測量子項目所需配置的大小，並決定的大小<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>-衍生的類別。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Override MeasureOverride to implement custom layout sizing behavior for your element as it participates in the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> layout system.</source>
          <target state="translated">覆寫要實作自訂版面配置您的項目調整大小行為，因為它所參與的 MeasureOverride<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>版面配置系統。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Your implementation should do the following:      1.</source>
          <target state="translated">您的實作應該執行下列動作︰ 1。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Iterate your element's particular collection of children that are part of layout, call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child element.</source>
          <target state="translated">逐一查看項目的特定集合的子系屬於配置中，呼叫&lt;xref:System.Windows.UIElement.Measure%2A&gt;每個子項目上。&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Immediately get &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; on the child (this is set as a property after &lt;xref:System.Windows.UIElement.Measure%2A&gt; is called).</source>
          <target state="translated">立即取得&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;的子系上 (這設定為屬性之後&lt;xref:System.Windows.UIElement.Measure%2A&gt;稱為)。&lt;/xref:System.Windows.UIElement.Measure%2A&gt; &lt;/xref:System.Windows.UIElement.DesiredSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Compute the net desired size of the parent based upon the measurement of the child elements.</source>
          <target state="translated">計算父系的子項目測量為基礎的網路所需的大小。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The return value of MeasureOverride should be the element's own desired size, which then becomes the measure input for the parent element of the current element.</source>
          <target state="translated">MeasureOverride 的傳回值應該是項目的自己所需大小，就會變成目前的項目之父元素的量值輸入。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>This same process continues through the layout system until the root element of the page is reached.</source>
          <target state="translated">同樣的程序會在頁面的根項目為止，持續進行的版面配置系統。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>During this process, child elements might return a larger &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; size than the initial <ph id="ph1">`availableSize`</ph> to indicate that the child element wants more space.</source>
          <target state="translated">在此過程中，子元素可能會傳回較大&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;大小比初始<ph id="ph1">`availableSize`</ph>來表示的子項目想更多空間。&lt;/xref:System.Windows.UIElement.DesiredSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.</source>
          <target state="translated">這可能會藉由引進可捲動區域，藉由建立某些方式堆疊的順序或任何數目的解決方案來進行測量或排列內容調整父控制項、 處理中您自己的實作。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Elements should call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child during this process, otherwise the child elements will not be correctly sized or arranged.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 項目應該呼叫&lt;xref:System.Windows.UIElement.Measure%2A&gt;在此程序期間每個子系，否則子項目會無法正確調整大小或排列。&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The available size that this element can give to child elements.</source>
          <target state="translated">這個項目可以提供給子項目使用的大小。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Infinity can be specified as a value to indicate that the element will size to whatever content is available.</source>
          <target state="translated">Infinity 可以指定為一個值，指出項目會調整大小以任何內容可供使用。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The size that this element determines it needs during layout, based on its calculations of child element sizes.</source>
          <target state="translated">這個項目決定其大小所需的配置，其計算子項目大小的基礎。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum height constraint of the element.</source>
          <target state="translated">取得或設定元素的最小高度限制。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">這是三個屬性的其中一個上&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定高度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is first MinHeight must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">實際的高度項判斷是，如果這些值，應用程式的順序之間衝突第一個 MinHeight 必須遵照，然後&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;，最後如果&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;的範圍內每一種&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">值限制&lt;xref:System.Double&gt;值會強制執行&lt;xref:System.Windows.ValidateValueCallback&gt;機制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果您嘗試設定無效的值時，會擲回執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MinHeight="double"/&gt;   - or -   &lt;object MinHeight="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MinHeight"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object MinHeight="double"/&gt;   - or -   &lt;object MinHeight="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MinHeight"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;套用屬性值 &gt; 一節中所述的範圍限制。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MinHeightProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinHeight"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.MinHeightProperty&gt;|  |中繼資料屬性設定為<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeightProperty&gt;       </target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The minimum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的最小高度，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The default value is 0.0.</source>
          <target state="translated">預設值為 0.0。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">這個值可以是等於或大於 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Double&gt; is NOT valid, nor is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">不過，&lt;xref:System.Double&gt;不是有效的也不是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MinHeight*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.MinHeight*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.MinHeight*&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum width constraint of the element.</source>
          <target state="translated">取得或設定元素的最小寬度限制。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">這是三個屬性的其中一個上&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定寬度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first MinWidth must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">實際寬度的判斷，如果這些值，應用程式的順序之間衝突第一個 MinWidth 必須遵照，然後&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;，最後如果&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;的範圍內每一種&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">值限制&lt;xref:System.Double&gt;值會強制執行&lt;xref:System.Windows.ValidateValueCallback&gt;機制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果您嘗試設定無效的值時，會擲回執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MinWidth="double"/&gt;   - or -   &lt;object MinWidth="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MinWidth"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object MinWidth="double"/&gt;   - or -   &lt;object MinWidth="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MinWidth"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;套用屬性值 &gt; 一節中所述的範圍限制。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MinWidthProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinWidth"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.MinWidthProperty&gt;|  |中繼資料屬性設定為<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidthProperty&gt;       </target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The minimum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">最小寬度的項目，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The default value is 0.0.</source>
          <target state="translated">預設值為 0.0。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">這個值可以是等於或大於 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Double&gt; is not valid, nor is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">不過，&lt;xref:System.Double&gt;不正確，也不是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MinWidth*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.MinWidth*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.MinWidth*&gt;</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Moves the keyboard focus away from this element and to another element in a provided traversal direction.</source>
          <target state="translated">將鍵盤焦點離開這個項目與另一個項目移以提供的周遊的方向。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>This implementation overrides &lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt; and seals the method.</source>
          <target state="translated">此實作會覆寫&lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt;和密封方法。&lt;/xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>The direction that focus is to be moved, as a value of the enumeration.</source>
          <target state="translated">重點是要移動，做為列舉值的方向。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if focus is moved successfully; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the target element in direction as specified does not exist or could not be keyboard focused.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已成功; 移動焦點<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果的方向會與目標項目會指定不存在或可能不鍵盤焦點。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Gets or sets the identifying name of the element.</source>
          <target state="translated">取得或設定項目的識別名稱。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor.</source>
          <target state="translated">此名稱提供參考，以便之後處理期間建構標記項目可以參考程式碼後置，例如事件處理常式程式碼，<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>處理器。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The most common usage of this property is to specify a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> element name as an attribute in markup.</source>
          <target state="translated">這個屬性的最常見的使用方式是指定<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>做為屬性標記的項目名稱。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>This property essentially provides a WPF framework-level convenience property to set the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">這個屬性基本上會提供 WPF 架構層級方便的屬性來設定<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>X:name 指示詞<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Names must be unique within a namescope.</source>
          <target state="translated">名稱必須是唯一的名稱範圍內。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Getting a Name if you are creating elements in code is not common.</source>
          <target state="translated">取得名稱，如果您要在程式碼中建立項目並不常見。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the Name.</source>
          <target state="translated">如果已經在程式碼中有適當的參考，您可以直接呼叫方法和屬性上的項目參考，而且通常不需要的名稱。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>An exception to this is if the Name string has some overloaded meaning, for instance if it is useful to display that name in <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">這個例外狀況名稱字串是否以某些多載意義，例如是否要顯示在該名稱很有用<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Setting a Name from code-behind if the original Name was set from markup is also not recommended, and changing the property after loading the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> will not change the original object reference.</source>
          <target state="translated">設定程式碼後置如果從標記設定原始名稱中的名稱也不建議，並於載入後變更屬性<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>不會變更原始的物件參考。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The object references are created only when the underlying namescopes are explicitly created during parsing.</source>
          <target state="translated">只有在剖析期間明確建立的基礎命名範圍時，會建立物件參考。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>You must specifically call &lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt; to make an effective change to the Name property of an already loaded element.</source>
          <target state="translated">您必須特別呼叫&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;有效的變更對已載入元素的 Name 屬性。&lt;/xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>One notable case where setting Name from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time.</source>
          <target state="translated">其中一個值得注意的案例是重要設定名稱從程式碼時，註冊項目的分鏡腳本會執行，對的名稱，以便在執行階段可以參考它們。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Before you can register a name, might also need to instantiate and assign a &lt;xref:System.Windows.NameScope&gt; instance.</source>
          <target state="translated">您可以註冊之前，可能也需要具現化，並指派&lt;xref:System.Windows.NameScope&gt;執行個體。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>See the Example section, or <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱 &lt; 範例 &gt; 一節中，或<bpt id="p1">[</bpt>概觀腳本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Setting Name from code has limited applications, but getting an element by Name is more common.</source>
          <target state="translated">設定名稱從程式碼受到限制的應用程式，但更常見取得依名稱的項目。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page.</source>
          <target state="translated">一個特定案例中，這是您的應用程式是否支援頁面會重新載入至應用程式，而執行的階段程式碼不一定是程式碼後置定義該網頁瀏覽模型。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>The utility method &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, which is available from any &lt;xref:System.Windows.FrameworkElement&gt;, can find any element by Name in the logical tree for that element, searching the tree recursively as necessary.</source>
          <target state="translated">公用程式方法&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;，這是可從任何&lt;xref:System.Windows.FrameworkElement&gt;，可以找到依名稱的任何項目邏輯樹狀中的項目，搜尋樹狀目錄中以遞迴方式視。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Or you can use the &lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt; static method of &lt;xref:System.Windows.LogicalTreeHelper&gt;, which also takes a Name string as an argument.</source>
          <target state="translated">您可以使用或&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;靜態方法&lt;xref:System.Windows.LogicalTreeHelper&gt;，這也會使用名稱字串，做為引數。&lt;/xref:System.Windows.LogicalTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Typically used root elements (&lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Controls.Page&gt; for example) implement the interface &lt;xref:System.Windows.Markup.INameScope&gt;.</source>
          <target state="translated">常用根項目 (&lt;xref:System.Windows.Window&gt;，&lt;xref:System.Windows.Controls.Page&gt;例如) 實作的介面&lt;xref:System.Windows.Markup.INameScope&gt;.&lt;/xref:System.Windows.Markup.INameScope&gt; &lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Implementations of this interface are expected to enforce that names be unambiguous within their scope.</source>
          <target state="translated">此介面的實作應該強制執行的名稱是其範圍內模稜兩可。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>The root elements that define this interface also define the namescope behavior boundaries for all the related <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</source>
          <target state="translated">定義這個介面的根項目也將 namescope 行為界限定義所有相關<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The Name property also serves as an identifier for other processes.</source>
          <target state="translated">Name 屬性也可做為其他處理序的識別項。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>For instance, the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> automation model will use Name as the AutomationId for clients and providers.</source>
          <target state="translated">比方說， <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> automation 模型將使用名稱當做 AutomationId 的用戶端和提供者。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The string values used for Name have some restrictions, as imposed by the underlying <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](../Topic/x:Name%20Directive.md)</ept> defined by the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> specification.</source>
          <target state="translated">使用名稱的字串值會有一些限制，為基礎所加諸<bpt id="p1">[</bpt>X:name 指示詞<ept id="p1">](../Topic/x:Name%20Directive.md)</ept>所定義<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>規格。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Most notably, a Name must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores.</source>
          <target state="translated">最值得注意的是，名稱必須以字母或底線字元 (_) 開頭，並必須包含字母、 數字或底線。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](../Topic/WPF%20XAML%20Namescopes.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](../Topic/WPF%20XAML%20Namescopes.md)</ept>。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Name is one of the very few dependency properties that cannot be animated (&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; is <ph id="ph1">`true`</ph> in metadata), because the name itself is vital for targeting an animation.</source>
          <target state="translated">名稱是其中一個非常少的相依性屬性，無法以動畫顯示 (&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;是<ph id="ph1">`true`</ph>中繼資料中)，因為名稱本身是重要的目標動畫。&lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Data binding a Name is technically possible, but is an extremely uncommon scenario because a data-bound Name cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.</source>
          <target state="translated">資料繫結名稱技術上來說，但是極不常見的案例，因為資料繫結名稱不能做的屬性的主要用途︰ 若要提供的程式碼後置識別連接點。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.NameProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.NameProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;|&lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; &lt;/xref:System.Windows.FrameworkElement.NameProperty&gt;</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">項目的名稱。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">預設為空字串。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Name*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Name*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Name*&gt;</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is invoked whenever application code or internal processes call &lt;xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;.</source>
          <target state="translated">當在衍生類別中覆寫時，會叫用每當應用程式程式碼或內部處理程序呼叫&lt;xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;.&lt;/xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>This method has no default implementation.</source>
          <target state="translated">這個方法會具有預設的實作。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>Templates are the section of an element's completed visual tree that comes from the Template property of a &lt;xref:System.Windows.Style&gt; that is applied for the element.</source>
          <target state="translated">範本是項目的已完成的視覺化樹狀結構的 [範本] 屬性是來自區段&lt;xref:System.Windows.Style&gt;，它會套用項目。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>設定樣式和範本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">未處理時叫用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到達其路由中的這個類別。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">實作這個方法可為此事件加入類別處理。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供事件的相關資料。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">未處理時叫用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到達其路由中的這個類別。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">實作這個方法可為此事件加入類別處理。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event reaches this element in its route.</source>
          <target state="translated">未處理時叫用<bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件到達其路由中的此項目。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Unlike some other On* methods exposed by the base elements, OnGotFocus does have a default implementation.</source>
          <target state="translated">不同於在某些其他 * 基底的項目，OnGotFocus 所公開的方法沒有預設實作。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Specifically, it has an implementation that overrides the null implementation in the next level of base element down, &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;.</source>
          <target state="translated">具體來說，它有覆寫基底項目， &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;.&lt;/xref:System.Windows.UIElement.OnGotFocus%2A&gt;的下一個層級中的 null 實作的實作</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>When invoked, OnGotFocus sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus.</source>
          <target state="translated">叫用時，OnGotFocus 會從鍵盤焦點由於目前的項目產生事件的案例中此項目上設定適當的焦點行為。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>The OnGotFocus handler does not mark the event arguments as handled, even when focus is set to the current element.</source>
          <target state="translated">OnGotFocus 處理常式不會將標示的事件引數為已處理，即使焦點設定為目前的項目。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>If the event's source was another element in the tree (not the current element), the handler does nothing.</source>
          <target state="translated">如果事件的來源是另一個項目樹狀目錄 （不是目前項目），此處理常式沒有任何作用。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see &lt;xref:System.Windows.UIElement.Focusable%2A&gt;).</source>
          <target state="translated">您可以覆寫此方法，以變更您的項目，則預設焦點行為，但請注意，變更焦點行為，如此一來可能會更好可藉由不允許完全可設定焦點的項目 (請參閱&lt;xref:System.Windows.UIElement.Focusable%2A&gt;)。&lt;/xref:System.Windows.UIElement.Focusable%2A&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>This method is invoked whenever &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt; is set to <bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>internally.</source>
          <target state="translated">這個方法會叫用每當&lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt;設<bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>內部。&lt;/xref:System.Windows.FrameworkElement.IsInitialized*&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Invoked whenever the effective value of any dependency property on this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been updated.</source>
          <target state="translated">叫用每當上任何相依性屬性的有效值<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已更新。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>The specific dependency property that changed is reported in the arguments parameter.</source>
          <target state="translated">引數參數中報告變更的特定相依性屬性。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Overrides &lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;.</source>
          <target state="translated">覆寫&lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>This method is not intended to generally detect property changes or invalidations.</source>
          <target state="translated">這個方法不是偵測一般的屬性變更或失效。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</source>
          <target state="translated">它改為僅供修改的一般失效模式如果已知廣泛分類屬性的特定資訊。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>This method is potentially invoked many times during the life of an object.</source>
          <target state="translated">這可能會叫用方法多次物件的存留期間。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Therefore, you can achieve better performance if you override the metadata of specific properties and then attach &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions for individual properties.</source>
          <target state="translated">因此，達到更佳的效能，如果您覆寫特定屬性的中繼資料，然後將附加&lt;xref:System.Windows.CoerceValueCallback&gt;或&lt;xref:System.Windows.PropertyChangedCallback&gt;個別屬性的函式。&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>However, you would use this method if a &lt;xref:System.Windows.FrameworkElement&gt; includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">不過，您會使用這個方法如果&lt;xref:System.Windows.FrameworkElement&gt;包含大量的值相互關聯的相依性屬性，或如果它包含邏輯，例如轉譯行為，必須重新執行的幾個相關的屬性失效的情況。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>Note that there is an identically named <ph id="ph1">`OnPropertyChanged`</ph> method with a different signature (the parameter type is &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;) that can appear on a number of classes.</source>
          <target state="translated">請注意，相同具名<ph id="ph1">`OnPropertyChanged`</ph>方法具有不同簽章 (參數類型是&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;) 可以出現在數個類別。&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>That <ph id="ph1">`OnPropertyChanged`</ph> is used for data object notifications, and is part of the contract for &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">確認<ph id="ph1">`OnPropertyChanged`</ph>用於資料物件通知，而且是&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;。&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;合約的一部分</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">事件資料，描述已變更屬性，以及新舊值。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event, using the specified information as part of the eventual event data.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件時，使用指定的資訊作為最終事件資料的一部分。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;.&lt;/xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>If you call this method you will reset the &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; property, the &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</source>
          <target state="translated">如果您呼叫這個方法則會重設&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;屬性，&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;屬性，或兩者，根據指定為提供的引數中的變更，並且您總是會引發此事件。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Details of the old and new size involved in the change.</source>
          <target state="translated">舊的和新大小變更所涉及的詳細資料。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Invoked when the style in use on this element changes, which will invalidate the layout.</source>
          <target state="translated">叫用這個項目上的使用中的樣式變更時，這會導致無效的配置。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>This method has a default implementation that sets an internal flag that notes the style changed condition.</source>
          <target state="translated">這個方法已設定的樣式變更條件內部旗標的預設實作。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The old style.</source>
          <target state="translated">舊樣式。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>The new style.</source>
          <target state="translated">新的樣式。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">未處理時叫用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到達其路由中的這個類別。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">實作這個方法可為此事件加入類別處理。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供事件的相關資料。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Invoked whenever the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">叫用每當<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到達其路由中的這個類別。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">實作這個方法可為此事件加入類別處理。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供事件的相關資料。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Invoked when the parent of this element in the visual tree is changed.</source>
          <target state="translated">視覺化樹狀結構中這個項目之父項目變更時叫用。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Overrides &lt;xref:System.Windows.UIElement.OnVisualParentChanged*&gt;.</source>
          <target state="translated">覆寫&lt;xref:System.Windows.UIElement.OnVisualParentChanged*&gt;.&lt;/xref:System.Windows.UIElement.OnVisualParentChanged*&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing.</source>
          <target state="translated">視覺化樹狀結構是不同的邏輯樹狀結構，因為後者省略集合，例如不以視覺化的方式，呈現的項目，並展開根據其佈景主題和樣式複合 （compositing） 的某些項目。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>中 WPF 樹狀架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>The old parent element.</source>
          <target state="translated">舊的父項目。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the element did not have a visual parent previously.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>來表示，項目沒有視覺化父項目之前。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</source>
          <target state="translated">取得或設定值，指出這個項目是否包含來自佈景主題樣式的樣式屬性。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</source>
          <target state="translated">這個屬性的最常見的用法是提供佈景主題樣式的樣式 setter 內間接使用。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you set OverridesDefaultStyle to <ph id="ph2">`true`</ph> on a control, you will be suppressing the default control template supplied by the theme styles.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 如果您將設定 OverridesDefaultStyle<ph id="ph2">`true`</ph>控制，您將會隱藏佈景主題樣式所提供的預設控制項範本。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>That control template typically includes the content presenter and other composited elements that provide basic <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> functionality and visualization for the control.</source>
          <target state="translated">該控制項範本通常包含內容展示器和其他複合項目可提供基本<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>功能和控制項的視覺效果。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure.</source>
          <target state="translated">如果您想要繼續支援相同的功能，做為預設佈景主題樣式的控制項，您必須提供具有複寫相同的結構的控制項範本的其他樣式。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Control Authoring Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>控制項撰寫概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_OverridesDefaultStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_OverridesDefaultStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個項目不會使用佈景主題樣式屬性。樣式產生的所有屬性都來自於本機應用程式樣式和佈景主題樣式屬性不會套用。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應用程式樣式套用第一次，然後佈景主題樣式適用於應用程式樣式中未明確設定的屬性。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt;</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Gets the logical parent  element of this element.</source>
          <target state="translated">取得這個項目的邏輯父項目。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Parent may be <ph id="ph1">`null`</ph> in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.</source>
          <target state="translated">父系可能是<ph id="ph1">`null`</ph>項目未具現化，但未連接至任何最後會連接到頁面層級的根項目或應用程式物件的邏輯樹狀結構中。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Note that the logical parent of an element can potentially change depending on your application's functionality, and keeping the value of this property will not reflect that change.</source>
          <target state="translated">請注意，根據您的應用程式功能，有可能變更邏輯父項目，可以保留此屬性的值不會反映該變更。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>You typically should get the value immediately before you need it.</source>
          <target state="translated">您通常應該取得的值之前您需要它。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information about logical tree  traversal, and the scenarios where using  Parent as a technique of parent element discovery is appropriate.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>中 WPF 樹狀架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>的邏輯樹狀結構周遊和則適合使用這項技術的父項目探索父案例的詳細資訊。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</source>
          <target state="translated">屬性引擎有可能重新計算所有的屬性值的項目時，它會重設父代，因為有些屬性是繼承的處理邏輯樹狀結構的值。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; that applies for bindings can also change when elements are reparented.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;可套用的項目會重設父代時，也可以變更繫結。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</source>
          <target state="translated">變更項目的父代通常只是透過操作的集合，使用專用新增或移除方法，或透過設定內容屬性的項目。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The most typical scenario for using the Parent property is to obtain a reference and then get various &lt;xref:System.Windows.FrameworkElement&gt; property values from the parent.</source>
          <target state="translated">使用父屬性的最常見的案例是要取得的參考，然後以取得各種&lt;xref:System.Windows.FrameworkElement&gt;屬性值從父代。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>For templates, the Parent of the template eventually will be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">範本，將範本最終的父代<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>To get past this point and extend into the logical tree where the template is actually applied, use &lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;.</source>
          <target state="translated">若要取得略過此點，並將延伸至邏輯樹狀結構實際套用的範本，使用&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Note that this property does not report visual tree parents in cases where these vary from the logical tree parents.</source>
          <target state="translated">請注意這個屬性不會報告在這些項從邏輯樹狀結構父項中的視覺化樹狀結構父代。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases.</source>
          <target state="translated">視覺化樹狀結構的父代不是一般的應用程式案例通常會特別重要，但可能某些視覺層級的情況下所需的父項目。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Media.VisualTreeHelper&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Media.VisualTreeHelper&gt;.&lt;/xref:System.Windows.Media.VisualTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>This element's logical parent.</source>
          <target state="translated">這個項目的邏輯父代。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Supports incremental layout implementations in specialized subclasses of <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">支援累加配置實作中的特定子類別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>ParentLayoutInvalidated is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</source>
          <target state="translated">ParentLayoutInvalidated 子項目已設定為無效的中繼資料會影響父代的量值中標示為的屬性時叫用，或在配置期間排列傳遞。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>If this element has a child element on which some property was invalidated and the property was marked as &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt; or &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt; in property metadata during registration, this method is invoked.</source>
          <target state="translated">如果這個項目具有子項目所在某些屬性無效的而且屬性被標示為&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;或&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;屬性中繼資料，在註冊期間，這個方法會叫用。&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.</source>
          <target state="translated">方法引動過程會告知哪個特定子項目必須重新測量，如果此項目支援的配置部分 （累加） 更新的父項目。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.Windows.FrameworkElement&gt; does not support incremental layout, and in the &lt;xref:System.Windows.FrameworkElement&gt; class this method has no default implementation.</source>
          <target state="translated">根據預設，&lt;xref:System.Windows.FrameworkElement&gt;不支援累加配置，然後在&lt;xref:System.Windows.FrameworkElement&gt;類別，這個方法有預設的實作。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.</source>
          <target state="translated">覆寫這個方法，可能需要的案例不常見，因為它會要求您修改預設版面配置系統行為。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system.</source>
          <target state="translated">範例實作的狀況可能是如果類別具有明顯比 WPF 架構層級配置系統更嚴格的可能的子元素的類型限制。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior.</source>
          <target state="translated">基於這些自訂項目本質，屬性變更可能會刻意延後當您實作某些自訂版面配置的行為。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</source>
          <target state="translated">比方說，測量/排列方法覆寫，嘗試最佳化子項目的呈現階段，可能會延後某些類型的變更通常會導致另一個配置傳遞。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>The child element reporting the change.</source>
          <target state="translated">報告變更的子項目。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</source>
          <target state="translated">判斷下一個項目將會收到焦點相對於所提供的焦點移動的方向，這個項目，但實際上不會移動焦點。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt; is the related method that actually does move focus.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;是實際移動焦點的相關的方法。&lt;/xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The direction for which a prospective focus change should be determined.</source>
          <target state="translated">判斷預期焦點變更方向。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>The next element that focus would move to if focus were actually traversed.</source>
          <target state="translated">如果焦點實際上周遊，專注的下一個項目會移至。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>May return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if focus cannot be moved relative to this element for the provided direction.</source>
          <target state="translated">可能會傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果焦點無法提供的方向移動相對於這個項目。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>Specified one of the following directions in the <bpt id="p1">&lt;xref href="System.Windows.Input.TraversalRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Specified one of the following directions in the <bpt id="p1">&lt;xref href="System.Windows.Input.TraversalRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>These directions are not legal for PredictFocus (but they are legal for &lt;xref:System.Windows.FrameworkElement.MoveFocus*&gt;).</source>
          <target state="translated">這些指示不合法的 PredictFocus (它們是合法的但&lt;xref:System.Windows.FrameworkElement.MoveFocus*&gt;)。&lt;/xref:System.Windows.FrameworkElement.MoveFocus*&gt;</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Provides an accessor that simplifies access to the &lt;xref:System.Windows.NameScope&gt; registration method.</source>
          <target state="translated">提供存取子，可簡化存取&lt;xref:System.Windows.NameScope&gt;註冊方法。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.NameScope.RegisterName%2A&gt;.</source>
          <target state="translated">這個方法是呼叫&lt;xref:System.Windows.NameScope.RegisterName%2A&gt;.&lt;/xref:System.Windows.NameScope.RegisterName%2A&gt;便利的方法</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>The implementation will check successive parent elements until it finds the applicable &lt;xref:System.Windows.NameScope&gt; implementation, which is found by finding an element that implements &lt;xref:System.Windows.Markup.INameScope&gt;.</source>
          <target state="translated">實作會檢查後續的父項目，直到找到適用於&lt;xref:System.Windows.NameScope&gt;實作中，找到所尋找的項目，用來實作&lt;xref:System.Windows.Markup.INameScope&gt;.&lt;/xref:System.Windows.Markup.INameScope&gt; &lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>For more information about namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需命名範圍的詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Calling RegisterName is necessary in order to correctly hook up animation storyboards for applications when created in code.</source>
          <target state="translated">呼叫 RegisterName 會需要正確的應用程式程式碼中建立時的動畫分鏡腳本連結。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>This is because one of the key storyboard properties, &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;, uses a run-time name lookup instead of being able to take a reference to a target element.</source>
          <target state="translated">這是因為其中一個索引鍵的分鏡腳本屬性&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;，會使用執行階段名稱查詢，而不是能夠充分目標項目的參考。&lt;/xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>This is true even if that element is accessible by reference from the code.</source>
          <target state="translated">即使該元素是可供參考從程式碼存取，也是如此。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>For more information on why you need to register names for storyboard targets, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關為什麼您需要註冊的分鏡腳本目標名稱的詳細資訊，請參閱<bpt id="p1">[</bpt>概觀腳本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Name to use for the specified name-object mapping.</source>
          <target state="translated">使用指定的名稱 / 物件對應的名稱。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Object for the mapping.</source>
          <target state="translated">對應的物件。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Removes the provided object from this element's logical tree.</source>
          <target state="translated">移除這個項目邏輯樹狀結構中所提供的物件。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> updates the affected logical tree parent pointers to keep in sync with this deletion.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更新受影響的邏輯樹狀結構父指標，以便與刪除保持同步。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Use this method for the implementation of collections on objects that represent logical children of an element.</source>
          <target state="translated">使用此方法實作的邏輯子系的項目表示物件的集合。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>This might be done in property getters or setters, class handlers of <ph id="ph1">`Changed`</ph> events, constructors, or within the collection types themselves.</source>
          <target state="translated">這可能是屬性 getter 或 setter，類別處理常式的<ph id="ph1">`Changed`</ph>事件、 建構函式，或集合內的類型本身。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class' content models are appropriate.</source>
          <target state="translated">控制項的作者，處理邏輯樹狀結構，此層級不建議的作法，除非是提供基底控制項類別的內容模型沒有適合。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Consider subclassing at the level of &lt;xref:System.Windows.Controls.ContentControl&gt;, &lt;xref:System.Windows.Controls.ItemsControl&gt;, and &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;.</source>
          <target state="translated">請考慮在層級的子類別化&lt;xref:System.Windows.Controls.ContentControl&gt;， &lt;xref:System.Windows.Controls.ItemsControl&gt;，和&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;。&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; &lt;/xref:System.Windows.Controls.ItemsControl&gt; &lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>These classes provide a content model with particular enforcement of logical children through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">這些類別會提供透過專用的邏輯子系的特定增強的內容模型<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>，以及通常希望出現在其他功能的支援<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>控制項，例如透過範本的樣式。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>The element to remove.</source>
          <target state="translated">要移除的項目。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Occurs when &lt;xref:System.Windows.FrameworkElement.BringIntoView*&gt; is called on this element.</source>
          <target state="translated">發生時&lt;xref:System.Windows.FrameworkElement.BringIntoView*&gt;這個項目上呼叫。&lt;/xref:System.Windows.FrameworkElement.BringIntoView*&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>This event indicates to a parent &lt;xref:System.Windows.Controls.ScrollViewer&gt; (or derived class) that the element that raises the RequestBringIntoView event should be made visible within the scrollable region.</source>
          <target state="translated">這個事件表示至父代&lt;xref:System.Windows.Controls.ScrollViewer&gt;（或衍生類別），引發 RequestBringIntoView 事件的項目應該會看見可捲動區域內。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ScrollViewer&gt; will then mark the RequestBringIntoView event as handled, by using class handling of the event.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ScrollViewer&gt;處理，使用類別處理事件的 RequestBringIntoView 事件將然後標示。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>In general RequestBringIntoView event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called &lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;.</source>
          <target state="translated">一般情況下 RequestBringIntoView 事件資料應該不會標示為已處理的任何類別，並控制捲動區域，或任何執行個體，處理常式，因為這樣會干擾，目的是呼叫&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;的項目</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;|  |路由策略 |反昇 |  |委派 |&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;|&lt;/xref:System.Windows.RequestBringIntoViewEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Gets or sets the locally-defined resource dictionary.</source>
          <target state="translated">取得或設定在本機定義的資源字典。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Resource dictionaries that can be defined completely or partially in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> are typically created as a property element, and are typically on the root element for any individual page or for the application.</source>
          <target state="translated">可以完全或部分中定義的資源字典<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>通常會建立為屬性項目，且通常是針對任何個別頁面或應用程式的根項目。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</source>
          <target state="translated">放置在此層級的資源字典，可以更輕鬆地尋找個別的子系中的項目頁面 （或從任何頁面上，在應用程式的情況下）。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</source>
          <target state="translated">在大部分的應用程式案例中，我們建議樣式定義做為物件項目內的資源字典，或定義為外部資源，以便可以是獨立的整個樣式資源 （這種方式有助於劃分設計從開發人員責任分隔需要加以編輯的實體檔案）。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Note that this property returns only the resource dictionary declared directly within that element.</source>
          <target state="translated">請注意，這個屬性會傳回直接在該元素中宣告的資源字典。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</source>
          <target state="translated">這是不同於實際資源對應程序，其中的子元素可以存取任何遞迴地向上搜尋每個父項目中所定義的資源。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Resources can also be referenced by code from within the collection, but be aware that resources created in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> will definitely not be accessible until after &lt;xref:System.Windows.FrameworkElement.Loaded&gt; is raised by the element that declares the dictionary.</source>
          <target state="translated">資源也可以從集合中的程式碼所參考，但請注意在中建立資源<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>絕對不會之前之後存取&lt;xref:System.Windows.FrameworkElement.Loaded&gt;宣告字典的項目就會引發。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>In fact, resources are parsed asynchronously and not even the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event is an assurance that you can reference a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> defined resource.</source>
          <target state="translated">以非同步方式並不會剖析資源的事實上，即使&lt;xref:System.Windows.FrameworkElement.Loaded&gt;事件可確保您可以參考<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>定義資源。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>For this reason you should generally only access <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> defined resources as part of run-time code, or through other <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> techniques such as styles or resource extension references for attribute values.</source>
          <target state="translated">因此您應該通常只存取<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>資源定義為一部分的執行階段程式碼，或透過其他<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>技術，例如樣式或屬性值的資源擴充功能參考。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>When you access resources through code, it is essentially equivalent to a  reference made from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">當您透過程式碼存取資源時，它是基本上等同於從進行參考<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Windows.ResourceDictionary&gt; supports the methods required to add, remove or query resources from within the collection by using code.</source>
          <target state="translated">基礎&lt;xref:System.Windows.ResourceDictionary&gt;支援加入、 移除或使用程式碼來查詢集合中的資源所需的方法。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>The Resources property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">資源屬性是可設定為支援完全取代為新項目的資源集合的案例或不同&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax shown does not include an element for the &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">請注意，<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>所示的語法不包括&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;的項目</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</source>
          <target state="translated">這是隱含的集合語法; 的範例可以省略標記，表示集合項目。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The elements that are added as items to the collection are specified instead.</source>
          <target state="translated">會改為指定做為項目加入至集合的項目。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>For more information about implicit collections and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id="p1">[</bpt>XAML Syntax In Detail<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關隱含的集合和<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，請參閱<bpt id="p1">[</bpt>XAML 語法的詳細資料<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>One case where a &lt;xref:System.Windows.ResourceDictionary&gt; is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">一種情況下，&lt;xref:System.Windows.ResourceDictionary&gt;仍然有項目就是引進合併的字典，在此情況下是否有通常該&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;任何子項目時，明確指定&lt;/xref:System.Windows.ResourceDictionary&gt;的位置</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>合併資源字典<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Resources"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.Resources&gt;       oneOrMoreResourceElements     &lt;/object.Resources&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Resources"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreResourceElements<ept id="p3">*</ept>    One or more object elements, each of which defines a resource.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Resources"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性項目用法<ph id="ph1">```   &lt;object&gt;     &lt;object.Resources&gt;       oneOrMoreResourceElements     &lt;/object.Resources&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Resources"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreResourceElements<ept id="p3">*</ept>一或多個物件項目，其中每個定義的資源。      </target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>Each resource property element within each &lt;xref:System.Windows.ResourceDictionary&gt; must have a unique value for the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, which serves as the unique key when values are retrieved from the &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">每個資源屬性的項目在每個&lt;xref:System.Windows.ResourceDictionary&gt;值必須是唯一的<bpt id="p1">[</bpt>X:key 指示詞<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>，做為唯一索引鍵從&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;擷取值時&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The current locally-defined dictionary of resources, where each resource can be accessed by key.</source>
          <target state="translated">目前在本機定義的資源字典，其中每個資源都可以使用索引鍵來存取。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</source>
          <target state="translated">將繫結附加至這個項目，根據提供的來源屬性名稱當做資料來源的路徑限定性條件。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;, which passes the current instance as the &lt;xref:System.Windows.DependencyObject&gt;, and creates a new &lt;xref:System.Windows.Data.Binding&gt; based on the provided <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">這個方法是便利的方法用於呼叫&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;，然後傳遞做為目前的執行個體&lt;xref:System.Windows.DependencyObject&gt;，並建立新&lt;xref:System.Windows.Data.Binding&gt;依據提供<ph id="ph1">`path`</ph>參數。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>This signature is more convenient if you are establishing a simple default binding.</source>
          <target state="translated">此簽章是更方便，如果您要建立簡單的預設繫結。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>If you need to specify any binding properties to non-default conditions, or want to use a &lt;xref:System.Windows.Data.MultiBinding&gt; or &lt;xref:System.Windows.Data.PriorityBinding&gt;,you should use the &lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt; signature.</source>
          <target state="translated">如果您要指定非預設的條件，任何繫結屬性，或想要使用&lt;xref:System.Windows.Data.MultiBinding&gt;或&lt;xref:System.Windows.Data.PriorityBinding&gt;，您應該使用&lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt;簽章。&lt;/xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt; &lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Identifies the destination property where the binding should be established.</source>
          <target state="translated">識別應該要建立繫結的目的地屬性。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>The source property name or the path to the property used for the binding.</source>
          <target state="translated">來源屬性名稱或用來繫結屬性的路徑。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Records the conditions of the binding.</source>
          <target state="translated">記錄繫結的條件。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">這個傳回值可用於錯誤檢查。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Attaches a binding to this element, based on the provided binding object.</source>
          <target state="translated">將繫結附加至這個項目，根據提供的繫結物件。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;, which passes the current instance as the &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">這個方法是便利的方法&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;，然後傳遞目前的執行個體，作為&lt;xref:System.Windows.DependencyObject&gt;.&lt;/xref:System.Windows.DependencyObject&gt;&lt;/xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;函式呼叫</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Identifies the property where the binding should be established.</source>
          <target state="translated">識別應該要建立繫結的屬性。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Represents the specifics of the data binding.</source>
          <target state="translated">代表資料繫結的詳細規格。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Records the conditions of the binding.</source>
          <target state="translated">記錄繫結的條件。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">這個傳回值可用於錯誤檢查。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; attached property for the provided element.</source>
          <target state="translated">設定的值&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;附加屬性提供的項目。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>This method supports attached property syntax for the &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; property, therefore allowing child elements of a provided &lt;xref:System.Windows.FrameworkElement&gt; to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">這個方法支援附加的屬性的語法&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;屬性，因此允許的提供項目子系&lt;xref:System.Windows.FrameworkElement&gt;以指定的排列方式，其父項目中的資料流程方向。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>To set the value on the current &lt;xref:System.Windows.FrameworkElement&gt;, use the direct <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> accessor &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.</source>
          <target state="translated">在目前設定的值&lt;xref:System.Windows.FrameworkElement&gt;，使用 direct<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>存取子&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>The element that specifies a flow direction.</source>
          <target state="translated">指定文字方向的項目。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>A value of the enumeration, specifying the direction.</source>
          <target state="translated">指定方向的列舉值。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</source>
          <target state="translated">搜尋具有指定名稱的資源，並設定其資源參考指定之屬性。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>A resource reference is similar to the use of a <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> in markup.</source>
          <target state="translated">資源參考是可讓您使用類似<bpt id="p1">[</bpt>DynamicResource 標記延伸<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>標記中。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</source>
          <target state="translated">資源參考建立內部的運算式，提供執行階段的延遲為基礎的指定屬性的值。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</source>
          <target state="translated">每次您的資源字典表示變更的值，透過內部事件，或目前的項目重設父代重新評估運算式 （父代變更會變更的字典查閱路徑）。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>The property to which the resource is bound.</source>
          <target state="translated">繫結至資源屬性。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">資源的名稱。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Resources*&gt; property.</source>
          <target state="translated">傳回序列化程序是否應該序列化的內容&lt;xref:System.Windows.FrameworkElement.Resources*&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.Resources*&gt;</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>This will return <ph id="ph1">`true`</ph> as long as there is at least one keyed resource in the local &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;.</source>
          <target state="translated">這會傳回<ph id="ph1">`true`</ph>，只要在本機&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt;沒有至少一個索引鍵的資源</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Resources*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Resources*&gt;屬性值應該序列化，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Resources*&gt;</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Style*&gt; property.</source>
          <target state="translated">傳回序列化程序是否應該序列化的內容&lt;xref:System.Windows.FrameworkElement.Style*&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>This will return <ph id="ph1">`true`</ph> if the &lt;xref:System.Windows.Style&gt; is locally set.</source>
          <target state="translated">這會傳回<ph id="ph1">`true`</ph>如果&lt;xref:System.Windows.Style&gt;本機設定。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Style*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Style*&gt;屬性值應該序列化，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Triggers*&gt; property.</source>
          <target state="translated">傳回序列化程序是否應該序列化的內容&lt;xref:System.Windows.FrameworkElement.Triggers*&gt;屬性。&lt;/xref:System.Windows.FrameworkElement.Triggers*&gt;</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if the &lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt; property is locally set.</source>
          <target state="translated">這個方法會傳回<ph id="ph1">`true`</ph>如果&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;屬性在本機設定。&lt;/xref:System.Windows.FrameworkElement.Triggers%2A&gt;</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Triggers*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Triggers*&gt;屬性值應該序列化，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Triggers*&gt;</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Occurs when either the &lt;xref:System.Windows.FrameworkElement.ActualHeight<bpt id="p1">*</bpt>&gt; or the &lt;xref:System.Windows.FrameworkElement.ActualWidth<ept id="p1">*</ept>&gt; properties change value on this element.</source>
          <target state="translated">發生當任一&lt;&gt; <bpt id="p1">*</bpt>&gt; 或&lt;&gt; <ept id="p1">*</ept>&gt; 屬性變更值，這個項目上的。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不會遵循路由，才會處理在引發相同的項目內。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件並支援其他路由的事件的行為︰ 它們支援可存取的處理常式集合中，且可用來當作&lt;xref:System.Windows.EventTrigger&gt;樣式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>The layout system reads properties within the &lt;xref:System.Windows.SizeChangedEventArgs&gt; argument class of this event, to  determine whether the reported size changes should be considered significant.</source>
          <target state="translated">版面配置系統會讀取內容內&lt;xref:System.Windows.SizeChangedEventArgs&gt;引數類別，這個事件，以判斷是否應該在報告的大小變更視為重要。&lt;/xref:System.Windows.SizeChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values.</source>
          <target state="translated">這可讓版面配置系統或您的特定控制項的版面配置實作來避免強制版面配置變更，因為以視覺化方式無法察覺舊的和新的高度或寬度值之間的差異。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.</source>
          <target state="translated">無法察覺的差異可能是因為浮點資料類型的捨入或相同結果的計算。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_SizeChanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.SizeChangedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_SizeChanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;|  |路由策略 |直接 |  |委派 |&lt;xref:System.Windows.SizeChangedEventHandler&gt;|&lt;/xref:System.Windows.SizeChangedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>Occurs when the source value changes for any existing property binding on this element.</source>
          <target state="translated">任何現有的屬性，這個項目上的繫結的來源值變更時發生。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event that is raised by any &lt;xref:System.Windows.Data.Binding&gt; associated with this element.</source>
          <target state="translated">此事件會建立一個別名&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;引發任何事件&lt;xref:System.Windows.Data.Binding&gt;與這個項目相關聯。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SourceUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object SourceUpdated="eventHandler"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SourceUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object SourceUpdated="eventHandler"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Gets or sets the style used by this element when it is rendered.</source>
          <target state="translated">取得或設定這個項目呈現時使用的樣式。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style).</source>
          <target state="translated">控制項，通常是提供的預設樣式來自控制項主題設定，或樣式通常由套用至該類型的控制項在頁面或應用程式層級 （隱含樣式） 的資源目前的樣式。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element.</source>
          <target state="translated">這個屬性不會設定或傳回預設 （佈景主題） 樣式，但會傳回隱含樣式或項目做為明確樣式。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.</source>
          <target state="translated">在隱含或明確樣式的情況下，樣式是指定為資源，或在本機定義並不重要。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Setting the styles has some restrictions.</source>
          <target state="translated">設定樣式會有一些限制。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>You can reset the entire Style property to a new &lt;xref:System.Windows.Style&gt; at any time, which will force a layout recomposition.</source>
          <target state="translated">您可以將整個樣式屬性重設為 新&lt;xref:System.Windows.Style&gt;在任何時間，這會強制配置重新編輯畫。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>However, as soon as that style is placed in use by a loaded element, the &lt;xref:System.Windows.Style&gt; should be considered sealed.</source>
          <target state="translated">不過，一旦該樣式會放在使用中載入的項目，&lt;xref:System.Windows.Style&gt;應該被視為已密封。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Attempting to make a change to any individual property of an in-use style (such as anything within the collection of &lt;xref:System.Windows.Style.Setters%2A&gt;) causes an exception to be thrown.</source>
          <target state="translated">嘗試變更的任何個別的使用中樣式屬性 (例如在集合內的任何項目&lt;xref:System.Windows.Style.Setters%2A&gt;)，會擲回例外狀況。&lt;/xref:System.Windows.Style.Setters%2A&gt;</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</source>
          <target state="translated">標記中定義的樣式會被視為正在使用中，一旦載入時將它從資源字典 （資源），或載入它包含在的頁面 （適用於內嵌樣式）。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>Style is a dependency property with special precedence.</source>
          <target state="translated">樣式是具有特殊的優先順序的相依性屬性。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>The locally set style generally operates at the highest precedence in the property system.</source>
          <target state="translated">本機設定樣式通常都是在運作的最高的優先順序屬性系統中。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>If the Style is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type.</source>
          <target state="translated">如果樣式此時為 null，期間載入屬性系統會檢查本機或應用程式將該類型指定的資源中的隱含樣式。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the Style property value.</source>
          <target state="translated">如果樣式仍 null 在此步驟之後，然後顯示用途的動作樣式通常來自預設 （佈景主題） 的樣式，但樣式屬性值中不會傳回預設樣式。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Styling and Templating<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>相依性屬性的值優先順序<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>設定樣式和範本<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Style="{resourceExtension styleResourceKey}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Style"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <bpt id="p3">&lt;a name="xamlValues_Style"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>    One of the following: , or .</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Style="{resourceExtension styleResourceKey}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Style"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 屬性項目用法<bpt id="p3">&lt;a name="xamlValues_Style"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>下列其中之一:、 或。      </target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XAML 資源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>    The key that identifies the style being requested.</source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>識別所要求的樣式的索引鍵。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>The key refers to an existing resource in a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">索引鍵參考&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;中現有的資源</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Property element syntax is technically possible, but not recommended for most style scenarios.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 屬性項目語法是可行，但不是建議針對大部分的樣式案例。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>內嵌樣式和樣板<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>A binding reference using  or &lt;xref:System.Windows.Data.Binding&gt; is also possible, but uncommon.</source>
          <target state="translated">使用繫結參考或&lt;xref:System.Windows.Data.Binding&gt;也是可行的但不常見。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.StyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.StyleProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.StyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>The applied, nondefault style for the element, if present.</source>
          <target state="translated">已套用的非預設樣式項目，如果有的話。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">否則， <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>The default for a default-constructed <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設建構預設<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Style*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Style*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt; method.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt;方法。&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt;</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Windows.FrameworkElement&gt; instance is cast to an &lt;xref:System.Windows.Markup.IQueryAmbient&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Windows.FrameworkElement&gt;執行個體轉換成&lt;xref:System.Windows.Markup.IQueryAmbient&gt;介面。&lt;/xref:System.Windows.Markup.IQueryAmbient&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>The name of the requested ambient property.</source>
          <target state="translated">要求的環境屬性的名稱。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p2">&lt;/code&gt;</ept> is available; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">propertyName</ph> <ept id="p2">&lt;/code&gt;</ept>可用，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>Gets or sets an arbitrary object value that can be used to store custom information about this element.</source>
          <target state="translated">取得或設定可以用來儲存這個項目相關的自訂資訊的任意物件值。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>This property is analogous to Tag properties in other <ph id="ph1">[!INCLUDE[TLA#tla_ms](~/add/includes/tlasharptla-ms-md.md)]</ph> programming models, such as <ph id="ph2">[!INCLUDE[TLA#tla_vba](~/add/includes/ajax-current-ext-md.md)]</ph> or <ph id="ph3">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">這個屬性相當於在其他標籤屬性<ph id="ph1">[!INCLUDE[TLA#tla_ms](~/add/includes/tlasharptla-ms-md.md)]</ph>程式設計模型，例如<ph id="ph2">[!INCLUDE[TLA#tla_vba](~/add/includes/ajax-current-ext-md.md)]</ph>或<ph id="ph3">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>Tag is intended to provide a pre-existing property location where you can store some basic custom information about any &lt;xref:System.Windows.FrameworkElement&gt; without requiring you to subclass an element.</source>
          <target state="translated">標記用來提供既有的屬性位置，您可以在其中儲存有關任何一些基本的自訂資訊&lt;xref:System.Windows.FrameworkElement&gt;而不需要您子類別化項目。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>Because this property takes an object, you would need to use the property element usage in order to set the Tag property in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> to anything other than an object with a known and built-in type converter, such as a string.</source>
          <target state="translated">因為此屬性會接受物件，您可能必須以設定標記屬性使用屬性項目用法<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>至具有已知與內建型別轉換子，例如字串的物件以外的任何項目。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Objects used in this manner are typically not within the standard <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> elements.</source>
          <target state="translated">這種方式中使用的物件通常不是標準內<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>命名空間，因此可能需要為了引進，做為外部命名空間的命名空間對應<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>項目。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>XAML and Custom Classes for WPF<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XAML 命名空間和 WPF XAML 命名空間對應<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>XAML 和自訂類別 wpf<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.TagProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.TagProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.TagProperty&gt;</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>The intended value.</source>
          <target state="translated">預定的值。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>This property has no default value.</source>
          <target state="translated">這個屬性就沒有預設值。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Tag*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Tag*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Tag*&gt;</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Occurs when the target value changes for any property binding on this element.</source>
          <target state="translated">這個項目上的任何屬性繫結的目標值變更時發生。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event that is raised by any &lt;xref:System.Windows.Data.Binding&gt; associated with this element.</source>
          <target state="translated">此事件會建立一個別名&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;引發任何事件&lt;xref:System.Windows.Data.Binding&gt;與這個項目相關聯。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.</source>
          <target state="translated">這通常表示有問題的繫結是雙向繫結，繫結的相依性屬性 affirms，先前的屬性值無效現在根據任何驗證或快取的屬性或資料來源支援的配置。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>Use the event data of the TargetUpdated event to determine the specific property that is reporting the target value update.</source>
          <target state="translated">您可以使用 TargetUpdated 事件的事件資料來判斷所報告的目標值更新的特定屬性。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TargetUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object TargetUpdated="eventHandler"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TargetUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object TargetUpdated="eventHandler"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>Gets a reference to the template parent of this element.</source>
          <target state="translated">取得這個項目的範本父代參考。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>This property is not relevant if the element was not created through a template.</source>
          <target state="translated">如果未透過範本建立的項目，這個屬性無關。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>TemplatedParent is frequently <ph id="ph1">`null`</ph> for objects that are created in your application markup or code.</source>
          <target state="translated">通常是 TemplatedParent<ph id="ph1">`null`</ph>會在您的應用程式標記或程式碼中建立的物件。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>This is because you create those objects directly, not via a template.</source>
          <target state="translated">這是因為您建立這些物件直接，不會透過範本。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.</source>
          <target state="translated">物件或一般名稱參考來查核邏輯樹狀結構根目錄中，從取得的參考，不是來自範本。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Cases where TemplatedParent might not be <ph id="ph1">`null`</ph> include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with &lt;xref:System.Windows.Media.VisualTreeHelper&gt;, or working with enumerators, which might return elements that came from templates.</source>
          <target state="translated">情況下，可能不會 TemplatedParent<ph id="ph1">`null`</ph>包含點擊測試查核視覺化樹狀結構，與特定低階事件輸入的事件處理等作業&lt;xref:System.Windows.Media.VisualTreeHelper&gt;，或使用列舉值，這可能會傳回來自範本的項目。&lt;/xref:System.Windows.Media.VisualTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Another case is if you specifically call &lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt; against an existing &lt;xref:System.Windows.FrameworkTemplate&gt; and are work with the returned object.</source>
          <target state="translated">另一種情況是如果您特別呼叫&lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt;針對現有&lt;xref:System.Windows.FrameworkTemplate&gt;和會使用傳回的物件。&lt;/xref:System.Windows.FrameworkTemplate&gt; &lt;/xref:System.Windows.FrameworkTemplate.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Templates are actually shared objects, where the contents of the template are created only once.</source>
          <target state="translated">範本是範本的內容會一次建立的實際共用的物件。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</source>
          <target state="translated">因此，如果您取得的項目，以來自範本的物件參考時，您可能會發現明顯的邏輯樹狀結構不會到達頁面根。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>In order to connect such a template reference to the page's logical tree, you should get the TemplatedParent value and continue to navigate that element tree as desired.</source>
          <target state="translated">若要連接至邏輯樹狀結構頁面的這類的範本參考，您應該取得 TemplatedParent 值，並繼續瀏覽所需的項目樹狀結構。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>The element whose <bpt id="p1">&lt;xref href="System.Windows.FrameworkTemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Windows.FrameworkTemplate.VisualTree*&gt; caused this element to be created.</source>
          <target state="translated">項目其<bpt id="p1">&lt;xref href="System.Windows.FrameworkTemplate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Windows.FrameworkTemplate.VisualTree*&gt;造成要建立這個項目。&lt;/xref:System.Windows.FrameworkTemplate.VisualTree*&gt;</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>This value is frequently <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated">這個值通常是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>Gets or sets the tool-tip object that is displayed for this element in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">取得或設定顯示在這個項目的工具提示物件<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>If the value of this property is of type &lt;xref:System.Windows.Controls.ToolTip&gt;, then that value is the tool-tip that will be used in the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">如果這個屬性的值屬於型別&lt;xref:System.Windows.Controls.ToolTip&gt;，該值就會用於工具提示<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>If the value is of any other type, then that value will be used as the <bpt id="p1">*</bpt>content<ept id="p1">*</ept> for a &lt;xref:System.Windows.Controls.ToolTip&gt; provided (constructed) by the system.</source>
          <target state="translated">如果值為任何其他型別，則該值會用作<bpt id="p1">*</bpt>內容<ept id="p1">*</ept>如&lt;xref:System.Windows.Controls.ToolTip&gt;提供 （建構） 系統。&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Windows.Controls.ToolTipService&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Windows.Controls.ToolTipService&gt;.&lt;/xref:System.Windows.Controls.ToolTipService&gt;</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>The service class provides attached properties that can be used to further customize a &lt;xref:System.Windows.Controls.ToolTip&gt;.</source>
          <target state="translated">服務類別會提供可用來進一步自訂&lt;xref:System.Windows.Controls.ToolTip&gt;.&lt;/xref:System.Windows.Controls.ToolTip&gt;的附加的屬性</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object ToolTip="toolTipContent"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_ToolTip"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.ToolTip&gt;       &lt;ToolTip .../&gt;     &lt;/object.ToolTip&gt;   &lt;/object&gt;   - or -   &lt;object&gt;     &lt;object.ToolTip&gt;       toolTipObjectContent     &lt;/object.ToolTip&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_ToolTip"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>toolTipContent<ept id="p4">*</ept>    A string that becomes the display text for the ToolTip.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object ToolTip="toolTipContent"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_ToolTip"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 屬性項目用法<ph id="ph2">```   &lt;object&gt;     &lt;object.ToolTip&gt;       &lt;ToolTip .../&gt;     &lt;/object.ToolTip&gt;   &lt;/object&gt;   - or -   &lt;object&gt;     &lt;object.ToolTip&gt;       toolTipObjectContent     &lt;/object.ToolTip&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_ToolTip"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>toolTipContent<ept id="p4">*</ept>工具提示會顯示文字的字串。            </target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept>    Some object, provided in object element form, that should be used as the content for the &lt;xref:System.Windows.FrameworkElement&gt; .</source>
          <target state="translated"><bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept>是用來做為內容&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt;物件項目表單中所提供的某些物件</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Typically this would be a &lt;xref:System.Windows.FrameworkElement&gt; or some other element that creates layout compositing for the ToolTip, eventually containing text content within the compositing.</source>
          <target state="translated">通常這會是&lt;xref:System.Windows.FrameworkElement&gt;或其他一些建立工具提示中，最後會包含文字內容的複合 （compositing） 配置的複合 （compositing） 的項目。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>In this usage, the &lt;xref:System.Windows.Controls.ToolTip&gt; element is created implicitly from the parsed <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, and the <bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept> content is set as its &lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">在這種用法，&lt;xref:System.Windows.Controls.ToolTip&gt;元素建立隱含從已剖析<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，而<bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept>內容設定為其&lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>&lt;<ph id="ph1">`ToolTip`</ph> .../&gt;    See &lt;xref:System.Windows.Controls.ToolTip&gt;.</source>
          <target state="translated"><ph id="ph1">`ToolTip`</ph>.../&gt;    See &lt;xref:System.Windows.Controls.ToolTip&gt;.&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ToolTipProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ToolTipProperty&gt;</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>The tooltip object.</source>
          <target state="translated">工具提示物件。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>See Remarks below for details on why this parameter is not strongly typed.</source>
          <target state="translated">為什麼這個參數已不強類型的詳細資訊，請參閱以下的 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Occurs just before any tooltip on the element is closed.</source>
          <target state="translated">項目上的任何工具提示關閉之前發生。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Marking the ToolTipClosing event as handled does not cancel closing the tooltip.</source>
          <target state="translated">標示為已處理的 ToolTipClosing 事件並不會取消關閉工具提示。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.</source>
          <target state="translated">工具提示顯示之後，關閉工具提示會進行只回應使用者互動與 UI。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>This event cannot be an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">此事件不可以是&lt;xref:System.Windows.EventTrigger&gt;樣式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">這是因為此事件的識別項欄位會重複使用來自服務未公開新增/移除服務層級事件的事件方法的實作。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;|  |路由策略 |直接 |  |委派 |&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|     -覆寫&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;實作在衍生類別中這個事件的類別處理。&lt;/xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; &lt;/xref:System.Windows.Controls.ToolTipEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>Occurs when any tooltip on the element is opened.</source>
          <target state="translated">項目上的任何工具提示開啟時發生。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>To prevent a tooltip from appearing in the UI, your handler for ToolTipOpening can mark the &lt;xref:System.Windows.Controls.ToolTipEventArgs&gt; event data handled.</source>
          <target state="translated">若要避免工具提示出現在 UI 中，可以將標記 ToolTipOpening 的處理常式&lt;xref:System.Windows.Controls.ToolTipEventArgs&gt;處理的事件資料。&lt;/xref:System.Windows.Controls.ToolTipEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>Otherwise, the tooltip is displayed, using the value of the &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; property as the tooltip content.</source>
          <target state="translated">否則，顯示工具提示，使用值&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;做為工具提示內容的屬性。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>Another possible scenario is that you could write a handler that resets the value of the &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; property for the element that is the event source, just before the tooltip is displayed.</source>
          <target state="translated">另一個可能的狀況是您可以撰寫會重設的值的處理常式&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;針對項目，事件來源，才會顯示工具提示的屬性。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>ToolTipOpening will not be raised if the value of &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; is <ph id="ph1">`null`</ph> or otherwise unset.</source>
          <target state="translated">如果不會引發 ToolTipOpening 值&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;是<ph id="ph1">`null`</ph>或其他未設定。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>Do not deliberately set &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; to <ph id="ph1">`null`</ph> while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.</source>
          <target state="translated">不刻意設定&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;至<ph id="ph1">`null`</ph>tooltip 為開啟，或開啟; 這並不會影響關閉工具提示中，且會改為建立在 UI 中讓人困擾的視覺成品時。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>The ToolTipOpening event cannot be an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">ToolTipOpening 事件不可以是&lt;xref:System.Windows.EventTrigger&gt;樣式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">這是因為此事件的識別項欄位會重複使用來自服務未公開新增/移除服務層級事件的事件方法的實作。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;|  |路由策略 |直接 |  |委派 |&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|     -覆寫&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;實作在衍生類別中這個事件的類別處理。&lt;/xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; &lt;/xref:System.Windows.Controls.ToolTipEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ToolTip*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.ToolTip*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.ToolTip*&gt;</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>Gets the collection of triggers established directly on this element, or in child elements.</source>
          <target state="translated">取得直接在這個項目或子項目中建立的觸發程序的集合。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This property can only be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> through the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; 這個屬性只能在設定<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>集合語法所示，透過或存取的集合物件和使用的各種方法，例如 Add。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>The property to access the collection object itself is read-only, the collection itself is read-write.</source>
          <target state="translated">用來存取集合物件本身屬性是唯讀，集合本身為讀寫。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.</source>
          <target state="translated">屬性只存在於根項目。嘗試尋找它，或將它設定其他位置，將會導致擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>This property does not enable you to examine triggers that exist as part of styles in use on this element.</source>
          <target state="translated">這個屬性不會啟用檢查存在於這個項目上的使用中的樣式部分的觸發程序。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>It only reports the collection of triggers that are literally added to the collection, either in markup or code.</source>
          <target state="translated">它只會報告常值加入至集合，在標記或程式碼中的觸發程序的集合。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.</source>
          <target state="translated">項目通常不會有此類項目根據預設 (透過範本執行個體)。它目前更常見是來自改為建立在樣式中的複合控制項的觸發程序。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>In terms of behavior (and trying to establish which effect came from which element's declared Triggers collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree.</source>
          <target state="translated">行為 （並嘗試建立的效果是來自哪一個項目宣告的觸發程序集合），以觸發條件和觸發程序的效果可能是因為在這個項目，或可能是因為在其子項目邏輯樹狀結構中。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>Note that if you use lifetime events such as &lt;xref:System.Windows.FrameworkElement.Loaded&gt; to get this collection, the child element's triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.</source>
          <target state="translated">請注意，如果您使用存留期事件，例如&lt;xref:System.Windows.FrameworkElement.Loaded&gt;若要取得此集合，子元素的觸發程序會尚未完全載入，而集合將會小於在執行階段會真正。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>Note that the collection of triggers established on an element only supports &lt;xref:System.Windows.EventTrigger&gt;, not property triggers (&lt;xref:System.Windows.Trigger&gt;).</source>
          <target state="translated">請注意，項目上建立觸發程序的集合只支援&lt;xref:System.Windows.EventTrigger&gt;，不屬性觸發程序 (&lt;xref:System.Windows.Trigger&gt;)。&lt;/xref:System.Windows.Trigger&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property, or indirectly through an implicit style reference.</source>
          <target state="translated">如果您需要屬性觸發程序，必須將這些樣式或範本中，並再指派該樣式或範本的項目可以是直接透過&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;屬性，或間接透過隱含樣式參考。&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Triggers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.Triggers&gt;       oneOrMoreTriggers     &lt;/object.Triggers&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Triggers"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreTriggers<ept id="p3">*</ept>    One or more defined &lt;xref:System.Windows.EventTrigger&gt; elements.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Triggers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性項目用法<ph id="ph1">```   &lt;object&gt;     &lt;object.Triggers&gt;       oneOrMoreTriggers     &lt;/object.Triggers&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Triggers"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreTriggers<ept id="p3">*</ept>一或多個定義&lt;xref:System.Windows.EventTrigger&gt;項目。&lt;/xref:System.Windows.EventTrigger&gt;      </target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>Each such trigger is expected to contain valid storyboard actions and references.</source>
          <target state="translated">每個這類觸發程序必須包含有效的分鏡腳本動作和參考。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>Note that this collection can only be established on the root element of a page.</source>
          <target state="translated">請注意，這個集合只能建立在頁面的根項目上。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>概觀腳本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>A strongly typed collection of <bpt id="p1">&lt;xref href="System.Windows.Trigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">強類型的集合<bpt id="p1">&lt;xref href="System.Windows.Trigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified key, and returns that resource if found.</source>
          <target state="translated">搜尋的資源，以指定的索引鍵，並傳回該資源，如果找到。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time.</source>
          <target state="translated">如果呼叫的項目上找不到資源，處理邏輯樹狀結構向上搜尋父資源樹狀結構，在樹狀結構的方式相同搜尋的若資源已由索引鍵要求在執行階段。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that TryFindResource is called.</source>
          <target state="translated">方法會傳回<ph id="ph1">`null`</ph>只有該金鑰的任何資源存不在於資源樹狀目錄中任何位置，如果每個現有的條件，在樹狀目錄的該 TryFindResource 呼叫。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</source>
          <target state="translated">通常您會立即傳回值轉換為您嘗試使用傳回的資源值設定屬性的型別。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt; method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;方法具有類似的行為不同之處在於它擲回例外狀況，如果不傳回提供的索引鍵的任何資源。&lt;/xref:System.Windows.FrameworkElement.FindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>The key identifier of the resource to be found.</source>
          <target state="translated">要尋找資源的索引鍵的識別碼。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The found resource, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no resource with the provided <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept> is found.</source>
          <target state="translated">找到的資源，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果使用提供的任何資源<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>找到。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Occurs when the element is removed from within an element tree of loaded elements.</source>
          <target state="translated">發生於從載入元素的項目樹狀結構中移除項目。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不會遵循路由，才會處理在引發相同的項目內。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件並支援其他路由的事件的行為︰ 它們支援可存取的處理常式集合中，且可用來當作&lt;xref:System.Windows.EventTrigger&gt;樣式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.Loaded&gt; and Unloaded might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;並卸載可能同時會引發由於使用者啟動系統的佈景主題變更的控制項上。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">佈景主題變更會導致控制項樣板和自主視覺化樹狀結構，因此使得卸載再重新載入整個控制項的失效。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>Therefore Unloaded cannot be assumed to occur only on navigation away from the page.</source>
          <target state="translated">因此無法假設卸載只會發生在巡覽離開該頁面。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Note that the Unloaded event is not raised after an application begins shutting down.</source>
          <target state="translated">請注意在應用程式開始關閉之後不會引發卸載事件。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Application shutdown occurs when the condition defined by the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property occurs.</source>
          <target state="translated">所定義的條件時，就會發生應用程式關閉&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;屬性，就會發生。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>If you place cleanup code within a handler for the Unloaded event, such as for a &lt;xref:System.Windows.Window&gt; or a &lt;xref:System.Windows.Controls.UserControl&gt;, it may not be called as expected.</source>
          <target state="translated">如果您清除程式碼中事件處理常式卸載，例如針對&lt;xref:System.Windows.Window&gt;或&lt;xref:System.Windows.Controls.UserControl&gt;，它可能不會呼叫如預期般。&lt;/xref:System.Windows.Controls.UserControl&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Unloaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.UnloadedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Unloaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.UnloadedEvent&gt;|  |路由策略 |直接 |  |委派 |&lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.UnloadedEvent&gt;</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">註冊路由的事件時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">您可以使用這些識別項來加入類別處理常式。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">如需註冊路由的事件的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">如需使用路由的事件識別項來加入類別處理常式的詳細資訊，請參閱&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>Simplifies access to the &lt;xref:System.Windows.NameScope&gt; de-registration method.</source>
          <target state="translated">簡化存取&lt;xref:System.Windows.NameScope&gt;取消註冊方法。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>You only need to un-register names if you intend to re-register another element with that same name.</source>
          <target state="translated">您只需要取消註冊名稱如果您想要重新註冊該相同名稱的另一個項目。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>Name of the name-object pair to remove from the current scope.</source>
          <target state="translated">從目前的範圍中移除之名稱-物件組的名稱。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>Reapplies the default style to the current <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">重新套用至目前的預設樣式<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</source>
          <target state="translated">取得或設定值，指出配置進位是否應該套用到此項目的大小和位置在配置期間。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>When the UseLayoutRounding property for an element is <ph id="ph1">`true`</ph>, all non-integral pixel values that are calculated during the &lt;xref:System.Windows.UIElement.Measure%2A&gt; and &lt;xref:System.Windows.UIElement.Arrange%2A&gt; passes are rounded to whole pixel values.</source>
          <target state="translated">當 UseLayoutRounding 屬性的項目是<ph id="ph1">`true`</ph>，所有的非整數像素值期間所計算&lt;xref:System.Windows.UIElement.Measure%2A&gt;和&lt;xref:System.Windows.UIElement.Arrange%2A&gt;傳遞會捨入到整個像素值。&lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>This property is inherited by child elements.</source>
          <target state="translated">子項目會繼承這個屬性。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should set UseLayoutRounding to <ph id="ph2">`true`</ph> on the root element.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 應設 UseLayoutRounding<ph id="ph2">`true`</ph>根元素。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary.</source>
          <target state="translated">版面配置系統會將子座標加入至父代的座標。因此，如果父座標不像素界限上，子座標也不像素界限上。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>If UseLayoutRounding cannot be set at the root, set &lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt; on the child to obtain the effect that you want.</source>
          <target state="translated">如果 UseLayoutRounding 無法設定在根目錄中，設定&lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;上的子系，以取得您想要的效果。&lt;/xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel.</source>
          <target state="translated">繪製像素界限的物件排除半透明效果的邊緣時，所產生的消除鋸齒邊緣落在裝置像素。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel.</source>
          <target state="translated">下圖顯示落在裝置像素的單一像素寬度列的輸出。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>The line on the left does not use layout rounding and is anti-aliased.</source>
          <target state="translated">左邊的行號不會使用配置進位，且已消除鋸齒。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>The line on the right uses layout rounding.</source>
          <target state="translated">在右邊的列會使用配置進位。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Anti&amp;#45;aliased line compared to single pixel line.<ept id="p1">]</ept><bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>Anti-aliased line compared to single pixel line.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>消除鋸齒線條與單一像素線條比較。<ept id="p1">]</ept><bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>消除鋸齒線條與單一像素線條比較。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>When you use layout rounding and &lt;xref:System.Windows.GridUnitType&gt; sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering.</source>
          <target state="translated">當您使用配置進位，&lt;xref:System.Windows.GridUnitType&gt;調整大小、 版面配置系統會建立小型的變化中的資料行或資料列的度量，以避免呈現子像素。&lt;/xref:System.Windows.GridUnitType&gt;</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>For example, if a grid has a total width of 100 with 3 columns each of size &lt;xref:System.Windows.GridUnitType&gt;, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.</source>
          <target state="translated">例如，如果方格具有 3 個資料行大小的 100 總寬度&lt;xref:System.Windows.GridUnitType&gt;，而不是建立三個資料行 33.3 等寬，版面配置系統會建立 2 個資料行的寬度為 33，另一個則的寬度為 34。&lt;/xref:System.Windows.GridUnitType&gt;</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 中.NET 4.6 已變更配置進位以減少含邊界之控制項中的裁剪功能的執行個體。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher.</source>
          <target state="translated">根據預設，如果您的目標 Framework 是.NET Framework 4.6 或更高版本，會啟用這項功能。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve">
          <source>Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: <ph id="ph1">`&lt;runtime&gt;``&lt;AppContextSwitchOverrides      value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;``&lt;/runtime&gt;`</ph> The setting only takes effect when the application is running on the .NET Framework 4.6.</source>
          <target state="translated">以舊版 framework 為目標的應用程式可以選擇加入新行為加入 app.config 檔案中的下列設定︰<ph id="ph1">`&lt;runtime&gt;``&lt;AppContextSwitchOverrides      value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;``&lt;/runtime&gt;`</ph>設定才會生效，.NET Framework 4.6 上執行應用程式時。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if layout rounding is applied; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果套用配置進位;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt;</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</source>
          <target state="translated">取得或設定套用至這個項目，例如面板或項目控制項的父元素中組成時的垂直對齊特性。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to &lt;xref:System.Windows.VerticalAlignment&gt;.</source>
          <target state="translated">當&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;項目上明確設定屬性&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;，這些度量需要配置優先者列] 和 [取消設定此屬性為&lt;xref:System.Windows.VerticalAlignment&gt;。&lt;/xref:System.Windows.VerticalAlignment&gt;規則的效果&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>VerticalAlignment is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">垂直對齊是<ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph>實際上會相依性屬性的屬性存取子。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly controls.</source>
          <target state="translated">這個特定的相依性屬性相當常有衍生的項目類別，特別是控制項中以不同方式設定其明顯"default"值。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">這通常發生在兩種方式之一︰ 重新登錄相依性屬性的特定衍生類別中，但具有不同的中繼資料來設定其預設值;或以不同的方式設定該相依性屬性的值為預設樣式套用。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>For example, the apparent "default" of VerticalAlignment for a &lt;xref:System.Windows.Controls.ComboBoxItem&gt; control will be &lt;xref:System.Windows.VerticalAlignment&gt;, even though &lt;xref:System.Windows.Controls.ComboBoxItem&gt; inherits VerticalAlignment direct from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">例如，明顯 「 預設 」 的垂直對齊的&lt;xref:System.Windows.Controls.ComboBoxItem&gt;控制項將會是&lt;xref:System.Windows.VerticalAlignment&gt;，即使&lt;xref:System.Windows.Controls.ComboBoxItem&gt;繼承 VerticalAlignment 直接從&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Controls.ComboBoxItem&gt; &lt;/xref:System.Windows.VerticalAlignment&gt; &lt;/xref:System.Windows.Controls.ComboBoxItem&gt;</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>This is because that value was reset within the default style of &lt;xref:System.Windows.Controls.ComboBoxItem&gt;, within the style's control template.</source>
          <target state="translated">這是因為該值重設的預設樣式中&lt;xref:System.Windows.Controls.ComboBoxItem&gt;，樣式的控制項範本內。&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas&gt; does not use VerticalAlignment when composing layout, because &lt;xref:System.Windows.Controls.Canvas&gt; is based on absolute positioning.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas&gt;不會使用垂直對齊時撰寫版面配置，因為&lt;xref:System.Windows.Controls.Canvas&gt;根據絕對位置。&lt;/xref:System.Windows.Controls.Canvas&gt;&lt;/xref:System.Windows.Controls.Canvas&gt;</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>When inherited by &lt;xref:System.Windows.Controls.ComboBoxItem&gt; or any derived classes, &lt;xref:System.Windows.Controls.ComboBoxItem&gt; redefines the default value of this property to be &lt;xref:System.Windows.VerticalAlignment&gt;.</source>
          <target state="translated">當&lt;xref:System.Windows.Controls.ComboBoxItem&gt;或任何衍生的類別，&lt;xref:System.Windows.Controls.ComboBoxItem&gt;會重新定義為&lt;xref:System.Windows.VerticalAlignment&gt;.&lt;/xref:System.Windows.VerticalAlignment&gt;這個屬性的預設值&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;繼承</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; &lt;/xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>A vertical alignment setting.</source>
          <target state="translated">垂直對齊設定。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.VerticalAlignment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.VerticalAlignment*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.VerticalAlignment*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.VerticalAlignment*&gt;</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Gets the number of visual child elements within this element.</source>
          <target state="translated">取得此項目內的視覺子項目的數目。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation of VisualChildrenCount always returns either zero or one.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;VisualChildrenCount 的實作一律會傳回零個或一個。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>Classes that maintain a visual child collection that might exceed one must override both this property and &lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;.</source>
          <target state="translated">維護可能會超過一個視覺化子集合的類別必須覆寫，此屬性和&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve">
          <source>This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;).</source>
          <target state="translated">這個屬性通常用來決定用於實作的版面配置覆寫目前的子集合的上限 (&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;， &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;)。&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>The number of visual child elements for this element.</source>
          <target state="translated">視覺子項目，這個項目的數目。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the element.</source>
          <target state="translated">取得或設定項目的寬度。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">這是三個屬性的其中一個上&lt;xref:System.Windows.FrameworkElement&gt;旗標會指定寬度資訊。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">其他兩個是&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;, and finally if each of these are within bounds, Width.</source>
          <target state="translated">如果這些值之間沒有衝突，這是第一次應用程式的實際寬度判斷順序&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;必須能接受，然後&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;，最後如果每一種寬度的範圍內。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">這個屬性傳回的值一律為任何已設定為它的值相同。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>In contrast, the value of the &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; may vary.</source>
          <target state="translated">相較之下，值&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;而異。&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>The layout may have rejected the suggested size for some reason.</source>
          <target state="translated">版面配置可能會拒絕某些原因建議的大小。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>Also, the layout system itself works asynchronously relative to the property system set of Width and may not have processed that particular sizing property change yet.</source>
          <target state="translated">此外，版面配置系統本身相對於寬度的屬性系統組以非同步方式運作，而且可能處理該特定尚未調整大小屬性變更。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>In addition to acceptable &lt;xref:System.Double&gt; values, this property can also be &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.</source>
          <target state="translated">除了可接受&lt;xref:System.Double&gt;的值，這個屬性也可以是&lt;xref:System.Double.NaN?displayProperty=fullName&gt;.&lt;/xref:System.Double.NaN?displayProperty=fullName&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>This is how you specify auto sizing behavior.</source>
          <target state="translated">這是您指定自動調整大小行為的方式。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>您設定值的字串 「 自動 」 （不區分大小寫） 若要啟用自動調整大小行為。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>Auto sizing behavior implies that the element will fill the width available to it.</source>
          <target state="translated">自動調整大小行為表示項目將會填入可用的寬度。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">不過請注意，特定控制項通常會提供將會停用自動調整大小行為，除非它是特別重新啟用其預設樣式中的預設值。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for Width that is enforced by the layout system (this is a very large number, larger than &lt;xref:System.Single.MaxValue?displayProperty=fullName&gt; but smaller than &lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;).</source>
          <target state="translated">驗證檢查，除了沒有繫結會強制執行由配置系統的寬度不具決定性的上限值 (這是非常大數目，大於&lt;xref:System.Single.MaxValue?displayProperty=fullName&gt;但小於&lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;)。&lt;/xref:System.Double.MaxValue?displayProperty=fullName&gt; &lt;/xref:System.Single.MaxValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">如果超過此限制，將不會呈現項目，並擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>Do not set Width to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">請勿將寬度設為明顯地大於任何可能的視覺顯示的大小上限的值，或您可能會超過此不具決定性的上限。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Width="double"/&gt;   - or –   &lt;object Width ="qualifiedDouble"/&gt;   - or -   &lt;object Width ="Auto"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Width"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 屬性使用方式<ph id="ph1">```   &lt;object Width="double"/&gt;   - or –   &lt;object Width ="qualifiedDouble"/&gt;   - or -   &lt;object Width ="Auto"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Width"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字串表示法&lt;xref:System.Double&gt;等於或大於 0.0 的值。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">如需上限資訊，請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">這個值會解譯為<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字串不需要明確地包含小數位數。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">執行個體的值<ph id="ph1">`1`</ph>是可接受。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>值 （如上所述），後面接著下列單元宣告字串的其中之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px       <ph id="ph6">`Auto`</ph>    Enables autosizing behavior.</source>
          <target state="translated"><ph id="ph1">`px`</ph>（預設值） <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> <ph id="ph3">`in`</ph>英吋; 1in = = 96px<ph id="ph4">`cm`</ph>是公釐。 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>點; 1pt==(96/72) px<ph id="ph6">`Auto`</ph>啟用自動調整大小行為。       </target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.WidthProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |&lt;xref:System.Windows.FrameworkElement.WidthProperty&gt;|  |中繼資料屬性設定為<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.WidthProperty&gt;</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">項目的寬度，請在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">預設值是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">此值必須等於或大於 0.0。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">如需上限資訊，請參閱 &lt; 備註 &gt;。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Width*&gt; dependency property.</source>
          <target state="translated">識別&lt;xref:System.Windows.FrameworkElement.Width*&gt;相依性屬性。&lt;/xref:System.Windows.FrameworkElement.Width*&gt;</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>