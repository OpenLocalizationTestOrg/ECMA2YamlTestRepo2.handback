<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd8c022c18cf075b36deeb6c13cece8367e7e594</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.Design.EventHandlerService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">313ffb37298fe001a5f2235bfc26208eda1fd971</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">750d8ff63b3031ae03009f7eeb74a8527f04dc48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a systematic way to manage event handlers for the current document.</source>
          <target state="translated">提供系統化的方法，來管理目前文件的事件處理常式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Developers may want to be able to write code in one place that handles events of a certain type.</source>
          <target state="translated">開發人員可能想要撰寫程式碼中處理事件的特定類型的一個位置。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Also, developers may need to globally change the behavior of the handlers for specific events or types of events, which may be distributed among designer components.</source>
          <target state="translated">此外，開發人員可能需要全域變更的特定事件或事件，可能會分散在設計工具的元件類型的處理常式的行為。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The designers for a typical project are many different objects so it can be useful to list and store reference to these events from a common place.</source>
          <target state="translated">典型的專案的設計工具是許多不同的物件，因此可能很有用來列出並儲存這些事件中的通用位置參考。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This service implements an "event stack" that contains the current set of event handlers.</source>
          <target state="translated">此服務會實作 「 事件堆疊 」，其中包含目前的資料集的事件處理常式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The stack may have a variety of different types of handlers on the stack.</source>
          <target state="translated">堆疊可能有各種不同類型的處理常式的堆疊上。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, a designer might push, or add, a keyboard handler and a mouse handler onto the stack.</source>
          <target state="translated">比方說，設計工具可能會推入，或加入處理常式鍵盤和滑鼠處理常式至堆疊。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a designer requests an event handler, the service will find the topmost handler on the stack that matches the class you requested.</source>
          <target state="translated">當設計工具要求的事件處理常式時，服務就會符合您所要求的類別在堆疊上發現的最上層的處理常式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This way the service can be extended to any eventing scheme, and it also allows specific types of event handlers to be replaced.</source>
          <target state="translated">這種方式可以任何事件配置，來擴充服務，它也可讓特定類型的事件處理常式来被取代。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you can replace mouse event handlers without affecting menu event handlers or keyboard event handlers.</source>
          <target state="translated">例如，您可以取代滑鼠事件處理常式，而不會影響功能表事件處理常式或鍵盤事件處理常式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Design.EventHandlerService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Forms.Design.EventHandlerService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which is being designed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>正在設計的。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Fires an OnEventHandlerChanged event.</source>
          <target state="translated">引發 OnEventHandlerChanged 事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the control to which event handlers are attached.</source>
          <target state="translated">取得事件處理常式所連接的控制項。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which was attached through the constructor.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>其中已附加到建構函式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the currently active event handler of the specified type.</source>
          <target state="translated">取得指定類型的目前作用中的事件處理常式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You should never cache this value because other components are free to change it.</source>
          <target state="translated">因為其他元件在將它變更，您不應快取此值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This call is fairly quick, however, especially for cases when you are always asking for the same type of handler.</source>
          <target state="translated">這個呼叫是相當快速，不過，特別是針對案例時一律要求相同類型的處理常式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the handler to get.</source>
          <target state="translated">若要取得處理常式的類型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An instance of the handler, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no handler of the requested type.</source>
          <target state="translated">執行個體的處理常式，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果沒有要求類型的處理常式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Pops the given handler off of the stack.</source>
          <target state="translated">從指定的處理常式從堆疊中取出。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the handler is not the topmost component on the stack, this will pop all handlers up to and including handler.</source>
          <target state="translated">如果此處理常式不是在堆疊上最上層的元件，這會顯示所有的處理常式和處理常式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The handler to remove from the stack.</source>
          <target state="translated">若要從堆疊移除處理常式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Pushes a new event handler on the stack.</source>
          <target state="translated">將新的事件處理常式推入堆疊上。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This handler will be used by all components that request a compatible handler type.</source>
          <target state="translated">這個處理常式將供要求相容的處理常式類型的所有元件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If this handler does not support the requested type, the next handler on the stack will be used.</source>
          <target state="translated">如果這個處理常式不支援要求的型別，則將使用在堆疊上的下一個處理常式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to add to the stack.</source>
          <target state="translated">要加入至堆疊的處理常式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>