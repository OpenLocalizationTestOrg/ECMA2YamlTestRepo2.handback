<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5908d5d0edd2c520f9df0e5663e637eb8e199687</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.TransactionScope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">243a885573d14a717b17bd03caea9d23d5b5c1df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0efb73e31bab693ae5bcf0057da20fea807e1bf7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Makes a code block transactional.</source>
          <target state="translated">讓交易式的程式碼區塊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Transactions&gt; infrastructure provides both an explicit programming model based on the &lt;xref:System.Transactions.Transaction&gt; class, as well as an implicit programming model using the TransactionScope class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated">&lt;xref:System.Transactions&gt;基礎結構提供的明確程式設計模型根據&lt;xref:System.Transactions.Transaction&gt;類別，以及使用 TransactionScope 類別，在其中交易自動管理基礎結構的隱含程式撰寫模型。&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  It is recommended that you create implicit transactions using the TransactionScope class, so that the ambient transaction context is automatically managed for you.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 建議您建立使用 TransactionScope 類別，隱含交易，以便為您自動管理的環境交易內容。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You should also use the TransactionScope and &lt;xref:System.Transactions.DependentTransaction&gt; class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</source>
          <target state="translated">您也應該使用 TransactionScope 和&lt;xref:System.Transactions.DependentTransaction&gt;跨多個函式呼叫或多個執行緒呼叫需要使用的相同交易的應用程式的類別。&lt;/xref:System.Transactions.DependentTransaction&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information on this model, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">如需有關此模型的詳細資訊，請參閱<bpt id="p1">[</bpt>實作隱含交易使用交易範圍<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept>主題。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>.</source>
          <target state="translated">如需撰寫交易應用程式的詳細資訊，請參閱<bpt id="p1">[</bpt>撰寫交易應用程式<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Upon instantiating a TransactionScope by the <ph id="ph1">`new`</ph> statement, the transaction manager determines which transaction to participate in.</source>
          <target state="translated">在具現化的 TransactionScope<ph id="ph1">`new`</ph>陳述式中，交易管理員決定要參與交易。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Once determined, the scope always participates in that transaction.</source>
          <target state="translated">一旦決定後，範圍永遠會參與該交易。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The decision is based on two factors: whether an ambient transaction is present and the value of the <ph id="ph1">`TransactionScopeOption`</ph> parameter in the constructor.</source>
          <target state="translated">此決策根據兩個因素︰ 環境交易是否存在，而<ph id="ph1">`TransactionScopeOption`</ph>建構函式中的參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The ambient transaction is the transaction your code executes in.</source>
          <target state="translated">環境交易是您的程式碼中執行的交易。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can obtain a reference to the ambient transaction by calling the static &lt;xref:System.Transactions.Transaction.Current%2A&gt; property of the &lt;xref:System.Transactions.Transaction&gt; class.</source>
          <target state="translated">您可以取得環境交易的參考，藉由呼叫靜態&lt;xref:System.Transactions.Transaction.Current%2A&gt;屬性的&lt;xref:System.Transactions.Transaction&gt;類別。&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information on how this parameter is used, please see the "Transaction Flow Management" section of the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">如需有關如何使用這個參數的詳細資訊，請參閱 &lt; 交易流程管理 &gt; 一節<bpt id="p1">[</bpt>實作隱含交易使用交易範圍<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept>主題。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If no exception occurs within the transaction scope (that is, between the initialization of the TransactionScope object and the calling of its &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; method), then the transaction in which the scope participates is allowed to proceed.</source>
          <target state="translated">如果沒有發生例外狀況在異動範圍內 (亦即之間的 TransactionScope 初始化物件和呼叫其&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;方法)，則範圍所參與的交易就可以繼續。&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</source>
          <target state="translated">如果在異動範圍內，未發生例外狀況，它所參與的交易將回復。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When your application completes all work it wants to perform in a transaction, you should call the &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt; method only once to inform that transaction manager that it is acceptable to commit the transaction.</source>
          <target state="translated">當您的應用程式完成所有工作要在交易中執行，您應該呼叫&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;方法一次，以通知該交易管理員是可接受要認可的交易。&lt;/xref:System.Transactions.TransactionScope.Complete%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Failing to call this method aborts the transaction.</source>
          <target state="translated">無法呼叫這個方法會中止交易。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A call to the &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; method marks the end of the transaction scope.</source>
          <target state="translated">呼叫&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;方法標示的交易範圍結尾。&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">呼叫這個方法後發生的例外狀況不會影響交易。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you modify the value of &lt;xref:System.Transactions.Transaction.Current%2A&gt; inside a scope, an exception is thrown when &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; is called.</source>
          <target state="translated">如果您修改的值&lt;xref:System.Transactions.Transaction.Current%2A&gt;範圍中，內部例外狀況時擲回&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;稱為。&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, at the end of the scope, the previous value is restored.</source>
          <target state="translated">不過，在結束範圍時，會還原先前的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In addition, if you call &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; on &lt;xref:System.Transactions.Transaction.Current%2A&gt; inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</source>
          <target state="translated">此外，如果您呼叫&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;上&lt;xref:System.Transactions.Transaction.Current%2A&gt;的交易範圍內，建立交易，交易中止的範圍結尾。&lt;/xref:System.Transactions.Transaction.Current%2A&gt; &lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This constructor creates a new transaction scope with the transaction scope option equal to &lt;xref:System.Transactions.TransactionScopeOption&gt;.</source>
          <target state="translated">這個建構函式會建立新的交易範圍與交易範圍選項等於&lt;xref:System.Transactions.TransactionScopeOption&gt;.&lt;/xref:System.Transactions.TransactionScopeOption&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</source>
          <target state="translated">這表示交易需要新的範圍，而且如果已經存在，會使用環境交易。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Otherwise, it creates a new transaction before entering the scope.</source>
          <target state="translated">否則，它會建立新的交易，再進入範圍內。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，並為環境交易，設定指定的交易，以便在範圍內執行的交易工作會使用此交易。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">要設定為環境交易，以便在範圍內執行的交易工作會使用此交易的交易。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified asynchronous flow option.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定的非同步流程選項。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與指定之需求的類別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定的逾時值，以指定的交易設定為環境交易，讓交易式範圍內完成的工作會使用此交易。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">要設定為環境交易，以便在範圍內執行的交易工作會使用此交易的交易。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;之後，交易範圍逾時和中止交易。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，並為環境交易，設定指定的交易，以便在範圍內執行的交易工作會使用此交易。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">要設定為環境交易，以便在範圍內執行的交易工作會使用此交易的交易。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value and requirements.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定的逾時值和需求。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;之後，交易範圍逾時和中止交易。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與指定之需求的類別。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an &lt;xref:System.Transactions.IsolationLevel&gt;, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">當您使用<ph id="ph1">`transactionOptions`</ph>參數來指定&lt;xref:System.Transactions.IsolationLevel&gt;，且範圍會建立稍後的交易，新的交易與指定之隔離等級相關聯。&lt;/xref:System.Transactions.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">如果傳入的隔離層級以及交易，交易必須具有相同的隔離等級，或擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構描述在建立新的交易時所要使用的交易選項。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">如果使用現有的交易，則此參數中的逾時值會套用至交易範圍。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">如果該時間到期之前已處置此範圍，則會中止交易。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定之需求和非同步的資料流程選項類別。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定的逾時值和 COM + 互通性需求，將指定的交易設定為環境交易，讓交易式範圍內完成的工作會使用此交易。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph1">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>請注意<ept id="p1">**</ept>這個方法會使用&lt;xref:System.Security.Permissions.SecurityAction&gt;以防止它呼叫來自不受信任的程式碼; 不過，立即呼叫者，才能擁有<ph id="ph1">`FullTrust`</ph>權限集合。&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">要設定為環境交易，以便在範圍內執行的交易工作會使用此交易的交易。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;之後，交易範圍逾時和中止交易。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes how the associated transaction interacts with COM+ transactions.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>描述相關聯的交易與 COM + 交易之間的互動方式的列舉。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定的逾時值，以指定的交易設定為環境交易，讓交易式範圍內完成的工作會使用此交易。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">要設定為環境交易，以便在範圍內執行的交易工作會使用此交易的交易。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;之後，交易範圍逾時和中止交易。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, requirements, and asynchronous flow option.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定的逾時值、 需求和非同步的資料流程選項類別。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;之後，交易範圍逾時和中止交易。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified scope and COM+ interoperability requirements, and transaction options.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定的範圍和 COM + 互通性需求和交易選項。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an &lt;xref:System.Transactions.IsolationLevel&gt;, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">當您使用<ph id="ph1">`transactionOptions`</ph>參數來指定&lt;xref:System.Transactions.IsolationLevel&gt;，且範圍會建立稍後的交易，新的交易與指定之隔離等級相關聯。&lt;/xref:System.Transactions.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">如果傳入的隔離層級以及交易，交易必須具有相同的隔離等級，或擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph1">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>請注意<ept id="p1">**</ept>這個方法會使用&lt;xref:System.Security.Permissions.SecurityAction&gt;以防止它呼叫來自不受信任的程式碼; 不過，立即呼叫者，才能擁有<ph id="ph1">`FullTrust`</ph>權限集合。&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構描述在建立新的交易時所要使用的交易選項。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">如果使用現有的交易，則此參數中的逾時值會套用至交易範圍。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">如果該時間到期之前已處置此範圍，則會中止交易。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes how the associated transaction interacts with COM+ transactions.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>描述相關聯的交易與 COM + 交易之間的互動方式的列舉。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">[在.NET Framework 4.5.1 及更新版本中支援]      初始化的新執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定之需求和非同步的資料流程選項類別。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，描述與此交易範圍相關聯的交易需求。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構描述在建立新的交易時所要使用的交易選項。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">如果使用現有的交易，則此參數中的逾時值會套用至交易範圍。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">如果該時間到期之前已處置此範圍，則會中止交易。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">執行個體<bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，可描述是否與交易範圍相關聯的環境交易將會是跨執行緒接續使用工作或非同步/等候.NET 非同步程式設計模式時。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Indicates that all operations within the scope are completed successfully.</source>
          <target state="translated">表示範圍內的所有作業都順利都完成。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</source>
          <target state="translated">當您滿意，範圍內的所有作業都已成功都完成，您應該呼叫這個方法一次通知該交易管理員之間的所有資源的狀態一致，且可以認可交易。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It is very good practice to put the call as the last statement in the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">它是很好的作法將與最後一個陳述式中呼叫<ph id="ph1">`using`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">如需有關如何使用這個方法的詳細資訊，請參閱<bpt id="p1">[</bpt>實作隱含交易使用交易範圍<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept>主題。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</source>
          <target state="translated">無法呼叫這個方法會中止交易，因為交易管理員會將此解譯系統失敗，或在交易範圍中擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>However, you should also note that calling this method does not guarantee a commit of the transaction.</source>
          <target state="translated">不過，您也必須注意，呼叫這個方法時，不會保證交易的認可。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It is merely a way of informing the transaction manager of your status.</source>
          <target state="translated">它是狀態的只是狀態的一種告知交易管理員的您。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>After calling this method, you can no longer access the ambient transaction via the &lt;xref:System.Transactions.Transaction.Current%2A&gt; property, and trying to do so results in an exception being thrown.</source>
          <target state="translated">呼叫這個方法之後, 您就無法再存取環境交易透過&lt;xref:System.Transactions.Transaction.Current%2A&gt;屬性，並嘗試這樣所擲回例外狀況。&lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The actual work of commit between the resources manager happens at the <ph id="ph1">`End Using`</ph> statement if the &lt;xref:System.Transactions.TransactionScope&gt; object created the transaction.</source>
          <target state="translated">認可資源管理員之間的實際工作會發生在<ph id="ph1">`End Using`</ph>陳述式如果&lt;xref:System.Transactions.TransactionScope&gt;建立交易物件。&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If it did not create the transaction, the commit occurs whenever &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; is called by the owner of the &lt;xref:System.Transactions.CommittableTransaction&gt; object.</source>
          <target state="translated">如果它不會建立交易，便會發生認可每當&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;的擁有者會呼叫&lt;xref:System.Transactions.CommittableTransaction&gt;物件。&lt;/xref:System.Transactions.CommittableTransaction&gt; &lt;/xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the &lt;xref:System.Transactions.TransactionScope&gt; object.</source>
          <target state="translated">交易管理員在該點呼叫資源管理員，通知他們認可或回復，根據是否在呼叫這個方法&lt;xref:System.Transactions.TransactionScope&gt;物件。&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This method has already been called once.</source>
          <target state="translated">這個方法已經一次呼叫。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Ends the transaction scope.</source>
          <target state="translated">結束交易範圍。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Calling this method marks the end of the transaction scope.</source>
          <target state="translated">呼叫這個方法會將標示交易範圍的結束。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Transactions.TransactionScope&gt; object created the transaction and &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt; was called on the scope, the &lt;xref:System.Transactions.TransactionScope&gt; object attempts to commit the transaction when this method is called.</source>
          <target state="translated">如果&lt;xref:System.Transactions.TransactionScope&gt;建立交易物件和&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;範圍上呼叫&lt;xref:System.Transactions.TransactionScope&gt;物件嘗試認可交易，在呼叫這個方法。&lt;/xref:System.Transactions.TransactionScope&gt; &lt;/xref:System.Transactions.TransactionScope.Complete%2A&gt; &lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The use of the C# <ph id="ph1">`using`</ph> construction ensures that this method is called even if an exception occurs.</source>
          <target state="translated">使用 C#<ph id="ph1">`using`</ph>建構可確保即使發生例外狀況，呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">呼叫這個方法後發生的例外狀況不會影響交易。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method also restores the ambient transaction to it original state.</source>
          <target state="translated">這個方法也會還原環境交易其原始狀態。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Transactions.TransactionAbortedException&gt; is thrown if the transaction is not actually committed.</source>
          <target state="translated">A&lt;xref:System.Transactions.TransactionAbortedException&gt;無法實際認可交易時就會擲回。&lt;/xref:System.Transactions.TransactionAbortedException&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method is synchronous and blocks until the transaction has been committed or aborted.</source>
          <target state="translated">這個方法是同步，並封鎖，直到認可或中止交易。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</source>
          <target state="translated">因為這個緣故，您必須非常小心，在 Windows Form (WinForm) 應用程式中，使用這個方法時，或會發生死結。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</source>
          <target state="translated">如果您呼叫這個方法內一個 WinForm 控制項事件 （例如按一下按鈕），並使用同步&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;方法來指示要執行一些 UI 工作 （例如變更色彩） 處理交易，將會發生死結的控制項。&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is because the &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method is synchronous and blocks the worker thread until the UI thread finishes its job.</source>
          <target state="translated">這是因為&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;方法是同步，背景工作執行緒，直到 UI 執行緒完成其工作。&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</source>
          <target state="translated">不過，在我們的案例中，UI 執行緒正在也等候背景工作執行緒来認可的交易。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</source>
          <target state="translated">結果是它們都無法繼續進行，而範圍會無限期地等候認可完成。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You should use &lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt; rather than &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; wherever possible, because it is asynchronous and thus less prone to deadlock.</source>
          <target state="translated">您應該使用&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;而&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;只要做得到，因為它是非同步，因此較不容易發生死結。&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt; &lt;/xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">如需有關如何使用這個方法的詳細資訊，請參閱<bpt id="p1">[</bpt>實作隱含交易使用交易範圍<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept>主題。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>