<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15b9a1f3b6cdd0f4e2e52d9bd81e8f3e838c3e2e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Interop.IKeyboardInputSink.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">429fd829d97daed5f44189cced2b66317de4b660</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55a01909041b186e03a5af5fe749c2c00d6fd755</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</source>
          <target state="translated">跨越 interop 界限和 Hwnd 之間，提供管理定位停駐的元件、 加速器以及助憶鍵的鍵盤接收器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface implements keyboard message management in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph><ph id="ph2">-</ph><ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> interoperation scenarios.</source>
          <target state="translated">這個介面會實作中的鍵盤訊息管理<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">-</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>互通的案例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A keyboard sink handles input from particular subsets of the overall keyboard input model for <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</source>
          <target state="translated">鍵盤接收器處理輸入之整體鍵盤輸入模型的特定子集<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>和<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>，並可讓某些鍵盤輸入來處理，而且與目前的鍵盤焦點卻不被導向至 Hwnd。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If your component contains other components, and maintains a tab order, your component must also implement &lt;xref:System.Windows.Interop.IKeyboardInputSite&gt; and keep track of which component has focus.</source>
          <target state="translated">如果您的元件包含其他元件，而且會維護定位順序，也必須實作自己的元件&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;以及追蹤哪些元件具有焦點。&lt;/xref:System.Windows.Interop.IKeyboardInputSite&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a discussion of the input architecture specifically implemented for <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph> interop, see <bpt id="p1">[</bpt>Windows Forms and WPF Interoperability Input Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需特別針對實作的輸入架構的討論<ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>interop，請參閱<bpt id="p1">[</bpt>Windows Form 和 WPF 互通性輸入架構<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Interop.HwndSource&gt; and &lt;xref:System.Windows.Interop.HwndHost&gt; each implement the IKeyboardInputSink interface, through explicit interface definitions.</source>
          <target state="translated">&lt;xref:System.Windows.Interop.HwndSource&gt;和&lt;xref:System.Windows.Interop.HwndHost&gt;每個實作 IKeyboardInputSink 介面，透過明確的介面定義。&lt;/xref:System.Windows.Interop.HwndHost&gt;&lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of &lt;xref:System.Windows.Interop.HwndSource&gt; or &lt;xref:System.Windows.Interop.HwndHost&gt;.</source>
          <target state="translated">明確定義提供預設的行為，也可以存取，如果需要透過 IKeyboardInputSink 介面轉換或&lt;xref:System.Windows.Interop.HwndSource&gt;&lt;xref:System.Windows.Interop.HwndHost&gt;.&lt;/xref:System.Windows.Interop.HwndHost&gt;&lt;/xref:System.Windows.Interop.HwndSource&gt;和</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">取得值，指出接收或其中一個包含的元件是否具有焦點。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method is necessary for forwarding &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; calls to child components with focus from within the &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; implementation.</source>
          <target state="translated">這個方法是必要的轉送&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;具有焦點的子元件的呼叫中&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;實作。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; &lt;/xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Call HasFocusWithin recursively until you reach the level of specific focus and forward &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; there.</source>
          <target state="translated">直到您到達特定焦點和轉送的層級呼叫 HasFocusWithin 以遞迴方式&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;那里。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the sink or one of its contained components has focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果接收或其中一個包含的元件具有焦點。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to the component's container's <bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">取得或設定元件的容器的參考<bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This property should initially be set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">這個屬性一開始應該設定為<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Any container that adds the sink to its components list will set KeyboardInputSite before any other methods are called, and it can be set multiple times after that.</source>
          <target state="translated">接收其元件將清單加入至任何容器將之前設定，KeyboardInputSite 呼叫任何其他方法，而且可以設定多次之後。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You should set the property to <ph id="ph1">`null`</ph> again before disposal.</source>
          <target state="translated">您應該將屬性設定為<ph id="ph1">`null`</ph>處置前一次。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A reference to the container's <bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">容器的參考<bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">當這個接收助憶鍵 （便捷鍵） 的其中一個會叫用時呼叫。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph>訊息必須 WM_CHAR、 WM_SYSCHAR、 WM_DEADCHAR 或 WM_SYSDEADCHAR。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the component has contained components, the message must be passed in your implementation by calling each contained component's OnMnemonic method.</source>
          <target state="translated">如果元件有包含元件，必須實作中傳遞訊息，藉由呼叫每個所包含的元件 OnMnemonic 方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An interface that returns <ph id="ph1">`true`</ph> from &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; will not call OnMnemonic.</source>
          <target state="translated">傳回的介面<ph id="ph1">`true`</ph>從&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;不會呼叫 OnMnemonic。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implementations can choose to perform all specific key combination handling in &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;.and bypass OnMnemonic.</source>
          <target state="translated">實作可以選擇執行中處理所有特定組合&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;並略過 OnMnemonic。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">訊息的助憶鍵和相關聯的資料。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Do not modify this message structure.</source>
          <target state="translated">請勿修改此訊息的結構。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">它只基於效能的參考方式傳遞。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the message was handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已處理訊息。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Registers the <bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface of a contained component.</source>
          <target state="translated">註冊<bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>自主元件介面。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</source>
          <target state="translated">元件和子元件應該維護站台的內部集合，並使用這個方法來新增新的接收並傳回新的站台。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You only need to maintain the site collection, because the sink can be obtained from the site.</source>
          <target state="translated">您只需要維護的網站集合，因為接收可從此站台。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> sink of the contained component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>自主元件的接收。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> site of the contained component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Interop.IKeyboardInputSite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>自主元件的站台。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">將焦點設定在第一個定位點或接收的最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Input.FocusNavigationDirection&gt; and &lt;xref:System.Windows.Input.FocusNavigationDirection&gt; are the only relevant values that should be passed to this method in the &lt;xref:System.Windows.Input.TraversalRequest&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;而是&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;只有相關的值，應該傳遞至這個方法在&lt;xref:System.Windows.Input.TraversalRequest&gt;.&lt;/xref:System.Windows.Input.TraversalRequest&gt; &lt;/xref:System.Windows.Input.FocusNavigationDirection&gt;&lt;/xref:System.Windows.Input.FocusNavigationDirection&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">指定是否應該將焦點設定到第一個或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the focus has been set as requested; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if there are no tab stops.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果要求; 已設定焦點<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果沒有定位停駐點。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Processes keyboard input at the keydown message level.</source>
          <target state="translated">處理 keydown 訊息層級的鍵盤輸入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</source>
          <target state="translated">WM_KEYDOWN 或 WM_SYSKEYDOWN 訊息必須是。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the component is unable to handle the input translations and has child components that might have translations, it typically calls TranslateAccelerator method on the child component that holds the current focus before returning a result.</source>
          <target state="translated">如果元件無法處理輸入的翻譯，且有可能會有翻譯的子元件，它通常 translateaccelerator 呼叫上呼叫方法的傳回結果之前會保存目前焦點所在的子元件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果無法立即處理訊息，您可以重新分派從 translateaccelerator 呼叫實作如有必要中,，然後傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call &lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt; to a child component, or to call &lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt; on the parent site because the tab sequence has reached the beginning or end bounds.</source>
          <target state="translated">轉譯快速鍵的主要案例是處理 VK_TAB keydown 訊息和決定是否要將焦點在元件，來呼叫設&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;子元件，或呼叫&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;父站台，因為索引標籤順序已達到開頭或結尾界限。&lt;/xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt; &lt;/xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Certain components may choose to not handle the tab key in this fashion.</source>
          <target state="translated">某些元件可能會選擇處理 tab 鍵，以這種方式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The message and associated data.</source>
          <target state="translated">訊息和相關聯的資料。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改此結構。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">它只基於效能的參考方式傳遞。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the message was handled by the method implementation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果訊息已處理的方法實作。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt; is called.</source>
          <target state="translated">處理 WM_CHAR、 WM_SYSCHAR、 WM_DEADCHAR 和 WM_SYSDEADCHAR 之前的輸入的訊息&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt;稱為。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you implement this method to return <ph id="ph1">`true`</ph>, the input architecture will not call &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt; for that key message.</source>
          <target state="translated">如果您實作此方法以傳回<ph id="ph1">`true`</ph>，不會呼叫輸入的架構&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;該索引鍵的訊息。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The message and associated data.</source>
          <target state="translated">訊息和相關聯的資料。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改此結構。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">它只基於效能的參考方式傳遞。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the message was processed and &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt; should not be called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已處理訊息和&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt;不應該被呼叫，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>