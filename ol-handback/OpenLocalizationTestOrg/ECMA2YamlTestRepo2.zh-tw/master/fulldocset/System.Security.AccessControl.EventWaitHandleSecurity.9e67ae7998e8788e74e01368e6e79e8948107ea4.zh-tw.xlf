<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5785955b78cb278987505922f2674d18d4899c36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.EventWaitHandleSecurity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5633cc96881523122f544d67a375956194a01bde</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d426f065f90faeef72f259c4e6acb00ed5522dfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the Windows access control security applied to a named system wait handle.</source>
          <target state="translated">表示套用至具名的系統等候控制代碼的 Windows 存取控制安全性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An EventWaitHandleSecurity object specifies access rights for a named system wait handle, and also specifies the way access attempts are audited.</source>
          <target state="translated">EventWaitHandleSecurity 物件指定具名的系統等候控制代碼的存取權限，也會指定要稽核嘗試存取的方式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Access rights to the wait handle are expressed as rules, with each access rule represented by an &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; object.</source>
          <target state="translated">等候控制代碼的存取權限會由每個存取規則的規則，以表示&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;物件。&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each auditing rule is represented by an &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; object.</source>
          <target state="translated">每個稽核規則由&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;物件。&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">這會反映基礎的 Windows 安全性系統，其中每個安全性實體物件都有最多一個判別存取控制清單 (DACL) 控制存取受保護的物件，並最多一個系統存取控制清單 (SACL)，指定稽核的存取嘗試。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">DACL，SACL 會排序清單的指定存取和稽核使用者和群組的存取控制項目 (ACE)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; or &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; object might represent more than one ACE.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;或&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;物件可能代表一個以上的 ACE。&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.Threading.EventWaitHandle&gt; object can represent a local wait handle or a named system wait handle.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.Threading.EventWaitHandle&gt;物件可代表本機等候控制代碼或具名的系統等候控制代碼。&lt;/xref:System.Threading.EventWaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows access control security is meaningful only for named system wait handles.</source>
          <target state="translated">Windows 存取控制安全性是有意義，只會針對具名的系統等候控制代碼。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The EventWaitHandleSecurity, &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;, and &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">EventWaitHandleSecurity &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;，和&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;類別隱藏 Acl 和 Ace 的實作詳細資料。&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">它們可讓您忽略十七不同的 ACE 類型，並正確地維護繼承和存取權限傳播的複雜性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These objects are also designed to prevent the following common access control errors:      -   Creating a security descriptor with a null DACL.</source>
          <target state="translated">這些物件也為了避免下列常見的存取控制項錯誤:-建立具有 null DACL 的安全性描述元。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">DACL 的 null 參考可讓任何使用者新增到物件，也有可能產生的阻絕服務攻擊的存取規則。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A new EventWaitHandleSecurity object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">此外，新的 EventWaitHandleSecurity 物件一律會以空的 DACL，它會拒絕所有使用者的所有存取開頭。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   Violating the canonical ordering of ACEs.</source>
          <target state="translated">-違反 Ace 的標準順序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">如果 DACL 中的 ACE 清單不會保持在標準順序，使用者可能會不小心指定存取受保護的物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">比方說，拒絕的存取權限必須永遠出現之前允許的存取權限。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>EventWaitHandleSecurity objects maintain the correct order internally.</source>
          <target state="translated">EventWaitHandleSecurity 物件會在內部維護正確的順序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">-管理安全性描述元旗標，它應該只資源管理員的控制下。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   Creating invalid combinations of ACE flags.</source>
          <target state="translated">-建立無效的 ACE 旗標組合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   Manipulating inherited ACEs.</source>
          <target state="translated">-管理繼承的 Ace。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">繼承和傳用是由資源管理員，以回應變更您對存取和稽核規則處理。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-   Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">-無意義的 Ace 只插入 Acl。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:      -   Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">不支援.NET 安全性物件的唯一功能是危險的活動，應該避免的大部分應用程式開發人員，如下所示:-通常由資源管理員執行的低階工作。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-   Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">-新增或移除存取控制項目不會維護標準順序的方式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To modify Windows access control security for a named wait handle, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get the EventWaitHandleSecurity object.</source>
          <target state="translated">若要修改具名的等候控制代碼的 Windows 存取控制安全性，請使用&lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;方法來取得 EventWaitHandleSecurity 物件。&lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Modify the security object by adding and removing rules, and then use the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to reattach it.</source>
          <target state="translated">修改安全性物件，透過加入和移除規則，然後再使用&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;方法來重新附加它。&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Changes you make to an EventWaitHandleSecurity object do not affect the access levels of the named wait handle until you call the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to assign the altered security object to the named wait handle.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 對 EventWaitHandleSecurity 物件進行的變更不會影響具名的等候控制代碼的存取層級直到您呼叫&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;方法，以更改的安全性物件指派到具名的等候控制代碼。&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To copy access control security from one wait handle to another, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get an EventWaitHandleSecurity object representing the access and audit rules for the first wait handle, and then use the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method, or a constructor that accepts an EventWaitHandleSecurity object, to assign those rules to the second wait handle.</source>
          <target state="translated">若要從一個等候控制代碼複製存取控制安全性，到另一個，使用&lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;方法來取得 EventWaitHandleSecurity 物件，表示第一個等候控制代碼的存取和稽核規則，然後使用&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;方法或建構函式可接受 EventWaitHandleSecurity 物件，這些規則將第二個等候處理。&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the &lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt; method to set access rules for a named wait handle, and the &lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt; method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">中的安全性描述元定義語言 (SDDL) 投資的使用者可以使用&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;方法，以設定存取規則命名為的等候控制代碼，而&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;方法，以取得字串，代表 SDDL 格式中的存取規則。&lt;/xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is not recommended for new development.</source>
          <target state="translated">建議您不要開發新項目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with default values.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有預設值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A new &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">新&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;物件一律開頭空白的判別存取清單 (DACL)，它會拒絕所有使用者的所有存取。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">在 Windows 98 或 Windows Millennium Edition 上不支援這個類別。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the enumeration type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rights.</source>
          <target state="translated">取得列舉型別<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別用來表示的存取權限。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">類別衍生自&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;類別覆寫&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;屬性，並傳回它們以表示的存取權限的類型。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">A&lt;xref:System.Type&gt;物件，代表<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">建立新的存取控制規則所指定的使用者，使用指定的存取權限、 存取控制和旗標。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The recommended way to create access control rules is to use the constructors of the &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; class.</source>
          <target state="translated">若要建立存取控制規則的建議的方式是使用&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;類別&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;的建構函式</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 雖然繼承和傳播旗標是無意義的具名事件，就仍然可以指定它們。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">這不是建議，因為它不必要地變得非常複雜的維護的規則，例如藉由干擾原本是相容的規則的組合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>識別使用者或群組規則會套用至。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">位元組合<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>轉換成整數的值，指定要允許或拒絕的存取權限。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，指定是否允許或拒絕權限。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified rights for the specified user.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，代表指定之使用者的指定權限。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>， <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>，或<ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph>指定無效的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>為零。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>既不是類型<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或這類類型的<bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>可以轉換為類型<bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rules.</source>
          <target state="translated">取得型別<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別用來代表存取規則。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rules.</source>
          <target state="translated">類別衍生自&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;類別覆寫&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;屬性，並傳回它們以表示存取規則的類型。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷用於每個安全性物件的正確的存取規則類型。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A&lt;xref:System.Type&gt;物件，代表<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Searches for a matching access control rule with which the new rule can be merged.</source>
          <target state="translated">搜尋符合的存取控制規則，可以與合併新規則。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">如果找不到，加入新的規則。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The AddAccessRule method searches for rules with the same user or group and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAccessRule 方法會搜尋具有相同的使用者或群組及相同的規則&lt;xref:System.Security.AccessControl.AccessControlType&gt;為<ph id="ph1">`rule`</ph>。&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">如果找不到，<ph id="ph1">`rule`</ph>加入。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">如果找到相符的規則是中的權限<ph id="ph1">`rule`</ph>會合併與現有的規則。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The access control rule to add.</source>
          <target state="translated">若要加入之存取控制規則。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">搜尋的稽核規則可以合併新規則。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">如果找不到，加入新的規則。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The AddAuditRule method searches for rules with the same user or group as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAuditRule 方法會搜尋具有相同的使用者或群組做為規則<ph id="ph1">`rule`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">如果找不到，<ph id="ph1">`rule`</ph>加入。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">如果找到相符的規則是中的旗標<ph id="ph1">`rule`</ph>會合併到現有的規則。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The audit rule to add.</source>
          <target state="translated">要加入的稽核規則。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">此規則所指定的使用者會決定搜尋。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">建立新的稽核規則，指定的使用者將規則套用到的存取權限，若要稽核，以及觸發程序稽核規則的結果。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The recommended way to create audit rules is to use the constructors of the &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; class.</source>
          <target state="translated">若要建立的稽核規則的建議的方式是使用&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;類別&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;的建構函式</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 雖然繼承和傳播旗標是無意義的具名事件，就仍然可以指定它們。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">這不是建議，因為它不必要地變得非常複雜的維護的規則，例如藉由干擾原本是相容的規則的組合。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>識別使用者或群組規則會套用至。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">位元組合<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>轉換成整數的值，指定要稽核的存取權限。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">無意義的具名的等候控制代碼，因為它們沒有任何階層。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether to audit successful access, failed access, or both.</source>
          <target state="translated">位元組合<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定是否要稽核成功的存取、 失敗的存取，或兩者的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified audit rule for the specified user.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，代表指定之使用者指定的稽核規則。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The return type of the method is the base class, <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">方法的傳回型別是基底類別， <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，但傳回的值可以安全地轉換成衍生類別。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>， <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>，或<ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph>指定無效的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>為零。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>既不是類型<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或這類類型的<bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>可以轉換為類型<bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent audit rules.</source>
          <target state="translated">取得型別<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別用來代表稽核規則。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent audit rights.</source>
          <target state="translated">類別衍生自&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;類別覆寫&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;屬性和傳回類型，用以代表稽核權限。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷用於每個安全性物件的正確的稽核規則類型。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A&lt;xref:System.Type&gt;物件，代表<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">搜尋具有相同的使用者的存取控制規則及<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （允許或拒絕） 所指定的存取規則，且具有相容的繼承和傳播旗標; 如果找到這類規則，指定的存取規則中所包含的權限會從中移除。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for a rule that has the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;擁有相同的使用者和相同的規則會搜尋&lt;xref:System.Security.AccessControl.AccessControlType&gt;視為<ph id="ph1">`rule`</ph>。&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果找到任何這類規則，會採取任何動作，而且方法會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">如果找到比對規則，其繼承和相容性旗標會檢查在指定的旗標與相容性的<ph id="ph1">`rule`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果找到不相容的規則，會採取任何動作，而且方法會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果找到具有相容的旗標的規則，在指定的權限<ph id="ph1">`rule`</ph>移除了相容的規則，而且方法會傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">如果<ph id="ph1">`rule`</ph>指定不相容的規則中包含的權限，就會採取任何動作，與這些權限。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object.</source>
          <target state="translated">如果從相容的規則會移除所有的權限，整個規則會移除從目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;物件。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for event access rules, by creating them with the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 雖然您可以藉由建立它們與指定之事件的存取規則、 繼承和傳播旗標&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt;方法時，建議您不要。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation have no meaning for named events, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">繼承和傳播具名事件，無意義，請存取規則的維護更為複雜。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>所指定的使用者和<bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>搜尋，和一組比對規則，如果的繼承和傳播旗標找到，就必須相容。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">指定的權限移除相容的規則，如果找到。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找到相容的規則否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Searches for all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">搜尋所有存取控制規則具有相同的使用者和<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （允許或拒絕） 所指定規則，如果找到，則移除它們。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for rules that have the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;具備相同的使用者和相同的規則會搜尋&lt;xref:System.Security.AccessControl.AccessControlType&gt;視為<ph id="ph1">`rule`</ph>。&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定的任何權限<ph id="ph1">`rule`</ph>時執行這項搜尋將會被忽略。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All matching rules are removed.</source>
          <target state="translated">會移除所有比對規則。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">如果找不到任何對應的規則，會不採取任何動作。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>所指定的使用者和<bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>搜尋。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">此規則所指定的任何權限都會被忽略。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">搜尋符合指定的存取控制規則的規則，如果找到，則移除它。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">此規則會移除它完全符合時，才<ph id="ph1">`rule`</ph>中所有詳細資料，包括旗標。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Other rules with the same user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; are not affected.</source>
          <target state="translated">其他規則具有相同的使用者和&lt;xref:System.Security.AccessControl.AccessControlType&gt;不會受到影響。&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 規則表示一或多個基礎存取控制項目 (ACE)，以及分割或修改使用者存取安全性規則時，視需要結合這些項目。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAccessRuleSpecific method cannot remove it.</source>
          <target state="translated">因此，規則可能不再存在於特定的表單時加入，而在此情況下，不能移除該 RemoveAccessRuleSpecific 方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">搜尋的稽核規則具有相同的使用者指定的規則，以及具有相容的繼承和傳播旗標。如果找到相容的規則，就會移除指定之規則中所包含的權限。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for an audit rule that has the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;搜尋具有相同的使用者的稽核規則<ph id="ph1">`rule`</ph>。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果找到任何這類規則，會採取任何動作，而且方法會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">如果找到比對規則，其繼承和相容性旗標會檢查在指定的旗標與相容性的<ph id="ph1">`rule`</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果找到不相容的規則，會採取任何動作，而且方法會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果找到具有相容的旗標的規則，在指定的權限<ph id="ph1">`rule`</ph>移除了相容的規則，而且方法會傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">如果<ph id="ph1">`rule`</ph>指定不相容的規則中包含的權限，就會採取任何動作，與這些權限。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object.</source>
          <target state="translated">如果從相容的規則會移除所有的權限，整個規則會移除從目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;物件。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for event audit rules, by creating them with the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 雖然您可以藉由建立它們與指定之事件的稽核規則、 繼承和傳播旗標&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt;方法時，建議您不要。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation have no meaning for named events, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">繼承和傳播具名事件，無意義，請稽核規則的維護更為複雜。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定要搜尋的使用者和一組比對規則的繼承和傳播旗標時發現，必須與相容。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">指定的權限移除相容的規則，如果找到。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找到相容的規則否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">搜尋的所有稽核規則具有相同的使用者指定的規則，如果找到，會將它們移除。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for audit rules that have the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">目前&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;搜尋中是否有具有相同的使用者的稽核規則<ph id="ph1">`rule`</ph>。&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定的任何權限<ph id="ph1">`rule`</ph>時執行這項搜尋將會被忽略。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>All matching rules are removed.</source>
          <target state="translated">會移除所有比對規則。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">如果找不到任何對應的規則，會不採取任何動作。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指定要搜尋的使用者。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">此規則所指定的任何權限都會被忽略。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">搜尋符合指定的稽核規則的規則，如果找到，則移除它。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">此規則會移除它完全符合時，才<ph id="ph1">`rule`</ph>中所有詳細資料，包括旗標。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">不會影響同一個使用者的其他稽核規則。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 規則表示一或多個基礎存取控制項目 (ACE)，以及分割或修改使用者的安全性稽核規則時，視需要結合這些項目。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAuditRuleSpecific method cannot remove it.</source>
          <target state="translated">因此，規則可能不再存在於特定的表單時加入，而在此情況下，不能移除該 RemoveAuditRuleSpecific 方法。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and then adds the specified rule.</source>
          <target state="translated">移除具有所指定之規則的相同使用者的所有存取控制規則，不論<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，並將指定的規則。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">如果沒有使用者符合指定之規則的存取規則<ph id="ph1">`rule`</ph>加入。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">此規則所指定的使用者可以決定之前加入這個規則所要移除的規則。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">移除所有的存取控制規則具有相同的使用者和<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （允許或拒絕） 所指定的規則，並將指定的規則。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, the effect of this method is to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">如果指定的規則有&lt;xref:System.Security.AccessControl.AccessControlType&gt;，這個方法的效果是要移除所有&lt;xref:System.Security.AccessControl.AccessControlType&gt;規則所指定的使用者，將其取代為指定的規則。&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">如果指定的規則有&lt;xref:System.Security.AccessControl.AccessControlType&gt;，則所有&lt;xref:System.Security.AccessControl.AccessControlType&gt;規則指定的使用者都取代成指定的規則。&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If there are no rules whose user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; match the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">如果沒有規則的使用者和&lt;xref:System.Security.AccessControl.AccessControlType&gt;符合指定之規則<ph id="ph1">`rule`</ph>加入。&lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">使用者和<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的這項規則可以決定之前加入這個規則所要移除的規則。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, and then adds the specified rule.</source>
          <target state="translated">移除所有稽核規則具有相同的使用者所指定的規則，不論<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，並將指定的規則。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">如果沒有使用者符合指定之規則的稽核規則<ph id="ph1">`rule`</ph>加入。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">此規則所指定的使用者可以決定之前加入這個規則所要移除的規則。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>