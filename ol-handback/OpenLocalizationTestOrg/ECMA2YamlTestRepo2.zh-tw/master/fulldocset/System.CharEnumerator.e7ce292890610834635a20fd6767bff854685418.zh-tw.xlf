<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ce0b224927104a1128e11d8115c047dedbac509</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CharEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45e0bbd77c586a0445435c6ae4ad5c4aae6762d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd8ffbc3a7ac62cdc2a76dc47127321c76dbd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports iterating over a &lt;xref:System.String&gt; object and reading its individual characters.</source>
          <target state="translated">支援反覆&lt;xref:System.String&gt;物件及讀取其個別字元。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A CharEnumerator provides read-only access to the characters in a referenced &lt;xref:System.String&gt; object.</source>
          <target state="translated">CharEnumerator 提供唯讀存取的字元參考&lt;xref:System.String&gt;物件。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`foreach`</ph> statement of the Microsoft Visual Basic and C# programming languages, which iterates through the elements of a collection, retrieves a CharEnumerator from a &lt;xref:System.String&gt; object in order to iterate through the characters in that object.</source>
          <target state="translated">例如，<ph id="ph1">`foreach`</ph>陳述式的 Microsoft Visual Basic 和 C# 程式語言，逐一查看集合的項目，這會擷取從 CharEnumerator&lt;xref:System.String&gt;物件以逐一查看該物件中的字元。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There is no public constructor for CharEnumerator.</source>
          <target state="translated">CharEnumerator 沒有公用建構函式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, call a &lt;xref:System.String&gt; object's &lt;xref:System.String.GetEnumerator%2A&gt; method to obtain a CharEnumerator that is initialized to reference the string.</source>
          <target state="translated">請改為呼叫&lt;xref:System.String&gt;物件的&lt;xref:System.String.GetEnumerator%2A&gt;方法，以取得會初始化為參考的字串 CharEnumerator。&lt;/xref:System.String.GetEnumerator%2A&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A CharEnumerator maintains an internal index to the characters in the string the CharEnumerator references.</source>
          <target state="translated">CharEnumerator 會維護 CharEnumerator 參考字串中字元的內部索引。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The state of the index is invalid when it references a character position logically before the first character or after the last character in the string, and valid when it references a character within the string.</source>
          <target state="translated">索引的狀態時，在參考字串中的字元位置以邏輯方式第一個字元之前或之後的最後一個字元時，無效和有效值參考字串內的字元。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The index is initialized to a position logically before the first character, and is set to a position after the last character when the iteration is complete.</source>
          <target state="translated">此索引會初始化為前的第一個字元，邏輯上的位置，並完成反覆項目時的位置設定後的最後一個字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An exception is thrown if you attempt to access a character while the index is invalid.</source>
          <target state="translated">如果您嘗試存取該字元不正確的索引時，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method increments the index by one, so the first and subsequent characters are accessed in turn.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;方法遞增索引&amp;1;，所以第一個與後續字元會依次存取。&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator.Reset%2A&gt; method sets the index to a position logically before the first character.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Reset%2A&gt;方法設定以邏輯方式前的第一個字元的位置索引。&lt;/xref:System.CharEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator.Current%2A&gt; property retrieves the character currently referenced by index.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Current%2A&gt;屬性擷取目前由索引所參考的字元。&lt;/xref:System.CharEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator.Clone%2A&gt; method creates a copy of the CharEnumerator.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Clone%2A&gt;方法會建立一份 CharEnumerator。&lt;/xref:System.CharEnumerator.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Several independent instances of CharEnumerator across one or more threads can have access to a single instance of &lt;xref:System.String&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; CharEnumerator 在一或多個執行緒之間的數個獨立的執行個體可以存取&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;的單一執行個體</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This class is implemented to support the &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">這個類別會實作以支援&lt;xref:System.Collections.IEnumerator&gt;介面。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information regarding the use of an enumerator, see the &lt;xref:System.Collections.IEnumerator&gt; topic.</source>
          <target state="translated">如需有關使用的列舉值，請參閱&lt;xref:System.Collections.IEnumerator&gt;主題。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">建立一份目前<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The return value is a copy of this instance of &lt;xref:System.CharEnumerator&gt; and its current state.</source>
          <target state="translated">傳回值是這個執行個體的副本&lt;xref:System.CharEnumerator&gt;和其目前狀態。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is useful for saving your state while iterating through a &lt;xref:System.String&gt; object.</source>
          <target state="translated">這可用於逐一查看時儲存您的狀態&lt;xref:System.String&gt;物件。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, suppose your application uses an original instance of &lt;xref:System.CharEnumerator&gt; to iterate through each character in a &lt;xref:System.String&gt;.</source>
          <target state="translated">例如，假設您的應用程式使用&lt;xref:System.CharEnumerator&gt;來逐一查看&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;中每個字元&lt;/xref:System.CharEnumerator&gt;的原始執行個體</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When some unique character is encountered, your application pauses processing and invokes the Clone method.</source>
          <target state="translated">遇到某些唯一的字元時，您的應用程式會暫停處理，並叫用複製方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In effect, this saves the &lt;xref:System.CharEnumerator&gt; object's index in the &lt;xref:System.String&gt;.</source>
          <target state="translated">作用中，這會儲存&lt;xref:System.CharEnumerator&gt;在&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;物件的索引&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Your application uses the clone to navigate to another part of the <ph id="ph1">`String`</ph> to perform some auxiliary processing.</source>
          <target state="translated">應用程式用來瀏覽至另一個部分的複製<ph id="ph1">`String`</ph>執行一些輔助的處理。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The side-effect of this navigation is the clone loses track of the position where processing stopped.</source>
          <target state="translated">這個巡覽的副作用是位置的複製遺失停止處理。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, when the auxiliary processing is complete, your application discards the clone and uses the original &lt;xref:System.CharEnumerator&gt; instance to resume working on the &lt;xref:System.String&gt; where the original processing stopped.</source>
          <target state="translated">不過，輔助的處理序完成時，您的應用程式會捨棄複製並使用原始&lt;xref:System.CharEnumerator&gt;繼續使用在執行個體&lt;xref:System.String&gt;原始處理停止。&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is implemented to support the &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 會實作這個方法，以支援&lt;xref:System.ICloneable&gt;介面。&lt;/xref:System.ICloneable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;也就是目前的複本<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得這個列舉的字串中目前參考的字元<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Current property returns the character that is currently referenced by the index.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;類別會維護列舉字串的內部索引和目前的屬性會傳回目前正由索引所參考的字元。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This property should be invoked only when the index is valid; otherwise, an exception is thrown.</source>
          <target state="translated">索引無效; 時，才應叫用這個屬性否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The index is always invalid for an empty string ("").</source>
          <target state="translated">索引一定是無效的空字串 ("")。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The index is also invalid after the &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; method is called.</source>
          <target state="translated">索引也不正確之後&lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;或&lt;xref:System.CharEnumerator.Reset%2A&gt;方法呼叫。&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After either of these methods is called, invoke the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method to adjust the index to the first character in the enumerated string.</source>
          <target state="translated">其中一種方法呼叫之後，叫用&lt;xref:System.CharEnumerator.MoveNext%2A&gt;方法，以調整列舉字串的第一個字元的索引。&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The index is valid whenever the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">索引是有效每當&lt;xref:System.CharEnumerator.MoveNext%2A&gt;方法會傳回<ph id="ph1">`true`</ph>。&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Current does not move the index, and consecutive calls to Current return the same character until &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, or &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; is called.</source>
          <target state="translated">目前不會移動索引，並對目前連續呼叫傳回相同的字元，直到&lt;xref:System.CharEnumerator.MoveNext%2A&gt;， &lt;xref:System.CharEnumerator.Reset%2A&gt;，或&lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;稱為。&lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; &lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目前所參考的 Unicode 字元<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The index is invalid; that is, it is before the first or after the last character of the enumerated string.</source>
          <target state="translated">索引不正確;也就是說，它是第一個之前或之後列舉字串的最後一個字元。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">目前的執行個體所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">當您完成使用&lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;呼叫 Dispose</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.CharEnumerator&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法會使&lt;xref:System.CharEnumerator&gt;中無法使用的狀態。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.CharEnumerator&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.CharEnumerator&gt; was occupying.</source>
          <target state="translated">在呼叫 Dispose 之後，您必須釋放所有參考&lt;xref:System.CharEnumerator&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.CharEnumerator&gt;所佔用。&lt;/xref:System.CharEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 永遠呼叫 Dispose 之後，再放開您的最後一個參考至&lt;xref:System.CharEnumerator&gt;。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.CharEnumerator&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫&lt;xref:System.CharEnumerator&gt;物件的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Increments the internal index of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the next character of the enumerated string.</source>
          <target state="translated">遞增目前的內部索引<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉字串的下一個字元的物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the MoveNext method increments the index by one.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;類別會維護列舉字串的內部索引和 MoveNext 方法索引遞增一。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Call MoveNext after calling &lt;xref:System.String.GetEnumerator%2A&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; to increment the current character position to the first character in the enumerated string.</source>
          <target state="translated">在呼叫之後呼叫 MoveNext&lt;xref:System.String.GetEnumerator%2A&gt;或&lt;xref:System.CharEnumerator.Reset%2A&gt;遞增列舉字串中的第一個字元目前字元位置。&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Check that the return value is <ph id="ph1">`true`</ph> to determine that the current character position is valid.</source>
          <target state="translated">傳回值的核取<ph id="ph1">`true`</ph>來判斷目前的字元位置無效。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the index is already beyond the last character of the enumerated string, the index is not changed and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">如果索引超出列舉字串的最後一個字元，不會變更索引和<ph id="ph1">`false`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Notice that if the enumerated string is empty (""), the state of the &lt;xref:System.CharEnumerator&gt; is always invalid.</source>
          <target state="translated">請注意，如果是空的列舉的字串 ("")，則狀態的&lt;xref:System.CharEnumerator&gt;永遠無效。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is because the internal index for the &lt;xref:System.CharEnumerator&gt; is initially before the first character of the enumerated string and is therefore invalid.</source>
          <target state="translated">這是因為內部索引&lt;xref:System.CharEnumerator&gt;一開始是先列舉字串的第一個字元，因此無效。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>MoveNext logically sets the index after the last (nonexistent) character of the enumerated string which is also invalid.</source>
          <target state="translated">MoveNext 以邏輯方式設定的索引，這也是無效的列舉字串 （不存在） 的最後一個字元之後。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the index is successfully incremented and within the enumerated string; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果成功遞增索引和列舉的字串; 內否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes the index to a position logically before the first character of the enumerated string.</source>
          <target state="translated">初始化以邏輯方式前列舉字串的第一個字元的位置的索引。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Reset method sets the index to the invalid state.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;類別會維護列舉字串的內部索引和 Reset 方法設定為無效狀態的索引。&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得這個列舉的字串中目前參考的字元<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.CharEnumerator&gt; instance is cast to an &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.CharEnumerator&gt;執行個體轉換成&lt;xref:System.Collections.IEnumerator&gt;介面。&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The boxed Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目前所參考的 boxed 的 Unicode 字元<bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enumeration has not started.</source>
          <target state="translated">列舉尚未啟動。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       Enumeration has ended.</source>
          <target state="translated">-或者-列舉已經結束。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>