<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">616a95c344c5fb3f81f8075fb2c844c56c89cc1a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ResolveEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da4a014e22a4cf29791a17a3d9f1be1a6edee443</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c94bff067a083136bc5ae4a1ccaa568f2f8379d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for loader resolution events, such as the <bpt id="p1">&lt;xref href="System.AppDomain.TypeResolve"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.AppDomain.ResourceResolve"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.AppDomain.ReflectionOnlyAssemblyResolve"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.AppDomain.AssemblyResolve"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> events.</source>
          <target state="translated">提供的資料載入器解析事件，例如<bpt id="p1">&lt;xref href="System.AppDomain.TypeResolve"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref href="System.AppDomain.ResourceResolve"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>， <bpt id="p3">&lt;xref href="System.AppDomain.ReflectionOnlyAssemblyResolve"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和<bpt id="p4">&lt;xref href="System.AppDomain.AssemblyResolve"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the ResolveEventArgs contains information about the item to be resolved.</source>
          <target state="translated">當載入器無法解析組件參考和處理常式已提供適當的載入器的解析度事件，就會引發事件和 ResolveEventArgs 包含要解析之項目的相關資訊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.ResolveEventArgs.Name%2A&gt; property contains the name of the item to be resolved.</source>
          <target state="translated">-&lt;xref:System.ResolveEventArgs.Name%2A&gt;屬性包含要解析之項目的名稱。&lt;/xref:System.ResolveEventArgs.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, the &lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt; property contains the assembly that requested an assembly that can provide the named item.</source>
          <target state="translated">-開頭<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>、&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;屬性包含要求的組件，可以提供的具名項目之組件。&lt;/xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt; property.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;屬性。&lt;/xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ResolveEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying the name of the item to resolve.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ResolveEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，指定要解析之項目的名稱。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This constructor is typically called only by the common language runtime.</source>
          <target state="translated">只能由通用語言執行平台，通常會呼叫這個建構函式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The name of an item to resolve.</source>
          <target state="translated">若要解決項目的名稱。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ResolveEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.ResolveEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，指定要解析的項目和其相依性正在解析組件的名稱。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of an item to resolve.</source>
          <target state="translated">若要解決項目的名稱。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The assembly whose dependency is being resolved.</source>
          <target state="translated">正在解析的相依性的組件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the name of the item to resolve.</source>
          <target state="translated">取得要解析之項目的名稱。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For the &lt;xref:System.AppDomain.AssemblyResolve&gt; event, Name is the assembly name before policy is applied.</source>
          <target state="translated">如&lt;xref:System.AppDomain.AssemblyResolve&gt;事件，名稱是組件名稱之前套用原則。&lt;/xref:System.AppDomain.AssemblyResolve&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name of the item to resolve.</source>
          <target state="translated">若要解決的項目名稱。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the assembly whose dependency is being resolved.</source>
          <target state="translated">取得正在解析的相依性的組件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the &lt;xref:System.ResolveEventArgs.Name%2A&gt; property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</source>
          <target state="translated">這個屬性所傳回的組件是無法解析指定的項目之組件&lt;xref:System.ResolveEventArgs.Name%2A&gt;屬性，因為項目不存在於這個組件，或任何相依項目中任何一個載入的相依性，載入器找透過探查找。&lt;/xref:System.ResolveEventArgs.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, suppose the current assembly uses the &lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt; method to load assembly A from a directory outside the probing path, in order to use class CA.</source>
          <target state="translated">例如，假設目前的組件使用&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;方法，從外部探查路徑中，目錄中載入組件 A，若要使用類別 CA。&lt;/xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</source>
          <target state="translated">假設進一步 CA 該類別會使用類別 CB，組件中 B 和組件 A 的組件 B 的編譯時期參考也位於探查路徑外。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the &lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt; method, the loader cannot resolve the dependency.</source>
          <target state="translated">當具現化 CA 嘗試目前的組件時，載入器會嘗試解析組件 b 的參考不過，因為組件已載入使用&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;方法，載入器無法解析相依性。&lt;/xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If there is a handler for the &lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt; event, the event is raised, and the RequestingAssembly property of the resulting &lt;xref:System.ResolveEventArgs&gt; object contains assembly A, because assembly A is the assembly that is missing a dependency.</source>
          <target state="translated">如果沒有處理常式&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;引發事件，事件時，以及所產生的 RequestingAssembly 內容&lt;xref:System.ResolveEventArgs&gt;物件包含組件 A，因為組件的組件，缺少相依性。&lt;/xref:System.ResolveEventArgs&gt; &lt;/xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The semantics of the RequestingAssembly property vary, depending on how the requesting assembly was loaded:      -   Load context: The value of the property might be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">語意 RequestingAssembly 屬性而異的載入要求的組件的方式:-載入內容︰ 屬性的值可能是<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</source>
          <target state="translated">載入內容，而且載入順序無關的要求識別組件不一定有意義。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A non-null example occurs when the &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; method is called and the specified type is not known to the requesting assembly or any of its dependencies.</source>
          <target state="translated">非 null 範例，就會發生時&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;方法呼叫，而且指定的型別並不知道提出要求的組件或任何其相依性。&lt;/xref:System.Type.GetType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-   Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</source>
          <target state="translated">-載入內容中︰ 屬性可用來當做探查的提示，但事件處理常式應該不會取得指定的組件名稱的多個要求。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-   No context (that is, the requesting assembly was loaded by using the &lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt; method, or as a byte stream, or in mixed mode): The handler can use the RequestingAssembly property to load different implementations of the same assembly based on the identity of the requesting assembly.</source>
          <target state="translated">-無內容 (也就是提出要求的組件已載入使用&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;方法，以位元組資料流，或在混合模式中): 處理常式可以使用 RequestingAssembly 屬性載入相同組件要求的組件的識別為基礎的不同實作。&lt;/xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The assembly that requested the item specified by the &lt;xref:System.ResolveEventArgs.Name*&gt; property.</source>
          <target state="translated">要求的項目所指定的組件&lt;xref:System.ResolveEventArgs.Name*&gt;屬性。&lt;/xref:System.ResolveEventArgs.Name*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>