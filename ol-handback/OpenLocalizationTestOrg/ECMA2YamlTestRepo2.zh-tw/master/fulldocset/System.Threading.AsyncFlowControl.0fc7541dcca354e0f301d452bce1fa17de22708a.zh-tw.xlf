<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eacd6e1927ba58ae63e58184eecf3a9e3b645576</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.AsyncFlowControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805d8ac8f07d93e7bca772c4f35fe84b35f7fb3f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a767117aa760f5bb5c396527eddaf2ecd515873b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the functionality to restore the migration, or flow, of the execution context between threads.</source>
          <target state="translated">提供功能，以還原移轉或執行內容在執行緒之間的流程。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An execution context contains all execution-related information for a logical thread.</source>
          <target state="translated">執行內容會包含邏輯執行緒中執行相關的所有資訊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The flow of the execution context to other threads can be prevented by using the &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt; method, which returns an AsyncFlowControl structure.</source>
          <target state="translated">使用可防止其他執行緒的執行內容的流程&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;方法，這個方法會傳回 AsyncFlowControl 結構。&lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt; method of the returned AsyncFlowControl structure can be used to undo the flow suppression.</source>
          <target state="translated">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;傳回 AsyncFlowControl 結構的方法可以用來復原流程隱藏項目。&lt;/xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The AsyncFlowControl structure must be used on the same thread on which it was created.</source>
          <target state="translated">AsyncFlowControl 結構必須使用其建立所在的相同執行緒上。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">目前的執行個體所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Threading.AsyncFlowControl&gt;.</source>
          <target state="translated">呼叫<ph id="ph1">`Dispose`</ph>當您完成使用&lt;xref:System.Threading.AsyncFlowControl&gt;.&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Threading.AsyncFlowControl&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法會使&lt;xref:System.Threading.AsyncFlowControl&gt;中無法使用的狀態。&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Threading.AsyncFlowControl&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Threading.AsyncFlowControl&gt; was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">`Dispose`</ph>，您必須釋放所有參考&lt;xref:System.Threading.AsyncFlowControl&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.Threading.AsyncFlowControl&gt;所佔用。&lt;/xref:System.Threading.AsyncFlowControl&gt; &lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Threading.AsyncFlowControl&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 永遠呼叫<ph id="ph2">`Dispose`</ph>釋放您的最後一個參考至&lt;xref:System.Threading.AsyncFlowControl&gt;。&lt;/xref:System.Threading.AsyncFlowControl&gt;之前</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Threading.AsyncFlowControl&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫&lt;xref:System.Threading.AsyncFlowControl&gt;物件的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is not used on the thread where it was created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構不是在執行緒上建立位置。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure has already been used to call Dispose or &lt;xref:System.Threading.AsyncFlowControl.Undo*&gt;.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構已經使用呼叫 Dispose 或&lt;xref:System.Threading.AsyncFlowControl.Undo*&gt;.&lt;/xref:System.Threading.AsyncFlowControl.Undo*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">判斷指定的物件是否等於目前<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object to compare with the current structure.</source>
          <target state="translated">要與目前結構相比較的物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is an <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> structure and is equal to the current <bpt id="p4">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> structure; otherwise, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>結構，並等於目前<bpt id="p4">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>結構; 否則<bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is equal to the current <bpt id="p2">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">決定是否指定<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構是否等於目前<bpt id="p2">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure to compare with the current structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構要與目前的結構比較。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is equal to the current <bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> structure; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept>是否等於目前<bpt id="p3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>結構; 否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">取得目前的雜湊碼<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">目前的雜湊碼<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine whether they are equal.</source>
          <target state="translated">比較兩個<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構，以判斷它們是否相等。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two structures are equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果兩個結構相等。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine whether they are not equal.</source>
          <target state="translated">比較兩個<bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>結構，以判斷它們是否不相等。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the structures are not equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果兩個結構不相等。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Restores the flow of the execution context between threads.</source>
          <target state="translated">還原執行內容在執行緒之間的流量。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Threading.AsyncFlowControl&gt; structure that is used to restore the flow.</source>
          <target state="translated">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;方法會傳回&lt;xref:System.Threading.AsyncFlowControl&gt;用來還原流程的結構。&lt;/xref:System.Threading.AsyncFlowControl&gt; &lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Undo method must be called only on the &lt;xref:System.Threading.AsyncFlowControl&gt; structure returned by its associated &lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt; method.</source>
          <target state="translated">Undo 方法必須只能在上呼叫&lt;xref:System.Threading.AsyncFlowControl&gt;傳回與其相關聯的結構&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;方法。&lt;/xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt; &lt;/xref:System.Threading.AsyncFlowControl&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is not used on the thread where it was created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構不是在執行緒上建立位置。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure has already been used to call &lt;xref:System.Threading.AsyncFlowControl.Dispose*&gt; or Undo.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構已用來呼叫&lt;xref:System.Threading.AsyncFlowControl.Dispose*&gt;或復原。&lt;/xref:System.Threading.AsyncFlowControl.Dispose*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>