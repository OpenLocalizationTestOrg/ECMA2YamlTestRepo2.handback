<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18201ed58ad08fcc2b0f46dee45fc5ecea5d595e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d3ecefb7490c16ac1161e7f08a33987b1c51cdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">810057a2eff7bdeb5998ccfe80ee3721d6788d41</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a connection to a database that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update the database.</source>
          <target state="translated">代表一組資料命令和用來填滿資料庫的連接<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並更新資料庫。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">此類型已被取代，並將在未來的.NET Framework 版本中移除。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Oracle 和 ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter serves as a bridge between a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> and database for retrieving and saving data.</source>
          <target state="translated">OracleDataAdapter 當做之間的橋樑<bpt id="p1">**</bpt>資料集<ept id="p1">**</ept>及擷取及儲存資料的資料庫。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter provides this bridge by using &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to load data from the database into the &lt;xref:System.Data.DataSet&gt;, and using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; to send changes made in the &lt;xref:System.Data.DataSet&gt; back to the data source.</source>
          <target state="translated">OracleDataAdapter 提供使用這個橋接器&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;從資料庫載入資料&lt;xref:System.Data.DataSet&gt;，並使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;傳送中所做的變更&lt;xref:System.Data.DataSet&gt;回資料來源。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the OracleDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it creates the necessary tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">當填滿 OracleDataAdapter &lt;xref:System.Data.DataSet&gt;，它會建立必要資料表和資料行傳回的資料如果它們尚不存在。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">不過，主索引鍵資訊不包含隱含建立的結構描述中除非&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性設定為&lt;xref:System.Data.MissingSchemaAction&gt;.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You may also have the OracleDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">您也可以建立結構描述&lt;xref:System.Data.DataSet&gt;，包括主索引鍵資訊，填滿它與資料使用&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;之前&lt;/xref:System.Data.DataSet&gt;OracleDataAdapter</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>將現有條件約束加入至資料集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  By default, numeric fields imported to a &lt;xref:System.Data.DataTable&gt; with &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; are mapped to &lt;xref:System.Data.OracleClient.OracleNumber&gt; objects.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 根據預設，數值欄位，匯入至&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;對應至&lt;xref:System.Data.OracleClient.OracleNumber&gt;物件。&lt;/xref:System.Data.OracleClient.OracleNumber&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It is possible to overflow the &lt;xref:System.Data.OracleClient.OracleNumber&gt;, and throw an Oracle exception, by importing a non-integral numeric value that is either too large or too high precision for the &lt;xref:System.Data.OracleClient.OracleNumber&gt;'s precision limitations.</source>
          <target state="translated">很可能溢位&lt;xref:System.Data.OracleClient.OracleNumber&gt;，並傳回 Oracle 例外狀況，藉由匯入非整數的數字值太大或太高的有效位數的&lt;xref:System.Data.OracleClient.OracleNumber&gt;的精確度限制。&lt;/xref:System.Data.OracleClient.OracleNumber&gt; &lt;/xref:System.Data.OracleClient.OracleNumber&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Refer to the description of &lt;xref:System.Data.OracleClient.OracleNumber&gt; for more information.</source>
          <target state="translated">描述，請參閱&lt;xref:System.Data.OracleClient.OracleNumber&gt;如需詳細資訊。&lt;/xref:System.Data.OracleClient.OracleNumber&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter also includes the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt;, and <ph id="ph1">`TableMappings`</ph> properties to facilitate loading and updating of data.</source>
          <target state="translated">也包含 OracleDataAdapter &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt;，和<ph id="ph1">`TableMappings`</ph>屬性，以加速載入和更新的資料。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle does not support batched SQL statements.</source>
          <target state="translated">.NET Framework Data Provider for Oracle 不支援批次的 SQL 陳述式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, it does allow you to use multiple <ph id="ph1">`REF CURSOR`</ph> output parameters to fill a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, each in its own &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">不過，它確實可讓您使用多個<ph id="ph1">`REF CURSOR`</ph>輸出參數來填滿<bpt id="p1">**</bpt>資料集<ept id="p1">**</ept>，每個在其擁有&lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You must define the parameters, mark them as output parameters, and indicate that they are <ph id="ph1">`REF CURSOR`</ph> data types.</source>
          <target state="translated">您必須定義參數、 將它們標示為輸出參數，並表示它們是<ph id="ph1">`REF CURSOR`</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method when the OracleDataAdapter is filled using <ph id="ph1">`REF CURSOR`</ph> parameters returned by a stored procedure, because Oracle does not provide the information necessary to determine what the table name and column names are when the SQL statement is executed.</source>
          <target state="translated">請注意，您不能使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;方法時使用填滿 OracleDataAdapter<ph id="ph1">`REF CURSOR`</ph>參數傳回預存程序，因為 Oracle 不提供判斷資料表名稱和資料行名稱而執行的 SQL 陳述式時所需的資訊。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following C# example assumes that you have created this stored procedure.</source>
          <target state="translated">下列 C# 範例會假設您已建立此預存程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create the following Oracle package on the Oracle server.</source>
          <target state="translated">在 Oracle 伺服器上建立下列 Oracle 封裝。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>       Create the following Oracle package body on the Oracle server.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>在 Oracle 伺服器上建立下列 Oracle package 內容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>       The following C# example demonstrates how you might obtain table and column information using the stored procedure.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>下列 C# 範例會示範如何取得使用預存程序的資料表和資料行資訊。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add("Table", "Emp");   da.TableMappings.Add("Table1", "Dept");   da.Fill(ds);      ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],          ds.Tables["Emp"].Columns["Deptno"], false);   ```</ph>       The following Visual Basic example demonstrates how to use an OracleDataAdapter to fill a &lt;xref:System.Data.DataSet&gt; using an Oracle <ph id="ph2">`REF CURSOR`</ph>.</source>
          <target state="translated"><ph id="ph1">```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add("Table", "Emp");   da.TableMappings.Add("Table1", "Dept");   da.Fill(ds);      ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],          ds.Tables["Emp"].Columns["Deptno"], false);   ```</ph>下列 Visual Basic 範例會示範如何使用 OracleDataAdapter 來填滿&lt;xref:System.Data.DataSet&gt;使用 Oracle <ph id="ph2">`REF CURSOR`</ph>。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</source>
          <target state="translated">這些範例使用定義在 Oracle Scott/Tiger 結構描述中，而且需要下列 PL/SQL 封裝及封裝主體的資料表。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You must create these on your server to use the examples.</source>
          <target state="translated">您必須建立這些伺服器使用的範例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create the following Oracle package on the Oracle server.</source>
          <target state="translated">在 Oracle 伺服器上建立下列 Oracle 封裝。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>       Create the following Oracle package body on the Oracle server.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>在 Oracle 伺服器上建立下列 Oracle package 內容。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>       This Visual Basic example executes a PL/SQL stored procedure that returns two <ph id="ph2">`REF CURSOR`</ph> parameters, and fills a &lt;xref:System.Data.DataSet&gt; with the rows that are returned.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>此 Visual Basic 範例執行可傳回兩個 PL/SQL 預存程序<ph id="ph2">`REF CURSOR`</ph>參數，並填滿&lt;xref:System.Data.DataSet&gt;使用傳回的資料列。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#      ' GetConnectionString() returns a connection string for   ' the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add("Table", "Emp")       da.TableMappings.Add("Table1", "Dept")       da.Fill(ds)          ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _         ds.Tables("Emp").Columns("Deptno"), False)   ```</ph>       After using the OracleDataAdapter to perform a <ph id="ph2">`Fill`</ph> or <ph id="ph3">`FillSchema`</ph> operation, the <ph id="ph4">`DataColumn.ReadOnly`</ph> property always returns false, regardless of whether a column can be updated or not, because the Oracle server does not return this information.</source>
          <target state="translated"><ph id="ph1">```vb#      ' GetConnectionString() returns a connection string for   ' the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add("Table", "Emp")       da.TableMappings.Add("Table1", "Dept")       da.Fill(ds)          ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _         ds.Tables("Emp").Columns("Deptno"), False)   ```</ph>若要執行使用 OracleDataAdapter 之後<ph id="ph2">`Fill`</ph>或<ph id="ph3">`FillSchema`</ph>作業，<ph id="ph4">`DataColumn.ReadOnly`</ph>屬性一律會傳回 false，不論是否資料行可以更新，因為在 Oracle 伺服器不會傳回這項資訊。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;, the following read/write properties are set to their default values, as shown in the table.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;，下列的讀取/寫入屬性設定為其預設值，如下表所示。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>|Properties|Default value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |預設值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更任何這些屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified SQL SELECT statement.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與指定的 SQL SELECT 陳述式的類別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; constructor sets the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">這項實作&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;建構函式&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;屬性中指定的值為<ph id="ph1">`selectCommand`</ph>參數。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;, the following read/write properties are set to their default values, as shown in the table.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;，下列的讀取/寫入屬性設定為其預設值，如下表所示。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更任何這些屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is an SQL SELECT statement or stored procedure, and is set as the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，是 SQL SELECT 陳述式或預存程序，並已設定為&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;屬性<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以 SQL SELECT 陳述式的類別和<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; can be useful in an application that must call the <ph id="ph1">`Fill`</ph> method for two or more &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; objects.</source>
          <target state="translated">這項實作&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;很有用的應用程式，必須呼叫<ph id="ph1">`Fill`</ph>方法的兩個或多個&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;物件。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字串的 SQL SELECT 陳述式或預存程序，以供&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;屬性<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，代表的連接。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and a connection string.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用的 SQL SELECT 陳述式和連接字串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字串的 SQL SELECT 陳述式或預存程序，以供&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;屬性<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">連接字串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to delete records in the database.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序可用來刪除資料庫中的記錄。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When the DeleteCommand property is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">當指派 DeleteCommand 屬性至先前建立&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不會被複製。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, the DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">相反地，DeleteCommand 會維持為先前建立的&lt;xref:System.Data.OracleClient.OracleCommand&gt;。&lt;/xref:System.Data.OracleClient.OracleCommand&gt;參考</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>During an update operation, if DeleteCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate the DeleteCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">如果未設定 DeleteCommand，並且出現在主索引鍵資訊的更新作業期間&lt;xref:System.Data.DataSet&gt;，您可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;類別以自動產生 DeleteCommand，並協調所需的其他命令&lt;xref:System.Data.DataSet&gt;到資料庫。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要這樣做，請設定  &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;屬性&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">產生邏輯也需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to delete records in the database that correspond to deleted rows in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新作業期間用來刪除資料庫中對應到已刪除的資料列中的記錄<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the database.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來將新記錄插入至資料庫。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When the InsertCommand property is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">當指派的 InsertCommand 屬性至先前建立&lt;xref:System.Data.OracleClient.OracleCommand&gt;物件&lt;xref:System.Data.OracleClient.OracleCommand&gt;不會被複製。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Instead, InsertCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">相反地，InsertCommand 維護先前建立的&lt;xref:System.Data.OracleClient.OracleCommand&gt;.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;參考</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>During an update operation, if InsertCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate InsertCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">如果未設定 InsertCommand，並且出現在主索引鍵資訊的更新作業期間&lt;xref:System.Data.DataSet&gt;，您可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;類別以自動產生 InsertCommand，並協調所需的其他命令&lt;xref:System.Data.DataSet&gt;到資料庫。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要這樣做，請設定  &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;屬性&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">產生邏輯也需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be added to the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果執行此命令會傳回資料列，這些資料列可能會加入至&lt;xref:System.Data.DataSet&gt;視您如何設定&lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt;屬性&lt;xref:System.Data.OracleClient.OracleCommand&gt;物件。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you update a column with the <ph id="ph1">`LONG RAW`</ph> data type, an exception is thrown when you enter a value of <ph id="ph2">`NULL`</ph> in the column.</source>
          <target state="translated">當您更新的資料行<ph id="ph1">`LONG RAW`</ph>資料型別，擲回例外狀況時輸入值為<ph id="ph2">`NULL`</ph>資料行中。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Oracle <ph id="ph1">`LONG RAW`</ph> data type is a deprecated type in Oracle version 8.0.</source>
          <target state="translated">Oracle<ph id="ph1">`LONG RAW`</ph>資料類型是 Oracle 8.0 版中已被取代的型別。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To avoid this error, use the <ph id="ph1">`BLOB`</ph> data type instead of <ph id="ph2">`LONG RAW`</ph>.</source>
          <target state="translated">若要避免這個錯誤，請使用<ph id="ph1">`BLOB`</ph>資料類型，而不是<ph id="ph2">`LONG RAW`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to insert records in the database that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新作業期間用來將記錄插入對應至新的資料列中的資料庫中<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Occurs during an update operation after a command is executed against the database.</source>
          <target state="translated">針對資料庫執行命令後，更新作業期間發生。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">`Update`</ph> method, there are two events that occur per data row updated.</source>
          <target state="translated">當使用<ph id="ph1">`Update`</ph>方法中，有兩個每個更新的資料列就會發生的事件。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">執行的順序如下︰ 1。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移到參數值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdating`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdating`</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`UpdateRowSource`</ph> enumeration is set to <ph id="ph2">`FirstReturnedRecord`</ph>, the first returned result is placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果<ph id="ph1">`UpdateRowSource`</ph>列舉設為<ph id="ph2">`FirstReturnedRecord`</ph>，第一個傳回的結果放在<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdated`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdated`</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AcceptChanges`</ph> is called.</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph>會呼叫。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">發生在&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;針對資料來源執行命令之前。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">`Update`</ph> method, there are two events that occur per data row updated.</source>
          <target state="translated">當使用<ph id="ph1">`Update`</ph>方法中，有兩個每個更新的資料列就會發生的事件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">執行的順序如下︰ 1。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移到參數值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdating`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdating`</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`UpdateRowSource`</ph> enumeration is set to <ph id="ph2">`FirstReturnedRecord`</ph>, the first returned result is placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果<ph id="ph1">`UpdateRowSource`</ph>列舉設為<ph id="ph2">`FirstReturnedRecord`</ph>，第一個傳回的結果放在<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdated`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdated`</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AcceptChanges`</ph> is called.</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph>會呼叫。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the database.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來選取資料庫中的記錄。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">當 SelectCommand 指派到先前建立&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不會被複製。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Instead, the SelectCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">相反地，SelectCommand 會維護先前建立的參考&lt;xref:System.Data.OracleClient.OracleCommand&gt;物件。&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If SelectCommand does not return any rows, no tables are added to the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, and no exception is raised.</source>
          <target state="translated">SelectCommand 不會傳回任何資料列，如果沒有資料表會加入至<bpt id="p1">**</bpt>資料集<ept id="p1">**</ept>，並會引發任何例外狀況。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during a fill operation to select records from database for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>填滿作業期間用來從資料庫中的位置，選取記錄<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字串。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字串。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字串。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字串。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;執行個體轉換成&lt;xref:System.ICloneable&gt;介面。&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">新的物件，為這個執行個體的複本。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">取得或設定值，這個值會啟用或停用批次處理支援，並指定可以在批次中執行的命令數目。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Use the UpdateBatchSize property to update a data source with changes from a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用 UpdateBatchSize 屬性以變更從&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;更新資料來源</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">這可藉由減少伺服器的來回次數增加應用程式的效能。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">執行極大的批次可能會降低效能。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Therefore, you should test for the optimum batch size setting before you implement your application.</source>
          <target state="translated">因此，您應該先測試理想的批次大小設定，再實作應用程式。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown if the value is set to a number less than zero.</source>
          <target state="translated">&lt;xref:System.ArgumentOutOfRangeException&gt;如果值設定為一個數字，會擲回小於零。&lt;/xref:System.ArgumentOutOfRangeException&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The number of rows to process per batch.</source>
          <target state="translated">處理每個批次的資料列數目。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Value:</source>
          <target state="translated">值：</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Effect:</source>
          <target state="translated">影響︰</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There is no limit on the batch size.</source>
          <target state="translated">批次大小沒有任何限制。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Disables batch updating.</source>
          <target state="translated">停用批次更新。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Changes are sent using batches of UpdateBatchSize operations at a time.</source>
          <target state="translated">變更會傳送一次使用 UpdateBatchSize 作業的批次。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When setting this to a value other than 1 all the commands associated with the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have to have their &lt;xref:System.Data.IDbCommand.UpdatedRowSource*&gt; property set to <bpt id="p2">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">當設定為 1 以外的值相關聯的所有命令<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>必須擁有其&lt;xref:System.Data.IDbCommand.UpdatedRowSource*&gt;屬性設定為<bpt id="p2">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.IDbCommand.UpdatedRowSource*&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An exception is thrown otherwise.</source>
          <target state="translated">否則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the database.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來更新資料庫中的記錄。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">當指派 UpdateCommand 到先前建立&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不會被複製。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Instead, the UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">相反地，UpdateCommand 會維護先前建立的參考&lt;xref:System.Data.OracleClient.OracleCommand&gt;物件。&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>During an update operation, if &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; is not set and primary key information is present in the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">更新作業期間，如果&lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;未設定，且主索引鍵資訊是存在於<bpt id="p1">**</bpt>資料集<ept id="p1">**</ept>，您可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;類別來自動產生&lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;，與協調所需的其他命令&lt;xref:System.Data.DataSet&gt;到資料庫。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要這樣做，請設定  &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;屬性&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">產生邏輯也需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果執行此命令會傳回資料列，這些資料列可能會合併與&lt;xref:System.Data.DataSet&gt;視您如何設定&lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt;屬性&lt;xref:System.Data.OracleClient.OracleCommand&gt;物件。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>When you update a column with the <ph id="ph1">`LONG RAW`</ph> data type, an exception is thrown when you enter a value of <ph id="ph2">`NULL`</ph> in the column.</source>
          <target state="translated">當您更新的資料行<ph id="ph1">`LONG RAW`</ph>資料型別，擲回例外狀況時輸入值為<ph id="ph2">`NULL`</ph>資料行中。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The Oracle <ph id="ph1">`LONG RAW`</ph> data type is a deprecated type in Oracle version 8.0.</source>
          <target state="translated">Oracle<ph id="ph1">`LONG RAW`</ph>資料類型是 Oracle 8.0 版中已被取代的型別。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To avoid this error, use the <ph id="ph1">`BLOB`</ph> data type instead of <ph id="ph2">`LONG RAW`</ph>.</source>
          <target state="translated">若要避免這個錯誤，請使用<ph id="ph1">`BLOB`</ph>資料類型，而不是<ph id="ph2">`LONG RAW`</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to update records in the database that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新作業期間用來更新資料庫中對應的記錄中的已修改資料列<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>